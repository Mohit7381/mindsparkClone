(window.webpackJsonp = window.webpackJsonp || []).push([
  [4],
  {
    "+rOU": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return c;
      }),
        n.d(t, "b", function () {
          return m;
        }),
        n.d(t, "c", function () {
          return o;
        }),
        n.d(t, "d", function () {
          return u;
        }),
        n.d(t, "e", function () {
          return y;
        }),
        n.d(t, "f", function () {
          return a;
        });
      var s = n("fXoL"),
        i = n("ofXK");
      class r {
        attach(e) {
          return (this._attachedHost = e), e.attach(this);
        }
        detach() {
          let e = this._attachedHost;
          null != e && ((this._attachedHost = null), e.detach());
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(e) {
          this._attachedHost = e;
        }
      }
      class o extends r {
        constructor(e, t, n, s) {
          super(),
            (this.component = e),
            (this.viewContainerRef = t),
            (this.injector = n),
            (this.componentFactoryResolver = s);
        }
      }
      class a extends r {
        constructor(e, t, n) {
          super(),
            (this.templateRef = e),
            (this.viewContainerRef = t),
            (this.context = n);
        }
        get origin() {
          return this.templateRef.elementRef;
        }
        attach(e, t = this.context) {
          return (this.context = t), super.attach(e);
        }
        detach() {
          return (this.context = void 0), super.detach();
        }
      }
      class l extends r {
        constructor(e) {
          super(), (this.element = e instanceof s.v ? e.nativeElement : e);
        }
      }
      class c {
        constructor() {
          (this._isDisposed = !1), (this.attachDomPortal = null);
        }
        hasAttached() {
          return !!this._attachedPortal;
        }
        attach(e) {
          return e instanceof o
            ? ((this._attachedPortal = e), this.attachComponentPortal(e))
            : e instanceof a
            ? ((this._attachedPortal = e), this.attachTemplatePortal(e))
            : this.attachDomPortal && e instanceof l
            ? ((this._attachedPortal = e), this.attachDomPortal(e))
            : void 0;
        }
        detach() {
          this._attachedPortal &&
            (this._attachedPortal.setAttachedHost(null),
            (this._attachedPortal = null)),
            this._invokeDisposeFn();
        }
        dispose() {
          this.hasAttached() && this.detach(),
            this._invokeDisposeFn(),
            (this._isDisposed = !0);
        }
        setDisposeFn(e) {
          this._disposeFn = e;
        }
        _invokeDisposeFn() {
          this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
        }
      }
      class u extends c {
        constructor(e, t, n, s, i) {
          super(),
            (this.outletElement = e),
            (this._componentFactoryResolver = t),
            (this._appRef = n),
            (this._defaultInjector = s),
            (this.attachDomPortal = (e) => {
              this._document;
              const t = e.element;
              t.parentNode;
              const n = this._document.createComment("dom-portal");
              t.parentNode.insertBefore(n, t),
                this.outletElement.appendChild(t),
                super.setDisposeFn(() => {
                  n.parentNode && n.parentNode.replaceChild(t, n);
                });
            }),
            (this._document = i);
        }
        attachComponentPortal(e) {
          const t = (
            e.componentFactoryResolver || this._componentFactoryResolver
          ).resolveComponentFactory(e.component);
          let n;
          return (
            e.viewContainerRef
              ? ((n = e.viewContainerRef.createComponent(
                  t,
                  e.viewContainerRef.length,
                  e.injector || e.viewContainerRef.injector
                )),
                this.setDisposeFn(() => n.destroy()))
              : ((n = t.create(e.injector || this._defaultInjector)),
                this._appRef.attachView(n.hostView),
                this.setDisposeFn(() => {
                  this._appRef.detachView(n.hostView), n.destroy();
                })),
            this.outletElement.appendChild(this._getComponentRootNode(n)),
            n
          );
        }
        attachTemplatePortal(e) {
          let t = e.viewContainerRef,
            n = t.createEmbeddedView(e.templateRef, e.context);
          return (
            n.rootNodes.forEach((e) => this.outletElement.appendChild(e)),
            n.detectChanges(),
            this.setDisposeFn(() => {
              let e = t.indexOf(n);
              -1 !== e && t.remove(e);
            }),
            n
          );
        }
        dispose() {
          super.dispose(),
            null != this.outletElement.parentNode &&
              this.outletElement.parentNode.removeChild(this.outletElement);
        }
        _getComponentRootNode(e) {
          return e.hostView.rootNodes[0];
        }
      }
      class d extends a {
        constructor(e, t) {
          super(e, t);
        }
      }
      (d.ɵfac = function (e) {
        return new (e || d)(s.Mc(s.ib), s.Mc(s.ob));
      }),
        (d.ɵdir = s.Hc({
          type: d,
          selectors: [["", "cdkPortal", ""]],
          exportAs: ["cdkPortal"],
          features: [s.wc],
        })),
        (d.ctorParameters = () => [{ type: s.ib }, { type: s.ob }]);
      class h extends d {}
      (h.ɵfac = function (e) {
        return p(e || h);
      }),
        (h.ɵdir = s.Hc({
          type: h,
          selectors: [
            ["", "cdk-portal", ""],
            ["", "portal", ""],
          ],
          exportAs: ["cdkPortal"],
          features: [s.yc([{ provide: d, useExisting: h }]), s.wc],
        }));
      const p = s.Tc(h);
      class m extends c {
        constructor(e, t, n) {
          super(),
            (this._componentFactoryResolver = e),
            (this._viewContainerRef = t),
            (this._isInitialized = !1),
            (this.attached = new s.x()),
            (this.attachDomPortal = (e) => {
              this._document;
              const t = e.element;
              t.parentNode;
              const n = this._document.createComment("dom-portal");
              e.setAttachedHost(this),
                t.parentNode.insertBefore(n, t),
                this._getRootNode().appendChild(t),
                super.setDisposeFn(() => {
                  n.parentNode && n.parentNode.replaceChild(t, n);
                });
            }),
            (this._document = n);
        }
        get portal() {
          return this._attachedPortal;
        }
        set portal(e) {
          (!this.hasAttached() || e || this._isInitialized) &&
            (this.hasAttached() && super.detach(),
            e && super.attach(e),
            (this._attachedPortal = e));
        }
        get attachedRef() {
          return this._attachedRef;
        }
        ngOnInit() {
          this._isInitialized = !0;
        }
        ngOnDestroy() {
          super.dispose(),
            (this._attachedPortal = null),
            (this._attachedRef = null);
        }
        attachComponentPortal(e) {
          e.setAttachedHost(this);
          const t =
              null != e.viewContainerRef
                ? e.viewContainerRef
                : this._viewContainerRef,
            n = (
              e.componentFactoryResolver || this._componentFactoryResolver
            ).resolveComponentFactory(e.component),
            s = t.createComponent(n, t.length, e.injector || t.injector);
          return (
            t !== this._viewContainerRef &&
              this._getRootNode().appendChild(s.hostView.rootNodes[0]),
            super.setDisposeFn(() => s.destroy()),
            (this._attachedPortal = e),
            (this._attachedRef = s),
            this.attached.emit(s),
            s
          );
        }
        attachTemplatePortal(e) {
          e.setAttachedHost(this);
          const t = this._viewContainerRef.createEmbeddedView(
            e.templateRef,
            e.context
          );
          return (
            super.setDisposeFn(() => this._viewContainerRef.clear()),
            (this._attachedPortal = e),
            (this._attachedRef = t),
            this.attached.emit(t),
            t
          );
        }
        _getRootNode() {
          const e = this._viewContainerRef.element.nativeElement;
          return e.nodeType === e.ELEMENT_NODE ? e : e.parentNode;
        }
      }
      (m.ɵfac = function (e) {
        return new (e || m)(s.Mc(s.p), s.Mc(s.ob), s.Mc(i.c));
      }),
        (m.ɵdir = s.Hc({
          type: m,
          selectors: [["", "cdkPortalOutlet", ""]],
          inputs: { portal: ["cdkPortalOutlet", "portal"] },
          outputs: { attached: "attached" },
          exportAs: ["cdkPortalOutlet"],
          features: [s.wc],
        })),
        (m.ctorParameters = () => [
          { type: s.p },
          { type: s.ob },
          { type: void 0, decorators: [{ type: s.C, args: [i.c] }] },
        ]),
        (m.propDecorators = { attached: [{ type: s.S }] });
      class f extends m {}
      (f.ɵfac = function (e) {
        return g(e || f);
      }),
        (f.ɵdir = s.Hc({
          type: f,
          selectors: [
            ["", "cdkPortalHost", ""],
            ["", "portalHost", ""],
          ],
          inputs: { portal: ["cdkPortalHost", "portal"] },
          exportAs: ["cdkPortalHost"],
          features: [s.yc([{ provide: m, useExisting: f }]), s.wc],
        }));
      const g = s.Tc(f);
      class y {}
      (y.ɵmod = s.Kc({ type: y })),
        (y.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || y)();
          },
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(y, { declarations: [d, m, h, f], exports: [d, m, h, f] });
    },
    "/t3+": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return d;
      });
      var s = n("fXoL"),
        i = n("FKr1"),
        r = n("nLfN"),
        o = n("ofXK");
      const a = ["*", [["mat-toolbar-row"]]];
      const l = Object(i.k)(
        class {
          constructor(e) {
            this._elementRef = e;
          }
        }
      );
      class c {}
      (c.ɵfac = function (e) {
        return new (e || c)();
      }),
        (c.ɵdir = s.Hc({
          type: c,
          selectors: [["mat-toolbar-row"]],
          hostAttrs: [1, "mat-toolbar-row"],
          exportAs: ["matToolbarRow"],
        }));
      class u extends l {
        constructor(e, t, n) {
          super(e), (this._platform = t), (this._document = n);
        }
        ngAfterViewInit() {
          this._platform.isBrowser &&
            (this._checkToolbarMixedModes(),
            this._toolbarRows.changes.subscribe(() =>
              this._checkToolbarMixedModes()
            ));
        }
        _checkToolbarMixedModes() {
          this._toolbarRows.length, 0;
        }
      }
      (u.ɵfac = function (e) {
        return new (e || u)(s.Mc(s.v), s.Mc(r.a), s.Mc(o.c));
      }),
        (u.ɵcmp = s.Gc({
          type: u,
          selectors: [["mat-toolbar"]],
          contentQueries: function (e, t, n) {
            if ((1 & e && s.Fc(n, c, !0), 2 & e)) {
              let e;
              s.sd((e = s.dd())) && (t._toolbarRows = e);
            }
          },
          hostAttrs: [1, "mat-toolbar"],
          hostVars: 4,
          hostBindings: function (e, t) {
            2 & e &&
              s.Ec("mat-toolbar-multiple-rows", t._toolbarRows.length > 0)(
                "mat-toolbar-single-row",
                0 === t._toolbarRows.length
              );
          },
          inputs: { color: "color" },
          exportAs: ["matToolbar"],
          features: [s.wc],
          ngContentSelectors: ["*", "mat-toolbar-row"],
          decls: 2,
          vars: 0,
          template: function (e, t) {
            1 & e && (s.kd(a), s.jd(0), s.jd(1, 1));
          },
          styles: [
            ".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\n",
          ],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (u.ctorParameters = () => [
          { type: s.v },
          { type: r.a },
          { type: void 0, decorators: [{ type: s.C, args: [o.c] }] },
        ]),
        (u.propDecorators = {
          _toolbarRows: [{ type: s.s, args: [c, { descendants: !0 }] }],
        });
      class d {}
      (d.ɵmod = s.Kc({ type: d })),
        (d.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || d)();
          },
          imports: [[i.d], i.d],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(d, {
            declarations: function () {
              return [u, c];
            },
            imports: function () {
              return [i.d];
            },
            exports: function () {
              return [u, c, i.d];
            },
          });
    },
    "/uUt": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      var s = n("7o/Q");
      function i(e, t) {
        return (n) => n.lift(new r(e, t));
      }
      class r {
        constructor(e, t) {
          (this.compare = e), (this.keySelector = t);
        }
        call(e, t) {
          return t.subscribe(new o(e, this.compare, this.keySelector));
        }
      }
      class o extends s.a {
        constructor(e, t, n) {
          super(e),
            (this.keySelector = n),
            (this.hasKey = !1),
            "function" == typeof t && (this.compare = t);
        }
        compare(e, t) {
          return e === t;
        }
        _next(e) {
          let t;
          try {
            const { keySelector: n } = this;
            t = n ? n(e) : e;
          } catch (s) {
            return this.destination.error(s);
          }
          let n = !1;
          if (this.hasKey)
            try {
              const { compare: e } = this;
              n = e(this.key, t);
            } catch (s) {
              return this.destination.error(s);
            }
          else this.hasKey = !0;
          n || ((this.key = t), this.destination.next(e));
        }
      }
    },
    0: function (e, t, n) {
      e.exports = n("zUnb");
    },
    "0EQZ": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return l;
      }),
        n.d(t, "b", function () {
          return u;
        }),
        n.d(t, "c", function () {
          return d;
        }),
        n.d(t, "d", function () {
          return c;
        }),
        n.d(t, "e", function () {
          return h;
        }),
        n.d(t, "f", function () {
          return a;
        });
      var s = n("7+OI"),
        i = n("LRne"),
        r = n("XNiG"),
        o = n("fXoL");
      function a(e) {
        return e && "function" == typeof e.connect;
      }
      class l extends class {} {
        constructor(e) {
          super(), (this._data = e);
        }
        connect() {
          return Object(s.a)(this._data) ? this._data : Object(i.a)(this._data);
        }
        disconnect() {}
      }
      class c {
        constructor() {
          (this.viewCacheSize = 20), (this._viewCache = []);
        }
        applyChanges(e, t, n, s, i) {
          e.forEachOperation((e, r, o) => {
            let a, l;
            if (null == e.previousIndex) {
              const i = () => n(e, r, o);
              (a = this._insertView(i, o, t, s(e))), (l = a ? 1 : 0);
            } else
              null == o
                ? (this._detachAndCacheView(r, t), (l = 3))
                : ((a = this._moveView(r, o, t, s(e))), (l = 2));
            i &&
              i({
                context: null == a ? void 0 : a.context,
                operation: l,
                record: e,
              });
          });
        }
        detach() {
          for (const e of this._viewCache) e.destroy();
        }
        _insertView(e, t, n, s) {
          let i = this._insertViewFromCache(t, n);
          if (i) return void (i.context.$implicit = s);
          const r = e();
          return n.createEmbeddedView(r.templateRef, r.context, r.index);
        }
        _detachAndCacheView(e, t) {
          const n = this._detachView(e, t);
          this._maybeCacheView(n, t);
        }
        _moveView(e, t, n, s) {
          const i = n.get(e);
          return n.move(i, t), (i.context.$implicit = s), i;
        }
        _maybeCacheView(e, t) {
          if (this._viewCache.length < this.viewCacheSize)
            this._viewCache.push(e);
          else {
            const n = t.indexOf(e);
            -1 === n ? e.destroy() : t.remove(n);
          }
        }
        _insertViewFromCache(e, t) {
          const n = this._viewCache.pop();
          return n && t.insert(n, e), n || null;
        }
        _detachView(e, t) {
          return t.detach(e);
        }
      }
      class u {
        constructor(e = !1, t, n = !0) {
          (this._multiple = e),
            (this._emitChanges = n),
            (this._selection = new Set()),
            (this._deselectedToEmit = []),
            (this._selectedToEmit = []),
            (this.changed = new r.a()),
            t &&
              t.length &&
              (e
                ? t.forEach((e) => this._markSelected(e))
                : this._markSelected(t[0]),
              (this._selectedToEmit.length = 0));
        }
        get selected() {
          return (
            this._selected ||
              (this._selected = Array.from(this._selection.values())),
            this._selected
          );
        }
        select(...e) {
          this._verifyValueAssignment(e),
            e.forEach((e) => this._markSelected(e)),
            this._emitChangeEvent();
        }
        deselect(...e) {
          this._verifyValueAssignment(e),
            e.forEach((e) => this._unmarkSelected(e)),
            this._emitChangeEvent();
        }
        toggle(e) {
          this.isSelected(e) ? this.deselect(e) : this.select(e);
        }
        clear() {
          this._unmarkAll(), this._emitChangeEvent();
        }
        isSelected(e) {
          return this._selection.has(e);
        }
        isEmpty() {
          return 0 === this._selection.size;
        }
        hasValue() {
          return !this.isEmpty();
        }
        sort(e) {
          this._multiple && this.selected && this._selected.sort(e);
        }
        isMultipleSelection() {
          return this._multiple;
        }
        _emitChangeEvent() {
          (this._selected = null),
            (this._selectedToEmit.length || this._deselectedToEmit.length) &&
              (this.changed.next({
                source: this,
                added: this._selectedToEmit,
                removed: this._deselectedToEmit,
              }),
              (this._deselectedToEmit = []),
              (this._selectedToEmit = []));
        }
        _markSelected(e) {
          this.isSelected(e) ||
            (this._multiple || this._unmarkAll(),
            this._selection.add(e),
            this._emitChanges && this._selectedToEmit.push(e));
        }
        _unmarkSelected(e) {
          this.isSelected(e) &&
            (this._selection.delete(e),
            this._emitChanges && this._deselectedToEmit.push(e));
        }
        _unmarkAll() {
          this.isEmpty() ||
            this._selection.forEach((e) => this._unmarkSelected(e));
        }
        _verifyValueAssignment(e) {
          e.length > 1 && this._multiple, 0;
        }
      }
      class d {
        constructor() {
          this._listeners = [];
        }
        notify(e, t) {
          for (let n of this._listeners) n(e, t);
        }
        listen(e) {
          return (
            this._listeners.push(e),
            () => {
              this._listeners = this._listeners.filter((t) => e !== t);
            }
          );
        }
        ngOnDestroy() {
          this._listeners = [];
        }
      }
      (d.ɵfac = function (e) {
        return new (e || d)();
      }),
        (d.ɵprov = Object(o.Ic)({
          factory: function () {
            return new d();
          },
          token: d,
          providedIn: "root",
        }));
      const h = new o.E("_ViewRepeater");
    },
    "0EUg": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      var s = n("bHdf");
      function i() {
        return Object(s.a)(1);
      }
    },
    "0IaG": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return O;
      }),
        n.d(t, "b", function () {
          return M;
        }),
        n.d(t, "c", function () {
          return V;
        }),
        n.d(t, "d", function () {
          return E;
        });
      var s = n("rDax"),
        i = n("+rOU"),
        r = n("fXoL"),
        o = n("FKr1"),
        a = n("cH1L"),
        l = n("ofXK"),
        c = n("XNiG"),
        u = n("NXyV"),
        d = n("LRne"),
        h = n("pLZG"),
        p = n("IzEk"),
        m = n("JX91"),
        f = n("u47x"),
        g = n("R0Ic"),
        y = n("FtGj");
      function v(e, t) {}
      class b {
        constructor() {
          (this.role = "dialog"),
            (this.panelClass = ""),
            (this.hasBackdrop = !0),
            (this.backdropClass = ""),
            (this.disableClose = !1),
            (this.width = ""),
            (this.height = ""),
            (this.maxWidth = "80vw"),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.autoFocus = !0),
            (this.restoreFocus = !0),
            (this.closeOnNavigation = !0);
        }
      }
      const x = {
        dialogContainer: Object(g.n)("dialogContainer", [
          Object(g.k)(
            "void, exit",
            Object(g.l)({ opacity: 0, transform: "scale(0.7)" })
          ),
          Object(g.k)("enter", Object(g.l)({ transform: "none" })),
          Object(g.m)(
            "* => enter",
            Object(g.e)(
              "150ms cubic-bezier(0, 0, 0.2, 1)",
              Object(g.l)({ transform: "none", opacity: 1 })
            )
          ),
          Object(g.m)(
            "* => void, * => exit",
            Object(g.e)(
              "75ms cubic-bezier(0.4, 0.0, 0.2, 1)",
              Object(g.l)({ opacity: 0 })
            )
          ),
        ]),
      };
      class _ extends i.a {
        constructor(e, t, n, s, i, o) {
          super(),
            (this._elementRef = e),
            (this._focusTrapFactory = t),
            (this._changeDetectorRef = n),
            (this._config = i),
            (this._focusMonitor = o),
            (this._animationStateChanged = new r.x()),
            (this._elementFocusedBeforeDialogWasOpened = null),
            (this._closeInteractionType = null),
            (this.attachDomPortal = (e) => (
              this._portalOutlet.hasAttached(),
              this._portalOutlet.attachDomPortal(e)
            )),
            (this._ariaLabelledBy = i.ariaLabelledBy || null),
            (this._document = s);
        }
        _initializeWithAttachedContent() {
          this._setupFocusTrap(),
            this._capturePreviouslyFocusedElement(),
            this._focusDialogContainer();
        }
        attachComponentPortal(e) {
          return (
            this._portalOutlet.hasAttached(),
            this._portalOutlet.attachComponentPortal(e)
          );
        }
        attachTemplatePortal(e) {
          return (
            this._portalOutlet.hasAttached(),
            this._portalOutlet.attachTemplatePortal(e)
          );
        }
        _recaptureFocus() {
          if (!this._containsFocus()) {
            (!this._config.autoFocus ||
              !this._focusTrap.focusInitialElement()) &&
              this._elementRef.nativeElement.focus();
          }
        }
        _trapFocus() {
          this._config.autoFocus
            ? this._focusTrap.focusInitialElementWhenReady()
            : this._containsFocus() || this._elementRef.nativeElement.focus();
        }
        _restoreFocus() {
          const e = this._elementFocusedBeforeDialogWasOpened;
          if (this._config.restoreFocus && e && "function" == typeof e.focus) {
            const t = this._document.activeElement,
              n = this._elementRef.nativeElement;
            (t && t !== this._document.body && t !== n && !n.contains(t)) ||
              (this._focusMonitor
                ? (this._focusMonitor.focusVia(e, this._closeInteractionType),
                  (this._closeInteractionType = null))
                : e.focus());
          }
          this._focusTrap && this._focusTrap.destroy();
        }
        _setupFocusTrap() {
          this._focusTrap = this._focusTrapFactory.create(
            this._elementRef.nativeElement
          );
        }
        _capturePreviouslyFocusedElement() {
          this._document &&
            (this._elementFocusedBeforeDialogWasOpened =
              this._document.activeElement);
        }
        _focusDialogContainer() {
          this._elementRef.nativeElement.focus &&
            this._elementRef.nativeElement.focus();
        }
        _containsFocus() {
          const e = this._elementRef.nativeElement,
            t = this._document.activeElement;
          return e === t || e.contains(t);
        }
      }
      (_.ɵfac = function (e) {
        return new (e || _)(
          r.Mc(r.v),
          r.Mc(f.d),
          r.Mc(r.k),
          r.Mc(l.c, 8),
          r.Mc(b),
          r.Mc(f.c)
        );
      }),
        (_.ɵdir = r.Hc({
          type: _,
          viewQuery: function (e, t) {
            if ((1 & e && r.yd(i.b, !0), 2 & e)) {
              let e;
              r.sd((e = r.dd())) && (t._portalOutlet = e.first);
            }
          },
          features: [r.wc],
        })),
        (_.ctorParameters = () => [
          { type: r.v },
          { type: f.d },
          { type: r.k },
          {
            type: void 0,
            decorators: [{ type: r.R }, { type: r.C, args: [l.c] }],
          },
          { type: b },
          { type: f.c },
        ]),
        (_.propDecorators = {
          _portalOutlet: [{ type: r.mb, args: [i.b, { static: !0 }] }],
        });
      class w extends _ {
        constructor() {
          super(...arguments), (this._state = "enter");
        }
        _onAnimationDone({ toState: e, totalTime: t }) {
          "enter" === e
            ? (this._trapFocus(),
              this._animationStateChanged.next({
                state: "opened",
                totalTime: t,
              }))
            : "exit" === e &&
              (this._restoreFocus(),
              this._animationStateChanged.next({
                state: "closed",
                totalTime: t,
              }));
        }
        _onAnimationStart({ toState: e, totalTime: t }) {
          "enter" === e
            ? this._animationStateChanged.next({
                state: "opening",
                totalTime: t,
              })
            : ("exit" !== e && "void" !== e) ||
              this._animationStateChanged.next({
                state: "closing",
                totalTime: t,
              });
        }
        _startExitAnimation() {
          (this._state = "exit"), this._changeDetectorRef.markForCheck();
        }
      }
      (w.ɵfac = function (e) {
        return C(e || w);
      }),
        (w.ɵcmp = r.Gc({
          type: w,
          selectors: [["mat-dialog-container"]],
          hostAttrs: [
            "tabindex",
            "-1",
            "aria-modal",
            "true",
            1,
            "mat-dialog-container",
          ],
          hostVars: 6,
          hostBindings: function (e, t) {
            1 & e &&
              r.Ad("@dialogContainer.start", function (e) {
                return t._onAnimationStart(e);
              })("@dialogContainer.done", function (e) {
                return t._onAnimationDone(e);
              }),
              2 & e &&
                (r.Uc("id", t._id),
                r.Ac("role", t._config.role)(
                  "aria-labelledby",
                  t._config.ariaLabel ? null : t._ariaLabelledBy
                )("aria-label", t._config.ariaLabel)(
                  "aria-describedby",
                  t._config.ariaDescribedBy || null
                ),
                r.Bd("@dialogContainer", t._state));
          },
          features: [r.wc],
          decls: 1,
          vars: 0,
          consts: [["cdkPortalOutlet", ""]],
          template: function (e, t) {
            1 & e && r.Cd(0, v, 0, 0, "ng-template", 0);
          },
          directives: [i.b],
          styles: [
            ".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\n",
          ],
          encapsulation: 2,
          data: { animation: [x.dialogContainer] },
        }));
      const C = r.Tc(w);
      let S = 0;
      class E {
        constructor(e, t, n = "mat-dialog-" + S++) {
          (this._overlayRef = e),
            (this._containerInstance = t),
            (this.id = n),
            (this.disableClose = this._containerInstance._config.disableClose),
            (this._afterOpened = new c.a()),
            (this._afterClosed = new c.a()),
            (this._beforeClosed = new c.a()),
            (this._state = 0),
            (t._id = n),
            t._animationStateChanged
              .pipe(
                Object(h.a)((e) => "opened" === e.state),
                Object(p.a)(1)
              )
              .subscribe(() => {
                this._afterOpened.next(), this._afterOpened.complete();
              }),
            t._animationStateChanged
              .pipe(
                Object(h.a)((e) => "closed" === e.state),
                Object(p.a)(1)
              )
              .subscribe(() => {
                clearTimeout(this._closeFallbackTimeout),
                  this._finishDialogClose();
              }),
            e.detachments().subscribe(() => {
              this._beforeClosed.next(this._result),
                this._beforeClosed.complete(),
                this._afterClosed.next(this._result),
                this._afterClosed.complete(),
                (this.componentInstance = null),
                this._overlayRef.dispose();
            }),
            e
              .keydownEvents()
              .pipe(
                Object(h.a)(
                  (e) =>
                    e.keyCode === y.e && !this.disableClose && !Object(y.o)(e)
                )
              )
              .subscribe((e) => {
                e.preventDefault(), k(this, "keyboard");
              }),
            e.backdropClick().subscribe(() => {
              this.disableClose
                ? this._containerInstance._recaptureFocus()
                : k(this, "mouse");
            });
        }
        close(e) {
          (this._result = e),
            this._containerInstance._animationStateChanged
              .pipe(
                Object(h.a)((e) => "closing" === e.state),
                Object(p.a)(1)
              )
              .subscribe((t) => {
                this._beforeClosed.next(e),
                  this._beforeClosed.complete(),
                  this._overlayRef.detachBackdrop(),
                  (this._closeFallbackTimeout = setTimeout(
                    () => this._finishDialogClose(),
                    t.totalTime + 100
                  ));
              }),
            (this._state = 1),
            this._containerInstance._startExitAnimation();
        }
        afterOpened() {
          return this._afterOpened;
        }
        afterClosed() {
          return this._afterClosed;
        }
        beforeClosed() {
          return this._beforeClosed;
        }
        backdropClick() {
          return this._overlayRef.backdropClick();
        }
        keydownEvents() {
          return this._overlayRef.keydownEvents();
        }
        updatePosition(e) {
          let t = this._getPositionStrategy();
          return (
            e && (e.left || e.right)
              ? e.left
                ? t.left(e.left)
                : t.right(e.right)
              : t.centerHorizontally(),
            e && (e.top || e.bottom)
              ? e.top
                ? t.top(e.top)
                : t.bottom(e.bottom)
              : t.centerVertically(),
            this._overlayRef.updatePosition(),
            this
          );
        }
        updateSize(e = "", t = "") {
          return (
            this._getPositionStrategy().width(e).height(t),
            this._overlayRef.updatePosition(),
            this
          );
        }
        addPanelClass(e) {
          return this._overlayRef.addPanelClass(e), this;
        }
        removePanelClass(e) {
          return this._overlayRef.removePanelClass(e), this;
        }
        getState() {
          return this._state;
        }
        _finishDialogClose() {
          (this._state = 2), this._overlayRef.dispose();
        }
        _getPositionStrategy() {
          return this._overlayRef.getConfig().positionStrategy;
        }
      }
      function k(e, t, n) {
        return (
          void 0 !== e._containerInstance &&
            (e._containerInstance._closeInteractionType = t),
          e.close(n)
        );
      }
      const O = new r.E("MatDialogData"),
        I = new r.E("mat-dialog-default-options"),
        T = new r.E("mat-dialog-scroll-strategy");
      const A = {
        provide: T,
        deps: [s.c],
        useFactory: function (e) {
          return () => e.scrollStrategies.block();
        },
      };
      class D {
        constructor(e, t, n, s, i, r, o, a, l) {
          (this._overlay = e),
            (this._injector = t),
            (this._defaultOptions = n),
            (this._parentDialog = s),
            (this._overlayContainer = i),
            (this._dialogRefConstructor = o),
            (this._dialogContainerType = a),
            (this._dialogDataToken = l),
            (this._openDialogsAtThisLevel = []),
            (this._afterAllClosedAtThisLevel = new c.a()),
            (this._afterOpenedAtThisLevel = new c.a()),
            (this._ariaHiddenElements = new Map()),
            (this.afterAllClosed = Object(u.a)(() =>
              this.openDialogs.length
                ? this._getAfterAllClosed()
                : this._getAfterAllClosed().pipe(Object(m.a)(void 0))
            )),
            (this._scrollStrategy = r);
        }
        get openDialogs() {
          return this._parentDialog
            ? this._parentDialog.openDialogs
            : this._openDialogsAtThisLevel;
        }
        get afterOpened() {
          return this._parentDialog
            ? this._parentDialog.afterOpened
            : this._afterOpenedAtThisLevel;
        }
        _getAfterAllClosed() {
          const e = this._parentDialog;
          return e ? e._getAfterAllClosed() : this._afterAllClosedAtThisLevel;
        }
        open(e, t) {
          (t = (function (e, t) {
            return Object.assign(Object.assign({}, t), e);
          })(t, this._defaultOptions || new b())).id &&
            this.getDialogById(t.id);
          const n = this._createOverlay(t),
            s = this._attachDialogContainer(n, t),
            i = this._attachDialogContent(e, s, n, t);
          return (
            this.openDialogs.length ||
              this._hideNonDialogContentFromAssistiveTechnology(),
            this.openDialogs.push(i),
            i.afterClosed().subscribe(() => this._removeOpenDialog(i)),
            this.afterOpened.next(i),
            s._initializeWithAttachedContent(),
            i
          );
        }
        closeAll() {
          this._closeDialogs(this.openDialogs);
        }
        getDialogById(e) {
          return this.openDialogs.find((t) => t.id === e);
        }
        ngOnDestroy() {
          this._closeDialogs(this._openDialogsAtThisLevel),
            this._afterAllClosedAtThisLevel.complete(),
            this._afterOpenedAtThisLevel.complete();
        }
        _createOverlay(e) {
          const t = this._getOverlayConfig(e);
          return this._overlay.create(t);
        }
        _getOverlayConfig(e) {
          const t = new s.d({
            positionStrategy: this._overlay.position().global(),
            scrollStrategy: e.scrollStrategy || this._scrollStrategy(),
            panelClass: e.panelClass,
            hasBackdrop: e.hasBackdrop,
            direction: e.direction,
            minWidth: e.minWidth,
            minHeight: e.minHeight,
            maxWidth: e.maxWidth,
            maxHeight: e.maxHeight,
            disposeOnNavigation: e.closeOnNavigation,
          });
          return e.backdropClass && (t.backdropClass = e.backdropClass), t;
        }
        _attachDialogContainer(e, t) {
          const n = t && t.viewContainerRef && t.viewContainerRef.injector,
            s = r.F.create({
              parent: n || this._injector,
              providers: [{ provide: b, useValue: t }],
            }),
            o = new i.c(
              this._dialogContainerType,
              t.viewContainerRef,
              s,
              t.componentFactoryResolver
            );
          return e.attach(o).instance;
        }
        _attachDialogContent(e, t, n, s) {
          const o = new this._dialogRefConstructor(n, t, s.id);
          if (e instanceof r.ib)
            t.attachTemplatePortal(
              new i.f(e, null, { $implicit: s.data, dialogRef: o })
            );
          else {
            const n = this._createInjector(s, o, t),
              r = t.attachComponentPortal(new i.c(e, s.viewContainerRef, n));
            o.componentInstance = r.instance;
          }
          return o.updateSize(s.width, s.height).updatePosition(s.position), o;
        }
        _createInjector(e, t, n) {
          const s = e && e.viewContainerRef && e.viewContainerRef.injector,
            i = [
              { provide: this._dialogContainerType, useValue: n },
              { provide: this._dialogDataToken, useValue: e.data },
              { provide: this._dialogRefConstructor, useValue: t },
            ];
          return (
            !e.direction ||
              (s && s.get(a.b, null)) ||
              i.push({
                provide: a.b,
                useValue: { value: e.direction, change: Object(d.a)() },
              }),
            r.F.create({ parent: s || this._injector, providers: i })
          );
        }
        _removeOpenDialog(e) {
          const t = this.openDialogs.indexOf(e);
          t > -1 &&
            (this.openDialogs.splice(t, 1),
            this.openDialogs.length ||
              (this._ariaHiddenElements.forEach((e, t) => {
                e
                  ? t.setAttribute("aria-hidden", e)
                  : t.removeAttribute("aria-hidden");
              }),
              this._ariaHiddenElements.clear(),
              this._getAfterAllClosed().next()));
        }
        _hideNonDialogContentFromAssistiveTechnology() {
          const e = this._overlayContainer.getContainerElement();
          if (e.parentElement) {
            const t = e.parentElement.children;
            for (let n = t.length - 1; n > -1; n--) {
              let s = t[n];
              s === e ||
                "SCRIPT" === s.nodeName ||
                "STYLE" === s.nodeName ||
                s.hasAttribute("aria-live") ||
                (this._ariaHiddenElements.set(s, s.getAttribute("aria-hidden")),
                s.setAttribute("aria-hidden", "true"));
            }
          }
        }
        _closeDialogs(e) {
          let t = e.length;
          for (; t--; ) e[t].close();
        }
      }
      (D.ɵfac = function (e) {
        return new (e || D)(
          r.Mc(s.c),
          r.Mc(r.F),
          r.Mc(void 0),
          r.Mc(void 0),
          r.Mc(s.e),
          r.Mc(void 0),
          r.Mc(r.kb),
          r.Mc(r.kb),
          r.Mc(r.E)
        );
      }),
        (D.ɵdir = r.Hc({ type: D })),
        (D.ctorParameters = () => [
          { type: s.c },
          { type: r.F },
          { type: void 0 },
          { type: void 0 },
          { type: s.e },
          { type: void 0 },
          { type: r.kb },
          { type: r.kb },
          { type: r.E },
        ]);
      class M extends D {
        constructor(e, t, n, s, i, r, o) {
          super(e, t, s, r, o, i, E, w, O);
        }
      }
      (M.ɵfac = function (e) {
        return new (e || M)(
          r.Yc(s.c),
          r.Yc(r.F),
          r.Yc(l.g, 8),
          r.Yc(I, 8),
          r.Yc(T),
          r.Yc(M, 12),
          r.Yc(s.e)
        );
      }),
        (M.ɵprov = r.Ic({ token: M, factory: M.ɵfac })),
        (M.ctorParameters = () => [
          { type: s.c },
          { type: r.F },
          { type: l.g, decorators: [{ type: r.R }] },
          { type: b, decorators: [{ type: r.R }, { type: r.C, args: [I] }] },
          { type: void 0, decorators: [{ type: r.C, args: [T] }] },
          { type: M, decorators: [{ type: r.R }, { type: r.eb }] },
          { type: s.e },
        ]);
      let P = 0;
      class R {
        constructor(e, t, n) {
          (this.dialogRef = e),
            (this._elementRef = t),
            (this._dialog = n),
            (this.type = "button");
        }
        ngOnInit() {
          this.dialogRef ||
            (this.dialogRef = L(this._elementRef, this._dialog.openDialogs));
        }
        ngOnChanges(e) {
          const t = e._matDialogClose || e._matDialogCloseResult;
          t && (this.dialogResult = t.currentValue);
        }
        _onButtonClick(e) {
          k(
            this.dialogRef,
            0 === e.screenX && 0 === e.screenY ? "keyboard" : "mouse",
            this.dialogResult
          );
        }
      }
      (R.ɵfac = function (e) {
        return new (e || R)(r.Mc(E, 8), r.Mc(r.v), r.Mc(M));
      }),
        (R.ɵdir = r.Hc({
          type: R,
          selectors: [
            ["", "mat-dialog-close", ""],
            ["", "matDialogClose", ""],
          ],
          hostVars: 2,
          hostBindings: function (e, t) {
            1 & e &&
              r.cd("click", function (e) {
                return t._onButtonClick(e);
              }),
              2 & e && r.Ac("aria-label", t.ariaLabel || null)("type", t.type);
          },
          inputs: {
            type: "type",
            dialogResult: ["mat-dialog-close", "dialogResult"],
            ariaLabel: ["aria-label", "ariaLabel"],
            _matDialogClose: ["matDialogClose", "_matDialogClose"],
          },
          exportAs: ["matDialogClose"],
          features: [r.xc],
        })),
        (R.ctorParameters = () => [
          { type: E, decorators: [{ type: r.R }] },
          { type: r.v },
          { type: M },
        ]),
        (R.propDecorators = {
          ariaLabel: [{ type: r.G, args: ["aria-label"] }],
          type: [{ type: r.G }],
          dialogResult: [{ type: r.G, args: ["mat-dialog-close"] }],
          _matDialogClose: [{ type: r.G, args: ["matDialogClose"] }],
        });
      class j {
        constructor(e, t, n) {
          (this._dialogRef = e),
            (this._elementRef = t),
            (this._dialog = n),
            (this.id = "mat-dialog-title-" + P++);
        }
        ngOnInit() {
          this._dialogRef ||
            (this._dialogRef = L(this._elementRef, this._dialog.openDialogs)),
            this._dialogRef &&
              Promise.resolve().then(() => {
                const e = this._dialogRef._containerInstance;
                e && !e._ariaLabelledBy && (e._ariaLabelledBy = this.id);
              });
        }
      }
      (j.ɵfac = function (e) {
        return new (e || j)(r.Mc(E, 8), r.Mc(r.v), r.Mc(M));
      }),
        (j.ɵdir = r.Hc({
          type: j,
          selectors: [
            ["", "mat-dialog-title", ""],
            ["", "matDialogTitle", ""],
          ],
          hostAttrs: [1, "mat-dialog-title"],
          hostVars: 1,
          hostBindings: function (e, t) {
            2 & e && r.Uc("id", t.id);
          },
          inputs: { id: "id" },
          exportAs: ["matDialogTitle"],
        })),
        (j.ctorParameters = () => [
          { type: E, decorators: [{ type: r.R }] },
          { type: r.v },
          { type: M },
        ]),
        (j.propDecorators = { id: [{ type: r.G }] });
      class N {}
      (N.ɵfac = function (e) {
        return new (e || N)();
      }),
        (N.ɵdir = r.Hc({
          type: N,
          selectors: [
            ["", "mat-dialog-content", ""],
            ["mat-dialog-content"],
            ["", "matDialogContent", ""],
          ],
          hostAttrs: [1, "mat-dialog-content"],
        }));
      class F {}
      function L(e, t) {
        let n = e.nativeElement.parentElement;
        for (; n && !n.classList.contains("mat-dialog-container"); )
          n = n.parentElement;
        return n ? t.find((e) => e.id === n.id) : null;
      }
      (F.ɵfac = function (e) {
        return new (e || F)();
      }),
        (F.ɵdir = r.Hc({
          type: F,
          selectors: [
            ["", "mat-dialog-actions", ""],
            ["mat-dialog-actions"],
            ["", "matDialogActions", ""],
          ],
          hostAttrs: [1, "mat-dialog-actions"],
        }));
      class V {}
      (V.ɵmod = r.Kc({ type: V })),
        (V.ɵinj = r.Jc({
          factory: function (e) {
            return new (e || V)();
          },
          providers: [M, A],
          imports: [[s.f, i.e, o.d], o.d],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          r.wd(V, {
            declarations: function () {
              return [w, R, j, F, N];
            },
            imports: function () {
              return [s.f, i.e, o.d];
            },
            exports: function () {
              return [w, R, j, N, F, o.d];
            },
          });
    },
    "0Pcf": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return a;
      });
      var s = n("mrSG"),
        i = n("xKP8"),
        r = n("fXoL"),
        o = n("tyNb");
      let a = class {
        constructor(e, t) {
          (this.route = e), (this.subscriptionService = t);
        }
        ngOnInit() {
          this.route.queryParams.subscribe((e) => {
            this.subscriptionService.setUTMParams(e);
          });
        }
      };
      (a.ctorParameters = () => [{ type: o.a }, { type: i.a }]),
        (a = Object(s.a)(
          [
            Object(r.n)({
              selector: "app-home",
              template:
                '<app-header></app-header>\n<div class="homeContainer">\n    <div class="wrapper" [ngStyle.xs]="{\'margin\':\'0px\'}">\n        <app-intro-cover></app-intro-cover>\n        <app-role-wise></app-role-wise>\n        <div class="introSection">\n            <h3 class="h3_text">Ei Mindspark Personalised Learning Offerings</h3>\n            <app-product-intro></app-product-intro>\n            <app-product-intro [subject]="\'English\'"></app-product-intro>\n            <app-product-intro [subject]="\'Science\'"></app-product-intro>\n        </div>\n\n        \x3c!-- <app-subject-wise></app-subject-wise> --\x3e\n        <app-awards></app-awards>\n        <h3 class="h3_text">Trusted by Leading Schools, Government & International Bodies</h3>\n        <app-school-wise> </app-school-wise>\n        <div class="partnerDiv">\n            <div class="partnerWrapper">\n                <h3>\n                    <div fxLayoutAlign="center center" class="parterTittle">Loved by Teachers & Students</div>\n                </h3>\n                <div fxLayout.sm="column" class="numSection">\n                    <div class="countSection">\n                        <div class="countContainer">\n                            <div class="countText" [ngStyle]="{color:\'#f36f31\'}">300+</div>\n                            <p class="numText">Schools</p>\n                        </div>\n                    </div>\n                    <div class="countSection">\n                        <div class="countContainer">\n                            <div class="countText" [ngStyle]="{color:\'#a5d170\'}">15,000+</div>\n                            <p class="numText">Teachers</p>\n                        </div>\n                    </div>\n                    <div class="countSection">\n                        <div class="countContainer">\n                            <div class="countText" [ngStyle]="{color:\'#28a7df\'}">5,00,000+</div>\n                            <p class="numText">Happy students</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \x3c!-- <app-plan></app-plan> --\x3e\n        \x3c!-- <app-contact-detail></app-contact-detail> --\x3e\n        <app-review [subject]="\'Home\'"></app-review>\n        <h3 class="h3_text">About Ei</h3>\n        <app-ei-info></app-ei-info>\n        \x3c!-- <app-email-card></app-email-card> --\x3e\n        <app-free-trial-callout [background]=\'true\' [fromHome]=\'true\'></app-free-trial-callout>\n\n        <app-footer></app-footer>\n\n    </div>\n</div>',
              styles: [
                ".introSection {\n  margin-top: 40px;\n}\n\n.parterTittle {\n  font-size: 36px;\n  font-weight: bold;\n  line-height: 1.36;\n  text-align: center;\n  color: #212121;\n}\n\n.countText {\n  font-size: 76px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.37;\n  letter-spacing: -3.8px;\n  text-align: center;\n  margin: 0;\n  padding: 0;\n}\n\n.width {\n  width: 200px !important;\n}\n\n.numText {\n  font-size: 18px;\n  line-height: 1.33;\n  text-align: left;\n  color: #212121;\n  margin: 10px 0px;\n}\n\n.partnerDiv {\n  display: flex;\n  justify-content: center;\n}\n\n.partnerWrapper {\n  margin: 60px 0px;\n  max-width: 1302px;\n}\n\n.numSection {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  column-gap: 116px;\n  margin: 45px 0px;\n}\n\n.countSection {\n  display: flex;\n  justify-content: center;\n}\n\n@media only screen and (max-width: 767px) {\n  .partnerWrapper {\n    width: 100%;\n    margin: 60px 0px 0px 0px;\n  }\n\n  .numSection {\n    grid-template-columns: 1fr;\n    row-gap: 50px;\n  }\n\n  .countContainer {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n}\n\n.h3_text {\n  margin: 10px 10px;\n  font-size: 36px;\n  font-weight: bold;\n  line-height: 1.36;\n  text-align: center;\n  color: #212121;\n}",
              ],
            }),
          ],
          a
        ));
    },
    "0pfW": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var s = n("mrSG"),
        i = n("fXoL"),
        r = n("xdV4");
      let o = class {
        constructor(e) {
          this.windowService = e;
        }
        trackEvent(e) {
          this.windowService.nativeWindow.clevertap.event.push(e);
        }
        setUserProfile(e) {
          this.windowService.nativeWindow.clevertap.onUserLogin.push({
            Site: {
              "Student Name": e.studentName,
              Username: e.userName,
              Email: e.email,
              Phone: e.phoneNumber,
              "Lead type": "B2C",
              "Parent Name": e.parentName,
              Class: e.grade,
              Syllabus: e.syllabus,
              "Trial start date": e.trailStartDate,
              "Trial end date": e.trailStartDate,
              "Maths subscription": e.mathsSubscription,
              "English subscription": e.englishSubscription,
              "Science subscription": e.scienceSubscription,
              Product: e.product,
              Package: e.package,
              Lead_source: "mindspark.in",
              utm_source: e.utmparams.utm_source,
              utm_source_new: e.utmparams.utm_source_new,
              utm_campaign: e.utmparams.utm_campaign,
              utm_campaign_new: e.utmparams.utm_campaign_new,
              utm_content: e.utmparams.utm_content,
              utm_content_new: e.utmparams.utm_content_new,
              utm_medium: e.utmparams.utm_medium,
              utm_medium_new: e.utmparams.utm_medium_new,
              utm_term: e.utmparams.utm_term,
              utm_term_new: e.utmparams.utm_term_new,
              gclid_Source: e.utmparams.gclid_Source,
              gclid_Source_new: e.utmparams.gclid_Source_new,
              "MSG-email": !0,
              "MSG-push": !0,
              "MSG-sms": !0,
              "MSG-whatsapp": e.whatsappValue,
            },
          });
        }
      };
      (o.ctorParameters = () => [{ type: r.a }]),
        (o = Object(s.a)([Object(i.D)({ providedIn: "root" })], o));
    },
    "1G5W": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      var s = n("zx2A");
      function i(e) {
        return (t) => t.lift(new r(e));
      }
      class r {
        constructor(e) {
          this.notifier = e;
        }
        call(e, t) {
          const n = new o(e),
            i = Object(s.c)(this.notifier, new s.a(n));
          return i && !n.seenValue ? (n.add(i), t.subscribe(n)) : n;
        }
      }
      class o extends s.b {
        constructor(e) {
          super(e), (this.seenValue = !1);
        }
        notifyNext() {
          (this.seenValue = !0), this.complete();
        }
        notifyComplete() {}
      }
    },
    "1kSV": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return xo;
      });
      var s = n("fXoL"),
        i = n("ofXK"),
        r = n("EY2u"),
        o = n("LRne"),
        a = n("XNiG"),
        l = n("xgIS"),
        c = n("PqYM"),
        u = n("DH7j"),
        d = n("yCtX"),
        h = n("l7GE"),
        p = n("ZUHj");
      function m(...e) {
        if (1 === e.length) {
          if (!Object(u.a)(e[0])) return e[0];
          e = e[0];
        }
        return Object(d.a)(e, void 0).lift(new f());
      }
      class f {
        call(e, t) {
          return t.subscribe(new g(e));
        }
      }
      class g extends h.a {
        constructor(e) {
          super(e),
            (this.hasFirst = !1),
            (this.observables = []),
            (this.subscriptions = []);
        }
        _next(e) {
          this.observables.push(e);
        }
        _complete() {
          const e = this.observables,
            t = e.length;
          if (0 === t) this.destination.complete();
          else {
            for (let n = 0; n < t && !this.hasFirst; n++) {
              const t = e[n],
                s = Object(p.a)(this, t, void 0, n);
              this.subscriptions && this.subscriptions.push(s), this.add(s);
            }
            this.observables = null;
          }
        }
        notifyNext(e, t, n) {
          if (!this.hasFirst) {
            this.hasFirst = !0;
            for (let e = 0; e < this.subscriptions.length; e++)
              if (e !== n) {
                let t = this.subscriptions[e];
                t.unsubscribe(), this.remove(t);
              }
            this.subscriptions = null;
          }
          this.destination.next(t);
        }
      }
      var y = n("2Vo4"),
        v = n("itXk"),
        b = n("HDdC"),
        x = n("KqfI");
      const _ = new b.a(x.a);
      var w = n("7o/Q"),
        C = n("Lhse"),
        S = n("zx2A");
      function E(...e) {
        const t = e[e.length - 1];
        return (
          "function" == typeof t && e.pop(),
          Object(d.a)(e, void 0).lift(new k(t))
        );
      }
      class k {
        constructor(e) {
          this.resultSelector = e;
        }
        call(e, t) {
          return t.subscribe(new O(e, this.resultSelector));
        }
      }
      class O extends w.a {
        constructor(e, t, n = Object.create(null)) {
          super(e),
            (this.resultSelector = t),
            (this.iterators = []),
            (this.active = 0),
            (this.resultSelector = "function" == typeof t ? t : void 0);
        }
        _next(e) {
          const t = this.iterators;
          Object(u.a)(e)
            ? t.push(new T(e))
            : "function" == typeof e[C.a]
            ? t.push(new I(e[C.a]()))
            : t.push(new A(this.destination, this, e));
        }
        _complete() {
          const e = this.iterators,
            t = e.length;
          if ((this.unsubscribe(), 0 !== t)) {
            this.active = t;
            for (let n = 0; n < t; n++) {
              let t = e[n];
              if (t.stillUnsubscribed) {
                this.destination.add(t.subscribe());
              } else this.active--;
            }
          } else this.destination.complete();
        }
        notifyInactive() {
          this.active--, 0 === this.active && this.destination.complete();
        }
        checkIterators() {
          const e = this.iterators,
            t = e.length,
            n = this.destination;
          for (let r = 0; r < t; r++) {
            let t = e[r];
            if ("function" == typeof t.hasValue && !t.hasValue()) return;
          }
          let s = !1;
          const i = [];
          for (let r = 0; r < t; r++) {
            let t = e[r],
              o = t.next();
            if ((t.hasCompleted() && (s = !0), o.done))
              return void n.complete();
            i.push(o.value);
          }
          this.resultSelector ? this._tryresultSelector(i) : n.next(i),
            s && n.complete();
        }
        _tryresultSelector(e) {
          let t;
          try {
            t = this.resultSelector.apply(this, e);
          } catch (n) {
            return void this.destination.error(n);
          }
          this.destination.next(t);
        }
      }
      class I {
        constructor(e) {
          (this.iterator = e), (this.nextResult = e.next());
        }
        hasValue() {
          return !0;
        }
        next() {
          const e = this.nextResult;
          return (this.nextResult = this.iterator.next()), e;
        }
        hasCompleted() {
          const e = this.nextResult;
          return Boolean(e && e.done);
        }
      }
      class T {
        constructor(e) {
          (this.array = e),
            (this.index = 0),
            (this.length = 0),
            (this.length = e.length);
        }
        [C.a]() {
          return this;
        }
        next(e) {
          const t = this.index++,
            n = this.array;
          return t < this.length
            ? { value: n[t], done: !1 }
            : { value: null, done: !0 };
        }
        hasValue() {
          return this.array.length > this.index;
        }
        hasCompleted() {
          return this.array.length === this.index;
        }
      }
      class A extends S.b {
        constructor(e, t, n) {
          super(e),
            (this.parent = t),
            (this.observable = n),
            (this.stillUnsubscribed = !0),
            (this.buffer = []),
            (this.isComplete = !1);
        }
        [C.a]() {
          return this;
        }
        next() {
          const e = this.buffer;
          return 0 === e.length && this.isComplete
            ? { value: null, done: !0 }
            : { value: e.shift(), done: !1 };
        }
        hasValue() {
          return this.buffer.length > 0;
        }
        hasCompleted() {
          return 0 === this.buffer.length && this.isComplete;
        }
        notifyComplete() {
          this.buffer.length > 0
            ? ((this.isComplete = !0), this.parent.notifyInactive())
            : this.destination.complete();
        }
        notifyNext(e) {
          this.buffer.push(e), this.parent.checkIterators();
        }
        subscribe() {
          return Object(S.c)(this.observable, new S.a(this));
        }
      }
      var D = n("VRyK"),
        M = n("GyhO");
      var P = n("1G5W"),
        R = n("pLZG"),
        j = n("IzEk"),
        N = n("lJxs"),
        F = n("JX91"),
        L = n("/uUt"),
        V = n("eIep"),
        B = n("vkgz");
      function z(...e) {
        return (t) => {
          let n;
          "function" == typeof e[e.length - 1] && (n = e.pop());
          const s = e;
          return t.lift(new H(s, n));
        };
      }
      class H {
        constructor(e, t) {
          (this.observables = e), (this.project = t);
        }
        call(e, t) {
          return t.subscribe(new G(e, this.observables, this.project));
        }
      }
      class G extends h.a {
        constructor(e, t, n) {
          super(e),
            (this.observables = t),
            (this.project = n),
            (this.toRespond = []);
          const s = t.length;
          this.values = new Array(s);
          for (let i = 0; i < s; i++) this.toRespond.push(i);
          for (let i = 0; i < s; i++) {
            let e = t[i];
            this.add(Object(p.a)(this, e, void 0, i));
          }
        }
        notifyNext(e, t, n) {
          this.values[n] = t;
          const s = this.toRespond;
          if (s.length > 0) {
            const e = s.indexOf(n);
            -1 !== e && s.splice(e, 1);
          }
        }
        notifyComplete() {}
        _next(e) {
          if (0 === this.toRespond.length) {
            const t = [e, ...this.values];
            this.project ? this._tryProject(t) : this.destination.next(t);
          }
        }
        _tryProject(e) {
          let t;
          try {
            t = this.project.apply(this, e);
          } catch (n) {
            return void this.destination.error(n);
          }
          this.destination.next(t);
        }
      }
      var U = n("3E0/"),
        $ = n("5+tZ");
      class q {
        constructor(e) {
          this.total = e;
        }
        call(e, t) {
          return t.subscribe(new W(e, this.total));
        }
      }
      class W extends w.a {
        constructor(e, t) {
          super(e), (this.total = t), (this.count = 0);
        }
        _next(e) {
          ++this.count > this.total && this.destination.next(e);
        }
      }
      var Y = n("w1tV"),
        Q = n("3Pt+");
      function K(e, t) {}
      function J(e, t) {
        if (
          (1 & e &&
            (s.Rc(0, "button", 3),
            s.Ed(1),
            s.Cd(2, K, 0, 0, "ng-template", 4),
            s.Qc()),
          2 & e)
        ) {
          const e = t.$implicit;
          s.ld("ngbPanelToggle", e),
            s.zc(1),
            s.Gd(" ", e.title, ""),
            s.zc(1),
            s.ld(
              "ngTemplateOutlet",
              null == e.titleTpl ? null : e.titleTpl.templateRef
            );
        }
      }
      function X(e, t) {}
      function Z(e, t) {}
      function ee(e, t) {
        if (
          (1 & e &&
            (s.Rc(0, "div", 8),
            s.Rc(1, "div", 9),
            s.Cd(2, Z, 0, 0, "ng-template", 4),
            s.Qc(),
            s.Qc()),
          2 & e)
        ) {
          const e = s.gd().$implicit;
          s.md("id", e.id),
            s.Ac("aria-labelledby", e.id + "-header"),
            s.zc(2),
            s.ld(
              "ngTemplateOutlet",
              (null == e.contentTpl ? null : e.contentTpl.templateRef) || null
            );
        }
      }
      const te = function (e, t) {
        return { $implicit: e, opened: t };
      };
      function ne(e, t) {
        if (
          (1 & e &&
            (s.Rc(0, "div"),
            s.Rc(1, "div", 5),
            s.Cd(2, X, 0, 0, "ng-template", 6),
            s.Qc(),
            s.Cd(3, ee, 3, 3, "div", 7),
            s.Qc()),
          2 & e)
        ) {
          const e = t.$implicit,
            n = s.gd(),
            i = s.td(1);
          s.Bc("card " + (e.cardClass || "")),
            s.zc(1),
            s.Bc(
              "card-header " +
                (e.type ? "bg-" + e.type : n.type ? "bg-" + n.type : "")
            ),
            s.nd("id", "", e.id, "-header"),
            s.zc(1),
            s.ld(
              "ngTemplateOutlet",
              (null == e.headerTpl ? null : e.headerTpl.templateRef) || i
            )("ngTemplateOutletContext", s.qd(8, te, e, e.isOpen)),
            s.zc(1),
            s.ld("ngIf", !n.destroyOnHide || e.isOpen || e.transitionRunning);
        }
      }
      function se(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "button", 1),
            s.cd("click", function () {
              s.ud(e);
              return s.gd().close();
            }),
            s.Rc(1, "span", 2),
            s.Ed(2, "\xd7"),
            s.Qc(),
            s.Qc();
        }
      }
      const ie = ["*"];
      function re(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "li", 6),
            s.cd("click", function () {
              s.ud(e);
              const n = t.$implicit,
                i = s.gd();
              return i.focus(), i.select(n.id, i.NgbSlideEventSource.INDICATOR);
            }),
            s.Qc();
        }
        if (2 & e) {
          const e = t.$implicit,
            n = s.gd();
          s.Ec("active", e.id === n.activeId),
            s.Ac("aria-labelledby", "slide-" + e.id)(
              "aria-controls",
              "slide-" + e.id
            )("aria-selected", e.id === n.activeId);
        }
      }
      function oe(e, t) {}
      function ae(e, t) {
        if (
          (1 & e &&
            (s.Rc(0, "div", 7),
            s.Rc(1, "span", 8),
            s.Vc(2, 9),
            s.Qc(),
            s.Cd(3, oe, 0, 0, "ng-template", 10),
            s.Qc()),
          2 & e)
        ) {
          const e = t.$implicit,
            n = t.index,
            i = t.count;
          s.ld("id", "slide-" + e.id),
            s.zc(2),
            s.Xc(n + 1)(i),
            s.Wc(2),
            s.zc(1),
            s.ld("ngTemplateOutlet", e.tplRef);
        }
      }
      function le(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "a", 11),
            s.cd("click", function () {
              s.ud(e);
              return s.gd().arrowLeft();
            }),
            s.Nc(1, "span", 12),
            s.Rc(2, "span", 8),
            s.Vc(3, 13),
            s.Qc(),
            s.Qc();
        }
      }
      function ce(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "a", 14),
            s.cd("click", function () {
              s.ud(e);
              return s.gd().arrowRight();
            }),
            s.Nc(1, "span", 15),
            s.Rc(2, "span", 8),
            s.Vc(3, 16),
            s.Qc(),
            s.Qc();
        }
      }
      const ue = ["defaultDayTemplate"],
        de = ["content"];
      function he(e, t) {
        if ((1 & e && s.Nc(0, "div", 7), 2 & e)) {
          const e = t.date,
            n = t.currentMonth,
            i = t.selected,
            r = t.disabled,
            o = t.focused;
          s.ld("date", e)("currentMonth", n)("selected", i)("disabled", r)(
            "focused",
            o
          );
        }
      }
      function pe(e, t) {
        if ((1 & e && (s.Rc(0, "div", 12), s.Ed(1), s.Qc()), 2 & e)) {
          const e = s.gd().$implicit,
            t = s.gd(2);
          s.zc(1),
            s.Hd(
              " ",
              t.i18n.getMonthFullName(e.number, e.year),
              " ",
              t.i18n.getYearNumerals(e.year),
              " "
            );
        }
      }
      function me(e, t) {
        if (
          (1 & e &&
            (s.Rc(0, "div", 9),
            s.Cd(1, pe, 2, 2, "div", 10),
            s.Nc(2, "ngb-datepicker-month", 11),
            s.Qc()),
          2 & e)
        ) {
          const e = t.$implicit,
            n = s.gd(2);
          s.zc(1),
            s.ld(
              "ngIf",
              "none" === n.navigation ||
                (n.displayMonths > 1 && "select" === n.navigation)
            ),
            s.zc(1),
            s.ld("month", e.firstDate);
        }
      }
      function fe(e, t) {
        if ((1 & e && s.Cd(0, me, 3, 2, "div", 8), 2 & e)) {
          const e = s.gd();
          s.ld("ngForOf", e.model.months);
        }
      }
      function ge(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "ngb-datepicker-navigation", 13),
            s.cd("navigate", function (t) {
              s.ud(e);
              return s.gd().onNavigateEvent(t);
            })("select", function (t) {
              s.ud(e);
              return s.gd().onNavigateDateSelect(t);
            }),
            s.Qc();
        }
        if (2 & e) {
          const e = s.gd();
          s.ld("date", e.model.firstDate)("months", e.model.months)(
            "disabled",
            e.model.disabled
          )("showSelect", "select" === e.model.navigation)(
            "prevDisabled",
            e.model.prevDisabled
          )("nextDisabled", e.model.nextDisabled)(
            "selectBoxes",
            e.model.selectBoxes
          );
        }
      }
      function ye(e, t) {}
      function ve(e, t) {}
      function be(e, t) {
        1 & e && s.Nc(0, "div", 5);
      }
      function xe(e, t) {
        if ((1 & e && (s.Rc(0, "div", 6), s.Ed(1), s.Qc()), 2 & e)) {
          const e = t.$implicit,
            n = s.gd(2);
          s.zc(1), s.Gd(" ", n.i18n.getWeekdayShortName(e), " ");
        }
      }
      function _e(e, t) {
        if (
          (1 & e &&
            (s.Rc(0, "div", 2),
            s.Cd(1, be, 1, 0, "div", 3),
            s.Cd(2, xe, 2, 1, "div", 4),
            s.Qc()),
          2 & e)
        ) {
          const e = s.gd();
          s.zc(1),
            s.ld("ngIf", e.datepicker.showWeekNumbers),
            s.zc(1),
            s.ld("ngForOf", e.viewModel.weekdays);
        }
      }
      function we(e, t) {
        if ((1 & e && (s.Rc(0, "div", 11), s.Ed(1), s.Qc()), 2 & e)) {
          const e = s.gd(2).$implicit,
            t = s.gd();
          s.zc(1), s.Fd(t.i18n.getWeekNumerals(e.number));
        }
      }
      function Ce(e, t) {}
      function Se(e, t) {
        if ((1 & e && s.Cd(0, Ce, 0, 0, "ng-template", 14), 2 & e)) {
          const e = s.gd().$implicit,
            t = s.gd(3);
          s.ld("ngTemplateOutlet", t.datepicker.dayTemplate)(
            "ngTemplateOutletContext",
            e.context
          );
        }
      }
      function Ee(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "div", 12),
            s.cd("click", function (n) {
              s.ud(e);
              const i = t.$implicit;
              return s.gd(3).doSelect(i), n.preventDefault();
            }),
            s.Cd(1, Se, 1, 2, "ng-template", 13),
            s.Qc();
        }
        if (2 & e) {
          const e = t.$implicit;
          s.Ec("disabled", e.context.disabled)("hidden", e.hidden)(
            "ngb-dp-today",
            e.context.today
          ),
            s.ld("tabindex", e.tabindex),
            s.Ac("aria-label", e.ariaLabel),
            s.zc(1),
            s.ld("ngIf", !e.hidden);
        }
      }
      function ke(e, t) {
        if (
          (1 & e &&
            (s.Rc(0, "div", 8),
            s.Cd(1, we, 2, 1, "div", 9),
            s.Cd(2, Ee, 2, 9, "div", 10),
            s.Qc()),
          2 & e)
        ) {
          const e = s.gd().$implicit,
            t = s.gd();
          s.zc(1),
            s.ld("ngIf", t.datepicker.showWeekNumbers),
            s.zc(1),
            s.ld("ngForOf", e.days);
        }
      }
      function Oe(e, t) {
        if ((1 & e && s.Cd(0, ke, 3, 2, "div", 7), 2 & e)) {
          const e = t.$implicit;
          s.ld("ngIf", !e.collapsed);
        }
      }
      function Ie(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "ngb-datepicker-navigation-select", 7),
            s.cd("select", function (t) {
              s.ud(e);
              return s.gd().select.emit(t);
            }),
            s.Qc();
        }
        if (2 & e) {
          const e = s.gd();
          s.ld("date", e.date)("disabled", e.disabled)(
            "months",
            e.selectBoxes.months
          )("years", e.selectBoxes.years);
        }
      }
      function Te(e, t) {
        1 & e && s.Nc(0, "div", 0);
      }
      function Ae(e, t) {
        1 & e && s.Nc(0, "div", 0);
      }
      function De(e, t) {
        if (
          (1 & e &&
            (s.Cd(0, Te, 1, 0, "div", 9),
            s.Rc(1, "div", 10),
            s.Ed(2),
            s.Qc(),
            s.Cd(3, Ae, 1, 0, "div", 9)),
          2 & e)
        ) {
          const e = t.$implicit,
            n = t.index,
            i = s.gd(2);
          s.ld("ngIf", n > 0),
            s.zc(2),
            s.Hd(
              " ",
              i.i18n.getMonthFullName(e.number, e.year),
              " ",
              i.i18n.getYearNumerals(e.year),
              " "
            ),
            s.zc(1),
            s.ld("ngIf", n !== i.months.length - 1);
        }
      }
      function Me(e, t) {
        if ((1 & e && s.Cd(0, De, 4, 4, "ng-template", 8), 2 & e)) {
          const e = s.gd();
          s.ld("ngForOf", e.months);
        }
      }
      const Pe = ["month"],
        Re = ["year"];
      function je(e, t) {
        if ((1 & e && (s.Rc(0, "option", 5), s.Ed(1), s.Qc()), 2 & e)) {
          const e = t.$implicit,
            n = s.gd();
          s.ld("value", e),
            s.Ac(
              "aria-label",
              n.i18n.getMonthFullName(e, null == n.date ? null : n.date.year)
            ),
            s.zc(1),
            s.Fd(
              n.i18n.getMonthShortName(e, null == n.date ? null : n.date.year)
            );
        }
      }
      function Ne(e, t) {
        if ((1 & e && (s.Rc(0, "option", 5), s.Ed(1), s.Qc()), 2 & e)) {
          const e = t.$implicit,
            n = s.gd();
          s.ld("value", e), s.zc(1), s.Fd(n.i18n.getYearNumerals(e));
        }
      }
      const Fe = ["dialog"];
      function Le(e, t) {}
      const Ve = function (e) {
        return { $implicit: e };
      };
      function Be(e, t) {
        if (
          (1 & e &&
            (s.Rc(0, "div", 2), s.Cd(1, Le, 0, 0, "ng-template", 3), s.Qc()),
          2 & e)
        ) {
          const e = s.gd().$implicit,
            t = s.gd();
          s.ld("item", e)("nav", t.nav)("role", t.paneRole),
            s.zc(1),
            s.ld(
              "ngTemplateOutlet",
              (null == e.contentTpl ? null : e.contentTpl.templateRef) || null
            )(
              "ngTemplateOutletContext",
              s.pd(5, Ve, e.active || t.isPanelTransitioning(e))
            );
        }
      }
      function ze(e, t) {
        if ((1 & e && s.Cd(0, Be, 2, 7, "div", 1), 2 & e)) {
          const e = t.$implicit,
            n = s.gd();
          s.ld("ngIf", e.isPanelInDom() || n.isPanelTransitioning(e));
        }
      }
      function He(e, t) {
        1 & e && (s.Rc(0, "span", 8), s.Vc(1, 9), s.Qc());
      }
      function Ge(e, t) {
        1 & e && (s.Rc(0, "span", 8), s.Vc(1, 10), s.Qc());
      }
      function Ue(e, t) {
        1 & e && (s.Rc(0, "span", 8), s.Vc(1, 11), s.Qc());
      }
      function $e(e, t) {
        1 & e && (s.Rc(0, "span", 8), s.Vc(1, 12), s.Qc());
      }
      function qe(e, t) {
        1 & e && s.Ed(0, "...");
      }
      function We(e, t) {
        1 & e && (s.Rc(0, "span", 14), s.Ed(1, "(current)"), s.Qc());
      }
      function Ye(e, t) {
        if ((1 & e && (s.Ed(0), s.Cd(1, We, 2, 0, "span", 13)), 2 & e)) {
          const e = t.$implicit,
            n = t.currentPage;
          s.Gd(" ", e, " "), s.zc(1), s.ld("ngIf", e === n);
        }
      }
      function Qe(e, t) {}
      const Ke = function (e, t) {
        return { disabled: e, currentPage: t };
      };
      function Je(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "li", 15),
            s.Rc(1, "a", 16),
            s.cd("click", function (t) {
              s.ud(e);
              return s.gd().selectPage(1), t.preventDefault();
            }),
            s.Cd(2, Qe, 0, 0, "ng-template", 17),
            s.Qc(),
            s.Qc();
        }
        if (2 & e) {
          const e = s.gd(),
            t = s.td(1);
          s.Ec("disabled", e.previousDisabled()),
            s.zc(1),
            s.Ac("tabindex", e.previousDisabled() ? "-1" : null)(
              "aria-disabled",
              e.previousDisabled() ? "true" : null
            ),
            s.zc(1),
            s.ld(
              "ngTemplateOutlet",
              (null == e.tplFirst ? null : e.tplFirst.templateRef) || t
            )(
              "ngTemplateOutletContext",
              s.qd(6, Ke, e.previousDisabled(), e.page)
            );
        }
      }
      function Xe(e, t) {}
      const Ze = function (e) {
        return { disabled: e };
      };
      function et(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "li", 15),
            s.Rc(1, "a", 18),
            s.cd("click", function (t) {
              s.ud(e);
              const n = s.gd();
              return n.selectPage(n.page - 1), t.preventDefault();
            }),
            s.Cd(2, Xe, 0, 0, "ng-template", 17),
            s.Qc(),
            s.Qc();
        }
        if (2 & e) {
          const e = s.gd(),
            t = s.td(3);
          s.Ec("disabled", e.previousDisabled()),
            s.zc(1),
            s.Ac("tabindex", e.previousDisabled() ? "-1" : null)(
              "aria-disabled",
              e.previousDisabled() ? "true" : null
            ),
            s.zc(1),
            s.ld(
              "ngTemplateOutlet",
              (null == e.tplPrevious ? null : e.tplPrevious.templateRef) || t
            )("ngTemplateOutletContext", s.pd(6, Ze, e.previousDisabled()));
        }
      }
      function tt(e, t) {}
      const nt = function (e) {
        return { disabled: !0, currentPage: e };
      };
      function st(e, t) {
        if (
          (1 & e &&
            (s.Rc(0, "a", 21), s.Cd(1, tt, 0, 0, "ng-template", 17), s.Qc()),
          2 & e)
        ) {
          const e = s.gd(2),
            t = s.td(9);
          s.zc(1),
            s.ld(
              "ngTemplateOutlet",
              (null == e.tplEllipsis ? null : e.tplEllipsis.templateRef) || t
            )("ngTemplateOutletContext", s.pd(2, nt, e.page));
        }
      }
      function it(e, t) {}
      const rt = function (e, t, n) {
        return { disabled: e, $implicit: t, currentPage: n };
      };
      function ot(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "a", 22),
            s.cd("click", function (t) {
              s.ud(e);
              const n = s.gd().$implicit;
              return s.gd().selectPage(n), t.preventDefault();
            }),
            s.Cd(1, it, 0, 0, "ng-template", 17),
            s.Qc();
        }
        if (2 & e) {
          const e = s.gd().$implicit,
            t = s.gd(),
            n = s.td(11);
          s.Ac("tabindex", t.disabled ? "-1" : null)(
            "aria-disabled",
            t.disabled ? "true" : null
          ),
            s.zc(1),
            s.ld(
              "ngTemplateOutlet",
              (null == t.tplNumber ? null : t.tplNumber.templateRef) || n
            )("ngTemplateOutletContext", s.rd(4, rt, t.disabled, e, t.page));
        }
      }
      function at(e, t) {
        if (
          (1 & e &&
            (s.Rc(0, "li", 15),
            s.Cd(1, st, 2, 4, "a", 19),
            s.Cd(2, ot, 2, 8, "a", 20),
            s.Qc()),
          2 & e)
        ) {
          const e = t.$implicit,
            n = s.gd();
          s.Ec("active", e === n.page)(
            "disabled",
            n.isEllipsis(e) || n.disabled
          ),
            s.Ac("aria-current", e === n.page ? "page" : null),
            s.zc(1),
            s.ld("ngIf", n.isEllipsis(e)),
            s.zc(1),
            s.ld("ngIf", !n.isEllipsis(e));
        }
      }
      function lt(e, t) {}
      function ct(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "li", 15),
            s.Rc(1, "a", 23),
            s.cd("click", function (t) {
              s.ud(e);
              const n = s.gd();
              return n.selectPage(n.page + 1), t.preventDefault();
            }),
            s.Cd(2, lt, 0, 0, "ng-template", 17),
            s.Qc(),
            s.Qc();
        }
        if (2 & e) {
          const e = s.gd(),
            t = s.td(5);
          s.Ec("disabled", e.nextDisabled()),
            s.zc(1),
            s.Ac("tabindex", e.nextDisabled() ? "-1" : null)(
              "aria-disabled",
              e.nextDisabled() ? "true" : null
            ),
            s.zc(1),
            s.ld(
              "ngTemplateOutlet",
              (null == e.tplNext ? null : e.tplNext.templateRef) || t
            )("ngTemplateOutletContext", s.qd(6, Ke, e.nextDisabled(), e.page));
        }
      }
      function ut(e, t) {}
      function dt(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "li", 15),
            s.Rc(1, "a", 24),
            s.cd("click", function (t) {
              s.ud(e);
              const n = s.gd();
              return n.selectPage(n.pageCount), t.preventDefault();
            }),
            s.Cd(2, ut, 0, 0, "ng-template", 17),
            s.Qc(),
            s.Qc();
        }
        if (2 & e) {
          const e = s.gd(),
            t = s.td(7);
          s.Ec("disabled", e.nextDisabled()),
            s.zc(1),
            s.Ac("tabindex", e.nextDisabled() ? "-1" : null)(
              "aria-disabled",
              e.nextDisabled() ? "true" : null
            ),
            s.zc(1),
            s.ld(
              "ngTemplateOutlet",
              (null == e.tplLast ? null : e.tplLast.templateRef) || t
            )("ngTemplateOutletContext", s.qd(6, Ke, e.nextDisabled(), e.page));
        }
      }
      function ht(e, t) {
        if ((1 & e && s.Ed(0), 2 & e)) {
          const e = s.gd(2);
          s.Fd(e.title);
        }
      }
      function pt(e, t) {}
      function mt(e, t) {
        if (
          (1 & e &&
            (s.Rc(0, "h3", 3),
            s.Cd(1, ht, 1, 1, "ng-template", null, 4, s.Dd),
            s.Cd(3, pt, 0, 0, "ng-template", 5),
            s.Qc()),
          2 & e)
        ) {
          const e = s.td(2),
            t = s.gd();
          s.zc(3),
            s.ld("ngTemplateOutlet", t.isTitleTemplate() ? t.title : e)(
              "ngTemplateOutletContext",
              t.context
            );
        }
      }
      function ft(e, t) {
        if (
          (1 & e && (s.Rc(0, "span"), s.Vc(1, 2), s.hd(2, "percent"), s.Qc()),
          2 & e)
        ) {
          const e = s.gd();
          s.zc(2), s.Xc(s.id(2, 1, e.getValue() / e.max)), s.Wc(1);
        }
      }
      function gt(e, t) {
        if ((1 & e && s.Ed(0), 2 & e)) {
          const e = t.fill;
          s.Fd(100 === e ? "\u2605" : "\u2606");
        }
      }
      function yt(e, t) {}
      function vt(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "span", 2),
            s.Ed(1),
            s.Qc(),
            s.Rc(2, "span", 3),
            s.cd("mouseenter", function () {
              s.ud(e);
              const n = t.index;
              return s.gd().enter(n + 1);
            })("click", function () {
              s.ud(e);
              const n = t.index;
              return s.gd().handleClick(n + 1);
            }),
            s.Cd(3, yt, 0, 0, "ng-template", 4),
            s.Qc();
        }
        if (2 & e) {
          const e = t.index,
            n = s.gd(),
            i = s.td(1);
          s.zc(1),
            s.Gd("(", e < n.nextRate ? "*" : " ", ")"),
            s.zc(1),
            s.zd("cursor", n.isInteractive() ? "pointer" : "default"),
            s.zc(1),
            s.ld(
              "ngTemplateOutlet",
              n.starTemplate || n.starTemplateFromContent || i
            )("ngTemplateOutletContext", n.contexts[e]);
        }
      }
      function bt(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "button", 11),
            s.cd("click", function () {
              s.ud(e);
              const t = s.gd();
              return t.changeHour(t.hourStep);
            }),
            s.Nc(1, "span", 12),
            s.Rc(2, "span", 13),
            s.Vc(3, 14),
            s.Qc(),
            s.Qc();
        }
        if (2 & e) {
          const e = s.gd();
          s.Ec("btn-sm", e.isSmallSize)("btn-lg", e.isLargeSize)(
            "disabled",
            e.disabled
          ),
            s.ld("disabled", e.disabled);
        }
      }
      function xt(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "button", 11),
            s.cd("click", function () {
              s.ud(e);
              const t = s.gd();
              return t.changeHour(-t.hourStep);
            }),
            s.Nc(1, "span", 15),
            s.Rc(2, "span", 13),
            s.Vc(3, 16),
            s.Qc(),
            s.Qc();
        }
        if (2 & e) {
          const e = s.gd();
          s.Ec("btn-sm", e.isSmallSize)("btn-lg", e.isLargeSize)(
            "disabled",
            e.disabled
          ),
            s.ld("disabled", e.disabled);
        }
      }
      function _t(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "button", 11),
            s.cd("click", function () {
              s.ud(e);
              const t = s.gd();
              return t.changeMinute(t.minuteStep);
            }),
            s.Nc(1, "span", 12),
            s.Rc(2, "span", 13),
            s.Vc(3, 17),
            s.Qc(),
            s.Qc();
        }
        if (2 & e) {
          const e = s.gd();
          s.Ec("btn-sm", e.isSmallSize)("btn-lg", e.isLargeSize)(
            "disabled",
            e.disabled
          ),
            s.ld("disabled", e.disabled);
        }
      }
      function wt(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "button", 11),
            s.cd("click", function () {
              s.ud(e);
              const t = s.gd();
              return t.changeMinute(-t.minuteStep);
            }),
            s.Nc(1, "span", 15),
            s.Rc(2, "span", 13),
            s.Vc(3, 18),
            s.Qc(),
            s.Qc();
        }
        if (2 & e) {
          const e = s.gd();
          s.Ec("btn-sm", e.isSmallSize)("btn-lg", e.isLargeSize)(
            "disabled",
            e.disabled
          ),
            s.ld("disabled", e.disabled);
        }
      }
      function Ct(e, t) {
        1 & e && (s.Rc(0, "div", 5), s.Ed(1, ":"), s.Qc());
      }
      function St(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "button", 11),
            s.cd("click", function () {
              s.ud(e);
              const t = s.gd(2);
              return t.changeSecond(t.secondStep);
            }),
            s.Nc(1, "span", 12),
            s.Rc(2, "span", 13),
            s.Vc(3, 21),
            s.Qc(),
            s.Qc();
        }
        if (2 & e) {
          const e = s.gd(2);
          s.Ec("btn-sm", e.isSmallSize)("btn-lg", e.isLargeSize)(
            "disabled",
            e.disabled
          ),
            s.ld("disabled", e.disabled);
        }
      }
      function Et(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "button", 11),
            s.cd("click", function () {
              s.ud(e);
              const t = s.gd(2);
              return t.changeSecond(-t.secondStep);
            }),
            s.Nc(1, "span", 15),
            s.Rc(2, "span", 13),
            s.Vc(3, 22),
            s.Qc(),
            s.Qc();
        }
        if (2 & e) {
          const e = s.gd(2);
          s.Ec("btn-sm", e.isSmallSize)("btn-lg", e.isLargeSize)(
            "disabled",
            e.disabled
          ),
            s.ld("disabled", e.disabled);
        }
      }
      function kt(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "div", 19),
            s.Cd(1, St, 4, 7, "button", 3),
            s.Rc(2, "input", 20),
            s.cd("change", function (t) {
              s.ud(e);
              return s.gd().updateSecond(t.target.value);
            })("input", function (t) {
              s.ud(e);
              return s.gd().formatInput(t.target);
            })("keydown.ArrowUp", function (t) {
              s.ud(e);
              const n = s.gd();
              return n.changeSecond(n.secondStep), t.preventDefault();
            })("keydown.ArrowDown", function (t) {
              s.ud(e);
              const n = s.gd();
              return n.changeSecond(-n.secondStep), t.preventDefault();
            }),
            s.Qc(),
            s.Cd(3, Et, 4, 7, "button", 3),
            s.Qc();
        }
        if (2 & e) {
          const e = s.gd();
          s.zc(1),
            s.ld("ngIf", e.spinners),
            s.zc(1),
            s.Ec("form-control-sm", e.isSmallSize)(
              "form-control-lg",
              e.isLargeSize
            ),
            s.ld(
              "value",
              e.formatMinSec(null == e.model ? null : e.model.second)
            )("readOnly", e.readonlyInputs)("disabled", e.disabled),
            s.zc(1),
            s.ld("ngIf", e.spinners);
        }
      }
      function Ot(e, t) {
        1 & e && s.Nc(0, "div", 5);
      }
      function It(e, t) {
        if ((1 & e && (s.Pc(0), s.Vc(1, 27), s.Oc()), 2 & e)) {
          const e = s.gd(2);
          s.zc(1), s.Xc(e.i18n.getAfternoonPeriod()), s.Wc(1);
        }
      }
      function Tt(e, t) {
        if ((1 & e && s.Vc(0, 28), 2 & e)) {
          const e = s.gd(2);
          s.Xc(e.i18n.getMorningPeriod()), s.Wc(0);
        }
      }
      function At(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "div", 23),
            s.Rc(1, "button", 24),
            s.cd("click", function () {
              s.ud(e);
              return s.gd().toggleMeridian();
            }),
            s.Cd(2, It, 2, 1, "ng-container", 25),
            s.Cd(3, Tt, 1, 1, "ng-template", null, 26, s.Dd),
            s.Qc(),
            s.Qc();
        }
        if (2 & e) {
          const e = s.td(4),
            t = s.gd();
          s.zc(1),
            s.Ec("btn-sm", t.isSmallSize)("btn-lg", t.isLargeSize)(
              "disabled",
              t.disabled
            ),
            s.ld("disabled", t.disabled),
            s.zc(1),
            s.ld("ngIf", t.model && t.model.hour >= 12)("ngIfElse", e);
        }
      }
      function Dt(e, t) {
        if ((1 & e && (s.Rc(0, "strong", 3), s.Ed(1), s.Qc()), 2 & e)) {
          const e = s.gd();
          s.zc(1), s.Fd(e.header);
        }
      }
      function Mt(e, t) {}
      function Pt(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "div", 4),
            s.Cd(1, Mt, 0, 0, "ng-template", 5),
            s.Rc(2, "button", 6),
            s.cd("click", function () {
              s.ud(e);
              return s.gd().hide();
            }),
            s.Rc(3, "span", 7),
            s.Ed(4, "\xd7"),
            s.Qc(),
            s.Qc(),
            s.Qc();
        }
        if (2 & e) {
          const e = s.gd(),
            t = s.td(1);
          s.zc(1), s.ld("ngTemplateOutlet", e.contentHeaderTpl || t);
        }
      }
      function Rt(e, t) {
        if ((1 & e && (s.Rc(0, "span"), s.Ed(1), s.Qc()), 2 & e)) {
          const e = s.gd().$implicit,
            t = s.gd();
          s.Bc(t.highlightClass), s.zc(1), s.Fd(e);
        }
      }
      function jt(e, t) {
        if ((1 & e && s.Ed(0), 2 & e)) {
          const e = s.gd().$implicit;
          s.Fd(e);
        }
      }
      function Nt(e, t) {
        if (
          (1 & e &&
            (s.Cd(0, Rt, 2, 3, "span", 1),
            s.Cd(1, jt, 1, 1, "ng-template", null, 2, s.Dd)),
          2 & e)
        ) {
          const e = t.odd,
            n = s.td(2);
          s.ld("ngIf", e)("ngIfElse", n);
        }
      }
      function Ft(e, t) {
        if ((1 & e && s.Nc(0, "ngb-highlight", 2), 2 & e)) {
          const e = t.result,
            n = t.term,
            i = t.formatter;
          s.ld("result", i(e))("term", n);
        }
      }
      function Lt(e, t) {}
      const Vt = function (e, t, n) {
        return { result: e, term: t, formatter: n };
      };
      function Bt(e, t) {
        if (1 & e) {
          const e = s.Sc();
          s.Rc(0, "button", 3),
            s.cd("mouseenter", function () {
              s.ud(e);
              const n = t.index;
              return s.gd().markActive(n);
            })("click", function () {
              s.ud(e);
              const n = t.$implicit;
              return s.gd().select(n);
            }),
            s.Cd(1, Lt, 0, 0, "ng-template", 4),
            s.Qc();
        }
        if (2 & e) {
          const e = t.$implicit,
            n = t.index,
            i = s.gd(),
            r = s.td(1);
          s.Ec("active", n === i.activeIdx),
            s.ld("id", i.id + "-" + n),
            s.zc(1),
            s.ld("ngTemplateOutlet", i.resultTemplate || r)(
              "ngTemplateOutletContext",
              s.rd(5, Vt, e, i.term, i.formatter)
            );
        }
      }
      function zt(e) {
        return parseInt("" + e, 10);
      }
      function Ht(e) {
        return null != e ? "" + e : "";
      }
      function Gt(e, t, n = 0) {
        return Math.max(Math.min(e, t), n);
      }
      function Ut(e) {
        return "string" == typeof e;
      }
      function $t(e) {
        return !isNaN(zt(e));
      }
      function qt(e) {
        return "number" == typeof e && isFinite(e) && Math.floor(e) === e;
      }
      function Wt(e) {
        return null != e;
      }
      function Yt(e) {
        return $t(e) ? ("0" + e).slice(-2) : "";
      }
      function Qt(e, t) {
        return (
          e &&
          e.className &&
          e.className.split &&
          e.className.split(/\s+/).indexOf(t) >= 0
        );
      }
      function Kt(e) {
        return (e || document.body).offsetHeight;
      }
      "undefined" == typeof Element ||
        Element.prototype.closest ||
        (Element.prototype.matches ||
          (Element.prototype.matches =
            Element.prototype.msMatchesSelector ||
            Element.prototype.webkitMatchesSelector),
        (Element.prototype.closest = function (e) {
          let t = this;
          if (!document.documentElement.contains(t)) return null;
          do {
            if (t.matches(e)) return t;
            t = t.parentElement || t.parentNode;
          } while (null !== t && 1 === t.nodeType);
          return null;
        }));
      const Jt = { animation: !0, transitionTimerDelayMs: 5 };
      class Xt {
        constructor() {
          this.animation = Jt.animation;
        }
      }
      (Xt.ɵfac = function (e) {
        return new (e || Xt)();
      }),
        (Xt.ɵprov = Object(s.Ic)({
          factory: function () {
            return new Xt();
          },
          token: Xt,
          providedIn: "root",
        }));
      class Zt {
        constructor(e) {
          (this.closeOthers = !1), (this.animation = e.animation);
        }
      }
      (Zt.ɵfac = function (e) {
        return new (e || Zt)(s.Yc(Xt));
      }),
        (Zt.ɵprov = Object(s.Ic)({
          factory: function () {
            return new Zt(Object(s.Yc)(Xt));
          },
          token: Zt,
          providedIn: "root",
        })),
        (Zt.ctorParameters = () => [{ type: Xt }]);
      const en = () => {},
        { transitionTimerDelayMs: tn } = Jt,
        nn = new Map(),
        sn = (e, t, n) => {
          let s = n.context || {};
          const i = nn.get(e);
          if (i)
            switch (n.runningTransition) {
              case "continue":
                return r.a;
              case "stop":
                i.transition$.complete(),
                  (s = Object.assign(i.context, s)),
                  nn.delete(e);
            }
          Kt(e);
          const u = t(e, s) || en;
          if (
            !n.animation ||
            "none" === window.getComputedStyle(e).transitionProperty
          )
            return u(), Object(o.a)(void 0);
          const d = new a.a(),
            h = d.pipe(
              (function (...e) {
                return (t) => Object(M.a)(t, Object(o.a)(...e));
              })(!0)
            );
          nn.set(e, { transition$: d, context: s });
          const p = (function (e) {
              const { transitionDelay: t, transitionDuration: n } =
                window.getComputedStyle(e);
              return 1e3 * (parseFloat(t) + parseFloat(n));
            })(e),
            f = Object(l.a)(e, "transitionend").pipe(
              Object(P.a)(h),
              Object(R.a)(({ target: t }) => t === e)
            );
          return (
            m(Object(c.a)(p + tn).pipe(Object(P.a)(h)), f)
              .pipe(Object(P.a)(h))
              .subscribe(() => {
                nn.delete(e), u(), d.next(), d.complete();
              }),
            d.asObservable()
          );
        };
      const rn = (e, t) => {
        let { direction: n, maxHeight: s } = t;
        const { classList: i } = e;
        return (
          s ||
            ((s = (function (e) {
              if ("undefined" == typeof navigator) return "0px";
              const { classList: t } = e,
                n = t.contains("show");
              n || t.add("show"), (e.style.height = "");
              const s = e.getBoundingClientRect().height + "px";
              return n || t.remove("show"), s;
            })(e)),
            (t.maxHeight = s),
            (e.style.height = "show" !== n ? s : "0px"),
            i.remove("collapse"),
            i.remove("collapsing"),
            i.remove("show"),
            Kt(e),
            i.add("collapsing")),
          (e.style.height = "show" === n ? s : "0px"),
          () => {
            i.remove("collapsing"),
              i.add("collapse"),
              "show" === n ? i.add("show") : i.remove("show"),
              (e.style.height = "");
          }
        );
      };
      let on = 0;
      class an {
        constructor(e) {
          this.templateRef = e;
        }
      }
      (an.ɵfac = function (e) {
        return new (e || an)(s.Mc(s.ib));
      }),
        (an.ɵdir = s.Hc({
          type: an,
          selectors: [["ng-template", "ngbPanelHeader", ""]],
        })),
        (an.ctorParameters = () => [{ type: s.ib }]);
      class ln {
        constructor(e) {
          this.templateRef = e;
        }
      }
      (ln.ɵfac = function (e) {
        return new (e || ln)(s.Mc(s.ib));
      }),
        (ln.ɵdir = s.Hc({
          type: ln,
          selectors: [["ng-template", "ngbPanelTitle", ""]],
        })),
        (ln.ctorParameters = () => [{ type: s.ib }]);
      class cn {
        constructor(e) {
          this.templateRef = e;
        }
      }
      (cn.ɵfac = function (e) {
        return new (e || cn)(s.Mc(s.ib));
      }),
        (cn.ɵdir = s.Hc({
          type: cn,
          selectors: [["ng-template", "ngbPanelContent", ""]],
        })),
        (cn.ctorParameters = () => [{ type: s.ib }]);
      class un {
        constructor() {
          (this.disabled = !1),
            (this.id = "ngb-panel-" + on++),
            (this.isOpen = !1),
            (this.initClassDone = !1),
            (this.transitionRunning = !1),
            (this.shown = new s.x()),
            (this.hidden = new s.x());
        }
        ngAfterContentChecked() {
          (this.titleTpl = this.titleTpls.first),
            (this.headerTpl = this.headerTpls.first),
            (this.contentTpl = this.contentTpls.first);
        }
      }
      (un.ɵfac = function (e) {
        return new (e || un)();
      }),
        (un.ɵdir = s.Hc({
          type: un,
          selectors: [["ngb-panel"]],
          contentQueries: function (e, t, n) {
            if (
              (1 & e && (s.Fc(n, ln, !1), s.Fc(n, an, !1), s.Fc(n, cn, !1)),
              2 & e)
            ) {
              let e;
              s.sd((e = s.dd())) && (t.titleTpls = e),
                s.sd((e = s.dd())) && (t.headerTpls = e),
                s.sd((e = s.dd())) && (t.contentTpls = e);
            }
          },
          inputs: {
            disabled: "disabled",
            id: "id",
            title: "title",
            type: "type",
            cardClass: "cardClass",
          },
          outputs: { shown: "shown", hidden: "hidden" },
        })),
        (un.propDecorators = {
          disabled: [{ type: s.G }],
          id: [{ type: s.G }],
          title: [{ type: s.G }],
          type: [{ type: s.G }],
          cardClass: [{ type: s.G }],
          shown: [{ type: s.S }],
          hidden: [{ type: s.S }],
          titleTpls: [{ type: s.s, args: [ln, { descendants: !1 }] }],
          headerTpls: [{ type: s.s, args: [an, { descendants: !1 }] }],
          contentTpls: [{ type: s.s, args: [cn, { descendants: !1 }] }],
        });
      class dn {
        constructor(e, t, n, i) {
          (this._element = t),
            (this._ngZone = n),
            (this._changeDetector = i),
            (this.activeIds = []),
            (this.destroyOnHide = !0),
            (this.panelChange = new s.x()),
            (this.shown = new s.x()),
            (this.hidden = new s.x()),
            (this.animation = e.animation),
            (this.type = e.type),
            (this.closeOtherPanels = e.closeOthers);
        }
        isExpanded(e) {
          return this.activeIds.indexOf(e) > -1;
        }
        expand(e) {
          this._changeOpenState(this._findPanelById(e), !0);
        }
        expandAll() {
          this.closeOtherPanels
            ? 0 === this.activeIds.length &&
              this.panels.length &&
              this._changeOpenState(this.panels.first, !0)
            : this.panels.forEach((e) => this._changeOpenState(e, !0));
        }
        collapse(e) {
          this._changeOpenState(this._findPanelById(e), !1);
        }
        collapseAll() {
          this.panels.forEach((e) => {
            this._changeOpenState(e, !1);
          });
        }
        toggle(e) {
          const t = this._findPanelById(e);
          t && this._changeOpenState(t, !t.isOpen);
        }
        ngAfterContentChecked() {
          Ut(this.activeIds) &&
            (this.activeIds = this.activeIds.split(/\s*,\s*/)),
            this.panels.forEach((e) => {
              e.isOpen = !e.disabled && this.activeIds.indexOf(e.id) > -1;
            }),
            this.activeIds.length > 1 &&
              this.closeOtherPanels &&
              (this._closeOthers(this.activeIds[0], !1),
              this._updateActiveIds()),
            this._ngZone.onStable.pipe(Object(j.a)(1)).subscribe(() => {
              this.panels.forEach((e) => {
                const t = this._getPanelElement(e.id);
                if (t) {
                  if (!e.initClassDone) {
                    e.initClassDone = !0;
                    const { classList: n } = t;
                    n.add("collapse"), e.isOpen && n.add("show");
                  }
                } else e.initClassDone = !1;
              });
            });
        }
        _changeOpenState(e, t) {
          if (null != e && !e.disabled && e.isOpen !== t) {
            let n = !1;
            this.panelChange.emit({
              panelId: e.id,
              nextState: t,
              preventDefault: () => {
                n = !0;
              },
            }),
              n ||
                ((e.isOpen = t),
                (e.transitionRunning = !0),
                t && this.closeOtherPanels && this._closeOthers(e.id),
                this._updateActiveIds(),
                this._runTransitions(this.animation));
          }
        }
        _closeOthers(e, t = !0) {
          this.panels.forEach((n) => {
            n.id !== e &&
              n.isOpen &&
              ((n.isOpen = !1), (n.transitionRunning = t));
          });
        }
        _findPanelById(e) {
          return this.panels.find((t) => t.id === e) || null;
        }
        _updateActiveIds() {
          this.activeIds = this.panels
            .filter((e) => e.isOpen && !e.disabled)
            .map((e) => e.id);
        }
        _runTransitions(e, t = !0) {
          this._changeDetector.detectChanges(),
            this.panels.forEach((n) => {
              if (n.transitionRunning) {
                const s = this._getPanelElement(n.id);
                sn(s, rn, {
                  animation: e,
                  runningTransition: "stop",
                  context: { direction: n.isOpen ? "show" : "hide" },
                }).subscribe(() => {
                  if (((n.transitionRunning = !1), t)) {
                    const { id: e } = n;
                    n.isOpen
                      ? (n.shown.emit(), this.shown.emit(e))
                      : (n.hidden.emit(), this.hidden.emit(e));
                  }
                });
              }
            });
        }
        _getPanelElement(e) {
          return this._element.nativeElement.querySelector("#" + e);
        }
      }
      (dn.ɵfac = function (e) {
        return new (e || dn)(s.Mc(Zt), s.Mc(s.v), s.Mc(s.Q), s.Mc(s.k));
      }),
        (dn.ɵcmp = s.Gc({
          type: dn,
          selectors: [["ngb-accordion"]],
          contentQueries: function (e, t, n) {
            if ((1 & e && s.Fc(n, un, !1), 2 & e)) {
              let e;
              s.sd((e = s.dd())) && (t.panels = e);
            }
          },
          hostAttrs: ["role", "tablist", 1, "accordion"],
          hostVars: 1,
          hostBindings: function (e, t) {
            2 & e && s.Ac("aria-multiselectable", !t.closeOtherPanels);
          },
          inputs: {
            activeIds: "activeIds",
            destroyOnHide: "destroyOnHide",
            animation: "animation",
            type: "type",
            closeOtherPanels: ["closeOthers", "closeOtherPanels"],
          },
          outputs: {
            panelChange: "panelChange",
            shown: "shown",
            hidden: "hidden",
          },
          exportAs: ["ngbAccordion"],
          decls: 3,
          vars: 1,
          consts: [
            ["ngbPanelHeader", ""],
            ["t", ""],
            ["ngFor", "", 3, "ngForOf"],
            [1, "btn", "btn-link", 3, "ngbPanelToggle"],
            [3, "ngTemplateOutlet"],
            ["role", "tab", 3, "id"],
            [3, "ngTemplateOutlet", "ngTemplateOutletContext"],
            ["role", "tabpanel", 3, "id", 4, "ngIf"],
            ["role", "tabpanel", 3, "id"],
            [1, "card-body"],
          ],
          template: function (e, t) {
            1 & e &&
              (s.Cd(0, J, 3, 3, "ng-template", 0, 1, s.Dd),
              s.Cd(2, ne, 4, 11, "ng-template", 2)),
              2 & e && (s.zc(2), s.ld("ngForOf", t.panels));
          },
          directives: function () {
            return [an, i.j, hn, i.p, i.k];
          },
          encapsulation: 2,
        })),
        (dn.ctorParameters = () => [
          { type: Zt },
          { type: s.v },
          { type: s.Q },
          { type: s.k },
        ]),
        (dn.propDecorators = {
          panels: [{ type: s.s, args: [un] }],
          animation: [{ type: s.G }],
          activeIds: [{ type: s.G }],
          closeOtherPanels: [{ type: s.G, args: ["closeOthers"] }],
          destroyOnHide: [{ type: s.G }],
          type: [{ type: s.G }],
          panelChange: [{ type: s.S }],
          shown: [{ type: s.S }],
          hidden: [{ type: s.S }],
        });
      class hn {
        constructor(e, t) {
          (this.accordion = e), (this.panel = t);
        }
        set ngbPanelToggle(e) {
          e && (this.panel = e);
        }
      }
      (hn.ɵfac = function (e) {
        return new (e || hn)(s.Mc(dn), s.Mc(un, 9));
      }),
        (hn.ɵdir = s.Hc({
          type: hn,
          selectors: [["button", "ngbPanelToggle", ""]],
          hostAttrs: ["type", "button"],
          hostVars: 5,
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("click", function () {
                return t.accordion.toggle(t.panel.id);
              }),
              2 & e &&
                (s.Uc("disabled", t.panel.disabled),
                s.Ac("aria-expanded", t.panel.isOpen)(
                  "aria-controls",
                  t.panel.id
                ),
                s.Ec("collapsed", !t.panel.isOpen));
          },
          inputs: { ngbPanelToggle: "ngbPanelToggle" },
        })),
        (hn.ctorParameters = () => [
          { type: dn },
          { type: un, decorators: [{ type: s.R }, { type: s.y }] },
        ]),
        (hn.propDecorators = { ngbPanelToggle: [{ type: s.G }] });
      class pn {}
      (pn.ɵmod = s.Kc({ type: pn })),
        (pn.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || pn)();
          },
          imports: [[i.b]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(pn, {
            declarations: function () {
              return [dn, un, ln, cn, an, hn];
            },
            imports: function () {
              return [i.b];
            },
            exports: function () {
              return [dn, un, ln, cn, an, hn];
            },
          });
      class mn {
        constructor(e) {
          (this.dismissible = !0),
            (this.type = "warning"),
            (this.animation = e.animation);
        }
      }
      (mn.ɵfac = function (e) {
        return new (e || mn)(s.Yc(Xt));
      }),
        (mn.ɵprov = Object(s.Ic)({
          factory: function () {
            return new mn(Object(s.Yc)(Xt));
          },
          token: mn,
          providedIn: "root",
        })),
        (mn.ctorParameters = () => [{ type: Xt }]);
      const fn = ({ classList: e }) => {
        e.remove("show");
      };
      class gn {
        constructor(e, t, n) {
          (this._renderer = t),
            (this._element = n),
            (this.closed = new s.x()),
            (this.dismissible = e.dismissible),
            (this.type = e.type),
            (this.animation = e.animation);
        }
        close() {
          const e = sn(this._element.nativeElement, fn, {
            animation: this.animation,
            runningTransition: "continue",
          });
          return e.subscribe(() => this.closed.emit()), e;
        }
        ngOnChanges(e) {
          const t = e.type;
          t &&
            !t.firstChange &&
            (this._renderer.removeClass(
              this._element.nativeElement,
              "alert-" + t.previousValue
            ),
            this._renderer.addClass(
              this._element.nativeElement,
              "alert-" + t.currentValue
            ));
        }
        ngOnInit() {
          this._renderer.addClass(
            this._element.nativeElement,
            "alert-" + this.type
          );
        }
      }
      (gn.ɵfac = function (e) {
        return new (e || gn)(s.Mc(mn), s.Mc(s.Y), s.Mc(s.v));
      }),
        (gn.ɵcmp = s.Gc({
          type: gn,
          selectors: [["ngb-alert"]],
          hostAttrs: ["role", "alert", 1, "alert", "show"],
          hostVars: 4,
          hostBindings: function (e, t) {
            2 & e &&
              s.Ec("fade", t.animation)("alert-dismissible", t.dismissible);
          },
          inputs: {
            dismissible: "dismissible",
            type: "type",
            animation: "animation",
          },
          outputs: { closed: "closed" },
          exportAs: ["ngbAlert"],
          features: [s.xc],
          ngContentSelectors: ie,
          decls: 2,
          vars: 1,
          consts: function () {
            let e, t;
            return (
              (e = $localize`:@@ngb.alert.close␟f4e529ae5ffd73001d1ff4bbdeeb0a72e342e5c8␟7819314041543176992:Close`),
              (t = $localize`:@@ngb.alert.close␟f4e529ae5ffd73001d1ff4bbdeeb0a72e342e5c8␟7819314041543176992:Close`),
              [
                [
                  "type",
                  "button",
                  "class",
                  "close",
                  "aria-label",
                  e,
                  3,
                  "click",
                  4,
                  "ngIf",
                ],
                ["type", "button", "aria-label", t, 1, "close", 3, "click"],
                ["aria-hidden", "true"],
              ]
            );
          },
          template: function (e, t) {
            1 & e && (s.kd(), s.jd(0), s.Cd(1, se, 3, 0, "button", 0)),
              2 & e && (s.zc(1), s.ld("ngIf", t.dismissible));
          },
          directives: [i.k],
          styles: ["ngb-alert{display:block}"],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (gn.ctorParameters = () => [
          { type: mn },
          { type: s.Y },
          { type: s.v },
        ]),
        (gn.propDecorators = {
          animation: [{ type: s.G }],
          dismissible: [{ type: s.G }],
          type: [{ type: s.G }],
          closed: [{ type: s.S }],
        });
      class yn {}
      (yn.ɵmod = s.Kc({ type: yn })),
        (yn.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || yn)();
          },
          imports: [[i.b]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(yn, {
            declarations: function () {
              return [gn];
            },
            imports: function () {
              return [i.b];
            },
            exports: function () {
              return [gn];
            },
          });
      class vn {}
      (vn.ɵfac = function (e) {
        return new (e || vn)();
      }),
        (vn.ɵdir = s.Hc({
          type: vn,
          selectors: [["", "ngbButtonLabel", ""]],
          hostVars: 8,
          hostBindings: function (e, t) {
            2 & e &&
              s.Ec("btn", !0)("active", t.active)("disabled", t.disabled)(
                "focus",
                t.focused
              );
          },
        }));
      const bn = {
        provide: Q.h,
        useExisting: Object(s.sb)(() => xn),
        multi: !0,
      };
      class xn {
        constructor(e, t) {
          (this._label = e),
            (this._cd = t),
            (this.disabled = !1),
            (this.valueChecked = !0),
            (this.valueUnChecked = !1),
            (this.onChange = (e) => {}),
            (this.onTouched = () => {});
        }
        set focused(e) {
          (this._label.focused = e), e || this.onTouched();
        }
        onInputChange(e) {
          const t = e.target.checked ? this.valueChecked : this.valueUnChecked;
          this.onChange(t), this.onTouched(), this.writeValue(t);
        }
        registerOnChange(e) {
          this.onChange = e;
        }
        registerOnTouched(e) {
          this.onTouched = e;
        }
        setDisabledState(e) {
          (this.disabled = e), (this._label.disabled = e);
        }
        writeValue(e) {
          (this.checked = e === this.valueChecked),
            (this._label.active = this.checked),
            this._cd.markForCheck();
        }
      }
      (xn.ɵfac = function (e) {
        return new (e || xn)(s.Mc(vn), s.Mc(s.k));
      }),
        (xn.ɵdir = s.Hc({
          type: xn,
          selectors: [["", "ngbButton", "", "type", "checkbox"]],
          hostVars: 2,
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("change", function (e) {
                return t.onInputChange(e);
              })("focus", function () {
                return (t.focused = !0);
              })("blur", function () {
                return (t.focused = !1);
              }),
              2 & e && s.Uc("checked", t.checked)("disabled", t.disabled);
          },
          inputs: {
            disabled: "disabled",
            valueChecked: "valueChecked",
            valueUnChecked: "valueUnChecked",
          },
          features: [s.yc([bn])],
        })),
        (xn.ctorParameters = () => [{ type: vn }, { type: s.k }]),
        (xn.propDecorators = {
          disabled: [{ type: s.G }],
          valueChecked: [{ type: s.G }],
          valueUnChecked: [{ type: s.G }],
        });
      const _n = {
        provide: Q.h,
        useExisting: Object(s.sb)(() => Cn),
        multi: !0,
      };
      let wn = 0;
      class Cn {
        constructor() {
          (this._radios = new Set()),
            (this._value = null),
            (this.name = "ngb-radio-" + wn++),
            (this.onChange = (e) => {}),
            (this.onTouched = () => {});
        }
        get disabled() {
          return this._disabled;
        }
        set disabled(e) {
          this.setDisabledState(e);
        }
        onRadioChange(e) {
          this.writeValue(e.value), this.onChange(e.value);
        }
        onRadioValueUpdate() {
          this._updateRadiosValue();
        }
        register(e) {
          this._radios.add(e);
        }
        registerOnChange(e) {
          this.onChange = e;
        }
        registerOnTouched(e) {
          this.onTouched = e;
        }
        setDisabledState(e) {
          (this._disabled = e), this._updateRadiosDisabled();
        }
        unregister(e) {
          this._radios.delete(e);
        }
        writeValue(e) {
          (this._value = e), this._updateRadiosValue();
        }
        _updateRadiosValue() {
          this._radios.forEach((e) => e.updateValue(this._value));
        }
        _updateRadiosDisabled() {
          this._radios.forEach((e) => e.updateDisabled());
        }
      }
      (Cn.ɵfac = function (e) {
        return new (e || Cn)();
      }),
        (Cn.ɵdir = s.Hc({
          type: Cn,
          selectors: [["", "ngbRadioGroup", ""]],
          hostAttrs: ["role", "radiogroup"],
          inputs: { name: "name" },
          features: [s.yc([_n])],
        })),
        (Cn.propDecorators = { name: [{ type: s.G }] });
      class Sn {
        constructor(e, t, n, s, i) {
          (this._group = e),
            (this._label = t),
            (this._renderer = n),
            (this._element = s),
            (this._cd = i),
            (this._value = null),
            this._group.register(this),
            this.updateDisabled();
        }
        set value(e) {
          this._value = e;
          const t = e ? e.toString() : "";
          this._renderer.setProperty(this._element.nativeElement, "value", t),
            this._group.onRadioValueUpdate();
        }
        set disabled(e) {
          (this._disabled = !1 !== e), this.updateDisabled();
        }
        set focused(e) {
          this._label && (this._label.focused = e),
            e || this._group.onTouched();
        }
        get checked() {
          return this._checked;
        }
        get disabled() {
          return this._group.disabled || this._disabled;
        }
        get value() {
          return this._value;
        }
        get nameAttr() {
          return this.name || this._group.name;
        }
        ngOnDestroy() {
          this._group.unregister(this);
        }
        onChange() {
          this._group.onRadioChange(this);
        }
        updateValue(e) {
          this.value !== e && this._cd.markForCheck(),
            (this._checked = this.value === e),
            (this._label.active = this._checked);
        }
        updateDisabled() {
          this._label.disabled = this.disabled;
        }
      }
      (Sn.ɵfac = function (e) {
        return new (e || Sn)(
          s.Mc(Cn),
          s.Mc(vn),
          s.Mc(s.Y),
          s.Mc(s.v),
          s.Mc(s.k)
        );
      }),
        (Sn.ɵdir = s.Hc({
          type: Sn,
          selectors: [["", "ngbButton", "", "type", "radio"]],
          hostVars: 3,
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("change", function () {
                return t.onChange();
              })("focus", function () {
                return (t.focused = !0);
              })("blur", function () {
                return (t.focused = !1);
              }),
              2 & e &&
                s.Uc("checked", t.checked)("disabled", t.disabled)(
                  "name",
                  t.nameAttr
                );
          },
          inputs: { value: "value", disabled: "disabled", name: "name" },
        })),
        (Sn.ctorParameters = () => [
          { type: Cn },
          { type: vn },
          { type: s.Y },
          { type: s.v },
          { type: s.k },
        ]),
        (Sn.propDecorators = {
          name: [{ type: s.G }],
          value: [{ type: s.G, args: ["value"] }],
          disabled: [{ type: s.G, args: ["disabled"] }],
        });
      class En {}
      (En.ɵmod = s.Kc({ type: En })),
        (En.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || En)();
          },
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(En, {
            declarations: [vn, xn, Cn, Sn],
            exports: [vn, xn, Cn, Sn],
          });
      class kn {
        constructor(e) {
          (this.interval = 5e3),
            (this.wrap = !0),
            (this.keyboard = !0),
            (this.pauseOnHover = !0),
            (this.pauseOnFocus = !0),
            (this.showNavigationArrows = !0),
            (this.showNavigationIndicators = !0),
            (this.animation = e.animation);
        }
      }
      var On;
      (kn.ɵfac = function (e) {
        return new (e || kn)(s.Yc(Xt));
      }),
        (kn.ɵprov = Object(s.Ic)({
          factory: function () {
            return new kn(Object(s.Yc)(Xt));
          },
          token: kn,
          providedIn: "root",
        })),
        (kn.ctorParameters = () => [{ type: Xt }]),
        (function (e) {
          (e.LEFT = "left"), (e.RIGHT = "right");
        })(On || (On = {}));
      const In = ({ classList: e }) =>
          e.contains("carousel-item-left") || e.contains("carousel-item-right"),
        Tn = ({ classList: e }) => {
          e.remove("carousel-item-left"), e.remove("carousel-item-right");
        },
        An = ({ classList: e }) => {
          Tn({ classList: e }),
            e.remove("carousel-item-prev"),
            e.remove("carousel-item-next");
        },
        Dn = (e, { direction: t }) => {
          const { classList: n } = e;
          return (
            In(e)
              ? Tn(e)
              : (n.add("carousel-item-" + (t === On.LEFT ? "next" : "prev")),
                Kt(e),
                n.add("carousel-item-" + t)),
            () => {
              An(e), n.add("active");
            }
          );
        },
        Mn = (e, { direction: t }) => {
          const { classList: n } = e;
          return (
            In(e) ? Tn(e) : n.add("carousel-item-" + t),
            () => {
              An(e), n.remove("active");
            }
          );
        };
      let Pn = 0;
      class Rn {
        constructor(e) {
          (this.tplRef = e),
            (this.id = "ngb-slide-" + Pn++),
            (this.slid = new s.x());
        }
      }
      (Rn.ɵfac = function (e) {
        return new (e || Rn)(s.Mc(s.ib));
      }),
        (Rn.ɵdir = s.Hc({
          type: Rn,
          selectors: [["ng-template", "ngbSlide", ""]],
          inputs: { id: "id" },
          outputs: { slid: "slid" },
        })),
        (Rn.ctorParameters = () => [{ type: s.ib }]),
        (Rn.propDecorators = { id: [{ type: s.G }], slid: [{ type: s.S }] });
      class jn {
        constructor(e, t, n, i, r) {
          (this._platformId = t),
            (this._ngZone = n),
            (this._cd = i),
            (this._container = r),
            (this.NgbSlideEventSource = Nn),
            (this._destroy$ = new a.a()),
            (this._interval$ = new y.a(0)),
            (this._mouseHover$ = new y.a(!1)),
            (this._focused$ = new y.a(!1)),
            (this._pauseOnHover$ = new y.a(!1)),
            (this._pauseOnFocus$ = new y.a(!1)),
            (this._pause$ = new y.a(!1)),
            (this._wrap$ = new y.a(!1)),
            (this.slide = new s.x()),
            (this.slid = new s.x()),
            (this._transitionIds = null),
            (this.animation = e.animation),
            (this.interval = e.interval),
            (this.wrap = e.wrap),
            (this.keyboard = e.keyboard),
            (this.pauseOnHover = e.pauseOnHover),
            (this.pauseOnFocus = e.pauseOnFocus),
            (this.showNavigationArrows = e.showNavigationArrows),
            (this.showNavigationIndicators = e.showNavigationIndicators);
        }
        set interval(e) {
          this._interval$.next(e);
        }
        get interval() {
          return this._interval$.value;
        }
        set wrap(e) {
          this._wrap$.next(e);
        }
        get wrap() {
          return this._wrap$.value;
        }
        set pauseOnHover(e) {
          this._pauseOnHover$.next(e);
        }
        get pauseOnHover() {
          return this._pauseOnHover$.value;
        }
        set pauseOnFocus(e) {
          this._pauseOnFocus$.next(e);
        }
        get pauseOnFocus() {
          return this._pauseOnFocus$.value;
        }
        set mouseHover(e) {
          this._mouseHover$.next(e);
        }
        get mouseHover() {
          return this._mouseHover$.value;
        }
        set focused(e) {
          this._focused$.next(e);
        }
        get focused() {
          return this._focused$.value;
        }
        arrowLeft() {
          this.focus(), this.prev(Nn.ARROW_LEFT);
        }
        arrowRight() {
          this.focus(), this.next(Nn.ARROW_RIGHT);
        }
        ngAfterContentInit() {
          Object(i.z)(this._platformId) &&
            this._ngZone.runOutsideAngular(() => {
              const e = Object(v.b)([
                this.slide.pipe(
                  Object(N.a)((e) => e.current),
                  Object(F.a)(this.activeId)
                ),
                this._wrap$,
                this.slides.changes.pipe(Object(F.a)(null)),
              ]).pipe(
                Object(N.a)(([e, t]) => {
                  const n = this.slides.toArray(),
                    s = this._getSlideIdxById(e);
                  return t ? n.length > 1 : s < n.length - 1;
                }),
                Object(L.a)()
              );
              Object(v.b)([
                this._pause$,
                this._pauseOnHover$,
                this._mouseHover$,
                this._pauseOnFocus$,
                this._focused$,
                this._interval$,
                e,
              ])
                .pipe(
                  Object(N.a)(([e, t, n, s, i, r, o]) =>
                    e || (t && n) || (s && i) || !o ? 0 : r
                  ),
                  Object(L.a)(),
                  Object(V.a)((e) => (e > 0 ? Object(c.a)(e, e) : _)),
                  Object(P.a)(this._destroy$)
                )
                .subscribe(() => this._ngZone.run(() => this.next(Nn.TIMER)));
            }),
            this.slides.changes
              .pipe(Object(P.a)(this._destroy$))
              .subscribe(() => this._cd.markForCheck());
        }
        ngAfterContentChecked() {
          let e = this._getSlideById(this.activeId);
          this.activeId = e
            ? e.id
            : this.slides.length
            ? this.slides.first.id
            : "";
        }
        ngAfterViewInit() {
          if (this.activeId) {
            const e = this._getSlideElement(this.activeId);
            e && e.classList.add("active");
          }
        }
        ngOnDestroy() {
          this._destroy$.next();
        }
        select(e, t) {
          this._cycleToSelected(
            e,
            this._getSlideEventDirection(this.activeId, e),
            t
          );
        }
        prev(e) {
          this._cycleToSelected(this._getPrevSlide(this.activeId), On.RIGHT, e);
        }
        next(e) {
          this._cycleToSelected(this._getNextSlide(this.activeId), On.LEFT, e);
        }
        pause() {
          this._pause$.next(!0);
        }
        cycle() {
          this._pause$.next(!1);
        }
        focus() {
          this._container.nativeElement.focus();
        }
        _cycleToSelected(e, t, n) {
          const s = this._transitionIds;
          if (s && (s[0] !== e || s[1] !== this.activeId)) return;
          let i = this._getSlideById(e);
          if (i && i.id !== this.activeId) {
            (this._transitionIds = [this.activeId, e]),
              this.slide.emit({
                prev: this.activeId,
                current: i.id,
                direction: t,
                paused: this._pause$.value,
                source: n,
              });
            const s = {
                animation: this.animation,
                runningTransition: "stop",
                context: { direction: t },
              },
              r = [],
              o = this._getSlideById(this.activeId);
            if (o) {
              const e = sn(this._getSlideElement(o.id), Mn, s);
              e.subscribe(() => {
                o.slid.emit({ isShown: !1, direction: t, source: n });
              }),
                r.push(e);
            }
            const a = this.activeId;
            this.activeId = i.id;
            const l = this._getSlideById(this.activeId),
              c = sn(this._getSlideElement(i.id), Dn, s);
            c.subscribe(() => {
              null == l ||
                l.slid.emit({ isShown: !0, direction: t, source: n });
            }),
              r.push(c),
              E(...r)
                .pipe(Object(j.a)(1))
                .subscribe(() => {
                  (this._transitionIds = null),
                    this.slid.emit({
                      prev: a,
                      current: i.id,
                      direction: t,
                      paused: this._pause$.value,
                      source: n,
                    });
                });
          }
          this._cd.markForCheck();
        }
        _getSlideEventDirection(e, t) {
          return this._getSlideIdxById(e) > this._getSlideIdxById(t)
            ? On.RIGHT
            : On.LEFT;
        }
        _getSlideById(e) {
          return this.slides.find((t) => t.id === e) || null;
        }
        _getSlideIdxById(e) {
          const t = this._getSlideById(e);
          return null != t ? this.slides.toArray().indexOf(t) : -1;
        }
        _getNextSlide(e) {
          const t = this.slides.toArray(),
            n = this._getSlideIdxById(e);
          return n === t.length - 1
            ? this.wrap
              ? t[0].id
              : t[t.length - 1].id
            : t[n + 1].id;
        }
        _getPrevSlide(e) {
          const t = this.slides.toArray(),
            n = this._getSlideIdxById(e);
          return 0 === n
            ? this.wrap
              ? t[t.length - 1].id
              : t[0].id
            : t[n - 1].id;
        }
        _getSlideElement(e) {
          return this._container.nativeElement.querySelector("#slide-" + e);
        }
      }
      var Nn;
      (jn.ɵfac = function (e) {
        return new (e || jn)(
          s.Mc(kn),
          s.Mc(s.U),
          s.Mc(s.Q),
          s.Mc(s.k),
          s.Mc(s.v)
        );
      }),
        (jn.ɵcmp = s.Gc({
          type: jn,
          selectors: [["ngb-carousel"]],
          contentQueries: function (e, t, n) {
            if ((1 & e && s.Fc(n, Rn, !1), 2 & e)) {
              let e;
              s.sd((e = s.dd())) && (t.slides = e);
            }
          },
          hostAttrs: ["tabIndex", "0", 1, "carousel", "slide"],
          hostVars: 3,
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("keydown.arrowLeft", function () {
                return t.keyboard && t.arrowLeft();
              })("keydown.arrowRight", function () {
                return t.keyboard && t.arrowRight();
              })("mouseenter", function () {
                return (t.mouseHover = !0);
              })("mouseleave", function () {
                return (t.mouseHover = !1);
              })("focusin", function () {
                return (t.focused = !0);
              })("focusout", function () {
                return (t.focused = !1);
              }),
              2 & e &&
                (s.Ac("aria-activedescendant", t.activeId),
                s.zd("display", "block"));
          },
          inputs: {
            animation: "animation",
            interval: "interval",
            wrap: "wrap",
            keyboard: "keyboard",
            pauseOnHover: "pauseOnHover",
            pauseOnFocus: "pauseOnFocus",
            showNavigationArrows: "showNavigationArrows",
            showNavigationIndicators: "showNavigationIndicators",
            activeId: "activeId",
          },
          outputs: { slide: "slide", slid: "slid" },
          exportAs: ["ngbCarousel"],
          decls: 6,
          vars: 6,
          consts: function () {
            let e, t, n;
            return (
              (e = $localize`:Currently selected slide number read by screen reader@@ngb.carousel.slide-number␟a65b1b49aa7dd8c4f3004da6a8c2241814dae621␟783273603869937627: Slide ${"\ufffd0\ufffd"}:INTERPOLATION: of ${"\ufffd1\ufffd"}:INTERPOLATION_1: `),
              (t = $localize`:@@ngb.carousel.previous␟680d5c75b7fd8d37961083608b9fcdc4167b4c43␟4452427314943113135:Previous`),
              (n = $localize`:@@ngb.carousel.next␟f732c304c7433e5a83ffcd862c3dce709a0f4982␟3885497195825665706:Next`),
              [
                ["role", "tablist", 1, "carousel-indicators"],
                ["role", "tab", 3, "active", "click", 4, "ngFor", "ngForOf"],
                [1, "carousel-inner"],
                [
                  "class",
                  "carousel-item",
                  "role",
                  "tabpanel",
                  3,
                  "id",
                  4,
                  "ngFor",
                  "ngForOf",
                ],
                [
                  "class",
                  "carousel-control-prev",
                  "role",
                  "button",
                  3,
                  "click",
                  4,
                  "ngIf",
                ],
                [
                  "class",
                  "carousel-control-next",
                  "role",
                  "button",
                  3,
                  "click",
                  4,
                  "ngIf",
                ],
                ["role", "tab", 3, "click"],
                ["role", "tabpanel", 1, "carousel-item", 3, "id"],
                [1, "sr-only"],
                e,
                [3, "ngTemplateOutlet"],
                ["role", "button", 1, "carousel-control-prev", 3, "click"],
                ["aria-hidden", "true", 1, "carousel-control-prev-icon"],
                t,
                ["role", "button", 1, "carousel-control-next", 3, "click"],
                ["aria-hidden", "true", 1, "carousel-control-next-icon"],
                n,
              ]
            );
          },
          template: function (e, t) {
            1 & e &&
              (s.Rc(0, "ol", 0),
              s.Cd(1, re, 1, 5, "li", 1),
              s.Qc(),
              s.Rc(2, "div", 2),
              s.Cd(3, ae, 4, 4, "div", 3),
              s.Qc(),
              s.Cd(4, le, 4, 0, "a", 4),
              s.Cd(5, ce, 4, 0, "a", 5)),
              2 & e &&
                (s.Ec("sr-only", !t.showNavigationIndicators),
                s.zc(1),
                s.ld("ngForOf", t.slides),
                s.zc(2),
                s.ld("ngForOf", t.slides),
                s.zc(1),
                s.ld("ngIf", t.showNavigationArrows),
                s.zc(1),
                s.ld("ngIf", t.showNavigationArrows));
          },
          directives: [i.j, i.k, i.p],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (jn.ctorParameters = () => [
          { type: kn },
          { type: void 0, decorators: [{ type: s.C, args: [s.U] }] },
          { type: s.Q },
          { type: s.k },
          { type: s.v },
        ]),
        (jn.propDecorators = {
          slides: [{ type: s.s, args: [Rn] }],
          animation: [{ type: s.G }],
          activeId: [{ type: s.G }],
          interval: [{ type: s.G }],
          wrap: [{ type: s.G }],
          keyboard: [{ type: s.G }],
          pauseOnHover: [{ type: s.G }],
          pauseOnFocus: [{ type: s.G }],
          showNavigationArrows: [{ type: s.G }],
          showNavigationIndicators: [{ type: s.G }],
          slide: [{ type: s.S }],
          slid: [{ type: s.S }],
        }),
        (function (e) {
          (e.TIMER = "timer"),
            (e.ARROW_LEFT = "arrowLeft"),
            (e.ARROW_RIGHT = "arrowRight"),
            (e.INDICATOR = "indicator");
        })(Nn || (Nn = {}));
      class Fn {}
      (Fn.ɵmod = s.Kc({ type: Fn })),
        (Fn.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || Fn)();
          },
          imports: [[i.b]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(Fn, {
            declarations: function () {
              return [jn, Rn];
            },
            imports: function () {
              return [i.b];
            },
            exports: function () {
              return [jn, Rn];
            },
          });
      class Ln {
        constructor(e) {
          this.animation = e.animation;
        }
      }
      (Ln.ɵfac = function (e) {
        return new (e || Ln)(s.Yc(Xt));
      }),
        (Ln.ɵprov = Object(s.Ic)({
          factory: function () {
            return new Ln(Object(s.Yc)(Xt));
          },
          token: Ln,
          providedIn: "root",
        })),
        (Ln.ctorParameters = () => [{ type: Xt }]);
      class Vn {
        constructor(e, t) {
          (this._element = e),
            (this.animation = !1),
            (this.collapsed = !1),
            (this.ngbCollapseChange = new s.x()),
            (this.shown = new s.x()),
            (this.hidden = new s.x()),
            (this.animation = t.animation);
        }
        ngOnInit() {
          this._element.nativeElement.classList.add("collapse"),
            this._runTransition(this.collapsed, !1, !1);
        }
        ngOnChanges({ collapsed: e }) {
          e.firstChange || this._runTransition(this.collapsed, this.animation);
        }
        toggle(e = this.collapsed) {
          (this.collapsed = !e),
            this.ngbCollapseChange.next(this.collapsed),
            this._runTransition(this.collapsed, this.animation);
        }
        _runTransition(e, t, n = !0) {
          sn(this._element.nativeElement, rn, {
            animation: t,
            runningTransition: "stop",
            context: { direction: e ? "hide" : "show" },
          }).subscribe(() => {
            n && (e ? this.hidden.emit() : this.shown.emit());
          });
        }
      }
      (Vn.ɵfac = function (e) {
        return new (e || Vn)(s.Mc(s.v), s.Mc(Ln));
      }),
        (Vn.ɵdir = s.Hc({
          type: Vn,
          selectors: [["", "ngbCollapse", ""]],
          inputs: {
            animation: "animation",
            collapsed: ["ngbCollapse", "collapsed"],
          },
          outputs: {
            ngbCollapseChange: "ngbCollapseChange",
            shown: "shown",
            hidden: "hidden",
          },
          exportAs: ["ngbCollapse"],
          features: [s.xc],
        })),
        (Vn.ctorParameters = () => [{ type: s.v }, { type: Ln }]),
        (Vn.propDecorators = {
          animation: [{ type: s.G }],
          collapsed: [{ type: s.G, args: ["ngbCollapse"] }],
          ngbCollapseChange: [{ type: s.S }],
          shown: [{ type: s.S }],
          hidden: [{ type: s.S }],
        });
      class Bn {}
      (Bn.ɵmod = s.Kc({ type: Bn })),
        (Bn.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || Bn)();
          },
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(Bn, { declarations: [Vn], exports: [Vn] });
      class zn {
        constructor(e, t, n) {
          (this.year = qt(e) ? e : null),
            (this.month = qt(t) ? t : null),
            (this.day = qt(n) ? n : null);
        }
        static from(e) {
          return e instanceof zn
            ? e
            : e
            ? new zn(e.year, e.month, e.day)
            : null;
        }
        equals(e) {
          return (
            null != e &&
            this.year === e.year &&
            this.month === e.month &&
            this.day === e.day
          );
        }
        before(e) {
          return (
            !!e &&
            (this.year === e.year
              ? this.month === e.month
                ? this.day !== e.day && this.day < e.day
                : this.month < e.month
              : this.year < e.year)
          );
        }
        after(e) {
          return (
            !!e &&
            (this.year === e.year
              ? this.month === e.month
                ? this.day !== e.day && this.day > e.day
                : this.month > e.month
              : this.year > e.year)
          );
        }
      }
      function Hn(e) {
        return new zn(e.getFullYear(), e.getMonth() + 1, e.getDate());
      }
      function Gn(e) {
        const t = new Date(e.year, e.month - 1, e.day, 12);
        return isNaN(t.getTime()) || t.setFullYear(e.year), t;
      }
      function Un() {
        return new qn();
      }
      class $n {}
      ($n.ɵfac = function (e) {
        return new (e || $n)();
      }),
        ($n.ɵprov = Object(s.Ic)({
          factory: Un,
          token: $n,
          providedIn: "root",
        }));
      class qn extends $n {
        getDaysPerWeek() {
          return 7;
        }
        getMonths() {
          return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
        }
        getWeeksPerMonth() {
          return 6;
        }
        getNext(e, t = "d", n = 1) {
          let s = Gn(e),
            i = !0,
            r = s.getMonth();
          switch (t) {
            case "y":
              s.setFullYear(s.getFullYear() + n);
              break;
            case "m":
              (r += n), s.setMonth(r), (r %= 12), r < 0 && (r += 12);
              break;
            case "d":
              s.setDate(s.getDate() + n), (i = !1);
              break;
            default:
              return e;
          }
          return i && s.getMonth() !== r && s.setDate(0), Hn(s);
        }
        getPrev(e, t = "d", n = 1) {
          return this.getNext(e, t, -n);
        }
        getWeekday(e) {
          let t = Gn(e).getDay();
          return 0 === t ? 7 : t;
        }
        getWeekNumber(e, t) {
          7 === t && (t = 0);
          const n = Gn(e[(11 - t) % 7]);
          n.setDate(n.getDate() + 4 - (n.getDay() || 7));
          const s = n.getTime();
          return (
            n.setMonth(0),
            n.setDate(1),
            Math.floor(Math.round((s - n.getTime()) / 864e5) / 7) + 1
          );
        }
        getToday() {
          return Hn(new Date());
        }
        isValid(e) {
          if (!(e && qt(e.year) && qt(e.month) && qt(e.day))) return !1;
          if (0 === e.year) return !1;
          const t = Gn(e);
          return (
            !isNaN(t.getTime()) &&
            t.getFullYear() === e.year &&
            t.getMonth() + 1 === e.month &&
            t.getDate() === e.day
          );
        }
      }
      (qn.ɵfac = function (e) {
        return Wn(e || qn);
      }),
        (qn.ɵprov = s.Ic({ token: qn, factory: qn.ɵfac }));
      const Wn = s.Tc(qn);
      function Yn(e, t) {
        return !(function (e, t) {
          return (!e && !t) || (!!e && !!t && e.equals(t));
        })(e, t);
      }
      function Qn(e, t) {
        return (
          !(!e && !t) && (!e || !t || e.year !== t.year || e.month !== t.month)
        );
      }
      function Kn(e, t, n) {
        return e && t && e.before(t) ? t : e && n && e.after(n) ? n : e || null;
      }
      function Jn(e, t) {
        const { minDate: n, maxDate: s, disabled: i, markDisabled: r } = t;
        return !(
          null == e ||
          i ||
          (r && r(e, { year: e.year, month: e.month })) ||
          (n && e.before(n)) ||
          (s && e.after(s))
        );
      }
      function Xn(e, t, n, s, i) {
        const { displayMonths: r, months: o } = n,
          a = o.splice(0, o.length);
        return (
          Array.from({ length: r }, (n, s) => {
            const r = Object.assign(e.getNext(t, "m", s), { day: 1 });
            if (((o[s] = null), !i)) {
              const e = a.findIndex((e) => e.firstDate.equals(r));
              -1 !== e && (o[s] = a.splice(e, 1)[0]);
            }
            return r;
          }).forEach((t, i) => {
            null === o[i] &&
              (o[i] = (function (e, t, n, s, i = {}) {
                const {
                    dayTemplateData: r,
                    minDate: o,
                    maxDate: a,
                    firstDayOfWeek: l,
                    markDisabled: c,
                    outsideDays: u,
                  } = n,
                  d = e.getToday();
                (i.firstDate = null),
                  (i.lastDate = null),
                  (i.number = t.month),
                  (i.year = t.year),
                  (i.weeks = i.weeks || []),
                  (i.weekdays = i.weekdays || []),
                  (t = (function (e, t, n) {
                    const s = e.getDaysPerWeek(),
                      i = new zn(t.year, t.month, 1),
                      r = e.getWeekday(i) % s;
                    return e.getPrev(i, "d", (s + r - n) % s);
                  })(e, t, l));
                for (let h = 0; h < e.getWeeksPerMonth(); h++) {
                  let n = i.weeks[h];
                  n ||
                    (n = i.weeks[h] = { number: 0, days: [], collapsed: !0 });
                  const p = n.days;
                  for (let l = 0; l < e.getDaysPerWeek(); l++) {
                    0 === h && (i.weekdays[l] = e.getWeekday(t));
                    const n = new zn(t.year, t.month, t.day),
                      u = e.getNext(n),
                      m = s.getDayAriaLabel(n);
                    let f = !!((o && n.before(o)) || (a && n.after(a)));
                    !f && c && (f = c(n, { month: i.number, year: i.year }));
                    let g = n.equals(d),
                      y = r ? r(n, { month: i.number, year: i.year }) : void 0;
                    null === i.firstDate &&
                      n.month === i.number &&
                      (i.firstDate = n),
                      n.month === i.number &&
                        u.month !== i.number &&
                        (i.lastDate = n);
                    let v = p[l];
                    v || (v = p[l] = {}),
                      (v.date = n),
                      (v.context = Object.assign(v.context || {}, {
                        $implicit: n,
                        date: n,
                        data: y,
                        currentMonth: i.number,
                        currentYear: i.year,
                        disabled: f,
                        focused: !1,
                        selected: !1,
                        today: g,
                      })),
                      (v.tabindex = -1),
                      (v.ariaLabel = m),
                      (v.hidden = !1),
                      (t = u);
                  }
                  (n.number = e.getWeekNumber(
                    p.map((e) => e.date),
                    l
                  )),
                    (n.collapsed =
                      "collapsed" === u &&
                      p[0].date.month !== i.number &&
                      p[p.length - 1].date.month !== i.number);
                }
                return i;
              })(e, t, n, s, a.shift() || {}));
          }),
          o
        );
      }
      function Zn(e) {
        return new ts(e);
      }
      class es {
        getDayNumerals(e) {
          return "" + e.day;
        }
        getWeekNumerals(e) {
          return "" + e;
        }
        getYearNumerals(e) {
          return "" + e;
        }
      }
      (es.ɵfac = function (e) {
        return new (e || es)();
      }),
        (es.ɵprov = Object(s.Ic)({
          factory: function () {
            return Zn(Object(s.Yc)(s.J));
          },
          token: es,
          providedIn: "root",
        }));
      class ts extends es {
        constructor(e) {
          super(), (this._locale = e);
          const t = Object(i.w)(e, i.d.Standalone, i.t.Short);
          (this._weekdaysShort = t.map((e, n) => t[(n + 1) % 7])),
            (this._monthsShort = Object(i.y)(
              e,
              i.d.Standalone,
              i.t.Abbreviated
            )),
            (this._monthsFull = Object(i.y)(e, i.d.Standalone, i.t.Wide));
        }
        getWeekdayShortName(e) {
          return this._weekdaysShort[e - 1] || "";
        }
        getMonthShortName(e) {
          return this._monthsShort[e - 1] || "";
        }
        getMonthFullName(e) {
          return this._monthsFull[e - 1] || "";
        }
        getDayAriaLabel(e) {
          const t = new Date(e.year, e.month - 1, e.day);
          return Object(i.v)(t, "fullDate", this._locale);
        }
      }
      (ts.ɵfac = function (e) {
        return new (e || ts)(s.Yc(s.J));
      }),
        (ts.ɵprov = s.Ic({ token: ts, factory: ts.ɵfac })),
        (ts.ctorParameters = () => [
          { type: String, decorators: [{ type: s.C, args: [s.J] }] },
        ]);
      class ns {
        constructor(e, t) {
          (this._calendar = e),
            (this._i18n = t),
            (this._VALIDATORS = {
              dayTemplateData: (e) => {
                if (this._state.dayTemplateData !== e)
                  return { dayTemplateData: e };
              },
              displayMonths: (e) => {
                if (qt((e = zt(e))) && e > 0 && this._state.displayMonths !== e)
                  return { displayMonths: e };
              },
              disabled: (e) => {
                if (this._state.disabled !== e) return { disabled: e };
              },
              firstDayOfWeek: (e) => {
                if (
                  qt((e = zt(e))) &&
                  e >= 0 &&
                  this._state.firstDayOfWeek !== e
                )
                  return { firstDayOfWeek: e };
              },
              focusVisible: (e) => {
                if (this._state.focusVisible !== e && !this._state.disabled)
                  return { focusVisible: e };
              },
              markDisabled: (e) => {
                if (this._state.markDisabled !== e) return { markDisabled: e };
              },
              maxDate: (e) => {
                const t = this.toValidDate(e, null);
                if (Yn(this._state.maxDate, t)) return { maxDate: t };
              },
              minDate: (e) => {
                const t = this.toValidDate(e, null);
                if (Yn(this._state.minDate, t)) return { minDate: t };
              },
              navigation: (e) => {
                if (this._state.navigation !== e) return { navigation: e };
              },
              outsideDays: (e) => {
                if (this._state.outsideDays !== e) return { outsideDays: e };
              },
            }),
            (this._model$ = new a.a()),
            (this._dateSelect$ = new a.a()),
            (this._state = {
              dayTemplateData: null,
              markDisabled: null,
              maxDate: null,
              minDate: null,
              disabled: !1,
              displayMonths: 1,
              firstDate: null,
              firstDayOfWeek: 1,
              lastDate: null,
              focusDate: null,
              focusVisible: !1,
              months: [],
              navigation: "select",
              outsideDays: "visible",
              prevDisabled: !1,
              nextDisabled: !1,
              selectedDate: null,
              selectBoxes: { years: [], months: [] },
            });
        }
        get model$() {
          return this._model$.pipe(Object(R.a)((e) => e.months.length > 0));
        }
        get dateSelect$() {
          return this._dateSelect$.pipe(Object(R.a)((e) => null !== e));
        }
        set(e) {
          let t = Object.keys(e)
            .map((t) => this._VALIDATORS[t](e[t]))
            .reduce((e, t) => Object.assign(Object.assign({}, e), t), {});
          Object.keys(t).length > 0 && this._nextState(t);
        }
        focus(e) {
          const t = this.toValidDate(e, null);
          null != t &&
            !this._state.disabled &&
            Yn(this._state.focusDate, t) &&
            this._nextState({ focusDate: e });
        }
        focusSelect() {
          Jn(this._state.focusDate, this._state) &&
            this.select(this._state.focusDate, { emitEvent: !0 });
        }
        open(e) {
          const t = this.toValidDate(e, this._calendar.getToday());
          null == t ||
            this._state.disabled ||
            (this._state.firstDate && !Qn(this._state.firstDate, t)) ||
            this._nextState({ firstDate: t });
        }
        select(e, t = {}) {
          const n = this.toValidDate(e, null);
          null == n ||
            this._state.disabled ||
            (Yn(this._state.selectedDate, n) &&
              this._nextState({ selectedDate: n }),
            t.emitEvent && Jn(n, this._state) && this._dateSelect$.next(n));
        }
        toValidDate(e, t) {
          const n = zn.from(e);
          return (
            void 0 === t && (t = this._calendar.getToday()),
            this._calendar.isValid(n) ? n : t
          );
        }
        getMonth(e) {
          for (let t of this._state.months)
            if (e.month === t.number && e.year === t.year) return t;
          throw new Error(`month ${e.month} of year ${e.year} not found`);
        }
        _nextState(e) {
          const t = this._updateState(e);
          this._patchContexts(t),
            (this._state = t),
            this._model$.next(this._state);
        }
        _patchContexts(e) {
          const {
            months: t,
            displayMonths: n,
            selectedDate: s,
            focusDate: i,
            focusVisible: r,
            disabled: o,
            outsideDays: a,
          } = e;
          e.months.forEach((e) => {
            e.weeks.forEach((l) => {
              l.days.forEach((l) => {
                i && (l.context.focused = i.equals(l.date) && r),
                  (l.tabindex =
                    !o && i && l.date.equals(i) && i.month === e.number
                      ? 0
                      : -1),
                  !0 === o && (l.context.disabled = !0),
                  void 0 !== s &&
                    (l.context.selected = null !== s && s.equals(l.date)),
                  e.number !== l.date.month &&
                    (l.hidden =
                      "hidden" === a ||
                      "collapsed" === a ||
                      (n > 1 &&
                        l.date.after(t[0].firstDate) &&
                        l.date.before(t[n - 1].lastDate)));
              });
            });
          });
        }
        _updateState(e) {
          const t = Object.assign({}, this._state, e);
          let n = t.firstDate;
          if (
            (("minDate" in e || "maxDate" in e) &&
              (!(function (e, t) {
                if (t && e && t.before(e))
                  throw new Error(
                    `'maxDate' ${t} should be greater than 'minDate' ${e}`
                  );
              })(t.minDate, t.maxDate),
              (t.focusDate = Kn(t.focusDate, t.minDate, t.maxDate)),
              (t.firstDate = Kn(t.firstDate, t.minDate, t.maxDate)),
              (n = t.focusDate)),
            "disabled" in e && (t.focusVisible = !1),
            "selectedDate" in e &&
              0 === this._state.months.length &&
              (n = t.selectedDate),
            "focusVisible" in e)
          )
            return t;
          if (
            "focusDate" in e &&
            ((t.focusDate = Kn(t.focusDate, t.minDate, t.maxDate)),
            (n = t.focusDate),
            0 !== t.months.length &&
              t.focusDate &&
              !t.focusDate.before(t.firstDate) &&
              !t.focusDate.after(t.lastDate))
          )
            return t;
          if (
            ("firstDate" in e &&
              ((t.firstDate = Kn(t.firstDate, t.minDate, t.maxDate)),
              (n = t.firstDate)),
            n)
          ) {
            const s =
                "dayTemplateData" in e ||
                "firstDayOfWeek" in e ||
                "markDisabled" in e ||
                "minDate" in e ||
                "maxDate" in e ||
                "disabled" in e ||
                "outsideDays" in e,
              i = Xn(this._calendar, n, t, this._i18n, s);
            (t.months = i),
              (t.firstDate = i[0].firstDate),
              (t.lastDate = i[i.length - 1].lastDate),
              "selectedDate" in e &&
                !Jn(t.selectedDate, t) &&
                (t.selectedDate = null),
              "firstDate" in e &&
                (!t.focusDate ||
                  t.focusDate.before(t.firstDate) ||
                  t.focusDate.after(t.lastDate)) &&
                (t.focusDate = n);
            const r =
                !this._state.firstDate ||
                this._state.firstDate.year !== t.firstDate.year,
              o =
                !this._state.firstDate ||
                this._state.firstDate.month !== t.firstDate.month;
            "select" === t.navigation
              ? (("minDate" in e ||
                  "maxDate" in e ||
                  0 === t.selectBoxes.years.length ||
                  r) &&
                  (t.selectBoxes.years = (function (e, t, n) {
                    if (!e) return [];
                    const s = t ? Math.max(t.year, e.year - 500) : e.year - 10,
                      i =
                        (n ? Math.min(n.year, e.year + 500) : e.year + 10) -
                        s +
                        1,
                      r = Array(i);
                    for (let o = 0; o < i; o++) r[o] = s + o;
                    return r;
                  })(t.firstDate, t.minDate, t.maxDate)),
                ("minDate" in e ||
                  "maxDate" in e ||
                  0 === t.selectBoxes.months.length ||
                  r) &&
                  (t.selectBoxes.months = (function (e, t, n, s) {
                    if (!t) return [];
                    let i = e.getMonths(t.year);
                    if (n && t.year === n.year) {
                      const e = i.findIndex((e) => e === n.month);
                      i = i.slice(e);
                    }
                    if (s && t.year === s.year) {
                      const e = i.findIndex((e) => e === s.month);
                      i = i.slice(0, e + 1);
                    }
                    return i;
                  })(this._calendar, t.firstDate, t.minDate, t.maxDate)))
              : (t.selectBoxes = { years: [], months: [] }),
              ("arrows" !== t.navigation && "select" !== t.navigation) ||
                !(
                  o ||
                  r ||
                  "minDate" in e ||
                  "maxDate" in e ||
                  "disabled" in e
                ) ||
                ((t.prevDisabled =
                  t.disabled ||
                  (function (e, t, n) {
                    const s = Object.assign(e.getPrev(t, "m"), { day: 1 });
                    return (
                      null != n &&
                      ((s.year === n.year && s.month < n.month) ||
                        (s.year < n.year && 1 === n.month))
                    );
                  })(this._calendar, t.firstDate, t.minDate)),
                (t.nextDisabled =
                  t.disabled ||
                  (function (e, t, n) {
                    const s = Object.assign(e.getNext(t, "m"), { day: 1 });
                    return null != n && s.after(n);
                  })(this._calendar, t.lastDate, t.maxDate)));
          }
          return t;
        }
      }
      var ss;
      (ns.ɵfac = function (e) {
        return new (e || ns)(s.Yc($n), s.Yc(es));
      }),
        (ns.ɵprov = s.Ic({ token: ns, factory: ns.ɵfac })),
        (ns.ctorParameters = () => [{ type: $n }, { type: es }]),
        (function (e) {
          (e[(e.PREV = 0)] = "PREV"), (e[(e.NEXT = 1)] = "NEXT");
        })(ss || (ss = {}));
      class is {
        constructor() {
          (this.displayMonths = 1),
            (this.firstDayOfWeek = 1),
            (this.navigation = "select"),
            (this.outsideDays = "visible"),
            (this.showWeekdays = !0),
            (this.showWeekNumbers = !1);
        }
      }
      function rs() {
        return new as();
      }
      (is.ɵfac = function (e) {
        return new (e || is)();
      }),
        (is.ɵprov = Object(s.Ic)({
          factory: function () {
            return new is();
          },
          token: is,
          providedIn: "root",
        }));
      class os {}
      (os.ɵfac = function (e) {
        return new (e || os)();
      }),
        (os.ɵprov = Object(s.Ic)({
          factory: rs,
          token: os,
          providedIn: "root",
        }));
      class as extends os {
        fromModel(e) {
          return e && qt(e.year) && qt(e.month) && qt(e.day)
            ? { year: e.year, month: e.month, day: e.day }
            : null;
        }
        toModel(e) {
          return e && qt(e.year) && qt(e.month) && qt(e.day)
            ? { year: e.year, month: e.month, day: e.day }
            : null;
        }
      }
      (as.ɵfac = function (e) {
        return ls(e || as);
      }),
        (as.ɵprov = s.Ic({ token: as, factory: as.ɵfac }));
      const ls = s.Tc(as),
        cs = { provide: Q.h, useExisting: Object(s.sb)(() => ds), multi: !0 };
      class us {
        constructor(e) {
          this.templateRef = e;
        }
      }
      (us.ɵfac = function (e) {
        return new (e || us)(s.Mc(s.ib));
      }),
        (us.ɵdir = s.Hc({
          type: us,
          selectors: [["ng-template", "ngbDatepickerContent", ""]],
        })),
        (us.ctorParameters = () => [{ type: s.ib }]);
      class ds {
        constructor(e, t, n, i, r, o, l, c) {
          (this._service = e),
            (this._calendar = t),
            (this.i18n = n),
            (this._elementRef = o),
            (this._ngbDateAdapter = l),
            (this._ngZone = c),
            (this._controlValue = null),
            (this._destroyed$ = new a.a()),
            (this._publicState = {}),
            (this.navigate = new s.x()),
            (this.dateSelect = new s.x()),
            (this.onChange = (e) => {}),
            (this.onTouched = () => {}),
            [
              "dayTemplate",
              "dayTemplateData",
              "displayMonths",
              "firstDayOfWeek",
              "footerTemplate",
              "markDisabled",
              "minDate",
              "maxDate",
              "navigation",
              "outsideDays",
              "showWeekdays",
              "showWeekNumbers",
              "startDate",
            ].forEach((e) => (this[e] = i[e])),
            e.dateSelect$.pipe(Object(P.a)(this._destroyed$)).subscribe((e) => {
              this.dateSelect.emit(e);
            }),
            e.model$.pipe(Object(P.a)(this._destroyed$)).subscribe((e) => {
              const t = e.firstDate,
                n = this.model ? this.model.firstDate : null;
              this._publicState = {
                maxDate: e.maxDate,
                minDate: e.minDate,
                firstDate: e.firstDate,
                lastDate: e.lastDate,
                focusedDate: e.focusDate,
                months: e.months.map((e) => e.firstDate),
              };
              let s = !1;
              if (
                !t.equals(n) &&
                (this.navigate.emit({
                  current: n ? { year: n.year, month: n.month } : null,
                  next: { year: t.year, month: t.month },
                  preventDefault: () => (s = !0),
                }),
                s && null !== n)
              )
                return void this._service.open(n);
              const i = e.selectedDate,
                o = e.focusDate,
                a = this.model ? this.model.focusDate : null;
              (this.model = e),
                Yn(i, this._controlValue) &&
                  ((this._controlValue = i),
                  this.onTouched(),
                  this.onChange(this._ngbDateAdapter.toModel(i))),
                Yn(o, a) && a && e.focusVisible && this.focus(),
                r.markForCheck();
            });
        }
        get state() {
          return this._publicState;
        }
        get calendar() {
          return this._calendar;
        }
        focusDate(e) {
          this._service.focus(zn.from(e));
        }
        focusSelect() {
          this._service.focusSelect();
        }
        focus() {
          this._ngZone.onStable
            .asObservable()
            .pipe(Object(j.a)(1))
            .subscribe(() => {
              const e = this._elementRef.nativeElement.querySelector(
                'div.ngb-dp-day[tabindex="0"]'
              );
              e && e.focus();
            });
        }
        navigateTo(e) {
          this._service.open(
            zn.from(
              e
                ? e.day
                  ? e
                  : Object.assign(Object.assign({}, e), { day: 1 })
                : null
            )
          );
        }
        ngAfterViewInit() {
          this._ngZone.runOutsideAngular(() => {
            const e = Object(l.a)(this._contentEl.nativeElement, "focusin"),
              t = Object(l.a)(this._contentEl.nativeElement, "focusout"),
              { nativeElement: n } = this._elementRef;
            Object(D.a)(e, t)
              .pipe(
                Object(R.a)(
                  ({ target: e, relatedTarget: t }) =>
                    !(
                      Qt(e, "ngb-dp-day") &&
                      Qt(t, "ngb-dp-day") &&
                      n.contains(e) &&
                      n.contains(t)
                    )
                ),
                Object(P.a)(this._destroyed$)
              )
              .subscribe(({ type: e }) =>
                this._ngZone.run(() =>
                  this._service.set({ focusVisible: "focusin" === e })
                )
              );
          });
        }
        ngOnDestroy() {
          this._destroyed$.next();
        }
        ngOnInit() {
          if (void 0 === this.model) {
            const e = {};
            [
              "dayTemplateData",
              "displayMonths",
              "markDisabled",
              "firstDayOfWeek",
              "navigation",
              "minDate",
              "maxDate",
              "outsideDays",
            ].forEach((t) => (e[t] = this[t])),
              this._service.set(e),
              this.navigateTo(this.startDate);
          }
          this.dayTemplate || (this.dayTemplate = this._defaultDayTemplate);
        }
        ngOnChanges(e) {
          const t = {};
          if (
            ([
              "dayTemplateData",
              "displayMonths",
              "markDisabled",
              "firstDayOfWeek",
              "navigation",
              "minDate",
              "maxDate",
              "outsideDays",
            ]
              .filter((t) => t in e)
              .forEach((e) => (t[e] = this[e])),
            this._service.set(t),
            "startDate" in e)
          ) {
            const { currentValue: t, previousValue: n } = e.startDate;
            Qn(n, t) && this.navigateTo(this.startDate);
          }
        }
        onDateSelect(e) {
          this._service.focus(e), this._service.select(e, { emitEvent: !0 });
        }
        onNavigateDateSelect(e) {
          this._service.open(e);
        }
        onNavigateEvent(e) {
          switch (e) {
            case ss.PREV:
              this._service.open(
                this._calendar.getPrev(this.model.firstDate, "m", 1)
              );
              break;
            case ss.NEXT:
              this._service.open(
                this._calendar.getNext(this.model.firstDate, "m", 1)
              );
          }
        }
        registerOnChange(e) {
          this.onChange = e;
        }
        registerOnTouched(e) {
          this.onTouched = e;
        }
        setDisabledState(e) {
          this._service.set({ disabled: e });
        }
        writeValue(e) {
          (this._controlValue = zn.from(this._ngbDateAdapter.fromModel(e))),
            this._service.select(this._controlValue);
        }
      }
      var hs;
      (ds.ɵfac = function (e) {
        return new (e || ds)(
          s.Mc(ns),
          s.Mc($n),
          s.Mc(es),
          s.Mc(is),
          s.Mc(s.k),
          s.Mc(s.v),
          s.Mc(os),
          s.Mc(s.Q)
        );
      }),
        (ds.ɵcmp = s.Gc({
          type: ds,
          selectors: [["ngb-datepicker"]],
          contentQueries: function (e, t, n) {
            if ((1 & e && s.xd(n, us, !0), 2 & e)) {
              let e;
              s.sd((e = s.dd())) && (t.contentTemplate = e.first);
            }
          },
          viewQuery: function (e, t) {
            if ((1 & e && (s.yd(ue, !0), s.yd(de, !0)), 2 & e)) {
              let e;
              s.sd((e = s.dd())) && (t._defaultDayTemplate = e.first),
                s.sd((e = s.dd())) && (t._contentEl = e.first);
            }
          },
          inputs: {
            dayTemplate: "dayTemplate",
            dayTemplateData: "dayTemplateData",
            displayMonths: "displayMonths",
            firstDayOfWeek: "firstDayOfWeek",
            footerTemplate: "footerTemplate",
            markDisabled: "markDisabled",
            maxDate: "maxDate",
            minDate: "minDate",
            navigation: "navigation",
            outsideDays: "outsideDays",
            showWeekdays: "showWeekdays",
            showWeekNumbers: "showWeekNumbers",
            startDate: "startDate",
          },
          outputs: { navigate: "navigate", dateSelect: "dateSelect" },
          exportAs: ["ngbDatepicker"],
          features: [s.yc([cs, ns]), s.xc],
          decls: 10,
          vars: 5,
          consts: [
            ["defaultDayTemplate", ""],
            ["defaultContentTemplate", ""],
            [1, "ngb-dp-header"],
            [
              3,
              "date",
              "months",
              "disabled",
              "showSelect",
              "prevDisabled",
              "nextDisabled",
              "selectBoxes",
              "navigate",
              "select",
              4,
              "ngIf",
            ],
            [1, "ngb-dp-content"],
            ["content", ""],
            [3, "ngTemplateOutlet"],
            [
              "ngbDatepickerDayView",
              "",
              3,
              "date",
              "currentMonth",
              "selected",
              "disabled",
              "focused",
            ],
            ["class", "ngb-dp-month", 4, "ngFor", "ngForOf"],
            [1, "ngb-dp-month"],
            ["class", "ngb-dp-month-name", 4, "ngIf"],
            [3, "month"],
            [1, "ngb-dp-month-name"],
            [
              3,
              "date",
              "months",
              "disabled",
              "showSelect",
              "prevDisabled",
              "nextDisabled",
              "selectBoxes",
              "navigate",
              "select",
            ],
          ],
          template: function (e, t) {
            if (
              (1 & e &&
                (s.Cd(0, he, 1, 5, "ng-template", null, 0, s.Dd),
                s.Cd(2, fe, 1, 1, "ng-template", null, 1, s.Dd),
                s.Rc(4, "div", 2),
                s.Cd(5, ge, 1, 7, "ngb-datepicker-navigation", 3),
                s.Qc(),
                s.Rc(6, "div", 4, 5),
                s.Cd(8, ye, 0, 0, "ng-template", 6),
                s.Qc(),
                s.Cd(9, ve, 0, 0, "ng-template", 6)),
              2 & e)
            ) {
              const e = s.td(3);
              s.zc(5),
                s.ld("ngIf", "none" !== t.navigation),
                s.zc(1),
                s.Ec("ngb-dp-months", !t.contentTemplate),
                s.zc(2),
                s.ld(
                  "ngTemplateOutlet",
                  (null == t.contentTemplate
                    ? null
                    : t.contentTemplate.templateRef) || e
                ),
                s.zc(1),
                s.ld("ngTemplateOutlet", t.footerTemplate);
            }
          },
          directives: function () {
            return [i.k, i.p, Ns, i.j, ms, fs];
          },
          styles: [
            "ngb-datepicker{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}.ngb-dp-body{z-index:1050}.ngb-dp-header{background-color:#f8f9fa;background-color:var(--light);border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem}.ngb-dp-months{display:-ms-flexbox;display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{background-color:#f8f9fa;background-color:var(--light);font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}",
          ],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (ds.ctorParameters = () => [
          { type: ns },
          { type: $n },
          { type: es },
          { type: is },
          { type: s.k },
          { type: s.v },
          { type: os },
          { type: s.Q },
        ]),
        (ds.propDecorators = {
          _defaultDayTemplate: [
            { type: s.mb, args: ["defaultDayTemplate", { static: !0 }] },
          ],
          _contentEl: [{ type: s.mb, args: ["content", { static: !0 }] }],
          contentTemplate: [{ type: s.r, args: [us, { static: !0 }] }],
          dayTemplate: [{ type: s.G }],
          dayTemplateData: [{ type: s.G }],
          displayMonths: [{ type: s.G }],
          firstDayOfWeek: [{ type: s.G }],
          footerTemplate: [{ type: s.G }],
          markDisabled: [{ type: s.G }],
          maxDate: [{ type: s.G }],
          minDate: [{ type: s.G }],
          navigation: [{ type: s.G }],
          outsideDays: [{ type: s.G }],
          showWeekdays: [{ type: s.G }],
          showWeekNumbers: [{ type: s.G }],
          startDate: [{ type: s.G }],
          navigate: [{ type: s.S }],
          dateSelect: [{ type: s.S }],
        }),
        (function (e) {
          (e[(e.Tab = 9)] = "Tab"),
            (e[(e.Enter = 13)] = "Enter"),
            (e[(e.Escape = 27)] = "Escape"),
            (e[(e.Space = 32)] = "Space"),
            (e[(e.PageUp = 33)] = "PageUp"),
            (e[(e.PageDown = 34)] = "PageDown"),
            (e[(e.End = 35)] = "End"),
            (e[(e.Home = 36)] = "Home"),
            (e[(e.ArrowLeft = 37)] = "ArrowLeft"),
            (e[(e.ArrowUp = 38)] = "ArrowUp"),
            (e[(e.ArrowRight = 39)] = "ArrowRight"),
            (e[(e.ArrowDown = 40)] = "ArrowDown");
        })(hs || (hs = {}));
      class ps {
        processKey(e, t) {
          const { state: n, calendar: s } = t;
          switch (e.which) {
            case hs.PageUp:
              t.focusDate(s.getPrev(n.focusedDate, e.shiftKey ? "y" : "m", 1));
              break;
            case hs.PageDown:
              t.focusDate(s.getNext(n.focusedDate, e.shiftKey ? "y" : "m", 1));
              break;
            case hs.End:
              t.focusDate(e.shiftKey ? n.maxDate : n.lastDate);
              break;
            case hs.Home:
              t.focusDate(e.shiftKey ? n.minDate : n.firstDate);
              break;
            case hs.ArrowLeft:
              t.focusDate(s.getPrev(n.focusedDate, "d", 1));
              break;
            case hs.ArrowUp:
              t.focusDate(s.getPrev(n.focusedDate, "d", s.getDaysPerWeek()));
              break;
            case hs.ArrowRight:
              t.focusDate(s.getNext(n.focusedDate, "d", 1));
              break;
            case hs.ArrowDown:
              t.focusDate(s.getNext(n.focusedDate, "d", s.getDaysPerWeek()));
              break;
            case hs.Enter:
            case hs.Space:
              t.focusSelect();
              break;
            default:
              return;
          }
          e.preventDefault(), e.stopPropagation();
        }
      }
      (ps.ɵfac = function (e) {
        return new (e || ps)();
      }),
        (ps.ɵprov = Object(s.Ic)({
          factory: function () {
            return new ps();
          },
          token: ps,
          providedIn: "root",
        }));
      class ms {
        constructor(e, t, n, s) {
          (this.i18n = e),
            (this.datepicker = t),
            (this._keyboardService = n),
            (this._service = s);
        }
        set month(e) {
          this.viewModel = this._service.getMonth(e);
        }
        onKeyDown(e) {
          this._keyboardService.processKey(e, this.datepicker);
        }
        doSelect(e) {
          e.context.disabled ||
            e.hidden ||
            this.datepicker.onDateSelect(e.date);
        }
      }
      (ms.ɵfac = function (e) {
        return new (e || ms)(s.Mc(es), s.Mc(ds), s.Mc(ps), s.Mc(ns));
      }),
        (ms.ɵcmp = s.Gc({
          type: ms,
          selectors: [["ngb-datepicker-month"]],
          hostAttrs: ["role", "grid"],
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("keydown", function (e) {
                return t.onKeyDown(e);
              });
          },
          inputs: { month: "month" },
          decls: 2,
          vars: 2,
          consts: [
            ["class", "ngb-dp-week ngb-dp-weekdays", "role", "row", 4, "ngIf"],
            ["ngFor", "", 3, "ngForOf"],
            ["role", "row", 1, "ngb-dp-week", "ngb-dp-weekdays"],
            ["class", "ngb-dp-weekday ngb-dp-showweek", 4, "ngIf"],
            [
              "class",
              "ngb-dp-weekday small",
              "role",
              "columnheader",
              4,
              "ngFor",
              "ngForOf",
            ],
            [1, "ngb-dp-weekday", "ngb-dp-showweek"],
            ["role", "columnheader", 1, "ngb-dp-weekday", "small"],
            ["class", "ngb-dp-week", "role", "row", 4, "ngIf"],
            ["role", "row", 1, "ngb-dp-week"],
            ["class", "ngb-dp-week-number small text-muted", 4, "ngIf"],
            [
              "class",
              "ngb-dp-day",
              "role",
              "gridcell",
              3,
              "disabled",
              "tabindex",
              "hidden",
              "ngb-dp-today",
              "click",
              4,
              "ngFor",
              "ngForOf",
            ],
            [1, "ngb-dp-week-number", "small", "text-muted"],
            ["role", "gridcell", 1, "ngb-dp-day", 3, "tabindex", "click"],
            [3, "ngIf"],
            [3, "ngTemplateOutlet", "ngTemplateOutletContext"],
          ],
          template: function (e, t) {
            1 & e &&
              (s.Cd(0, _e, 3, 2, "div", 0),
              s.Cd(1, Oe, 1, 1, "ng-template", 1)),
              2 & e &&
                (s.ld("ngIf", t.datepicker.showWeekdays),
                s.zc(1),
                s.ld("ngForOf", t.viewModel.weeks));
          },
          directives: [i.k, i.j, i.p],
          styles: [
            'ngb-datepicker-month{display:block}.ngb-dp-week-number,.ngb-dp-weekday{font-style:italic;line-height:2rem;text-align:center}.ngb-dp-weekday{color:#5bc0de;color:var(--info)}.ngb-dp-week{border-radius:.25rem;display:-ms-flexbox;display:flex}.ngb-dp-weekdays{background-color:#f8f9fa;background-color:var(--light);border-bottom:1px solid rgba(0,0,0,.125);border-radius:0}.ngb-dp-day,.ngb-dp-week-number,.ngb-dp-weekday{height:2rem;width:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default;pointer-events:none}.ngb-dp-day[tabindex="0"]{z-index:1}',
          ],
          encapsulation: 2,
        })),
        (ms.ctorParameters = () => [
          { type: es },
          { type: ds },
          { type: ps },
          { type: ns },
        ]),
        (ms.propDecorators = { month: [{ type: s.G }] });
      class fs {
        constructor(e) {
          (this.i18n = e),
            (this.navigation = ss),
            (this.months = []),
            (this.navigate = new s.x()),
            (this.select = new s.x());
        }
        onClickPrev(e) {
          e.currentTarget.focus(), this.navigate.emit(this.navigation.PREV);
        }
        onClickNext(e) {
          e.currentTarget.focus(), this.navigate.emit(this.navigation.NEXT);
        }
      }
      (fs.ɵfac = function (e) {
        return new (e || fs)(s.Mc(es));
      }),
        (fs.ɵcmp = s.Gc({
          type: fs,
          selectors: [["ngb-datepicker-navigation"]],
          inputs: {
            months: "months",
            date: "date",
            disabled: "disabled",
            showSelect: "showSelect",
            prevDisabled: "prevDisabled",
            nextDisabled: "nextDisabled",
            selectBoxes: "selectBoxes",
          },
          outputs: { navigate: "navigate", select: "select" },
          decls: 8,
          vars: 4,
          consts: function () {
            let e, t, n, s;
            return (
              (e = $localize`:@@ngb.datepicker.previous-month␟c3b08b07b5ab98e7cdcf18df39355690ab7d3884␟8586908745456864217:Previous month`),
              (t = $localize`:@@ngb.datepicker.previous-month␟c3b08b07b5ab98e7cdcf18df39355690ab7d3884␟8586908745456864217:Previous month`),
              (n = $localize`:@@ngb.datepicker.next-month␟4bd046985cfe13040d5ef0cd881edce0968a111a␟3628374603023447227:Next month`),
              (s = $localize`:@@ngb.datepicker.next-month␟4bd046985cfe13040d5ef0cd881edce0968a111a␟3628374603023447227:Next month`),
              [
                [1, "ngb-dp-arrow"],
                [
                  "type",
                  "button",
                  "aria-label",
                  e,
                  "title",
                  t,
                  1,
                  "btn",
                  "btn-link",
                  "ngb-dp-arrow-btn",
                  3,
                  "disabled",
                  "click",
                ],
                [1, "ngb-dp-navigation-chevron"],
                [
                  "class",
                  "ngb-dp-navigation-select",
                  3,
                  "date",
                  "disabled",
                  "months",
                  "years",
                  "select",
                  4,
                  "ngIf",
                ],
                [4, "ngIf"],
                [1, "ngb-dp-arrow", "right"],
                [
                  "type",
                  "button",
                  "aria-label",
                  n,
                  "title",
                  s,
                  1,
                  "btn",
                  "btn-link",
                  "ngb-dp-arrow-btn",
                  3,
                  "disabled",
                  "click",
                ],
                [
                  1,
                  "ngb-dp-navigation-select",
                  3,
                  "date",
                  "disabled",
                  "months",
                  "years",
                  "select",
                ],
                ["ngFor", "", 3, "ngForOf"],
                ["class", "ngb-dp-arrow", 4, "ngIf"],
                [1, "ngb-dp-month-name"],
              ]
            );
          },
          template: function (e, t) {
            1 & e &&
              (s.Rc(0, "div", 0),
              s.Rc(1, "button", 1),
              s.cd("click", function (e) {
                return t.onClickPrev(e);
              }),
              s.Nc(2, "span", 2),
              s.Qc(),
              s.Qc(),
              s.Cd(3, Ie, 1, 4, "ngb-datepicker-navigation-select", 3),
              s.Cd(4, Me, 1, 1, void 0, 4),
              s.Rc(5, "div", 5),
              s.Rc(6, "button", 6),
              s.cd("click", function (e) {
                return t.onClickNext(e);
              }),
              s.Nc(7, "span", 2),
              s.Qc(),
              s.Qc()),
              2 & e &&
                (s.zc(1),
                s.ld("disabled", t.prevDisabled),
                s.zc(2),
                s.ld("ngIf", t.showSelect),
                s.zc(1),
                s.ld("ngIf", !t.showSelect),
                s.zc(2),
                s.ld("disabled", t.nextDisabled));
          },
          directives: function () {
            return [i.k, Fs, i.j];
          },
          styles: [
            "ngb-datepicker-navigation{-ms-flex-align:center;align-items:center;display:-ms-flexbox;display:flex}.ngb-dp-navigation-chevron{-webkit-transform:rotate(-135deg);border-style:solid;border-width:.2em .2em 0 0;display:inline-block;height:.75em;margin-left:.25em;margin-right:.15em;transform:rotate(-135deg);width:.75em}.right .ngb-dp-navigation-chevron{-webkit-transform:rotate(45deg);margin-left:.15em;margin-right:.25em;transform:rotate(45deg)}.ngb-dp-arrow{-ms-flex:1 1 auto;display:-ms-flexbox;display:flex;flex:1 1 auto;height:2rem;margin:0;padding-left:0;padding-right:0;width:2rem}.ngb-dp-arrow.right{-ms-flex-pack:end;justify-content:flex-end}.ngb-dp-arrow-btn{background-color:transparent;border:none;margin:0 .5rem;padding:0 .25rem;z-index:1}.ngb-dp-arrow-btn:focus{outline-style:auto;outline-width:1px}@media (-ms-high-contrast:active),(-ms-high-contrast:none){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{-ms-flex:1 1 9rem;display:-ms-flexbox;display:flex;flex:1 1 9rem}",
          ],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (fs.ctorParameters = () => [{ type: es }]),
        (fs.propDecorators = {
          date: [{ type: s.G }],
          disabled: [{ type: s.G }],
          months: [{ type: s.G }],
          showSelect: [{ type: s.G }],
          prevDisabled: [{ type: s.G }],
          nextDisabled: [{ type: s.G }],
          selectBoxes: [{ type: s.G }],
          navigate: [{ type: s.S }],
          select: [{ type: s.S }],
        });
      const gs = (e, t) => !!t && t.some((t) => t.contains(e)),
        ys = (e, t) =>
          !t ||
          null !=
            (function (e, t) {
              return t ? (void 0 === e.closest ? null : e.closest(t)) : null;
            })(e, t),
        vs =
          "undefined" != typeof navigator &&
          !!navigator.userAgent &&
          (/iPad|iPhone|iPod/.test(navigator.userAgent) ||
            (/Macintosh/.test(navigator.userAgent) &&
              navigator.maxTouchPoints &&
              navigator.maxTouchPoints > 2) ||
            /Android/.test(navigator.userAgent)),
        bs = (e) => (vs ? () => setTimeout(() => e(), 100) : e);
      function xs(e, t, n, s, i, r, o, a) {
        n &&
          e.runOutsideAngular(
            bs(() => {
              const c = Object(l.a)(t, "keydown").pipe(
                  Object(P.a)(i),
                  Object(R.a)((e) => e.which === hs.Escape),
                  Object(B.a)((e) => e.preventDefault())
                ),
                u = Object(l.a)(t, "mousedown").pipe(
                  Object(N.a)((e) => {
                    const t = e.target;
                    return (
                      2 !== e.button &&
                      !gs(t, o) &&
                      ("inside" === n
                        ? gs(t, r) && ys(t, a)
                        : "outside" === n
                        ? !gs(t, r)
                        : ys(t, a) || !gs(t, r))
                    );
                  }),
                  Object(P.a)(i)
                ),
                d = Object(l.a)(t, "mouseup").pipe(
                  z(u),
                  Object(R.a)(([e, t]) => t),
                  Object(U.a)(0),
                  Object(P.a)(i)
                );
              m([
                c.pipe(Object(N.a)((e) => 0)),
                d.pipe(Object(N.a)((e) => 1)),
              ]).subscribe((t) => e.run(() => s(t)));
            })
          );
      }
      const _s = [
        "a[href]",
        "button:not([disabled])",
        'input:not([disabled]):not([type="hidden"])',
        "select:not([disabled])",
        "textarea:not([disabled])",
        "[contenteditable]",
        '[tabindex]:not([tabindex="-1"])',
      ].join(", ");
      function ws(e) {
        const t = Array.from(e.querySelectorAll(_s)).filter(
          (e) => -1 !== e.tabIndex
        );
        return [t[0], t[t.length - 1]];
      }
      const Cs = (e, t, n, s = !1) => {
        e.runOutsideAngular(() => {
          const e = Object(l.a)(t, "focusin").pipe(
            Object(P.a)(n),
            Object(N.a)((e) => e.target)
          );
          Object(l.a)(t, "keydown")
            .pipe(
              Object(P.a)(n),
              Object(R.a)((e) => e.which === hs.Tab),
              z(e)
            )
            .subscribe(([e, n]) => {
              const [s, i] = ws(t);
              (n !== s && n !== t) ||
                !e.shiftKey ||
                (i.focus(), e.preventDefault()),
                n !== i || e.shiftKey || (s.focus(), e.preventDefault());
            }),
            s &&
              Object(l.a)(t, "click")
                .pipe(
                  Object(P.a)(n),
                  z(e),
                  Object(N.a)((e) => e[1])
                )
                .subscribe((e) => e.focus());
        });
      };
      const Ss = /\s+/,
        Es = new (class {
          getAllStyles(e) {
            return window.getComputedStyle(e);
          }
          getStyle(e, t) {
            return this.getAllStyles(e)[t];
          }
          isStaticPositioned(e) {
            return "static" === (this.getStyle(e, "position") || "static");
          }
          offsetParent(e) {
            let t = e.offsetParent || document.documentElement;
            for (
              ;
              t && t !== document.documentElement && this.isStaticPositioned(t);

            )
              t = t.offsetParent;
            return t || document.documentElement;
          }
          position(e, t = !0) {
            let n,
              s = { width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0 };
            if ("fixed" === this.getStyle(e, "position"))
              (n = e.getBoundingClientRect()),
                (n = {
                  top: n.top,
                  bottom: n.bottom,
                  left: n.left,
                  right: n.right,
                  height: n.height,
                  width: n.width,
                });
            else {
              const t = this.offsetParent(e);
              (n = this.offset(e, !1)),
                t !== document.documentElement && (s = this.offset(t, !1)),
                (s.top += t.clientTop),
                (s.left += t.clientLeft);
            }
            return (
              (n.top -= s.top),
              (n.bottom -= s.top),
              (n.left -= s.left),
              (n.right -= s.left),
              t &&
                ((n.top = Math.round(n.top)),
                (n.bottom = Math.round(n.bottom)),
                (n.left = Math.round(n.left)),
                (n.right = Math.round(n.right))),
              n
            );
          }
          offset(e, t = !0) {
            const n = e.getBoundingClientRect(),
              s = window.pageYOffset - document.documentElement.clientTop,
              i = window.pageXOffset - document.documentElement.clientLeft;
            let r = {
              height: n.height || e.offsetHeight,
              width: n.width || e.offsetWidth,
              top: n.top + s,
              bottom: n.bottom + s,
              left: n.left + i,
              right: n.right + i,
            };
            return (
              t &&
                ((r.height = Math.round(r.height)),
                (r.width = Math.round(r.width)),
                (r.top = Math.round(r.top)),
                (r.bottom = Math.round(r.bottom)),
                (r.left = Math.round(r.left)),
                (r.right = Math.round(r.right))),
              r
            );
          }
          positionElements(e, t, n, s) {
            const [i = "top", r = "center"] = n.split("-"),
              o = s ? this.offset(e, !1) : this.position(e, !1),
              a = this.getAllStyles(t),
              l = parseFloat(a.marginTop),
              c = parseFloat(a.marginBottom),
              u = parseFloat(a.marginLeft),
              d = parseFloat(a.marginRight);
            let h = 0,
              p = 0;
            switch (i) {
              case "top":
                h = o.top - (t.offsetHeight + l + c);
                break;
              case "bottom":
                h = o.top + o.height;
                break;
              case "left":
                p = o.left - (t.offsetWidth + u + d);
                break;
              case "right":
                p = o.left + o.width;
            }
            switch (r) {
              case "top":
                h = o.top;
                break;
              case "bottom":
                h = o.top + o.height - t.offsetHeight;
                break;
              case "left":
                p = o.left;
                break;
              case "right":
                p = o.left + o.width - t.offsetWidth;
                break;
              case "center":
                "top" === i || "bottom" === i
                  ? (p = o.left + o.width / 2 - t.offsetWidth / 2)
                  : (h = o.top + o.height / 2 - t.offsetHeight / 2);
            }
            t.style.transform = `translate(${Math.round(p)}px, ${Math.round(
              h
            )}px)`;
            const m = t.getBoundingClientRect(),
              f = document.documentElement,
              g = window.innerHeight || f.clientHeight,
              y = window.innerWidth || f.clientWidth;
            return m.left >= 0 && m.top >= 0 && m.right <= y && m.bottom <= g;
          }
        })();
      function ks(e, t, n, s, i) {
        let r = Array.isArray(n) ? n : n.split(Ss);
        const o = [
            "top",
            "bottom",
            "left",
            "right",
            "top-left",
            "top-right",
            "bottom-left",
            "bottom-right",
            "left-top",
            "left-bottom",
            "right-top",
            "right-bottom",
          ],
          a = t.classList,
          l = (e) => {
            const [t, n] = e.split("-"),
              s = [];
            return (
              i &&
                (s.push(`${i}-${t}`),
                n && s.push(`${i}-${t}-${n}`),
                s.forEach((e) => {
                  a.add(e);
                })),
              s
            );
          };
        i &&
          o.forEach((e) => {
            a.remove(`${i}-${e}`);
          });
        let c = r.findIndex((e) => "auto" === e);
        c >= 0 &&
          o.forEach(function (e) {
            null == r.find((t) => -1 !== t.search("^" + e)) &&
              r.splice(c++, 1, e);
          });
        const u = t.style;
        (u.position = "absolute"),
          (u.top = "0"),
          (u.left = "0"),
          (u["will-change"] = "transform");
        let d = null,
          h = !1;
        for (d of r) {
          let n = l(d);
          if (Es.positionElements(e, t, d, s)) {
            h = !0;
            break;
          }
          i &&
            n.forEach((e) => {
              a.remove(e);
            });
        }
        return h || ((d = r[0]), l(d), Es.positionElements(e, t, d, s)), d;
      }
      function Os() {
        return new Ts();
      }
      class Is {}
      (Is.ɵfac = function (e) {
        return new (e || Is)();
      }),
        (Is.ɵprov = Object(s.Ic)({
          factory: Os,
          token: Is,
          providedIn: "root",
        }));
      class Ts extends Is {
        parse(e) {
          if (null != e) {
            const t = e.trim().split("-");
            if (1 === t.length && $t(t[0]))
              return { year: zt(t[0]), month: null, day: null };
            if (2 === t.length && $t(t[0]) && $t(t[1]))
              return { year: zt(t[0]), month: zt(t[1]), day: null };
            if (3 === t.length && $t(t[0]) && $t(t[1]) && $t(t[2]))
              return { year: zt(t[0]), month: zt(t[1]), day: zt(t[2]) };
          }
          return null;
        }
        format(e) {
          return e
            ? `${e.year}-${$t(e.month) ? Yt(e.month) : ""}-${
                $t(e.day) ? Yt(e.day) : ""
              }`
            : "";
        }
      }
      (Ts.ɵfac = function (e) {
        return As(e || Ts);
      }),
        (Ts.ɵprov = s.Ic({ token: Ts, factory: Ts.ɵfac }));
      const As = s.Tc(Ts);
      class Ds extends is {
        constructor() {
          super(...arguments),
            (this.autoClose = !0),
            (this.placement = [
              "bottom-left",
              "bottom-right",
              "top-left",
              "top-right",
            ]),
            (this.restoreFocus = !0);
        }
      }
      (Ds.ɵfac = function (e) {
        return Ms(e || Ds);
      }),
        (Ds.ɵprov = Object(s.Ic)({
          factory: function () {
            return new Ds();
          },
          token: Ds,
          providedIn: "root",
        }));
      const Ms = s.Tc(Ds),
        Ps = { provide: Q.h, useExisting: Object(s.sb)(() => js), multi: !0 },
        Rs = { provide: Q.g, useExisting: Object(s.sb)(() => js), multi: !0 };
      class js {
        constructor(e, t, n, i, r, o, a, l, c, u, d) {
          (this._parserFormatter = e),
            (this._elRef = t),
            (this._vcRef = n),
            (this._renderer = i),
            (this._cfr = r),
            (this._ngZone = o),
            (this._calendar = a),
            (this._dateAdapter = l),
            (this._document = c),
            (this._changeDetector = u),
            (this._cRef = null),
            (this._disabled = !1),
            (this._elWithFocus = null),
            (this._model = null),
            (this.dateSelect = new s.x()),
            (this.navigate = new s.x()),
            (this.closed = new s.x()),
            (this._onChange = (e) => {}),
            (this._onTouched = () => {}),
            (this._validatorChange = () => {}),
            ["autoClose", "container", "positionTarget", "placement"].forEach(
              (e) => (this[e] = d[e])
            ),
            (this._zoneSubscription = o.onStable.subscribe(() =>
              this._updatePopupPosition()
            ));
        }
        get disabled() {
          return this._disabled;
        }
        set disabled(e) {
          (this._disabled = "" === e || (e && "false" !== e)),
            this.isOpen() &&
              this._cRef.instance.setDisabledState(this._disabled);
        }
        registerOnChange(e) {
          this._onChange = e;
        }
        registerOnTouched(e) {
          this._onTouched = e;
        }
        registerOnValidatorChange(e) {
          this._validatorChange = e;
        }
        setDisabledState(e) {
          this.disabled = e;
        }
        validate(e) {
          const { value: t } = e;
          if (null != t) {
            const e = this._fromDateStruct(this._dateAdapter.fromModel(t));
            if (!e) return { ngbDate: { invalid: t } };
            if (this.minDate && e.before(zn.from(this.minDate)))
              return {
                ngbDate: { minDate: { minDate: this.minDate, actual: t } },
              };
            if (this.maxDate && e.after(zn.from(this.maxDate)))
              return {
                ngbDate: { maxDate: { maxDate: this.maxDate, actual: t } },
              };
          }
          return null;
        }
        writeValue(e) {
          (this._model = this._fromDateStruct(this._dateAdapter.fromModel(e))),
            this._writeModelValue(this._model);
        }
        manualDateChange(e, t = !1) {
          const n = e !== this._inputValue;
          n &&
            ((this._inputValue = e),
            (this._model = this._fromDateStruct(
              this._parserFormatter.parse(e)
            ))),
            (!n && t) ||
              this._onChange(
                this._model
                  ? this._dateAdapter.toModel(this._model)
                  : "" === e
                  ? null
                  : e
              ),
            t && this._model && this._writeModelValue(this._model);
        }
        isOpen() {
          return !!this._cRef;
        }
        open() {
          if (!this.isOpen()) {
            const e = this._cfr.resolveComponentFactory(ds);
            (this._cRef = this._vcRef.createComponent(e)),
              this._applyPopupStyling(this._cRef.location.nativeElement),
              this._applyDatepickerInputs(this._cRef.instance),
              this._subscribeForDatepickerOutputs(this._cRef.instance),
              this._cRef.instance.ngOnInit(),
              this._cRef.instance.writeValue(
                this._dateAdapter.toModel(this._model)
              ),
              this._cRef.instance.registerOnChange((e) => {
                this.writeValue(e), this._onChange(e), this._onTouched();
              }),
              this._cRef.changeDetectorRef.detectChanges(),
              this._cRef.instance.setDisabledState(this.disabled),
              "body" === this.container &&
                this._document
                  .querySelector(this.container)
                  .appendChild(this._cRef.location.nativeElement),
              (this._elWithFocus = this._document.activeElement),
              Cs(
                this._ngZone,
                this._cRef.location.nativeElement,
                this.closed,
                !0
              ),
              this._cRef.instance.focus(),
              xs(
                this._ngZone,
                this._document,
                this.autoClose,
                () => this.close(),
                this.closed,
                [],
                [this._elRef.nativeElement, this._cRef.location.nativeElement]
              );
          }
        }
        close() {
          if (this.isOpen()) {
            this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView)),
              (this._cRef = null),
              this.closed.emit(),
              this._changeDetector.markForCheck();
            let e = this._elWithFocus;
            Ut(this.restoreFocus)
              ? (e = this._document.querySelector(this.restoreFocus))
              : void 0 !== this.restoreFocus && (e = this.restoreFocus),
              e && e.focus ? e.focus() : this._document.body.focus();
          }
        }
        toggle() {
          this.isOpen() ? this.close() : this.open();
        }
        navigateTo(e) {
          this.isOpen() && this._cRef.instance.navigateTo(e);
        }
        onBlur() {
          this._onTouched();
        }
        onFocus() {
          this._elWithFocus = this._elRef.nativeElement;
        }
        ngOnChanges(e) {
          (e.minDate || e.maxDate) &&
            (this._validatorChange(),
            this.isOpen() &&
              (e.minDate && (this._cRef.instance.minDate = this.minDate),
              e.maxDate && (this._cRef.instance.maxDate = this.maxDate),
              this._cRef.instance.ngOnChanges(e)));
        }
        ngOnDestroy() {
          this.close(), this._zoneSubscription.unsubscribe();
        }
        _applyDatepickerInputs(e) {
          [
            "dayTemplate",
            "dayTemplateData",
            "displayMonths",
            "firstDayOfWeek",
            "footerTemplate",
            "markDisabled",
            "minDate",
            "maxDate",
            "navigation",
            "outsideDays",
            "showNavigation",
            "showWeekdays",
            "showWeekNumbers",
          ].forEach((t) => {
            void 0 !== this[t] && (e[t] = this[t]);
          }),
            (e.startDate = this.startDate || this._model);
        }
        _applyPopupStyling(e) {
          this._renderer.addClass(e, "dropdown-menu"),
            this._renderer.addClass(e, "show"),
            "body" === this.container &&
              this._renderer.addClass(e, "ngb-dp-body");
        }
        _subscribeForDatepickerOutputs(e) {
          e.navigate.subscribe((e) => this.navigate.emit(e)),
            e.dateSelect.subscribe((e) => {
              this.dateSelect.emit(e),
                (!0 !== this.autoClose && "inside" !== this.autoClose) ||
                  this.close();
            });
        }
        _writeModelValue(e) {
          const t = this._parserFormatter.format(e);
          (this._inputValue = t),
            this._renderer.setProperty(this._elRef.nativeElement, "value", t),
            this.isOpen() &&
              (this._cRef.instance.writeValue(this._dateAdapter.toModel(e)),
              this._onTouched());
        }
        _fromDateStruct(e) {
          const t = e ? new zn(e.year, e.month, e.day) : null;
          return this._calendar.isValid(t) ? t : null;
        }
        _updatePopupPosition() {
          if (!this._cRef) return;
          let e;
          if (
            ((e = Ut(this.positionTarget)
              ? this._document.querySelector(this.positionTarget)
              : this.positionTarget instanceof HTMLElement
              ? this.positionTarget
              : this._elRef.nativeElement),
            this.positionTarget && !e)
          )
            throw new Error(
              "ngbDatepicker could not find element declared in [positionTarget] to position against."
            );
          ks(
            e,
            this._cRef.location.nativeElement,
            this.placement,
            "body" === this.container
          );
        }
      }
      (js.ɵfac = function (e) {
        return new (e || js)(
          s.Mc(Is),
          s.Mc(s.v),
          s.Mc(s.ob),
          s.Mc(s.Y),
          s.Mc(s.p),
          s.Mc(s.Q),
          s.Mc($n),
          s.Mc(os),
          s.Mc(i.c),
          s.Mc(s.k),
          s.Mc(Ds)
        );
      }),
        (js.ɵdir = s.Hc({
          type: js,
          selectors: [["input", "ngbDatepicker", ""]],
          hostVars: 1,
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("input", function (e) {
                return t.manualDateChange(e.target.value);
              })("change", function (e) {
                return t.manualDateChange(e.target.value, !0);
              })("focus", function () {
                return t.onFocus();
              })("blur", function () {
                return t.onBlur();
              }),
              2 & e && s.Uc("disabled", t.disabled);
          },
          inputs: {
            disabled: "disabled",
            autoClose: "autoClose",
            dayTemplate: "dayTemplate",
            dayTemplateData: "dayTemplateData",
            displayMonths: "displayMonths",
            firstDayOfWeek: "firstDayOfWeek",
            footerTemplate: "footerTemplate",
            markDisabled: "markDisabled",
            minDate: "minDate",
            maxDate: "maxDate",
            navigation: "navigation",
            outsideDays: "outsideDays",
            placement: "placement",
            restoreFocus: "restoreFocus",
            showWeekdays: "showWeekdays",
            showWeekNumbers: "showWeekNumbers",
            startDate: "startDate",
            container: "container",
            positionTarget: "positionTarget",
          },
          outputs: {
            dateSelect: "dateSelect",
            navigate: "navigate",
            closed: "closed",
          },
          exportAs: ["ngbDatepicker"],
          features: [s.yc([Ps, Rs, { provide: is, useExisting: Ds }]), s.xc],
        })),
        (js.ctorParameters = () => [
          { type: Is },
          { type: s.v },
          { type: s.ob },
          { type: s.Y },
          { type: s.p },
          { type: s.Q },
          { type: $n },
          { type: os },
          { type: void 0, decorators: [{ type: s.C, args: [i.c] }] },
          { type: s.k },
          { type: Ds },
        ]),
        (js.propDecorators = {
          autoClose: [{ type: s.G }],
          dayTemplate: [{ type: s.G }],
          dayTemplateData: [{ type: s.G }],
          displayMonths: [{ type: s.G }],
          firstDayOfWeek: [{ type: s.G }],
          footerTemplate: [{ type: s.G }],
          markDisabled: [{ type: s.G }],
          minDate: [{ type: s.G }],
          maxDate: [{ type: s.G }],
          navigation: [{ type: s.G }],
          outsideDays: [{ type: s.G }],
          placement: [{ type: s.G }],
          restoreFocus: [{ type: s.G }],
          showWeekdays: [{ type: s.G }],
          showWeekNumbers: [{ type: s.G }],
          startDate: [{ type: s.G }],
          container: [{ type: s.G }],
          positionTarget: [{ type: s.G }],
          dateSelect: [{ type: s.S }],
          navigate: [{ type: s.S }],
          closed: [{ type: s.S }],
          disabled: [{ type: s.G }],
        });
      class Ns {
        constructor(e) {
          this.i18n = e;
        }
        isMuted() {
          return (
            !this.selected &&
            (this.date.month !== this.currentMonth || this.disabled)
          );
        }
      }
      (Ns.ɵfac = function (e) {
        return new (e || Ns)(s.Mc(es));
      }),
        (Ns.ɵcmp = s.Gc({
          type: Ns,
          selectors: [["", "ngbDatepickerDayView", ""]],
          hostAttrs: [1, "btn-light"],
          hostVars: 10,
          hostBindings: function (e, t) {
            2 & e &&
              s.Ec("bg-primary", t.selected)("text-white", t.selected)(
                "text-muted",
                t.isMuted()
              )("outside", t.isMuted())("active", t.focused);
          },
          inputs: {
            currentMonth: "currentMonth",
            date: "date",
            disabled: "disabled",
            focused: "focused",
            selected: "selected",
          },
          attrs: ["ngbDatepickerDayView", ""],
          decls: 1,
          vars: 1,
          template: function (e, t) {
            1 & e && s.Ed(0), 2 & e && s.Fd(t.i18n.getDayNumerals(t.date));
          },
          styles: [
            "[ngbDatepickerDayView]{background:transparent;border-radius:.25rem;height:2rem;line-height:2rem;text-align:center;width:2rem}[ngbDatepickerDayView].outside{opacity:.5}",
          ],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (Ns.ctorParameters = () => [{ type: es }]),
        (Ns.propDecorators = {
          currentMonth: [{ type: s.G }],
          date: [{ type: s.G }],
          disabled: [{ type: s.G }],
          focused: [{ type: s.G }],
          selected: [{ type: s.G }],
        });
      class Fs {
        constructor(e, t) {
          (this.i18n = e),
            (this._renderer = t),
            (this.select = new s.x()),
            (this._month = -1),
            (this._year = -1);
        }
        changeMonth(e) {
          this.select.emit(new zn(this.date.year, zt(e), 1));
        }
        changeYear(e) {
          this.select.emit(new zn(zt(e), this.date.month, 1));
        }
        ngAfterViewChecked() {
          this.date &&
            (this.date.month !== this._month &&
              ((this._month = this.date.month),
              this._renderer.setProperty(
                this.monthSelect.nativeElement,
                "value",
                this._month
              )),
            this.date.year !== this._year &&
              ((this._year = this.date.year),
              this._renderer.setProperty(
                this.yearSelect.nativeElement,
                "value",
                this._year
              )));
        }
      }
      (Fs.ɵfac = function (e) {
        return new (e || Fs)(s.Mc(es), s.Mc(s.Y));
      }),
        (Fs.ɵcmp = s.Gc({
          type: Fs,
          selectors: [["ngb-datepicker-navigation-select"]],
          viewQuery: function (e, t) {
            if ((1 & e && (s.yd(Pe, !0, s.v), s.yd(Re, !0, s.v)), 2 & e)) {
              let e;
              s.sd((e = s.dd())) && (t.monthSelect = e.first),
                s.sd((e = s.dd())) && (t.yearSelect = e.first);
            }
          },
          inputs: {
            date: "date",
            disabled: "disabled",
            months: "months",
            years: "years",
          },
          outputs: { select: "select" },
          decls: 6,
          vars: 4,
          consts: function () {
            let e, t, n, s;
            return (
              (e = $localize`:@@ngb.datepicker.select-month␟1dbc84807f35518112f62e5775d1daebd3d8462b␟2253869508135064750:Select month`),
              (t = $localize`:@@ngb.datepicker.select-month␟1dbc84807f35518112f62e5775d1daebd3d8462b␟2253869508135064750:Select month`),
              (n = $localize`:@@ngb.datepicker.select-year␟8ceb09d002bf0c5d1cac171dfbffe1805d2b3962␟8852264961585484321:Select year`),
              (s = $localize`:@@ngb.datepicker.select-year␟8ceb09d002bf0c5d1cac171dfbffe1805d2b3962␟8852264961585484321:Select year`),
              [
                [
                  "aria-label",
                  e,
                  "title",
                  t,
                  1,
                  "custom-select",
                  3,
                  "disabled",
                  "change",
                ],
                ["month", ""],
                [3, "value", 4, "ngFor", "ngForOf"],
                [
                  "aria-label",
                  n,
                  "title",
                  s,
                  1,
                  "custom-select",
                  3,
                  "disabled",
                  "change",
                ],
                ["year", ""],
                [3, "value"],
              ]
            );
          },
          template: function (e, t) {
            1 & e &&
              (s.Rc(0, "select", 0, 1),
              s.cd("change", function (e) {
                return t.changeMonth(e.target.value);
              }),
              s.Cd(2, je, 2, 3, "option", 2),
              s.Qc(),
              s.Rc(3, "select", 3, 4),
              s.cd("change", function (e) {
                return t.changeYear(e.target.value);
              }),
              s.Cd(5, Ne, 2, 2, "option", 2),
              s.Qc()),
              2 & e &&
                (s.ld("disabled", t.disabled),
                s.zc(2),
                s.ld("ngForOf", t.months),
                s.zc(1),
                s.ld("disabled", t.disabled),
                s.zc(2),
                s.ld("ngForOf", t.years));
          },
          directives: [i.j, Q.k, Q.n],
          styles: [
            "ngb-datepicker-navigation-select>.custom-select{-ms-flex:1 1 auto;flex:1 1 auto;font-size:.875rem;height:1.85rem;padding:0 .5rem}ngb-datepicker-navigation-select>.custom-select:focus{z-index:1}ngb-datepicker-navigation-select>.custom-select::-ms-value{background-color:transparent!important}",
          ],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (Fs.ctorParameters = () => [{ type: es }, { type: s.Y }]),
        (Fs.propDecorators = {
          date: [{ type: s.G }],
          disabled: [{ type: s.G }],
          months: [{ type: s.G }],
          years: [{ type: s.G }],
          select: [{ type: s.S }],
          monthSelect: [
            { type: s.mb, args: ["month", { static: !0, read: s.v }] },
          ],
          yearSelect: [
            { type: s.mb, args: ["year", { static: !0, read: s.v }] },
          ],
        });
      class Ls extends $n {
        getDaysPerWeek() {
          return 7;
        }
        getMonths() {
          return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
        }
        getWeeksPerMonth() {
          return 6;
        }
        getNext(e, t = "d", n = 1) {
          switch (((e = new zn(e.year, e.month, e.day)), t)) {
            case "y":
              return (
                ((e = this._setYear(e, e.year + n)).month = 1), (e.day = 1), e
              );
            case "m":
              return ((e = this._setMonth(e, e.month + n)).day = 1), e;
            case "d":
              return this._setDay(e, e.day + n);
            default:
              return e;
          }
        }
        getPrev(e, t = "d", n = 1) {
          return this.getNext(e, t, -n);
        }
        getWeekday(e) {
          const t = this.toGregorian(e).getDay();
          return 0 === t ? 7 : t;
        }
        getWeekNumber(e, t) {
          7 === t && (t = 0);
          const n = e[(11 - t) % 7],
            s = this.toGregorian(n);
          s.setDate(s.getDate() + 4 - (s.getDay() || 7));
          const i = s.getTime(),
            r = this.toGregorian(new zn(n.year, 1, 1));
          return Math.floor(Math.round((i - r.getTime()) / 864e5) / 7) + 1;
        }
        getToday() {
          return this.fromGregorian(new Date());
        }
        isValid(e) {
          return (
            null != e &&
            $t(e.year) &&
            $t(e.month) &&
            $t(e.day) &&
            !isNaN(this.toGregorian(e).getTime())
          );
        }
        _setDay(e, t) {
          t = +t;
          let n = this.getDaysPerMonth(e.month, e.year);
          if (t <= 0)
            for (; t <= 0; )
              (e = this._setMonth(e, e.month - 1)),
                (n = this.getDaysPerMonth(e.month, e.year)),
                (t += n);
          else if (t > n)
            for (; t > n; )
              (t -= n),
                (e = this._setMonth(e, e.month + 1)),
                (n = this.getDaysPerMonth(e.month, e.year));
          return (e.day = t), e;
        }
        _setMonth(e, t) {
          return (
            (t = +t),
            (e.year = e.year + Math.floor((t - 1) / 12)),
            (e.month = Math.floor((((t - 1) % 12) + 12) % 12) + 1),
            e
          );
        }
        _setYear(e, t) {
          return (e.year = +t), e;
        }
      }
      (Ls.ɵfac = function (e) {
        return Vs(e || Ls);
      }),
        (Ls.ɵprov = s.Ic({ token: Ls, factory: Ls.ɵfac }));
      const Vs = s.Tc(Ls);
      function Bs(e) {
        const t = e.getFullYear();
        return (t % 4 == 0 && t % 100 != 0) || t % 400 == 0;
      }
      function zs(e, t) {
        return e - t * Math.floor(e / t);
      }
      const Hs = 1721425.5,
        Gs = 1948439.5;
      class Us extends Ls {
        fromGregorian(e) {
          const t = e.getFullYear(),
            n = e.getMonth(),
            s = e.getDate();
          let i =
            1721424.5 +
            365 * (t - 1) +
            Math.floor((t - 1) / 4) +
            -Math.floor((t - 1) / 100) +
            Math.floor((t - 1) / 400) +
            Math.floor(
              (367 * (n + 1) - 362) / 12 +
                (n + 1 <= 2 ? 0 : Bs(e) ? -1 : -2) +
                s
            );
          i = Math.floor(i) + 0.5;
          const r = i - Gs,
            o = Math.floor((30 * r + 10646) / 10631);
          let a = Math.ceil(
            (r - 29 - (354 * ((l = o) - 1) + Math.floor((3 + 11 * l) / 30))) /
              29.5
          );
          var l;
          a = Math.min(a, 11);
          const c =
            Math.ceil(
              r -
                (function (e, t) {
                  return (
                    Math.ceil(29.5 * t) +
                    354 * (e - 1) +
                    Math.floor((3 + 11 * e) / 30)
                  );
                })(o, a)
            ) + 1;
          return new zn(o, a + 1, c);
        }
        toGregorian(e) {
          const t = e.year,
            n = e.month - 1,
            s =
              e.day +
              Math.ceil(29.5 * n) +
              354 * (t - 1) +
              Math.floor((3 + 11 * t) / 30) +
              Gs -
              1,
            i = Math.floor(s - 0.5) + 0.5,
            r = i - Hs,
            o = Math.floor(r / 146097),
            a = zs(r, 146097),
            l = Math.floor(a / 36524),
            c = zs(a, 36524),
            u = Math.floor(c / 1461),
            d = zs(c, 1461),
            h = Math.floor(d / 365);
          let p = 400 * o + 100 * l + 4 * u + h;
          4 !== l && 4 !== h && p++;
          const m =
              i -
              (Hs +
                365 * (p - 1) +
                Math.floor((p - 1) / 4) -
                Math.floor((p - 1) / 100) +
                Math.floor((p - 1) / 400)),
            f =
              i <
              1721424.5 +
                365 * (p - 1) +
                Math.floor((p - 1) / 4) -
                Math.floor((p - 1) / 100) +
                Math.floor((p - 1) / 400) +
                Math.floor(739 / 12 + (Bs(new Date(p, 3, 1)) ? -1 : -2) + 1)
                ? 0
                : Bs(new Date(p, 3, 1))
                ? 1
                : 2,
            g = Math.floor((12 * (m + f) + 373) / 367),
            y =
              1721424.5 +
              365 * (p - 1) +
              Math.floor((p - 1) / 4) -
              Math.floor((p - 1) / 100) +
              Math.floor((p - 1) / 400) +
              Math.floor(
                (367 * g - 362) / 12 +
                  (g <= 2 ? 0 : Bs(new Date(p, g - 1, 1)) ? -1 : -2) +
                  1
              );
          return new Date(p, g - 1, i - y + 1);
        }
        getDaysPerMonth(e, t) {
          t += Math.floor(e / 13);
          let n = 29 + ((e = ((e - 1) % 12) + 1) % 2);
          return 12 === e && (14 + 11 * t) % 30 < 11 && n++, n;
        }
      }
      (Us.ɵfac = function (e) {
        return $s(e || Us);
      }),
        (Us.ɵprov = s.Ic({ token: Us, factory: Us.ɵfac }));
      const $s = s.Tc(Us),
        qs = new Date(1882, 10, 12),
        Ws = new Date(2174, 10, 25),
        Ys = 1300,
        Qs = [
          "101010101010",
          "110101010100",
          "111011001001",
          "011011010100",
          "011011101010",
          "001101101100",
          "101010101101",
          "010101010101",
          "011010101001",
          "011110010010",
          "101110101001",
          "010111010100",
          "101011011010",
          "010101011100",
          "110100101101",
          "011010010101",
          "011101001010",
          "101101010100",
          "101101101010",
          "010110101101",
          "010010101110",
          "101001001111",
          "010100010111",
          "011010001011",
          "011010100101",
          "101011010101",
          "001011010110",
          "100101011011",
          "010010011101",
          "101001001101",
          "110100100110",
          "110110010101",
          "010110101100",
          "100110110110",
          "001010111010",
          "101001011011",
          "010100101011",
          "101010010101",
          "011011001010",
          "101011101001",
          "001011110100",
          "100101110110",
          "001010110110",
          "100101010110",
          "101011001010",
          "101110100100",
          "101111010010",
          "010111011001",
          "001011011100",
          "100101101101",
          "010101001101",
          "101010100101",
          "101101010010",
          "101110100101",
          "010110110100",
          "100110110110",
          "010101010111",
          "001010010111",
          "010101001011",
          "011010100011",
          "011101010010",
          "101101100101",
          "010101101010",
          "101010101011",
          "010100101011",
          "110010010101",
          "110101001010",
          "110110100101",
          "010111001010",
          "101011010110",
          "100101010111",
          "010010101011",
          "100101001011",
          "101010100101",
          "101101010010",
          "101101101010",
          "010101110101",
          "001001110110",
          "100010110111",
          "010001011011",
          "010101010101",
          "010110101001",
          "010110110100",
          "100111011010",
          "010011011101",
          "001001101110",
          "100100110110",
          "101010101010",
          "110101010100",
          "110110110010",
          "010111010101",
          "001011011010",
          "100101011011",
          "010010101011",
          "101001010101",
          "101101001001",
          "101101100100",
          "101101110001",
          "010110110100",
          "101010110101",
          "101001010101",
          "110100100101",
          "111010010010",
          "111011001001",
          "011011010100",
          "101011101001",
          "100101101011",
          "010010101011",
          "101010010011",
          "110101001001",
          "110110100100",
          "110110110010",
          "101010111001",
          "010010111010",
          "101001011011",
          "010100101011",
          "101010010101",
          "101100101010",
          "101101010101",
          "010101011100",
          "010010111101",
          "001000111101",
          "100100011101",
          "101010010101",
          "101101001010",
          "101101011010",
          "010101101101",
          "001010110110",
          "100100111011",
          "010010011011",
          "011001010101",
          "011010101001",
          "011101010100",
          "101101101010",
          "010101101100",
          "101010101101",
          "010101010101",
          "101100101001",
          "101110010010",
          "101110101001",
          "010111010100",
          "101011011010",
          "010101011010",
          "101010101011",
          "010110010101",
          "011101001001",
          "011101100100",
          "101110101010",
          "010110110101",
          "001010110110",
          "101001010110",
          "111001001101",
          "101100100101",
          "101101010010",
          "101101101010",
          "010110101101",
          "001010101110",
          "100100101111",
          "010010010111",
          "011001001011",
          "011010100101",
          "011010101100",
          "101011010110",
          "010101011101",
          "010010011101",
          "101001001101",
          "110100010110",
          "110110010101",
          "010110101010",
          "010110110101",
          "001011011010",
          "100101011011",
          "010010101101",
          "010110010101",
          "011011001010",
          "011011100100",
          "101011101010",
          "010011110101",
          "001010110110",
          "100101010110",
          "101010101010",
          "101101010100",
          "101111010010",
          "010111011001",
          "001011101010",
          "100101101101",
          "010010101101",
          "101010010101",
          "101101001010",
          "101110100101",
          "010110110010",
          "100110110101",
          "010011010110",
          "101010010111",
          "010101000111",
          "011010010011",
          "011101001001",
          "101101010101",
          "010101101010",
          "101001101011",
          "010100101011",
          "101010001011",
          "110101000110",
          "110110100011",
          "010111001010",
          "101011010110",
          "010011011011",
          "001001101011",
          "100101001011",
          "101010100101",
          "101101010010",
          "101101101001",
          "010101110101",
          "000101110110",
          "100010110111",
          "001001011011",
          "010100101011",
          "010101100101",
          "010110110100",
          "100111011010",
          "010011101101",
          "000101101101",
          "100010110110",
          "101010100110",
          "110101010010",
          "110110101001",
          "010111010100",
          "101011011010",
          "100101011011",
          "010010101011",
          "011001010011",
          "011100101001",
          "011101100010",
          "101110101001",
          "010110110010",
          "101010110101",
          "010101010101",
          "101100100101",
          "110110010010",
          "111011001001",
          "011011010010",
          "101011101001",
          "010101101011",
          "010010101011",
          "101001010101",
          "110100101001",
          "110101010100",
          "110110101010",
          "100110110101",
          "010010111010",
          "101000111011",
          "010010011011",
          "101001001101",
          "101010101010",
          "101011010101",
          "001011011010",
          "100101011101",
          "010001011110",
          "101000101110",
          "110010011010",
          "110101010101",
          "011010110010",
          "011010111001",
          "010010111010",
          "101001011101",
          "010100101101",
          "101010010101",
          "101101010010",
          "101110101000",
          "101110110100",
          "010110111001",
          "001011011010",
          "100101011010",
          "101101001010",
          "110110100100",
          "111011010001",
          "011011101000",
          "101101101010",
          "010101101101",
          "010100110101",
          "011010010101",
          "110101001010",
          "110110101000",
          "110111010100",
          "011011011010",
          "010101011011",
          "001010011101",
          "011000101011",
          "101100010101",
          "101101001010",
          "101110010101",
          "010110101010",
          "101010101110",
          "100100101110",
          "110010001111",
          "010100100111",
          "011010010101",
          "011010101010",
          "101011010110",
          "010101011101",
          "001010011101",
        ];
      class Ks extends Us {
        fromGregorian(e) {
          let t = 1,
            n = 0,
            s = 1300,
            i = (function (e, t) {
              const n = Date.UTC(e.getFullYear(), e.getMonth(), e.getDate()),
                s = Date.UTC(t.getFullYear(), t.getMonth(), t.getDate()),
                i = Math.abs(n - s);
              return Math.round(i / 864e5);
            })(e, qs);
          if (
            e.getTime() - qs.getTime() >= 0 &&
            e.getTime() - Ws.getTime() <= 0
          ) {
            let e = 1300;
            for (let r = 0; r < Qs.length; r++, e++)
              for (let o = 0; o < 12; o++) {
                let a = +Qs[r][o] + 29;
                if (i <= a)
                  return (
                    (t = i + 1),
                    t > a && ((t = 1), o++),
                    o > 11 && ((o = 0), e++),
                    (n = o),
                    (s = e),
                    new zn(s, n + 1, t)
                  );
                i -= a;
              }
            return null;
          }
          return super.fromGregorian(e);
        }
        toGregorian(e) {
          const t = e.year,
            n = e.month - 1,
            s = e.day;
          let i = new Date(qs),
            r = s - 1;
          if (t >= Ys && t <= 1600) {
            for (let e = 0; e < t - Ys; e++)
              for (let t = 0; t < 12; t++) r += +Qs[e][t] + 29;
            for (let e = 0; e < n; e++) r += +Qs[t - Ys][e] + 29;
            i.setDate(qs.getDate() + r);
          } else i = super.toGregorian(e);
          return i;
        }
        getDaysPerMonth(e, t) {
          if (t >= Ys && t <= 1600) {
            return +Qs[t - Ys][e - 1] + 29;
          }
          return super.getDaysPerMonth(e, t);
        }
      }
      (Ks.ɵfac = function (e) {
        return Js(e || Ks);
      }),
        (Ks.ɵprov = s.Ic({ token: Ks, factory: Ks.ɵfac }));
      const Js = s.Tc(Ks);
      function Xs(e) {
        let t = ii(
          (function (e, t, n) {
            let s = si(e);
            return (
              ri(s.gy, 3, s.march) + 31 * (t - 1) - ni(t, 7) * (t - 7) + n - 1
            );
          })(e.year, e.month, e.day)
        );
        return t.setHours(6, 30, 3, 200), t;
      }
      function Zs(e) {
        return (function (e) {
          let t,
            n,
            s,
            i = ii(e).getFullYear(),
            r = i - 621,
            o = si(r),
            a = ri(i, 3, o.march);
          if (((s = e - a), s >= 0)) {
            if (s <= 185)
              return (n = 1 + ni(s, 31)), (t = ti(s, 31) + 1), new zn(r, n, t);
            s -= 186;
          } else (r -= 1), (s += 179), 1 === o.leap && (s += 1);
          return (n = 7 + ni(s, 30)), (t = ti(s, 30) + 1), new zn(r, n, t);
        })(ri(e.getFullYear(), e.getMonth() + 1, e.getDate()));
      }
      function ei(e, t) {
        return (
          (t = +t),
          (e.year = e.year + Math.floor((t - 1) / 12)),
          (e.month = Math.floor((((t - 1) % 12) + 12) % 12) + 1),
          e
        );
      }
      function ti(e, t) {
        return e - t * Math.floor(e / t);
      }
      function ni(e, t) {
        return Math.trunc(e / t);
      }
      function si(e) {
        let t = [
          -61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060,
          2097, 2192, 2262, 2324, 2394, 2456, 3178,
        ];
        const n = t.length,
          s = e + 621;
        let i,
          r = -14,
          o = t[0];
        if (e < o || e >= t[n - 1]) throw new Error("Invalid Jalali year " + e);
        for (let u = 1; u < n; u += 1) {
          const n = t[u];
          if (((i = n - o), e < n)) break;
          (r = r + 8 * ni(i, 33) + ni(ti(i, 33), 4)), (o = n);
        }
        let a = e - o;
        (r = r + 8 * ni(a, 33) + ni(ti(a, 33) + 3, 4)),
          4 === ti(i, 33) && i - a == 4 && (r += 1);
        const l = 20 + r - (ni(s, 4) - ni(3 * (ni(s, 100) + 1), 4) - 150);
        i - a < 6 && (a = a - i + 33 * ni(i + 4, 33));
        let c = ti(ti(a + 1, 33) - 1, 4);
        return -1 === c && (c = 4), { leap: c, gy: s, march: l };
      }
      function ii(e) {
        let t = 4 * e + 139361631;
        t = t + 4 * ni(3 * ni(4 * e + 183187720, 146097), 4) - 3908;
        const n = 5 * ni(ti(t, 1461), 4) + 308,
          s = ni(ti(n, 153), 5) + 1,
          i = ti(ni(n, 153), 12) + 1,
          r = ni(t, 1461) - 100100 + ni(8 - i, 6);
        return new Date(r, i - 1, s);
      }
      function ri(e, t, n) {
        let s =
          ni(1461 * (e + ni(t - 8, 6) + 100100), 4) +
          ni(153 * ti(t + 9, 12) + 2, 5) +
          n -
          34840408;
        return (s = s - ni(3 * ni(e + 100100 + ni(t - 8, 6), 100), 4) + 752), s;
      }
      function oi(e, t) {
        return e <= 6 ? 31 : e <= 11 || 0 === si(t).leap ? 30 : 29;
      }
      class ai extends $n {
        getDaysPerWeek() {
          return 7;
        }
        getMonths() {
          return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
        }
        getWeeksPerMonth() {
          return 6;
        }
        getNext(e, t = "d", n = 1) {
          switch (((e = new zn(e.year, e.month, e.day)), t)) {
            case "y":
              return (
                ((e = (function (e, t) {
                  return (e.year = +t), e;
                })(e, e.year + n)).month = 1),
                (e.day = 1),
                e
              );
            case "m":
              return ((e = ei(e, e.month + n)).day = 1), e;
            case "d":
              return (function (e, t) {
                let n = oi(e.month, e.year);
                if (t <= 0)
                  for (; t <= 0; )
                    (n = oi((e = ei(e, e.month - 1)).month, e.year)), (t += n);
                else if (t > n)
                  for (; t > n; )
                    (t -= n), (n = oi((e = ei(e, e.month + 1)).month, e.year));
                return (e.day = t), e;
              })(e, e.day + n);
            default:
              return e;
          }
        }
        getPrev(e, t = "d", n = 1) {
          return this.getNext(e, t, -n);
        }
        getWeekday(e) {
          const t = Xs(e).getDay();
          return 0 === t ? 7 : t;
        }
        getWeekNumber(e, t) {
          7 === t && (t = 0);
          const n = e[(11 - t) % 7],
            s = Xs(n);
          s.setDate(s.getDate() + 4 - (s.getDay() || 7));
          const i = s.getTime(),
            r = Xs(new zn(n.year, 1, 1));
          return Math.floor(Math.round((i - r.getTime()) / 864e5) / 7) + 1;
        }
        getToday() {
          return Zs(new Date());
        }
        isValid(e) {
          return (
            null != e &&
            qt(e.year) &&
            qt(e.month) &&
            qt(e.day) &&
            !isNaN(Xs(e).getTime())
          );
        }
      }
      (ai.ɵfac = function (e) {
        return li(e || ai);
      }),
        (ai.ɵprov = s.Ic({ token: ai, factory: ai.ɵfac }));
      const li = s.Tc(ai),
        ci = 25920;
      function ui(e) {
        return (e % 4 == 0 && e % 100 != 0) || e % 400 == 0;
      }
      function di(e) {
        let t = Math.floor((235 * e - 234) / 19),
          n = 13753 * t + 12084,
          s = 29 * t + Math.floor(n / ci),
          i = n % ci,
          r = s % 7;
        return (
          (2 !== r && 4 !== r && 6 !== r) || (s++, (r = s % 7)),
          1 === r && i > 16404 && !fi(e)
            ? (s += 2)
            : 0 === r && i > 23269 && fi(e - 1) && s++,
          s
        );
      }
      function hi(e, t) {
        let n = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
        return ui(t) && n[1]++, n[e - 1];
      }
      function pi(e) {
        return fi(e) ? 13 : 12;
      }
      function mi(e) {
        return di(e + 1) - di(e);
      }
      function fi(e) {
        if (null != e) {
          let t = (12 * e + 17) % 19;
          return t >= (t < 0 ? -7 : 12);
        }
        return !1;
      }
      function gi(e, t) {
        let n = di(t + 1) - di(t),
          s = (n <= 380 ? n : n - 30) - 353,
          i = fi(t)
            ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29]
            : [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];
        return s > 0 && i[2]++, s > 1 && i[1]++, i[e - 1];
      }
      function yi(e) {
        let t = 0;
        for (let n = 1; n < e.month; n++) t += gi(n, e.year);
        return t + e.day;
      }
      function vi(e) {
        const t = new Date(e),
          n = t.getFullYear(),
          s = t.getMonth(),
          i = t.getDate();
        let r =
          1721424.5 +
          365 * (n - 1) +
          Math.floor((n - 1) / 4) -
          Math.floor((n - 1) / 100) +
          Math.floor((n - 1) / 400) +
          Math.floor(
            (367 * (s + 1) - 362) / 12 + (s + 1 <= 2 ? 0 : ui(n) ? -1 : -2) + i
          );
        r = Math.floor(r + 0.5);
        let o = r - 347997,
          a = Math.floor((o * ci) / 765433),
          l = Math.floor((19 * a + 234) / 235) + 1,
          c = di(l),
          u = o - c;
        for (; u < 1; ) l--, (c = di(l)), (u = o - c);
        let d = 1,
          h = u;
        for (; h > gi(d, l); ) (h -= gi(d, l)), d++;
        return new zn(l, d, h);
      }
      function bi(e) {
        const t = e.year,
          n = e.month,
          s = e.day;
        let i = di(t);
        for (let u = 1; u < n; u++) i += gi(u, t);
        i += s;
        let r = i - 2092591,
          o = r >= 0;
        o || (r = -r);
        let a = 1970,
          l = 1,
          c = 1;
        for (; r > 0; )
          o
            ? r >= (ui(a) ? 366 : 365)
              ? ((r -= ui(a) ? 366 : 365), a++)
              : r >= hi(l, a)
              ? ((r -= hi(l, a)), l++)
              : ((c += r), (r = 0))
            : r >= (ui(a - 1) ? 366 : 365)
            ? ((r -= ui(a - 1) ? 366 : 365), a--)
            : (l > 1 ? l-- : ((l = 12), a--),
              r >= hi(l, a)
                ? (r -= hi(l, a))
                : ((c = hi(l, a) - r + 1), (r = 0)));
        return new Date(a, l - 1, c);
      }
      function xi(e) {
        if (!e) return "";
        const t = [
            "",
            "\u05d0",
            "\u05d1",
            "\u05d2",
            "\u05d3",
            "\u05d4",
            "\u05d5",
            "\u05d6",
            "\u05d7",
            "\u05d8",
          ],
          n = [
            "\u05d9",
            "\u05d9\u05d0",
            "\u05d9\u05d1",
            "\u05d9\u05d2",
            "\u05d9\u05d3",
            "\u05d8\u05d5",
            "\u05d8\u05d6",
            "\u05d9\u05d6",
            "\u05d9\u05d7",
            "\u05d9\u05d8",
          ],
          s = [
            "",
            "",
            "\u05db",
            "\u05dc",
            "\u05de",
            "\u05e0",
            "\u05e1",
            "\u05e2",
            "\u05e4",
            "\u05e6",
          ],
          i = [
            "",
            "\u05e7",
            "\u05e8",
            "\u05e9",
            "\u05ea",
            "\u05ea\u05e7",
            "\u05ea\u05e8",
            "\u05ea\u05e9",
            "\u05ea\u05ea",
            "\u05ea\u05ea\u05e7",
          ],
          r = [
            "",
            "\u05d0",
            "\u05d1",
            "\u05d1\u05d0",
            "\u05d1\u05d1",
            "\u05d4",
            "\u05d4\u05d0",
            "\u05d4\u05d1",
            "\u05d4\u05d1\u05d0",
            "\u05d4\u05d1\u05d1",
          ];
        let o = 0,
          a = [],
          l = 0;
        for (; e > 0; ) {
          let c = e % 10;
          if (0 === l) o = c;
          else if (1 === l) 1 !== c ? a.unshift(s[c], t[o]) : a.unshift(n[o]);
          else {
            if (2 !== l) {
              5 !== c && a.unshift(r[c], "\u05f3", " ");
              break;
            }
            a.unshift(i[c]);
          }
          (e = Math.floor(e / 10)), 0 === l && 0 === e && a.unshift(t[c]), l++;
        }
        return (
          (a = a.join("").split("")),
          1 === a.length
            ? a.push("\u05f3")
            : a.length > 1 && a.splice(a.length - 1, 0, "\u05f4"),
          a.join("")
        );
      }
      class _i extends $n {
        getDaysPerWeek() {
          return 7;
        }
        getMonths(e) {
          return e && fi(e)
            ? [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
            : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
        }
        getWeeksPerMonth() {
          return 6;
        }
        isValid(e) {
          if (null != e) {
            let t = $t(e.year) && $t(e.month) && $t(e.day);
            return (
              (t = t && e.month > 0 && e.month <= (fi(e.year) ? 13 : 12)),
              (t = t && e.day > 0 && e.day <= gi(e.month, e.year)),
              t && !isNaN(bi(e).getTime())
            );
          }
          return !1;
        }
        getNext(e, t = "d", n = 1) {
          switch (((e = new zn(e.year, e.month, e.day)), t)) {
            case "y":
              return (e.year += n), (e.month = 1), (e.day = 1), e;
            case "m":
              return (
                ((e = (function (e, t) {
                  let n = t >= 0;
                  for (n || (t = -t); t > 0; )
                    n
                      ? t > pi(e.year) - e.month
                        ? ((t -= pi(e.year) - e.month + 1),
                          e.year++,
                          (e.month = 1))
                        : ((e.month += t), (t = 0))
                      : t >= e.month
                      ? (e.year--, (t -= e.month), (e.month = pi(e.year)))
                      : ((e.month -= t), (t = 0));
                  return e;
                })(e, n)).day = 1),
                e
              );
            case "d":
              return (function (e, t) {
                let n = t >= 0;
                for (n || (t = -t); t > 0; )
                  n
                    ? t > mi(e.year) - yi(e)
                      ? ((t -= mi(e.year) - yi(e) + 1),
                        e.year++,
                        (e.month = 1),
                        (e.day = 1))
                      : t > gi(e.month, e.year) - e.day
                      ? ((t -= gi(e.month, e.year) - e.day + 1),
                        e.month++,
                        (e.day = 1))
                      : ((e.day += t), (t = 0))
                    : t >= e.day
                    ? ((t -= e.day),
                      e.month--,
                      0 === e.month && (e.year--, (e.month = pi(e.year))),
                      (e.day = gi(e.month, e.year)))
                    : ((e.day -= t), (t = 0));
                return e;
              })(e, n);
            default:
              return e;
          }
        }
        getPrev(e, t = "d", n = 1) {
          return this.getNext(e, t, -n);
        }
        getWeekday(e) {
          const t = bi(e).getDay();
          return 0 === t ? 7 : t;
        }
        getWeekNumber(e, t) {
          const n = e[e.length - 1];
          return Math.ceil(yi(n) / 7);
        }
        getToday() {
          return vi(new Date());
        }
        toGregorian(e) {
          return Hn(bi(e));
        }
        fromGregorian(e) {
          return vi(Gn(e));
        }
      }
      (_i.ɵfac = function (e) {
        return wi(e || _i);
      }),
        (_i.ɵprov = s.Ic({ token: _i, factory: _i.ɵfac }));
      const wi = s.Tc(_i),
        Ci = [
          "\u05e9\u05e0\u05d9",
          "\u05e9\u05dc\u05d9\u05e9\u05d9",
          "\u05e8\u05d1\u05d9\u05e2\u05d9",
          "\u05d7\u05de\u05d9\u05e9\u05d9",
          "\u05e9\u05d9\u05e9\u05d9",
          "\u05e9\u05d1\u05ea",
          "\u05e8\u05d0\u05e9\u05d5\u05df",
        ],
        Si = [
          "\u05ea\u05e9\u05e8\u05d9",
          "\u05d7\u05e9\u05d5\u05df",
          "\u05db\u05e1\u05dc\u05d5",
          "\u05d8\u05d1\u05ea",
          "\u05e9\u05d1\u05d8",
          "\u05d0\u05d3\u05e8",
          "\u05e0\u05d9\u05e1\u05df",
          "\u05d0\u05d9\u05d9\u05e8",
          "\u05e1\u05d9\u05d5\u05df",
          "\u05ea\u05de\u05d5\u05d6",
          "\u05d0\u05d1",
          "\u05d0\u05dc\u05d5\u05dc",
        ],
        Ei = [
          "\u05ea\u05e9\u05e8\u05d9",
          "\u05d7\u05e9\u05d5\u05df",
          "\u05db\u05e1\u05dc\u05d5",
          "\u05d8\u05d1\u05ea",
          "\u05e9\u05d1\u05d8",
          "\u05d0\u05d3\u05e8 \u05d0\u05f3",
          "\u05d0\u05d3\u05e8 \u05d1\u05f3",
          "\u05e0\u05d9\u05e1\u05df",
          "\u05d0\u05d9\u05d9\u05e8",
          "\u05e1\u05d9\u05d5\u05df",
          "\u05ea\u05de\u05d5\u05d6",
          "\u05d0\u05d1",
          "\u05d0\u05dc\u05d5\u05dc",
        ];
      class ki extends es {
        getMonthShortName(e, t) {
          return this.getMonthFullName(e, t);
        }
        getMonthFullName(e, t) {
          return fi(t) ? Ei[e - 1] || "" : Si[e - 1] || "";
        }
        getWeekdayShortName(e) {
          return Ci[e - 1] || "";
        }
        getDayAriaLabel(e) {
          return `${xi(e.day)} ${this.getMonthFullName(e.month, e.year)} ${xi(
            e.year
          )}`;
        }
        getDayNumerals(e) {
          return xi(e.day);
        }
        getWeekNumerals(e) {
          return xi(e);
        }
        getYearNumerals(e) {
          return xi(e);
        }
      }
      (ki.ɵfac = function (e) {
        return Oi(e || ki);
      }),
        (ki.ɵprov = s.Ic({ token: ki, factory: ki.ɵfac }));
      const Oi = s.Tc(ki);
      class Ii extends os {
        fromModel(e) {
          return e instanceof Date && !isNaN(e.getTime())
            ? this._fromNativeDate(e)
            : null;
        }
        toModel(e) {
          return e && qt(e.year) && qt(e.month) && qt(e.day)
            ? this._toNativeDate(e)
            : null;
        }
        _fromNativeDate(e) {
          return {
            year: e.getFullYear(),
            month: e.getMonth() + 1,
            day: e.getDate(),
          };
        }
        _toNativeDate(e) {
          const t = new Date(e.year, e.month - 1, e.day, 12);
          return t.setFullYear(e.year), t;
        }
      }
      (Ii.ɵfac = function (e) {
        return Ti(e || Ii);
      }),
        (Ii.ɵprov = s.Ic({ token: Ii, factory: Ii.ɵfac }));
      const Ti = s.Tc(Ii);
      class Ai extends Ii {
        _fromNativeDate(e) {
          return {
            year: e.getUTCFullYear(),
            month: e.getUTCMonth() + 1,
            day: e.getUTCDate(),
          };
        }
        _toNativeDate(e) {
          const t = new Date(Date.UTC(e.year, e.month - 1, e.day));
          return t.setUTCFullYear(e.year), t;
        }
      }
      (Ai.ɵfac = function (e) {
        return Di(e || Ai);
      }),
        (Ai.ɵprov = s.Ic({ token: Ai, factory: Ai.ɵfac }));
      const Di = s.Tc(Ai);
      class Mi {}
      (Mi.ɵmod = s.Kc({ type: Mi })),
        (Mi.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || Mi)();
          },
          imports: [[i.b, Q.f]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(Mi, {
            declarations: function () {
              return [ds, us, ms, fs, Fs, Ns, js];
            },
            imports: function () {
              return [i.b, Q.f];
            },
            exports: function () {
              return [ds, us, js, ms];
            },
          });
      class Pi {
        constructor() {
          (this.autoClose = !0),
            (this.placement = [
              "bottom-left",
              "bottom-right",
              "top-left",
              "top-right",
            ]);
        }
      }
      (Pi.ɵfac = function (e) {
        return new (e || Pi)();
      }),
        (Pi.ɵprov = Object(s.Ic)({
          factory: function () {
            return new Pi();
          },
          token: Pi,
          providedIn: "root",
        }));
      class Ri {}
      (Ri.ɵfac = function (e) {
        return new (e || Ri)();
      }),
        (Ri.ɵdir = s.Hc({ type: Ri, selectors: [["", 8, "navbar"]] }));
      class ji {
        constructor(e) {
          (this.elementRef = e), (this._disabled = !1);
        }
        set disabled(e) {
          this._disabled = "" === e || !0 === e;
        }
        get disabled() {
          return this._disabled;
        }
      }
      (ji.ɵfac = function (e) {
        return new (e || ji)(s.Mc(s.v));
      }),
        (ji.ɵdir = s.Hc({
          type: ji,
          selectors: [["", "ngbDropdownItem", ""]],
          hostAttrs: [1, "dropdown-item"],
          hostVars: 2,
          hostBindings: function (e, t) {
            2 & e && s.Ec("disabled", t.disabled);
          },
          inputs: { disabled: "disabled" },
        })),
        (ji.ctorParameters = () => [{ type: s.v }]),
        (ji.propDecorators = { disabled: [{ type: s.G }] });
      class Ni {
        constructor(e, t) {
          (this.dropdown = e),
            (this.placement = "bottom"),
            (this.isOpen = !1),
            (this.nativeElement = t.nativeElement);
        }
      }
      (Ni.ɵfac = function (e) {
        return new (e || Ni)(s.Mc(Object(s.sb)(() => Vi)), s.Mc(s.v));
      }),
        (Ni.ɵdir = s.Hc({
          type: Ni,
          selectors: [["", "ngbDropdownMenu", ""]],
          contentQueries: function (e, t, n) {
            if ((1 & e && s.Fc(n, ji, !1), 2 & e)) {
              let e;
              s.sd((e = s.dd())) && (t.menuItems = e);
            }
          },
          hostVars: 5,
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("keydown.ArrowUp", function (e) {
                return t.dropdown.onKeyDown(e);
              })("keydown.ArrowDown", function (e) {
                return t.dropdown.onKeyDown(e);
              })("keydown.Home", function (e) {
                return t.dropdown.onKeyDown(e);
              })("keydown.End", function (e) {
                return t.dropdown.onKeyDown(e);
              })("keydown.Enter", function (e) {
                return t.dropdown.onKeyDown(e);
              })("keydown.Space", function (e) {
                return t.dropdown.onKeyDown(e);
              })("keydown.Tab", function (e) {
                return t.dropdown.onKeyDown(e);
              })("keydown.Shift.Tab", function (e) {
                return t.dropdown.onKeyDown(e);
              }),
              2 & e &&
                (s.Ac("x-placement", t.placement),
                s.Ec("dropdown-menu", !0)("show", t.dropdown.isOpen()));
          },
        })),
        (Ni.ctorParameters = () => [
          {
            type: void 0,
            decorators: [{ type: s.C, args: [Object(s.sb)(() => Vi)] }],
          },
          { type: s.v },
        ]),
        (Ni.propDecorators = { menuItems: [{ type: s.s, args: [ji] }] });
      class Fi {
        constructor(e, t) {
          (this.dropdown = e), (this.nativeElement = t.nativeElement);
        }
      }
      (Fi.ɵfac = function (e) {
        return new (e || Fi)(s.Mc(Object(s.sb)(() => Vi)), s.Mc(s.v));
      }),
        (Fi.ɵdir = s.Hc({
          type: Fi,
          selectors: [["", "ngbDropdownAnchor", ""]],
          hostAttrs: [1, "dropdown-toggle"],
          hostVars: 1,
          hostBindings: function (e, t) {
            2 & e && s.Ac("aria-expanded", t.dropdown.isOpen());
          },
        })),
        (Fi.ctorParameters = () => [
          {
            type: void 0,
            decorators: [{ type: s.C, args: [Object(s.sb)(() => Vi)] }],
          },
          { type: s.v },
        ]);
      class Li extends Fi {
        constructor(e, t) {
          super(e, t);
        }
      }
      (Li.ɵfac = function (e) {
        return new (e || Li)(s.Mc(Object(s.sb)(() => Vi)), s.Mc(s.v));
      }),
        (Li.ɵdir = s.Hc({
          type: Li,
          selectors: [["", "ngbDropdownToggle", ""]],
          hostAttrs: [1, "dropdown-toggle"],
          hostVars: 1,
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("click", function () {
                return t.dropdown.toggle();
              })("keydown.ArrowUp", function (e) {
                return t.dropdown.onKeyDown(e);
              })("keydown.ArrowDown", function (e) {
                return t.dropdown.onKeyDown(e);
              })("keydown.Home", function (e) {
                return t.dropdown.onKeyDown(e);
              })("keydown.End", function (e) {
                return t.dropdown.onKeyDown(e);
              })("keydown.Tab", function (e) {
                return t.dropdown.onKeyDown(e);
              })("keydown.Shift.Tab", function (e) {
                return t.dropdown.onKeyDown(e);
              }),
              2 & e && s.Ac("aria-expanded", t.dropdown.isOpen());
          },
          features: [
            s.yc([{ provide: Fi, useExisting: Object(s.sb)(() => Li) }]),
            s.wc,
          ],
        })),
        (Li.ctorParameters = () => [
          {
            type: void 0,
            decorators: [{ type: s.C, args: [Object(s.sb)(() => Vi)] }],
          },
          { type: s.v },
        ]);
      class Vi {
        constructor(e, t, n, i, r, o, l) {
          (this._changeDetector = e),
            (this._document = n),
            (this._ngZone = i),
            (this._elementRef = r),
            (this._renderer = o),
            (this._closed$ = new a.a()),
            (this._bodyContainer = null),
            (this._open = !1),
            (this.openChange = new s.x()),
            (this.placement = t.placement),
            (this.container = t.container),
            (this.autoClose = t.autoClose),
            (this.display = l ? "static" : "dynamic"),
            (this._zoneSubscription = i.onStable.subscribe(() => {
              this._positionMenu();
            }));
        }
        ngAfterContentInit() {
          this._ngZone.onStable.pipe(Object(j.a)(1)).subscribe(() => {
            this._applyPlacementClasses(),
              this._open && this._setCloseHandlers();
          });
        }
        ngOnChanges(e) {
          e.container && this._open && this._applyContainer(this.container),
            e.placement &&
              !e.placement.isFirstChange &&
              this._applyPlacementClasses();
        }
        isOpen() {
          return this._open;
        }
        open() {
          this._open ||
            ((this._open = !0),
            this._applyContainer(this.container),
            this.openChange.emit(!0),
            this._setCloseHandlers(),
            this._anchor && this._anchor.nativeElement.focus());
        }
        _setCloseHandlers() {
          xs(
            this._ngZone,
            this._document,
            this.autoClose,
            (e) => {
              this.close(), 0 === e && this._anchor.nativeElement.focus();
            },
            this._closed$,
            this._menu ? [this._menu.nativeElement] : [],
            this._anchor ? [this._anchor.nativeElement] : [],
            ".dropdown-item,.dropdown-divider"
          );
        }
        close() {
          this._open &&
            ((this._open = !1),
            this._resetContainer(),
            this._closed$.next(),
            this.openChange.emit(!1),
            this._changeDetector.markForCheck());
        }
        toggle() {
          this.isOpen() ? this.close() : this.open();
        }
        ngOnDestroy() {
          this._resetContainer(),
            this._closed$.next(),
            this._zoneSubscription.unsubscribe();
        }
        onKeyDown(e) {
          const t = e.which,
            n = this._getMenuElements();
          let s = -1,
            i = null;
          const r = this._isEventFromToggle(e);
          if (
            (!r &&
              n.length &&
              n.forEach((t, n) => {
                t.contains(e.target) && (i = t),
                  t === this._document.activeElement && (s = n);
              }),
            t !== hs.Space && t !== hs.Enter)
          ) {
            if (t !== hs.Tab) {
              if (r || i) {
                if ((this.open(), n.length)) {
                  switch (t) {
                    case hs.ArrowDown:
                      s = Math.min(s + 1, n.length - 1);
                      break;
                    case hs.ArrowUp:
                      if (this._isDropup() && -1 === s) {
                        s = n.length - 1;
                        break;
                      }
                      s = Math.max(s - 1, 0);
                      break;
                    case hs.Home:
                      s = 0;
                      break;
                    case hs.End:
                      s = n.length - 1;
                  }
                  n[s].focus();
                }
                e.preventDefault();
              }
            } else if (e.target && this.isOpen() && this.autoClose) {
              if (this._anchor.nativeElement === e.target)
                return void ("body" !== this.container || e.shiftKey
                  ? e.shiftKey && this.close()
                  : (this._renderer.setAttribute(
                      this._menu.nativeElement,
                      "tabindex",
                      "0"
                    ),
                    this._menu.nativeElement.focus(),
                    this._renderer.removeAttribute(
                      this._menu.nativeElement,
                      "tabindex"
                    )));
              if ("body" === this.container) {
                const t = this._menu.nativeElement.querySelectorAll(_s);
                e.shiftKey && e.target === t[0]
                  ? (this._anchor.nativeElement.focus(), e.preventDefault())
                  : e.shiftKey ||
                    e.target !== t[t.length - 1] ||
                    (this._anchor.nativeElement.focus(), this.close());
              } else
                Object(l.a)(e.target, "focusout")
                  .pipe(Object(j.a)(1))
                  .subscribe(({ relatedTarget: e }) => {
                    this._elementRef.nativeElement.contains(e) || this.close();
                  });
            }
          } else
            !i ||
              (!0 !== this.autoClose && "inside" !== this.autoClose) ||
              Object(l.a)(i, "click")
                .pipe(Object(j.a)(1))
                .subscribe(() => this.close());
        }
        _isDropup() {
          return this._elementRef.nativeElement.classList.contains("dropup");
        }
        _isEventFromToggle(e) {
          return this._anchor.nativeElement.contains(e.target);
        }
        _getMenuElements() {
          const e = this._menu;
          return null == e
            ? []
            : e.menuItems
                .filter((e) => !e.disabled)
                .map((e) => e.elementRef.nativeElement);
        }
        _positionMenu() {
          const e = this._menu;
          this.isOpen() &&
            e &&
            this._applyPlacementClasses(
              "dynamic" === this.display
                ? ks(
                    this._anchor.nativeElement,
                    this._bodyContainer || this._menu.nativeElement,
                    this.placement,
                    "body" === this.container
                  )
                : this._getFirstPlacement(this.placement)
            );
        }
        _getFirstPlacement(e) {
          return Array.isArray(e) ? e[0] : e.split(" ")[0];
        }
        _resetContainer() {
          const e = this._renderer;
          if (this._menu) {
            const t = this._elementRef.nativeElement,
              n = this._menu.nativeElement;
            e.appendChild(t, n),
              e.removeStyle(n, "position"),
              e.removeStyle(n, "transform");
          }
          this._bodyContainer &&
            (e.removeChild(this._document.body, this._bodyContainer),
            (this._bodyContainer = null));
        }
        _applyContainer(e = null) {
          if ((this._resetContainer(), "body" === e)) {
            const e = this._renderer,
              t = this._menu.nativeElement,
              n = (this._bodyContainer =
                this._bodyContainer || e.createElement("div"));
            e.setStyle(n, "position", "absolute"),
              e.setStyle(t, "position", "static"),
              e.setStyle(n, "z-index", "1050"),
              e.appendChild(n, t),
              e.appendChild(this._document.body, n);
          }
        }
        _applyPlacementClasses(e) {
          const t = this._menu;
          if (t) {
            e || (e = this._getFirstPlacement(this.placement));
            const n = this._renderer,
              s = this._elementRef.nativeElement;
            n.removeClass(s, "dropup"),
              n.removeClass(s, "dropdown"),
              (t.placement = "static" === this.display ? null : e);
            const i = -1 !== e.search("^top") ? "dropup" : "dropdown";
            n.addClass(s, i);
            const r = this._bodyContainer;
            r &&
              (n.removeClass(r, "dropup"),
              n.removeClass(r, "dropdown"),
              n.addClass(r, i));
          }
        }
      }
      (Vi.ɵfac = function (e) {
        return new (e || Vi)(
          s.Mc(s.k),
          s.Mc(Pi),
          s.Mc(i.c),
          s.Mc(s.Q),
          s.Mc(s.v),
          s.Mc(s.Y),
          s.Mc(Ri, 8)
        );
      }),
        (Vi.ɵdir = s.Hc({
          type: Vi,
          selectors: [["", "ngbDropdown", ""]],
          contentQueries: function (e, t, n) {
            if ((1 & e && (s.Fc(n, Ni, !0), s.Fc(n, Fi, !0)), 2 & e)) {
              let e;
              s.sd((e = s.dd())) && (t._menu = e.first),
                s.sd((e = s.dd())) && (t._anchor = e.first);
            }
          },
          hostVars: 2,
          hostBindings: function (e, t) {
            2 & e && s.Ec("show", t.isOpen());
          },
          inputs: {
            _open: ["open", "_open"],
            placement: "placement",
            container: "container",
            autoClose: "autoClose",
            display: "display",
          },
          outputs: { openChange: "openChange" },
          exportAs: ["ngbDropdown"],
          features: [s.xc],
        })),
        (Vi.ctorParameters = () => [
          { type: s.k },
          { type: Pi },
          { type: void 0, decorators: [{ type: s.C, args: [i.c] }] },
          { type: s.Q },
          { type: s.v },
          { type: s.Y },
          { type: Ri, decorators: [{ type: s.R }] },
        ]),
        (Vi.propDecorators = {
          _menu: [{ type: s.r, args: [Ni, { static: !1 }] }],
          _anchor: [{ type: s.r, args: [Fi, { static: !1 }] }],
          autoClose: [{ type: s.G }],
          _open: [{ type: s.G, args: ["open"] }],
          placement: [{ type: s.G }],
          container: [{ type: s.G }],
          display: [{ type: s.G }],
          openChange: [{ type: s.S }],
        });
      class Bi {}
      (Bi.ɵmod = s.Kc({ type: Bi })),
        (Bi.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || Bi)();
          },
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(Bi, {
            declarations: [Vi, Fi, Li, Ni, ji, Ri],
            exports: [Vi, Fi, Li, Ni, ji, Ri],
          });
      class zi {
        constructor(e) {
          (this.backdrop = !0),
            (this.keyboard = !0),
            (this.animation = e.animation);
        }
      }
      (zi.ɵfac = function (e) {
        return new (e || zi)(s.Yc(Xt));
      }),
        (zi.ɵprov = Object(s.Ic)({
          factory: function () {
            return new zi(Object(s.Yc)(Xt));
          },
          token: zi,
          providedIn: "root",
        })),
        (zi.ctorParameters = () => [{ type: Xt }]);
      class Hi {
        constructor(e, t, n) {
          (this.nodes = e), (this.viewRef = t), (this.componentRef = n);
        }
      }
      class Gi {
        constructor(e, t, n, s, i, r, o) {
          (this._type = e),
            (this._injector = t),
            (this._viewContainerRef = n),
            (this._renderer = s),
            (this._ngZone = i),
            (this._componentFactoryResolver = r),
            (this._applicationRef = o),
            (this._windowRef = null),
            (this._contentRef = null);
        }
        open(e, t, n = !1) {
          this._windowRef ||
            ((this._contentRef = this._getContentRef(e, t)),
            (this._windowRef = this._viewContainerRef.createComponent(
              this._componentFactoryResolver.resolveComponentFactory(
                this._type
              ),
              this._viewContainerRef.length,
              this._injector,
              this._contentRef.nodes
            )));
          const { nativeElement: s } = this._windowRef.location,
            i = this._ngZone.onStable
              .asObservable()
              .pipe(Object(j.a)(1))
              .pipe(
                Object($.a)(() =>
                  sn(s, ({ classList: e }) => e.add("show"), {
                    animation: n,
                    runningTransition: "continue",
                  })
                )
              );
          return { windowRef: this._windowRef, transition$: i };
        }
        close(e = !1) {
          return this._windowRef
            ? sn(
                this._windowRef.location.nativeElement,
                ({ classList: e }) => e.remove("show"),
                { animation: e, runningTransition: "stop" }
              ).pipe(
                Object(B.a)(() => {
                  var e;
                  this._windowRef &&
                    (this._viewContainerRef.remove(
                      this._viewContainerRef.indexOf(this._windowRef.hostView)
                    ),
                    (this._windowRef = null)),
                    (null === (e = this._contentRef) || void 0 === e
                      ? void 0
                      : e.viewRef) &&
                      (this._applicationRef.detachView(
                        this._contentRef.viewRef
                      ),
                      this._contentRef.viewRef.destroy(),
                      (this._contentRef = null));
                })
              )
            : Object(o.a)(void 0);
        }
        _getContentRef(e, t) {
          if (e) {
            if (e instanceof s.ib) {
              const n = e.createEmbeddedView(t);
              return (
                this._applicationRef.attachView(n), new Hi([n.rootNodes], n)
              );
            }
            return new Hi([[this._renderer.createText("" + e)]]);
          }
          return new Hi([]);
        }
      }
      const Ui = () => {};
      class $i {
        constructor(e) {
          this._document = e;
        }
        compensate() {
          const e = this._getWidth();
          return this._isPresent(e) ? this._adjustBody(e) : Ui;
        }
        _adjustBody(e) {
          const t = this._document.body,
            n = t.style.paddingRight,
            s = parseFloat(window.getComputedStyle(t)["padding-right"]);
          return (
            (t.style["padding-right"] = s + e + "px"),
            () => (t.style["padding-right"] = n)
          );
        }
        _isPresent(e) {
          const t = this._document.body.getBoundingClientRect();
          return window.innerWidth - (t.left + t.right) >= e - 0.1 * e;
        }
        _getWidth() {
          const e = this._document.createElement("div");
          e.className = "modal-scrollbar-measure";
          const t = this._document.body;
          t.appendChild(e);
          const n = e.getBoundingClientRect().width - e.clientWidth;
          return t.removeChild(e), n;
        }
      }
      ($i.ɵfac = function (e) {
        return new (e || $i)(s.Yc(i.c));
      }),
        ($i.ɵprov = Object(s.Ic)({
          factory: function () {
            return new $i(Object(s.Yc)(i.c));
          },
          token: $i,
          providedIn: "root",
        })),
        ($i.ctorParameters = () => [
          { type: void 0, decorators: [{ type: s.C, args: [i.c] }] },
        ]);
      class qi {
        constructor(e, t) {
          (this._el = e), (this._zone = t);
        }
        ngOnInit() {
          this._zone.onStable
            .asObservable()
            .pipe(Object(j.a)(1))
            .subscribe(() => {
              sn(this._el.nativeElement, ({ classList: e }) => e.add("show"), {
                animation: this.animation,
                runningTransition: "continue",
              });
            });
        }
        hide() {
          return sn(
            this._el.nativeElement,
            ({ classList: e }) => e.remove("show"),
            { animation: this.animation, runningTransition: "stop" }
          );
        }
      }
      (qi.ɵfac = function (e) {
        return new (e || qi)(s.Mc(s.v), s.Mc(s.Q));
      }),
        (qi.ɵcmp = s.Gc({
          type: qi,
          selectors: [["ngb-modal-backdrop"]],
          hostAttrs: [2, "z-index", "1050"],
          hostVars: 6,
          hostBindings: function (e, t) {
            2 & e &&
              (s.Bc(
                "modal-backdrop" +
                  (t.backdropClass ? " " + t.backdropClass : "")
              ),
              s.Ec("show", !t.animation)("fade", t.animation));
          },
          inputs: { animation: "animation", backdropClass: "backdropClass" },
          decls: 0,
          vars: 0,
          template: function (e, t) {},
          encapsulation: 2,
        })),
        (qi.ctorParameters = () => [{ type: s.v }, { type: s.Q }]),
        (qi.propDecorators = {
          animation: [{ type: s.G }],
          backdropClass: [{ type: s.G }],
        });
      class Wi {
        close(e) {}
        dismiss(e) {}
      }
      class Yi {
        constructor(e, t, n, s) {
          (this._windowCmptRef = e),
            (this._contentRef = t),
            (this._backdropCmptRef = n),
            (this._beforeDismiss = s),
            (this._closed = new a.a()),
            (this._dismissed = new a.a()),
            (this._hidden = new a.a()),
            e.instance.dismissEvent.subscribe((e) => {
              this.dismiss(e);
            }),
            (this.result = new Promise((e, t) => {
              (this._resolve = e), (this._reject = t);
            })),
            this.result.then(null, () => {});
        }
        get componentInstance() {
          if (this._contentRef && this._contentRef.componentRef)
            return this._contentRef.componentRef.instance;
        }
        get closed() {
          return this._closed.asObservable().pipe(Object(P.a)(this._hidden));
        }
        get dismissed() {
          return this._dismissed.asObservable().pipe(Object(P.a)(this._hidden));
        }
        get hidden() {
          return this._hidden.asObservable();
        }
        get shown() {
          return this._windowCmptRef.instance.shown.asObservable();
        }
        close(e) {
          this._windowCmptRef &&
            (this._closed.next(e),
            this._resolve(e),
            this._removeModalElements());
        }
        _dismiss(e) {
          this._dismissed.next(e), this._reject(e), this._removeModalElements();
        }
        dismiss(e) {
          if (this._windowCmptRef)
            if (this._beforeDismiss) {
              const t = this._beforeDismiss();
              t && t.then
                ? t.then(
                    (t) => {
                      !1 !== t && this._dismiss(e);
                    },
                    () => {}
                  )
                : !1 !== t && this._dismiss(e);
            } else this._dismiss(e);
        }
        _removeModalElements() {
          const e = this._windowCmptRef.instance.hide(),
            t = this._backdropCmptRef
              ? this._backdropCmptRef.instance.hide()
              : Object(o.a)(void 0);
          e.subscribe(() => {
            const { nativeElement: e } = this._windowCmptRef.location;
            e.parentNode.removeChild(e),
              this._windowCmptRef.destroy(),
              this._contentRef &&
                this._contentRef.viewRef &&
                this._contentRef.viewRef.destroy(),
              (this._windowCmptRef = null),
              (this._contentRef = null);
          }),
            t.subscribe(() => {
              if (this._backdropCmptRef) {
                const { nativeElement: e } = this._backdropCmptRef.location;
                e.parentNode.removeChild(e),
                  this._backdropCmptRef.destroy(),
                  (this._backdropCmptRef = null);
              }
            }),
            E(e, t).subscribe(() => {
              this._hidden.next(), this._hidden.complete();
            });
        }
      }
      var Qi;
      !(function (e) {
        (e[(e.BACKDROP_CLICK = 0)] = "BACKDROP_CLICK"),
          (e[(e.ESC = 1)] = "ESC");
      })(Qi || (Qi = {}));
      class Ki {
        constructor(e, t, n) {
          (this._document = e),
            (this._elRef = t),
            (this._zone = n),
            (this._closed$ = new a.a()),
            (this._elWithFocus = null),
            (this.backdrop = !0),
            (this.keyboard = !0),
            (this.dismissEvent = new s.x()),
            (this.shown = new a.a()),
            (this.hidden = new a.a());
        }
        dismiss(e) {
          this.dismissEvent.emit(e);
        }
        ngOnInit() {
          this._elWithFocus = this._document.activeElement;
        }
        ngAfterViewInit() {
          this._show();
        }
        ngOnDestroy() {
          this._disableEventHandling();
        }
        hide() {
          const { nativeElement: e } = this._elRef,
            t = { animation: this.animation, runningTransition: "stop" },
            n = E(
              sn(e, () => e.classList.remove("show"), t),
              sn(this._dialogEl.nativeElement, () => {}, t)
            );
          return (
            n.subscribe(() => {
              this.hidden.next(), this.hidden.complete();
            }),
            this._disableEventHandling(),
            this._restoreFocus(),
            n
          );
        }
        _show() {
          const { nativeElement: e } = this._elRef,
            t = { animation: this.animation, runningTransition: "continue" };
          E(
            sn(e, () => e.classList.add("show"), t),
            sn(this._dialogEl.nativeElement, () => {}, t)
          ).subscribe(() => {
            this.shown.next(), this.shown.complete();
          }),
            this._enableEventHandling(),
            this._setFocus();
        }
        _enableEventHandling() {
          const { nativeElement: e } = this._elRef;
          this._zone.runOutsideAngular(() => {
            Object(l.a)(e, "keydown")
              .pipe(
                Object(P.a)(this._closed$),
                Object(R.a)((e) => e.which === hs.Escape)
              )
              .subscribe((e) => {
                this.keyboard
                  ? requestAnimationFrame(() => {
                      e.defaultPrevented ||
                        this._zone.run(() => this.dismiss(Qi.ESC));
                    })
                  : "static" === this.backdrop && this._bumpBackdrop();
              });
            let t = !1;
            Object(l.a)(this._dialogEl.nativeElement, "mousedown")
              .pipe(
                Object(P.a)(this._closed$),
                Object(B.a)(() => (t = !1)),
                Object(V.a)(() =>
                  Object(l.a)(e, "mouseup").pipe(
                    Object(P.a)(this._closed$),
                    Object(j.a)(1)
                  )
                ),
                Object(R.a)(({ target: t }) => e === t)
              )
              .subscribe(() => {
                t = !0;
              }),
              Object(l.a)(e, "click")
                .pipe(Object(P.a)(this._closed$))
                .subscribe(({ target: n }) => {
                  e === n &&
                    ("static" === this.backdrop
                      ? this._bumpBackdrop()
                      : !0 !== this.backdrop ||
                        t ||
                        this._zone.run(() => this.dismiss(Qi.BACKDROP_CLICK))),
                    (t = !1);
                });
          });
        }
        _disableEventHandling() {
          this._closed$.next();
        }
        _setFocus() {
          const { nativeElement: e } = this._elRef;
          if (!e.contains(document.activeElement)) {
            const t = e.querySelector("[ngbAutofocus]"),
              n = ws(e)[0];
            (t || n || e).focus();
          }
        }
        _restoreFocus() {
          const e = this._document.body,
            t = this._elWithFocus;
          let n;
          (n = t && t.focus && e.contains(t) ? t : e),
            this._zone.runOutsideAngular(() => {
              setTimeout(() => n.focus()), (this._elWithFocus = null);
            });
        }
        _bumpBackdrop() {
          "static" === this.backdrop &&
            sn(
              this._elRef.nativeElement,
              ({ classList: e }) => (
                e.add("modal-static"), () => e.remove("modal-static")
              ),
              { animation: this.animation, runningTransition: "continue" }
            );
        }
      }
      (Ki.ɵfac = function (e) {
        return new (e || Ki)(s.Mc(i.c), s.Mc(s.v), s.Mc(s.Q));
      }),
        (Ki.ɵcmp = s.Gc({
          type: Ki,
          selectors: [["ngb-modal-window"]],
          viewQuery: function (e, t) {
            if ((1 & e && s.yd(Fe, !0), 2 & e)) {
              let e;
              s.sd((e = s.dd())) && (t._dialogEl = e.first);
            }
          },
          hostAttrs: ["role", "dialog", "tabindex", "-1"],
          hostVars: 7,
          hostBindings: function (e, t) {
            2 & e &&
              (s.Ac("aria-modal", !0)("aria-labelledby", t.ariaLabelledBy)(
                "aria-describedby",
                t.ariaDescribedBy
              ),
              s.Bc(
                "modal d-block" + (t.windowClass ? " " + t.windowClass : "")
              ),
              s.Ec("fade", t.animation));
          },
          inputs: {
            backdrop: "backdrop",
            keyboard: "keyboard",
            animation: "animation",
            ariaLabelledBy: "ariaLabelledBy",
            ariaDescribedBy: "ariaDescribedBy",
            centered: "centered",
            scrollable: "scrollable",
            size: "size",
            windowClass: "windowClass",
          },
          outputs: { dismissEvent: "dismiss" },
          ngContentSelectors: ie,
          decls: 4,
          vars: 2,
          consts: [
            ["role", "document"],
            ["dialog", ""],
            [1, "modal-content"],
          ],
          template: function (e, t) {
            1 & e &&
              (s.kd(),
              s.Rc(0, "div", 0, 1),
              s.Rc(2, "div", 2),
              s.jd(3),
              s.Qc(),
              s.Qc()),
              2 & e &&
                s.Bc(
                  "modal-dialog" +
                    (t.size ? " modal-" + t.size : "") +
                    (t.centered ? " modal-dialog-centered" : "") +
                    (t.scrollable ? " modal-dialog-scrollable" : "")
                );
          },
          styles: [
            "ngb-modal-window .component-host-scrollable{-ms-flex-direction:column;display:-ms-flexbox;display:flex;flex-direction:column;overflow:hidden}",
          ],
          encapsulation: 2,
        })),
        (Ki.ctorParameters = () => [
          { type: void 0, decorators: [{ type: s.C, args: [i.c] }] },
          { type: s.v },
          { type: s.Q },
        ]),
        (Ki.propDecorators = {
          _dialogEl: [{ type: s.mb, args: ["dialog", { static: !0 }] }],
          animation: [{ type: s.G }],
          ariaLabelledBy: [{ type: s.G }],
          ariaDescribedBy: [{ type: s.G }],
          backdrop: [{ type: s.G }],
          centered: [{ type: s.G }],
          keyboard: [{ type: s.G }],
          scrollable: [{ type: s.G }],
          size: [{ type: s.G }],
          windowClass: [{ type: s.G }],
          dismissEvent: [{ type: s.S, args: ["dismiss"] }],
        });
      class Ji {
        constructor(e, t, n, i, r, o) {
          (this._applicationRef = e),
            (this._injector = t),
            (this._document = n),
            (this._scrollBar = i),
            (this._rendererFactory = r),
            (this._ngZone = o),
            (this._activeWindowCmptHasChanged = new a.a()),
            (this._ariaHiddenValues = new Map()),
            (this._backdropAttributes = ["animation", "backdropClass"]),
            (this._modalRefs = []),
            (this._windowAttributes = [
              "animation",
              "ariaLabelledBy",
              "ariaDescribedBy",
              "backdrop",
              "centered",
              "keyboard",
              "scrollable",
              "size",
              "windowClass",
            ]),
            (this._windowCmpts = []),
            (this._activeInstances = new s.x()),
            this._activeWindowCmptHasChanged.subscribe(() => {
              if (this._windowCmpts.length) {
                const e = this._windowCmpts[this._windowCmpts.length - 1];
                Cs(
                  this._ngZone,
                  e.location.nativeElement,
                  this._activeWindowCmptHasChanged
                ),
                  this._revertAriaHidden(),
                  this._setAriaHidden(e.location.nativeElement);
              }
            });
        }
        open(e, t, n, s) {
          const i =
              s.container instanceof HTMLElement
                ? s.container
                : Wt(s.container)
                ? this._document.querySelector(s.container)
                : this._document.body,
            r = this._rendererFactory.createRenderer(null, null),
            o = this._scrollBar.compensate(),
            a = () => {
              this._modalRefs.length ||
                (r.removeClass(this._document.body, "modal-open"),
                this._revertAriaHidden());
            };
          if (!i)
            throw new Error(
              `The specified modal container "${
                s.container || "body"
              }" was not found in the DOM.`
            );
          const l = new Wi(),
            c = this._getContentRef(e, s.injector || t, n, l, s);
          let u = !1 !== s.backdrop ? this._attachBackdrop(e, i) : void 0,
            d = this._attachWindowComponent(e, i, c),
            h = new Yi(d, c, u, s.beforeDismiss);
          return (
            this._registerModalRef(h),
            this._registerWindowCmpt(d),
            h.result.then(o, o),
            h.result.then(a, a),
            (l.close = (e) => {
              h.close(e);
            }),
            (l.dismiss = (e) => {
              h.dismiss(e);
            }),
            this._applyWindowOptions(d.instance, s),
            1 === this._modalRefs.length &&
              r.addClass(this._document.body, "modal-open"),
            u && u.instance && this._applyBackdropOptions(u.instance, s),
            h
          );
        }
        get activeInstances() {
          return this._activeInstances;
        }
        dismissAll(e) {
          this._modalRefs.forEach((t) => t.dismiss(e));
        }
        hasOpenModals() {
          return this._modalRefs.length > 0;
        }
        _attachBackdrop(e, t) {
          let n = e.resolveComponentFactory(qi).create(this._injector);
          return (
            this._applicationRef.attachView(n.hostView),
            t.appendChild(n.location.nativeElement),
            n
          );
        }
        _attachWindowComponent(e, t, n) {
          let s = e.resolveComponentFactory(Ki).create(this._injector, n.nodes);
          return (
            this._applicationRef.attachView(s.hostView),
            t.appendChild(s.location.nativeElement),
            s
          );
        }
        _applyWindowOptions(e, t) {
          this._windowAttributes.forEach((n) => {
            Wt(t[n]) && (e[n] = t[n]);
          });
        }
        _applyBackdropOptions(e, t) {
          this._backdropAttributes.forEach((n) => {
            Wt(t[n]) && (e[n] = t[n]);
          });
        }
        _getContentRef(e, t, n, i, r) {
          return n
            ? n instanceof s.ib
              ? this._createFromTemplateRef(n, i)
              : Ut(n)
              ? this._createFromString(n)
              : this._createFromComponent(e, t, n, i, r)
            : new Hi([]);
        }
        _createFromTemplateRef(e, t) {
          const n = {
              $implicit: t,
              close(e) {
                t.close(e);
              },
              dismiss(e) {
                t.dismiss(e);
              },
            },
            s = e.createEmbeddedView(n);
          return this._applicationRef.attachView(s), new Hi([s.rootNodes], s);
        }
        _createFromString(e) {
          const t = this._document.createTextNode("" + e);
          return new Hi([[t]]);
        }
        _createFromComponent(e, t, n, i, r) {
          const o = e.resolveComponentFactory(n),
            a = s.F.create({
              providers: [{ provide: Wi, useValue: i }],
              parent: t,
            }),
            l = o.create(a),
            c = l.location.nativeElement;
          return (
            r.scrollable && c.classList.add("component-host-scrollable"),
            this._applicationRef.attachView(l.hostView),
            new Hi([[c]], l.hostView, l)
          );
        }
        _setAriaHidden(e) {
          const t = e.parentElement;
          t &&
            e !== this._document.body &&
            (Array.from(t.children).forEach((t) => {
              t !== e &&
                "SCRIPT" !== t.nodeName &&
                (this._ariaHiddenValues.set(t, t.getAttribute("aria-hidden")),
                t.setAttribute("aria-hidden", "true"));
            }),
            this._setAriaHidden(t));
        }
        _revertAriaHidden() {
          this._ariaHiddenValues.forEach((e, t) => {
            e
              ? t.setAttribute("aria-hidden", e)
              : t.removeAttribute("aria-hidden");
          }),
            this._ariaHiddenValues.clear();
        }
        _registerModalRef(e) {
          const t = () => {
            const t = this._modalRefs.indexOf(e);
            t > -1 &&
              (this._modalRefs.splice(t, 1),
              this._activeInstances.emit(this._modalRefs));
          };
          this._modalRefs.push(e),
            this._activeInstances.emit(this._modalRefs),
            e.result.then(t, t);
        }
        _registerWindowCmpt(e) {
          this._windowCmpts.push(e),
            this._activeWindowCmptHasChanged.next(),
            e.onDestroy(() => {
              const t = this._windowCmpts.indexOf(e);
              t > -1 &&
                (this._windowCmpts.splice(t, 1),
                this._activeWindowCmptHasChanged.next());
            });
        }
      }
      (Ji.ɵfac = function (e) {
        return new (e || Ji)(
          s.Yc(s.g),
          s.Yc(s.F),
          s.Yc(i.c),
          s.Yc($i),
          s.Yc(s.Z),
          s.Yc(s.Q)
        );
      }),
        (Ji.ɵprov = Object(s.Ic)({
          factory: function () {
            return new Ji(
              Object(s.Yc)(s.g),
              Object(s.Yc)(s.B),
              Object(s.Yc)(i.c),
              Object(s.Yc)($i),
              Object(s.Yc)(s.Z),
              Object(s.Yc)(s.Q)
            );
          },
          token: Ji,
          providedIn: "root",
        })),
        (Ji.ctorParameters = () => [
          { type: s.g },
          { type: s.F },
          { type: void 0, decorators: [{ type: s.C, args: [i.c] }] },
          { type: $i },
          { type: s.Z },
          { type: s.Q },
        ]);
      class Xi {
        constructor(e, t, n, s) {
          (this._moduleCFR = e),
            (this._injector = t),
            (this._modalStack = n),
            (this._config = s);
        }
        open(e, t = {}) {
          const n = Object.assign({}, this._config, t);
          return this._modalStack.open(this._moduleCFR, this._injector, e, n);
        }
        get activeInstances() {
          return this._modalStack.activeInstances;
        }
        dismissAll(e) {
          this._modalStack.dismissAll(e);
        }
        hasOpenModals() {
          return this._modalStack.hasOpenModals();
        }
      }
      (Xi.ɵfac = function (e) {
        return new (e || Xi)(s.Yc(s.p), s.Yc(s.F), s.Yc(Ji), s.Yc(zi));
      }),
        (Xi.ɵprov = Object(s.Ic)({
          factory: function () {
            return new Xi(
              Object(s.Yc)(s.p),
              Object(s.Yc)(s.B),
              Object(s.Yc)(Ji),
              Object(s.Yc)(zi)
            );
          },
          token: Xi,
          providedIn: "root",
        })),
        (Xi.ctorParameters = () => [
          { type: s.p },
          { type: s.F },
          { type: Ji },
          { type: zi },
        ]);
      class Zi {}
      (Zi.ɵmod = s.Kc({ type: Zi })),
        (Zi.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || Zi)();
          },
          providers: [Xi],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(Zi, { declarations: [qi, Ki] });
      class er {
        constructor(e) {
          (this.destroyOnHide = !0),
            (this.orientation = "horizontal"),
            (this.roles = "tablist"),
            (this.keyboard = !1),
            (this.animation = e.animation);
        }
      }
      (er.ɵfac = function (e) {
        return new (e || er)(s.Yc(Xt));
      }),
        (er.ɵprov = Object(s.Ic)({
          factory: function () {
            return new er(Object(s.Yc)(Xt));
          },
          token: er,
          providedIn: "root",
        })),
        (er.ctorParameters = () => [{ type: Xt }]);
      const tr = (e) => Wt(e) && "" !== e;
      let nr = 0;
      class sr {
        constructor(e) {
          this.templateRef = e;
        }
      }
      (sr.ɵfac = function (e) {
        return new (e || sr)(s.Mc(s.ib));
      }),
        (sr.ɵdir = s.Hc({
          type: sr,
          selectors: [["ng-template", "ngbNavContent", ""]],
        })),
        (sr.ctorParameters = () => [{ type: s.ib }]);
      class ir {
        constructor(e, t) {
          (this.elementRef = t),
            (this.disabled = !1),
            (this.shown = new s.x()),
            (this.hidden = new s.x()),
            (this._nav = e);
        }
        ngAfterContentChecked() {
          this.contentTpl = this.contentTpls.first;
        }
        ngOnInit() {
          Wt(this.domId) || (this.domId = "ngb-nav-" + nr++);
        }
        get active() {
          return this._nav.activeId === this.id;
        }
        get id() {
          return tr(this._id) ? this._id : this.domId;
        }
        get panelDomId() {
          return this.domId + "-panel";
        }
        isPanelInDom() {
          return (
            (Wt(this.destroyOnHide)
              ? !this.destroyOnHide
              : !this._nav.destroyOnHide) || this.active
          );
        }
      }
      (ir.ɵfac = function (e) {
        return new (e || ir)(s.Mc(Object(s.sb)(() => rr)), s.Mc(s.v));
      }),
        (ir.ɵdir = s.Hc({
          type: ir,
          selectors: [["", "ngbNavItem", ""]],
          contentQueries: function (e, t, n) {
            if ((1 & e && s.Fc(n, sr, !1), 2 & e)) {
              let e;
              s.sd((e = s.dd())) && (t.contentTpls = e);
            }
          },
          hostVars: 2,
          hostBindings: function (e, t) {
            2 & e && s.Ec("nav-item", !0);
          },
          inputs: {
            disabled: "disabled",
            domId: "domId",
            destroyOnHide: "destroyOnHide",
            _id: ["ngbNavItem", "_id"],
          },
          outputs: { shown: "shown", hidden: "hidden" },
          exportAs: ["ngbNavItem"],
        })),
        (ir.ctorParameters = () => [
          {
            type: void 0,
            decorators: [{ type: s.C, args: [Object(s.sb)(() => rr)] }],
          },
          { type: s.v },
        ]),
        (ir.propDecorators = {
          destroyOnHide: [{ type: s.G }],
          disabled: [{ type: s.G }],
          domId: [{ type: s.G }],
          _id: [{ type: s.G, args: ["ngbNavItem"] }],
          shown: [{ type: s.S }],
          hidden: [{ type: s.S }],
          contentTpls: [{ type: s.s, args: [sr, { descendants: !1 }] }],
        });
      class rr {
        constructor(e, t, n, i) {
          (this.role = e),
            (this._cd = n),
            (this._document = i),
            (this.activeIdChange = new s.x()),
            (this.shown = new s.x()),
            (this.hidden = new s.x()),
            (this.navItemChange$ = new a.a()),
            (this.navChange = new s.x()),
            (this.animation = t.animation),
            (this.destroyOnHide = t.destroyOnHide),
            (this.orientation = t.orientation),
            (this.roles = t.roles),
            (this.keyboard = t.keyboard);
        }
        click(e) {
          e.disabled || this._updateActiveId(e.id);
        }
        onKeyDown(e) {
          if ("tablist" !== this.roles || !this.keyboard) return;
          const t = e.which,
            n = this.links.filter((e) => !e.navItem.disabled),
            { length: s } = n;
          let i = -1;
          if (
            (n.forEach((e, t) => {
              e.elRef.nativeElement === this._document.activeElement && (i = t);
            }),
            s)
          ) {
            switch (t) {
              case hs.ArrowLeft:
                if ("vertical" === this.orientation) return;
                i = (i - 1 + s) % s;
                break;
              case hs.ArrowRight:
                if ("vertical" === this.orientation) return;
                i = (i + 1) % s;
                break;
              case hs.ArrowDown:
                if ("horizontal" === this.orientation) return;
                i = (i + 1) % s;
                break;
              case hs.ArrowUp:
                if ("horizontal" === this.orientation) return;
                i = (i - 1 + s) % s;
                break;
              case hs.Home:
                i = 0;
                break;
              case hs.End:
                i = s - 1;
            }
            "changeWithArrows" === this.keyboard &&
              this.select(n[i].navItem.id),
              n[i].elRef.nativeElement.focus(),
              e.preventDefault();
          }
        }
        select(e) {
          this._updateActiveId(e, !1);
        }
        ngAfterContentInit() {
          if (!Wt(this.activeId)) {
            const e = this.items.first ? this.items.first.id : null;
            tr(e) && (this._updateActiveId(e, !1), this._cd.detectChanges());
          }
        }
        ngOnChanges({ activeId: e }) {
          e && !e.firstChange && this._notifyItemChanged(e.currentValue);
        }
        _updateActiveId(e, t = !0) {
          if (this.activeId !== e) {
            let n = !1;
            t &&
              this.navChange.emit({
                activeId: this.activeId,
                nextId: e,
                preventDefault: () => {
                  n = !0;
                },
              }),
              n ||
                ((this.activeId = e),
                this.activeIdChange.emit(e),
                this._notifyItemChanged(e));
          }
        }
        _notifyItemChanged(e) {
          this.navItemChange$.next(this._getItemById(e));
        }
        _getItemById(e) {
          return (this.items && this.items.find((t) => t.id === e)) || null;
        }
      }
      (rr.ɵfac = function (e) {
        return new (e || rr)(s.Zc("role"), s.Mc(er), s.Mc(s.k), s.Mc(i.c));
      }),
        (rr.ɵdir = s.Hc({
          type: rr,
          selectors: [["", "ngbNav", ""]],
          contentQueries: function (e, t, n) {
            if ((1 & e && (s.Fc(n, ir, !1), s.Fc(n, or, !0)), 2 & e)) {
              let e;
              s.sd((e = s.dd())) && (t.items = e),
                s.sd((e = s.dd())) && (t.links = e);
            }
          },
          hostVars: 6,
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("keydown.arrowLeft", function (e) {
                return t.onKeyDown(e);
              })("keydown.arrowRight", function (e) {
                return t.onKeyDown(e);
              })("keydown.arrowDown", function (e) {
                return t.onKeyDown(e);
              })("keydown.arrowUp", function (e) {
                return t.onKeyDown(e);
              })("keydown.Home", function (e) {
                return t.onKeyDown(e);
              })("keydown.End", function (e) {
                return t.onKeyDown(e);
              }),
              2 & e &&
                (s.Ac(
                  "aria-orientation",
                  "vertical" === t.orientation && "tablist" === t.roles
                    ? "vertical"
                    : void 0
                )("role", t.role ? t.role : t.roles ? "tablist" : void 0),
                s.Ec("nav", !0)("flex-column", "vertical" === t.orientation));
          },
          inputs: {
            animation: "animation",
            destroyOnHide: "destroyOnHide",
            orientation: "orientation",
            roles: "roles",
            keyboard: "keyboard",
            activeId: "activeId",
          },
          outputs: {
            activeIdChange: "activeIdChange",
            shown: "shown",
            hidden: "hidden",
            navChange: "navChange",
          },
          exportAs: ["ngbNav"],
          features: [s.xc],
        })),
        (rr.ctorParameters = () => [
          { type: String, decorators: [{ type: s.h, args: ["role"] }] },
          { type: er },
          { type: s.k },
          { type: void 0, decorators: [{ type: s.C, args: [i.c] }] },
        ]),
        (rr.propDecorators = {
          activeId: [{ type: s.G }],
          activeIdChange: [{ type: s.S }],
          animation: [{ type: s.G }],
          destroyOnHide: [{ type: s.G }],
          orientation: [{ type: s.G }],
          roles: [{ type: s.G }],
          keyboard: [{ type: s.G }],
          shown: [{ type: s.S }],
          hidden: [{ type: s.S }],
          items: [{ type: s.s, args: [ir] }],
          links: [
            { type: s.s, args: [Object(s.sb)(() => or), { descendants: !0 }] },
          ],
          navChange: [{ type: s.S }],
        });
      class or {
        constructor(e, t, n, s) {
          (this.role = e), (this.navItem = t), (this.nav = n), (this.elRef = s);
        }
        hasNavItemClass() {
          return (
            this.navItem.elementRef.nativeElement.nodeType === Node.COMMENT_NODE
          );
        }
      }
      (or.ɵfac = function (e) {
        return new (e || or)(s.Zc("role"), s.Mc(ir), s.Mc(rr), s.Mc(s.v));
      }),
        (or.ɵdir = s.Hc({
          type: or,
          selectors: [["a", "ngbNavLink", ""]],
          hostAttrs: ["href", ""],
          hostVars: 14,
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("click", function (e) {
                return t.nav.click(t.navItem), e.preventDefault();
              }),
              2 & e &&
                (s.Uc("id", t.navItem.domId),
                s.Ac("role", t.role ? t.role : t.nav.roles ? "tab" : void 0)(
                  "tabindex",
                  t.navItem.disabled ? -1 : void 0
                )(
                  "aria-controls",
                  t.navItem.isPanelInDom() ? t.navItem.panelDomId : null
                )("aria-selected", t.navItem.active)(
                  "aria-disabled",
                  t.navItem.disabled
                ),
                s.Ec("nav-link", !0)("nav-item", t.hasNavItemClass())(
                  "active",
                  t.navItem.active
                )("disabled", t.navItem.disabled));
          },
        })),
        (or.ctorParameters = () => [
          { type: String, decorators: [{ type: s.h, args: ["role"] }] },
          { type: ir },
          { type: rr },
          { type: s.v },
        ]);
      const ar = ({ classList: e }) => (
          e.remove("show"), () => e.remove("active")
        ),
        lr = (e) => {
          e.classList.add("active"), Kt(e), e.classList.add("show");
        },
        cr = (e) => {
          e.classList.add("active"), e.classList.add("show");
        };
      class ur {
        constructor(e) {
          this.elRef = e;
        }
      }
      (ur.ɵfac = function (e) {
        return new (e || ur)(s.Mc(s.v));
      }),
        (ur.ɵdir = s.Hc({
          type: ur,
          selectors: [["", "ngbNavPane", ""]],
          hostAttrs: [1, "tab-pane"],
          hostVars: 5,
          hostBindings: function (e, t) {
            2 & e &&
              (s.Uc("id", t.item.panelDomId),
              s.Ac("role", t.role ? t.role : t.nav.roles ? "tabpanel" : void 0)(
                "aria-labelledby",
                t.item.domId
              ),
              s.Ec("fade", t.nav.animation));
          },
          inputs: { item: "item", nav: "nav", role: "role" },
        })),
        (ur.ctorParameters = () => [{ type: s.v }]),
        (ur.propDecorators = {
          item: [{ type: s.G }],
          nav: [{ type: s.G }],
          role: [{ type: s.G }],
        });
      class dr {
        constructor(e) {
          (this._cd = e), (this._activePane = null);
        }
        isPanelTransitioning(e) {
          var t;
          return (
            (null === (t = this._activePane) || void 0 === t
              ? void 0
              : t.item) === e
          );
        }
        ngAfterViewInit() {
          var e, t, n, s;
          (this._activePane = this._getActivePane()),
            null === (e = this._activePane) ||
              void 0 === e ||
              e.elRef.nativeElement.classList.add("show"),
            null === (t = this._activePane) ||
              void 0 === t ||
              t.elRef.nativeElement.classList.add("active"),
            this.nav.navItemChange$
              .pipe(
                Object(F.a)(
                  (null === (n = this._activePane) || void 0 === n
                    ? void 0
                    : n.item) || null
                ),
                Object(L.a)(),
                ((s = 1), (e) => e.lift(new q(s)))
              )
              .subscribe((e) => {
                const t = {
                  animation: this.nav.animation,
                  runningTransition: "stop",
                };
                this._activePane &&
                  sn(this._activePane.elRef.nativeElement, ar, t).subscribe(
                    () => {
                      var n;
                      const s =
                        null === (n = this._activePane) || void 0 === n
                          ? void 0
                          : n.item;
                      if (
                        (this._cd.detectChanges(),
                        (this._activePane = this._getPaneForItem(e)),
                        this._activePane)
                      ) {
                        const n = this.nav.animation ? lr : cr;
                        sn(
                          this._activePane.elRef.nativeElement,
                          n,
                          t
                        ).subscribe(() => {
                          e && (e.shown.emit(), this.nav.shown.emit(e.id));
                        });
                      }
                      s && (s.hidden.emit(), this.nav.hidden.emit(s.id));
                    }
                  );
              });
        }
        _getPaneForItem(e) {
          return (this._panes && this._panes.find((t) => t.item === e)) || null;
        }
        _getActivePane() {
          return (
            (this._panes && this._panes.find((e) => e.item.active)) || null
          );
        }
      }
      (dr.ɵfac = function (e) {
        return new (e || dr)(s.Mc(s.k));
      }),
        (dr.ɵcmp = s.Gc({
          type: dr,
          selectors: [["", "ngbNavOutlet", ""]],
          viewQuery: function (e, t) {
            if ((1 & e && s.Id(ur, !0), 2 & e)) {
              let e;
              s.sd((e = s.dd())) && (t._panes = e);
            }
          },
          hostVars: 2,
          hostBindings: function (e, t) {
            2 & e && s.Ec("tab-content", !0);
          },
          inputs: { paneRole: "paneRole", nav: ["ngbNavOutlet", "nav"] },
          attrs: ["ngbNavOutlet", ""],
          decls: 1,
          vars: 1,
          consts: [
            ["ngFor", "", 3, "ngForOf"],
            ["ngbNavPane", "", 3, "item", "nav", "role", 4, "ngIf"],
            ["ngbNavPane", "", 3, "item", "nav", "role"],
            [3, "ngTemplateOutlet", "ngTemplateOutletContext"],
          ],
          template: function (e, t) {
            1 & e && s.Cd(0, ze, 1, 1, "ng-template", 0),
              2 & e && s.ld("ngForOf", t.nav.items);
          },
          directives: [i.j, i.k, ur, i.p],
          encapsulation: 2,
        })),
        (dr.ctorParameters = () => [{ type: s.k }]),
        (dr.propDecorators = {
          _panes: [{ type: s.nb, args: [ur] }],
          paneRole: [{ type: s.G }],
          nav: [{ type: s.G, args: ["ngbNavOutlet"] }],
        });
      class hr {}
      (hr.ɵmod = s.Kc({ type: hr })),
        (hr.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || hr)();
          },
          imports: [[i.b]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(hr, {
            declarations: function () {
              return [sr, rr, ir, or, dr, ur];
            },
            imports: function () {
              return [i.b];
            },
            exports: function () {
              return [sr, rr, ir, or, dr, ur];
            },
          });
      class pr {
        constructor() {
          (this.disabled = !1),
            (this.boundaryLinks = !1),
            (this.directionLinks = !0),
            (this.ellipses = !0),
            (this.maxSize = 0),
            (this.pageSize = 10),
            (this.rotate = !1);
        }
      }
      (pr.ɵfac = function (e) {
        return new (e || pr)();
      }),
        (pr.ɵprov = Object(s.Ic)({
          factory: function () {
            return new pr();
          },
          token: pr,
          providedIn: "root",
        }));
      class mr {
        constructor(e) {
          this.templateRef = e;
        }
      }
      (mr.ɵfac = function (e) {
        return new (e || mr)(s.Mc(s.ib));
      }),
        (mr.ɵdir = s.Hc({
          type: mr,
          selectors: [["ng-template", "ngbPaginationEllipsis", ""]],
        })),
        (mr.ctorParameters = () => [{ type: s.ib }]);
      class fr {
        constructor(e) {
          this.templateRef = e;
        }
      }
      (fr.ɵfac = function (e) {
        return new (e || fr)(s.Mc(s.ib));
      }),
        (fr.ɵdir = s.Hc({
          type: fr,
          selectors: [["ng-template", "ngbPaginationFirst", ""]],
        })),
        (fr.ctorParameters = () => [{ type: s.ib }]);
      class gr {
        constructor(e) {
          this.templateRef = e;
        }
      }
      (gr.ɵfac = function (e) {
        return new (e || gr)(s.Mc(s.ib));
      }),
        (gr.ɵdir = s.Hc({
          type: gr,
          selectors: [["ng-template", "ngbPaginationLast", ""]],
        })),
        (gr.ctorParameters = () => [{ type: s.ib }]);
      class yr {
        constructor(e) {
          this.templateRef = e;
        }
      }
      (yr.ɵfac = function (e) {
        return new (e || yr)(s.Mc(s.ib));
      }),
        (yr.ɵdir = s.Hc({
          type: yr,
          selectors: [["ng-template", "ngbPaginationNext", ""]],
        })),
        (yr.ctorParameters = () => [{ type: s.ib }]);
      class vr {
        constructor(e) {
          this.templateRef = e;
        }
      }
      (vr.ɵfac = function (e) {
        return new (e || vr)(s.Mc(s.ib));
      }),
        (vr.ɵdir = s.Hc({
          type: vr,
          selectors: [["ng-template", "ngbPaginationNumber", ""]],
        })),
        (vr.ctorParameters = () => [{ type: s.ib }]);
      class br {
        constructor(e) {
          this.templateRef = e;
        }
      }
      (br.ɵfac = function (e) {
        return new (e || br)(s.Mc(s.ib));
      }),
        (br.ɵdir = s.Hc({
          type: br,
          selectors: [["ng-template", "ngbPaginationPrevious", ""]],
        })),
        (br.ctorParameters = () => [{ type: s.ib }]);
      class xr {
        constructor(e) {
          (this.pageCount = 0),
            (this.pages = []),
            (this.page = 1),
            (this.pageChange = new s.x(!0)),
            (this.disabled = e.disabled),
            (this.boundaryLinks = e.boundaryLinks),
            (this.directionLinks = e.directionLinks),
            (this.ellipses = e.ellipses),
            (this.maxSize = e.maxSize),
            (this.pageSize = e.pageSize),
            (this.rotate = e.rotate),
            (this.size = e.size);
        }
        hasPrevious() {
          return this.page > 1;
        }
        hasNext() {
          return this.page < this.pageCount;
        }
        nextDisabled() {
          return !this.hasNext() || this.disabled;
        }
        previousDisabled() {
          return !this.hasPrevious() || this.disabled;
        }
        selectPage(e) {
          this._updatePages(e);
        }
        ngOnChanges(e) {
          this._updatePages(this.page);
        }
        isEllipsis(e) {
          return -1 === e;
        }
        _applyEllipses(e, t) {
          this.ellipses &&
            (e > 0 &&
              (e > 2
                ? this.pages.unshift(-1)
                : 2 === e && this.pages.unshift(2),
              this.pages.unshift(1)),
            t < this.pageCount &&
              (t < this.pageCount - 2
                ? this.pages.push(-1)
                : t === this.pageCount - 2 &&
                  this.pages.push(this.pageCount - 1),
              this.pages.push(this.pageCount)));
        }
        _applyRotation() {
          let e = 0,
            t = this.pageCount,
            n = Math.floor(this.maxSize / 2),
            s = this.maxSize % 2 == 0 ? n - 1 : n;
          return (
            this.page <= n
              ? (t = this.maxSize)
              : this.pageCount - this.page < n
              ? (e = this.pageCount - this.maxSize)
              : ((e = this.page - n - 1), (t = this.page + s)),
            [e, t]
          );
        }
        _applyPagination() {
          let e = (Math.ceil(this.page / this.maxSize) - 1) * this.maxSize;
          return [e, e + this.maxSize];
        }
        _setPageInRange(e) {
          const t = this.page;
          (this.page = Gt(e, this.pageCount, 1)),
            this.page !== t &&
              $t(this.collectionSize) &&
              this.pageChange.emit(this.page);
        }
        _updatePages(e) {
          (this.pageCount = Math.ceil(this.collectionSize / this.pageSize)),
            $t(this.pageCount) || (this.pageCount = 0),
            (this.pages.length = 0);
          for (let t = 1; t <= this.pageCount; t++) this.pages.push(t);
          if (
            (this._setPageInRange(e),
            this.maxSize > 0 && this.pageCount > this.maxSize)
          ) {
            let e = 0,
              t = this.pageCount;
            this.rotate
              ? ([e, t] = this._applyRotation())
              : ([e, t] = this._applyPagination()),
              (this.pages = this.pages.slice(e, t)),
              this._applyEllipses(e, t);
          }
        }
      }
      (xr.ɵfac = function (e) {
        return new (e || xr)(s.Mc(pr));
      }),
        (xr.ɵcmp = s.Gc({
          type: xr,
          selectors: [["ngb-pagination"]],
          contentQueries: function (e, t, n) {
            if (
              (1 & e &&
                (s.Fc(n, mr, !0),
                s.Fc(n, fr, !0),
                s.Fc(n, gr, !0),
                s.Fc(n, yr, !0),
                s.Fc(n, vr, !0),
                s.Fc(n, br, !0)),
              2 & e)
            ) {
              let e;
              s.sd((e = s.dd())) && (t.tplEllipsis = e.first),
                s.sd((e = s.dd())) && (t.tplFirst = e.first),
                s.sd((e = s.dd())) && (t.tplLast = e.first),
                s.sd((e = s.dd())) && (t.tplNext = e.first),
                s.sd((e = s.dd())) && (t.tplNumber = e.first),
                s.sd((e = s.dd())) && (t.tplPrevious = e.first);
            }
          },
          hostAttrs: ["role", "navigation"],
          inputs: {
            page: "page",
            disabled: "disabled",
            boundaryLinks: "boundaryLinks",
            directionLinks: "directionLinks",
            ellipses: "ellipses",
            maxSize: "maxSize",
            pageSize: "pageSize",
            rotate: "rotate",
            size: "size",
            collectionSize: "collectionSize",
          },
          outputs: { pageChange: "pageChange" },
          features: [s.xc],
          decls: 18,
          vars: 7,
          consts: function () {
            let e, t, n, s, i, r, o, a;
            return (
              (e = $localize`:@@ngb.pagination.first␟656506dfd46380956a655f919f1498d018f75ca0␟6867721956102594380:««`),
              (t = $localize`:@@ngb.pagination.previous␟6e52b6ee77a4848d899dd21b591c6fd499e3aef3␟6479320895410098858:«`),
              (n = $localize`:@@ngb.pagination.next␟ba9cbb4ff311464308a3627e4f1c3345d9fe6d7d␟5458177150283468089:»`),
              (s = $localize`:@@ngb.pagination.last␟49f27a460bc97e7e00be5b37098bfa79884fc7d9␟5277020320267646988:»»`),
              (i = $localize`:@@ngb.pagination.first-aria␟f2f852318759c6396b5d3d17031d53817d7b38cc␟2241508602425256033:First`),
              (r = $localize`:@@ngb.pagination.previous-aria␟680d5c75b7fd8d37961083608b9fcdc4167b4c43␟4452427314943113135:Previous`),
              (o = $localize`:@@ngb.pagination.next-aria␟f732c304c7433e5a83ffcd862c3dce709a0f4982␟3885497195825665706:Next`),
              (a = $localize`:@@ngb.pagination.last-aria␟5c729788ba138508aca1bec050b610f7bf81db3e␟4882268002141858767:Last`),
              [
                ["first", ""],
                ["previous", ""],
                ["next", ""],
                ["last", ""],
                ["ellipsis", ""],
                ["defaultNumber", ""],
                ["class", "page-item", 3, "disabled", 4, "ngIf"],
                [
                  "class",
                  "page-item",
                  3,
                  "active",
                  "disabled",
                  4,
                  "ngFor",
                  "ngForOf",
                ],
                ["aria-hidden", "true"],
                e,
                t,
                n,
                s,
                ["class", "sr-only", 4, "ngIf"],
                [1, "sr-only"],
                [1, "page-item"],
                ["aria-label", i, "href", "", 1, "page-link", 3, "click"],
                [3, "ngTemplateOutlet", "ngTemplateOutletContext"],
                ["aria-label", r, "href", "", 1, "page-link", 3, "click"],
                [
                  "class",
                  "page-link",
                  "tabindex",
                  "-1",
                  "aria-disabled",
                  "true",
                  4,
                  "ngIf",
                ],
                ["class", "page-link", "href", "", 3, "click", 4, "ngIf"],
                ["tabindex", "-1", "aria-disabled", "true", 1, "page-link"],
                ["href", "", 1, "page-link", 3, "click"],
                ["aria-label", o, "href", "", 1, "page-link", 3, "click"],
                ["aria-label", a, "href", "", 1, "page-link", 3, "click"],
              ]
            );
          },
          template: function (e, t) {
            1 & e &&
              (s.Cd(0, He, 2, 0, "ng-template", null, 0, s.Dd),
              s.Cd(2, Ge, 2, 0, "ng-template", null, 1, s.Dd),
              s.Cd(4, Ue, 2, 0, "ng-template", null, 2, s.Dd),
              s.Cd(6, $e, 2, 0, "ng-template", null, 3, s.Dd),
              s.Cd(8, qe, 1, 0, "ng-template", null, 4, s.Dd),
              s.Cd(10, Ye, 2, 2, "ng-template", null, 5, s.Dd),
              s.Rc(12, "ul"),
              s.Cd(13, Je, 3, 9, "li", 6),
              s.Cd(14, et, 3, 8, "li", 6),
              s.Cd(15, at, 3, 7, "li", 7),
              s.Cd(16, ct, 3, 9, "li", 6),
              s.Cd(17, dt, 3, 9, "li", 6),
              s.Qc()),
              2 & e &&
                (s.zc(12),
                s.Bc("pagination" + (t.size ? " pagination-" + t.size : "")),
                s.zc(1),
                s.ld("ngIf", t.boundaryLinks),
                s.zc(1),
                s.ld("ngIf", t.directionLinks),
                s.zc(1),
                s.ld("ngForOf", t.pages),
                s.zc(1),
                s.ld("ngIf", t.directionLinks),
                s.zc(1),
                s.ld("ngIf", t.boundaryLinks));
          },
          directives: [i.k, i.j, i.p],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (xr.ctorParameters = () => [{ type: pr }]),
        (xr.propDecorators = {
          tplEllipsis: [{ type: s.r, args: [mr, { static: !1 }] }],
          tplFirst: [{ type: s.r, args: [fr, { static: !1 }] }],
          tplLast: [{ type: s.r, args: [gr, { static: !1 }] }],
          tplNext: [{ type: s.r, args: [yr, { static: !1 }] }],
          tplNumber: [{ type: s.r, args: [vr, { static: !1 }] }],
          tplPrevious: [{ type: s.r, args: [br, { static: !1 }] }],
          disabled: [{ type: s.G }],
          boundaryLinks: [{ type: s.G }],
          directionLinks: [{ type: s.G }],
          ellipses: [{ type: s.G }],
          rotate: [{ type: s.G }],
          collectionSize: [{ type: s.G }],
          maxSize: [{ type: s.G }],
          page: [{ type: s.G }],
          pageSize: [{ type: s.G }],
          pageChange: [{ type: s.S }],
          size: [{ type: s.G }],
        });
      class _r {}
      (_r.ɵmod = s.Kc({ type: _r })),
        (_r.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || _r)();
          },
          imports: [[i.b]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(_r, {
            declarations: function () {
              return [xr, mr, fr, gr, yr, vr, br];
            },
            imports: function () {
              return [i.b];
            },
            exports: function () {
              return [xr, mr, fr, gr, yr, vr, br];
            },
          });
      class wr {
        constructor(e, t) {
          (this.open = e), (this.close = t), t || (this.close = e);
        }
        isManual() {
          return "manual" === this.open || "manual" === this.close;
        }
      }
      const Cr = {
        hover: ["mouseenter", "mouseleave"],
        focus: ["focusin", "focusout"],
      };
      const Sr = (e) => (e > 0 ? Object(U.a)(e) : (e) => e);
      function Er(e, t, n, s, i, r, o = 0, a = 0) {
        const l = (function (e, t = Cr) {
          const n = (e || "").trim();
          if (0 === n.length) return [];
          const s = n
              .split(/\s+/)
              .map((e) => e.split(":"))
              .map((e) => {
                let n = t[e[0]] || e;
                return new wr(n[0], n[1]);
              }),
            i = s.filter((e) => e.isManual());
          if (i.length > 1)
            throw "Triggers parse error: only one manual trigger is allowed";
          if (1 === i.length && s.length > 1)
            throw "Triggers parse error: manual trigger can't be mixed with other triggers";
          return s;
        })(n);
        if (1 === l.length && l[0].isManual()) return () => {};
        const c = (function (e, t, n, s) {
          return new b.a((i) => {
            const r = [],
              o = () => i.next(!0),
              a = () => i.next(!1),
              l = () => i.next(!s());
            return (
              n.forEach((n) => {
                n.open === n.close
                  ? r.push(e.listen(t, n.open, l))
                  : r.push(e.listen(t, n.open, o), e.listen(t, n.close, a));
              }),
              () => {
                r.forEach((e) => e());
              }
            );
          });
        })(e, t, l, s)
          .pipe(
            (function (e, t, n) {
              return (s) => {
                let i = null;
                const r = s.pipe(
                    Object(N.a)((e) => ({ open: e })),
                    Object(R.a)((e) => {
                      const t = n();
                      return t === e.open || (i && i.open !== t)
                        ? (i && i.open !== e.open && (i = null), !1)
                        : ((i = e), !0);
                    }),
                    Object(Y.a)()
                  ),
                  o = r.pipe(
                    Object(R.a)((e) => e.open),
                    Sr(e)
                  ),
                  a = r.pipe(
                    Object(R.a)((e) => !e.open),
                    Sr(t)
                  );
                return Object(D.a)(o, a).pipe(
                  Object(R.a)((e) => e === i && ((i = null), e.open !== n())),
                  Object(N.a)((e) => e.open)
                );
              };
            })(o, a, s)
          )
          .subscribe((e) => (e ? i() : r()));
        return () => c.unsubscribe();
      }
      class kr {
        constructor(e) {
          (this.autoClose = !0),
            (this.placement = "auto"),
            (this.triggers = "click"),
            (this.disablePopover = !1),
            (this.openDelay = 0),
            (this.closeDelay = 0),
            (this.animation = e.animation);
        }
      }
      (kr.ɵfac = function (e) {
        return new (e || kr)(s.Yc(Xt));
      }),
        (kr.ɵprov = Object(s.Ic)({
          factory: function () {
            return new kr(Object(s.Yc)(Xt));
          },
          token: kr,
          providedIn: "root",
        })),
        (kr.ctorParameters = () => [{ type: Xt }]);
      let Or = 0;
      class Ir {
        isTitleTemplate() {
          return this.title instanceof s.ib;
        }
      }
      (Ir.ɵfac = function (e) {
        return new (e || Ir)();
      }),
        (Ir.ɵcmp = s.Gc({
          type: Ir,
          selectors: [["ngb-popover-window"]],
          hostAttrs: ["role", "tooltip"],
          hostVars: 5,
          hostBindings: function (e, t) {
            2 & e &&
              (s.Uc("id", t.id),
              s.Bc("popover" + (t.popoverClass ? " " + t.popoverClass : "")),
              s.Ec("fade", t.animation));
          },
          inputs: {
            animation: "animation",
            title: "title",
            id: "id",
            popoverClass: "popoverClass",
            context: "context",
          },
          ngContentSelectors: ie,
          decls: 4,
          vars: 1,
          consts: [
            [1, "arrow"],
            ["class", "popover-header", 4, "ngIf"],
            [1, "popover-body"],
            [1, "popover-header"],
            ["simpleTitle", ""],
            [3, "ngTemplateOutlet", "ngTemplateOutletContext"],
          ],
          template: function (e, t) {
            1 & e &&
              (s.kd(),
              s.Nc(0, "div", 0),
              s.Cd(1, mt, 4, 2, "h3", 1),
              s.Rc(2, "div", 2),
              s.jd(3),
              s.Qc()),
              2 & e && (s.zc(1), s.ld("ngIf", t.title));
          },
          directives: [i.k, i.p],
          styles: [
            "ngb-popover-window.bs-popover-bottom>.arrow,ngb-popover-window.bs-popover-top>.arrow{left:50%;margin-left:-.5rem}ngb-popover-window.bs-popover-bottom-left>.arrow,ngb-popover-window.bs-popover-top-left>.arrow{left:2em}ngb-popover-window.bs-popover-bottom-right>.arrow,ngb-popover-window.bs-popover-top-right>.arrow{left:auto;right:2em}ngb-popover-window.bs-popover-left>.arrow,ngb-popover-window.bs-popover-right>.arrow{margin-top:-.5rem;top:50%}ngb-popover-window.bs-popover-left-top>.arrow,ngb-popover-window.bs-popover-right-top>.arrow{top:.7em}ngb-popover-window.bs-popover-left-bottom>.arrow,ngb-popover-window.bs-popover-right-bottom>.arrow{bottom:.7em;top:auto}",
          ],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (Ir.propDecorators = {
          animation: [{ type: s.G }],
          title: [{ type: s.G }],
          id: [{ type: s.G }],
          popoverClass: [{ type: s.G }],
          context: [{ type: s.G }],
        });
      class Tr {
        constructor(e, t, n, i, r, o, a, l, c, u) {
          (this._elementRef = e),
            (this._renderer = t),
            (this._ngZone = a),
            (this._document = l),
            (this._changeDetector = c),
            (this.shown = new s.x()),
            (this.hidden = new s.x()),
            (this._ngbPopoverWindowId = "ngb-popover-" + Or++),
            (this._windowRef = null),
            (this.animation = o.animation),
            (this.autoClose = o.autoClose),
            (this.placement = o.placement),
            (this.triggers = o.triggers),
            (this.container = o.container),
            (this.disablePopover = o.disablePopover),
            (this.popoverClass = o.popoverClass),
            (this.openDelay = o.openDelay),
            (this.closeDelay = o.closeDelay),
            (this._popupService = new Gi(Ir, n, r, t, this._ngZone, i, u)),
            (this._zoneSubscription = a.onStable.subscribe(() => {
              this._windowRef &&
                ks(
                  this._elementRef.nativeElement,
                  this._windowRef.location.nativeElement,
                  this.placement,
                  "body" === this.container,
                  "bs-popover"
                );
            }));
        }
        _isDisabled() {
          return (
            !!this.disablePopover || (!this.ngbPopover && !this.popoverTitle)
          );
        }
        open(e) {
          if (!this._windowRef && !this._isDisabled()) {
            const { windowRef: t, transition$: n } = this._popupService.open(
              this.ngbPopover,
              e,
              this.animation
            );
            (this._windowRef = t),
              (this._windowRef.instance.animation = this.animation),
              (this._windowRef.instance.title = this.popoverTitle),
              (this._windowRef.instance.context = e),
              (this._windowRef.instance.popoverClass = this.popoverClass),
              (this._windowRef.instance.id = this._ngbPopoverWindowId),
              this._renderer.setAttribute(
                this._elementRef.nativeElement,
                "aria-describedby",
                this._ngbPopoverWindowId
              ),
              "body" === this.container &&
                this._document
                  .querySelector(this.container)
                  .appendChild(this._windowRef.location.nativeElement),
              this._windowRef.changeDetectorRef.detectChanges(),
              this._windowRef.changeDetectorRef.markForCheck(),
              xs(
                this._ngZone,
                this._document,
                this.autoClose,
                () => this.close(),
                this.hidden,
                [this._windowRef.location.nativeElement]
              ),
              n.subscribe(() => this.shown.emit());
          }
        }
        close() {
          this._windowRef &&
            (this._renderer.removeAttribute(
              this._elementRef.nativeElement,
              "aria-describedby"
            ),
            this._popupService.close(this.animation).subscribe(() => {
              (this._windowRef = null),
                this.hidden.emit(),
                this._changeDetector.markForCheck();
            }));
        }
        toggle() {
          this._windowRef ? this.close() : this.open();
        }
        isOpen() {
          return null != this._windowRef;
        }
        ngOnInit() {
          this._unregisterListenersFn = Er(
            this._renderer,
            this._elementRef.nativeElement,
            this.triggers,
            this.isOpen.bind(this),
            this.open.bind(this),
            this.close.bind(this),
            +this.openDelay,
            +this.closeDelay
          );
        }
        ngOnChanges({
          ngbPopover: e,
          popoverTitle: t,
          disablePopover: n,
          popoverClass: s,
        }) {
          s &&
            this.isOpen() &&
            (this._windowRef.instance.popoverClass = s.currentValue),
            (e || t || n) && this._isDisabled() && this.close();
        }
        ngOnDestroy() {
          this.close(),
            this._unregisterListenersFn && this._unregisterListenersFn(),
            this._zoneSubscription.unsubscribe();
        }
      }
      (Tr.ɵfac = function (e) {
        return new (e || Tr)(
          s.Mc(s.v),
          s.Mc(s.Y),
          s.Mc(s.F),
          s.Mc(s.p),
          s.Mc(s.ob),
          s.Mc(kr),
          s.Mc(s.Q),
          s.Mc(i.c),
          s.Mc(s.k),
          s.Mc(s.g)
        );
      }),
        (Tr.ɵdir = s.Hc({
          type: Tr,
          selectors: [["", "ngbPopover", ""]],
          inputs: {
            animation: "animation",
            autoClose: "autoClose",
            placement: "placement",
            triggers: "triggers",
            container: "container",
            disablePopover: "disablePopover",
            popoverClass: "popoverClass",
            openDelay: "openDelay",
            closeDelay: "closeDelay",
            ngbPopover: "ngbPopover",
            popoverTitle: "popoverTitle",
          },
          outputs: { shown: "shown", hidden: "hidden" },
          exportAs: ["ngbPopover"],
          features: [s.xc],
        })),
        (Tr.ctorParameters = () => [
          { type: s.v },
          { type: s.Y },
          { type: s.F },
          { type: s.p },
          { type: s.ob },
          { type: kr },
          { type: s.Q },
          { type: void 0, decorators: [{ type: s.C, args: [i.c] }] },
          { type: s.k },
          { type: s.g },
        ]),
        (Tr.propDecorators = {
          animation: [{ type: s.G }],
          autoClose: [{ type: s.G }],
          ngbPopover: [{ type: s.G }],
          popoverTitle: [{ type: s.G }],
          placement: [{ type: s.G }],
          triggers: [{ type: s.G }],
          container: [{ type: s.G }],
          disablePopover: [{ type: s.G }],
          popoverClass: [{ type: s.G }],
          openDelay: [{ type: s.G }],
          closeDelay: [{ type: s.G }],
          shown: [{ type: s.S }],
          hidden: [{ type: s.S }],
        });
      class Ar {}
      (Ar.ɵmod = s.Kc({ type: Ar })),
        (Ar.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || Ar)();
          },
          imports: [[i.b]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(Ar, {
            declarations: function () {
              return [Tr, Ir];
            },
            imports: function () {
              return [i.b];
            },
            exports: function () {
              return [Tr];
            },
          });
      class Dr {
        constructor() {
          (this.max = 100),
            (this.animated = !1),
            (this.striped = !1),
            (this.showValue = !1);
        }
      }
      (Dr.ɵfac = function (e) {
        return new (e || Dr)();
      }),
        (Dr.ɵprov = Object(s.Ic)({
          factory: function () {
            return new Dr();
          },
          token: Dr,
          providedIn: "root",
        }));
      class Mr {
        constructor(e) {
          (this.value = 0),
            (this.max = e.max),
            (this.animated = e.animated),
            (this.striped = e.striped),
            (this.textType = e.textType),
            (this.type = e.type),
            (this.showValue = e.showValue),
            (this.height = e.height);
        }
        set max(e) {
          this._max = !$t(e) || e <= 0 ? 100 : e;
        }
        get max() {
          return this._max;
        }
        getValue() {
          return Gt(this.value, this.max);
        }
        getPercentValue() {
          return (100 * this.getValue()) / this.max;
        }
      }
      (Mr.ɵfac = function (e) {
        return new (e || Mr)(s.Mc(Dr));
      }),
        (Mr.ɵcmp = s.Gc({
          type: Mr,
          selectors: [["ngb-progressbar"]],
          hostAttrs: [1, "progress"],
          hostVars: 2,
          hostBindings: function (e, t) {
            2 & e && s.zd("height", t.height);
          },
          inputs: {
            value: "value",
            max: "max",
            animated: "animated",
            striped: "striped",
            textType: "textType",
            type: "type",
            showValue: "showValue",
            height: "height",
          },
          ngContentSelectors: ie,
          decls: 3,
          vars: 11,
          consts: function () {
            let e;
            return (
              (e = $localize`:@@ngb.progressbar.value␟f8e9a947b9db4252c0e9905765338712f2fd032f␟3720830768741091151:${"\ufffd0\ufffd"}:INTERPOLATION:`),
              [["role", "progressbar", "aria-valuemin", "0"], [4, "ngIf"], e]
            );
          },
          template: function (e, t) {
            1 & e &&
              (s.kd(),
              s.Rc(0, "div", 0),
              s.Cd(1, ft, 3, 3, "span", 1),
              s.jd(2),
              s.Qc()),
              2 & e &&
                (s.Dc(
                  "progress-bar",
                  t.type ? " bg-" + t.type : "",
                  "",
                  t.textType ? " text-" + t.textType : "",
                  "\n    ",
                  t.animated ? " progress-bar-animated" : "",
                  "",
                  t.striped ? " progress-bar-striped" : "",
                  ""
                ),
                s.zd("width", t.getPercentValue(), "%"),
                s.Ac("aria-valuenow", t.getValue())("aria-valuemax", t.max),
                s.zc(1),
                s.ld("ngIf", t.showValue));
          },
          directives: [i.k],
          pipes: [i.r],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (Mr.ctorParameters = () => [{ type: Dr }]),
        (Mr.propDecorators = {
          max: [{ type: s.G }],
          animated: [{ type: s.G }],
          striped: [{ type: s.G }],
          showValue: [{ type: s.G }],
          textType: [{ type: s.G }],
          type: [{ type: s.G }],
          value: [{ type: s.G }],
          height: [{ type: s.G }, { type: s.z, args: ["style.height"] }],
        });
      class Pr {}
      (Pr.ɵmod = s.Kc({ type: Pr })),
        (Pr.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || Pr)();
          },
          imports: [[i.b]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(Pr, {
            declarations: function () {
              return [Mr];
            },
            imports: function () {
              return [i.b];
            },
            exports: function () {
              return [Mr];
            },
          });
      class Rr {
        constructor() {
          (this.max = 10), (this.readonly = !1), (this.resettable = !1);
        }
      }
      (Rr.ɵfac = function (e) {
        return new (e || Rr)();
      }),
        (Rr.ɵprov = Object(s.Ic)({
          factory: function () {
            return new Rr();
          },
          token: Rr,
          providedIn: "root",
        }));
      const jr = {
        provide: Q.h,
        useExisting: Object(s.sb)(() => Nr),
        multi: !0,
      };
      class Nr {
        constructor(e, t) {
          (this._changeDetectorRef = t),
            (this.contexts = []),
            (this.disabled = !1),
            (this.hover = new s.x()),
            (this.leave = new s.x()),
            (this.rateChange = new s.x(!0)),
            (this.onChange = (e) => {}),
            (this.onTouched = () => {}),
            (this.max = e.max),
            (this.readonly = e.readonly);
        }
        ariaValueText() {
          return `${this.nextRate} out of ${this.max}`;
        }
        isInteractive() {
          return !this.readonly && !this.disabled;
        }
        enter(e) {
          this.isInteractive() && this._updateState(e), this.hover.emit(e);
        }
        handleBlur() {
          this.onTouched();
        }
        handleClick(e) {
          this.isInteractive() &&
            this.update(this.resettable && this.rate === e ? 0 : e);
        }
        handleKeyDown(e) {
          switch (e.which) {
            case hs.ArrowDown:
            case hs.ArrowLeft:
              this.update(this.rate - 1);
              break;
            case hs.ArrowUp:
            case hs.ArrowRight:
              this.update(this.rate + 1);
              break;
            case hs.Home:
              this.update(0);
              break;
            case hs.End:
              this.update(this.max);
              break;
            default:
              return;
          }
          e.preventDefault();
        }
        ngOnChanges(e) {
          e.rate && this.update(this.rate);
        }
        ngOnInit() {
          (this.contexts = Array.from({ length: this.max }, (e, t) => ({
            fill: 0,
            index: t,
          }))),
            this._updateState(this.rate);
        }
        registerOnChange(e) {
          this.onChange = e;
        }
        registerOnTouched(e) {
          this.onTouched = e;
        }
        reset() {
          this.leave.emit(this.nextRate), this._updateState(this.rate);
        }
        setDisabledState(e) {
          this.disabled = e;
        }
        update(e, t = !0) {
          const n = Gt(e, this.max, 0);
          this.isInteractive() &&
            this.rate !== n &&
            ((this.rate = n), this.rateChange.emit(this.rate)),
            t && (this.onChange(this.rate), this.onTouched()),
            this._updateState(this.rate);
        }
        writeValue(e) {
          this.update(e, !1), this._changeDetectorRef.markForCheck();
        }
        _updateState(e) {
          (this.nextRate = e),
            this.contexts.forEach(
              (t, n) => (t.fill = Math.round(100 * Gt(e - n, 1, 0)))
            );
        }
      }
      (Nr.ɵfac = function (e) {
        return new (e || Nr)(s.Mc(Rr), s.Mc(s.k));
      }),
        (Nr.ɵcmp = s.Gc({
          type: Nr,
          selectors: [["ngb-rating"]],
          contentQueries: function (e, t, n) {
            if ((1 & e && s.Fc(n, s.ib, !0), 2 & e)) {
              let e;
              s.sd((e = s.dd())) && (t.starTemplateFromContent = e.first);
            }
          },
          hostAttrs: [
            "role",
            "slider",
            "aria-valuemin",
            "0",
            1,
            "d-inline-flex",
          ],
          hostVars: 5,
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("blur", function () {
                return t.handleBlur();
              })("keydown", function (e) {
                return t.handleKeyDown(e);
              })("mouseleave", function () {
                return t.reset();
              }),
              2 & e &&
                (s.Uc("tabindex", t.disabled ? -1 : 0),
                s.Ac("aria-valuemax", t.max)("aria-valuenow", t.nextRate)(
                  "aria-valuetext",
                  t.ariaValueText()
                )("aria-disabled", !!t.readonly || null));
          },
          inputs: {
            max: "max",
            readonly: "readonly",
            rate: "rate",
            resettable: "resettable",
            starTemplate: "starTemplate",
          },
          outputs: { hover: "hover", leave: "leave", rateChange: "rateChange" },
          features: [s.yc([jr]), s.xc],
          decls: 3,
          vars: 1,
          consts: [
            ["t", ""],
            ["ngFor", "", 3, "ngForOf"],
            [1, "sr-only"],
            [3, "mouseenter", "click"],
            [3, "ngTemplateOutlet", "ngTemplateOutletContext"],
          ],
          template: function (e, t) {
            1 & e &&
              (s.Cd(0, gt, 1, 1, "ng-template", null, 0, s.Dd),
              s.Cd(2, vt, 4, 5, "ng-template", 1)),
              2 & e && (s.zc(2), s.ld("ngForOf", t.contexts));
          },
          directives: [i.j, i.p],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (Nr.ctorParameters = () => [{ type: Rr }, { type: s.k }]),
        (Nr.propDecorators = {
          max: [{ type: s.G }],
          rate: [{ type: s.G }],
          readonly: [{ type: s.G }],
          resettable: [{ type: s.G }],
          starTemplate: [{ type: s.G }],
          starTemplateFromContent: [
            { type: s.r, args: [s.ib, { static: !1 }] },
          ],
          hover: [{ type: s.S }],
          leave: [{ type: s.S }],
          rateChange: [{ type: s.S }],
        });
      class Fr {}
      (Fr.ɵmod = s.Kc({ type: Fr })),
        (Fr.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || Fr)();
          },
          imports: [[i.b]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(Fr, {
            declarations: function () {
              return [Nr];
            },
            imports: function () {
              return [i.b];
            },
            exports: function () {
              return [Nr];
            },
          });
      class Lr {
        constructor(e, t, n) {
          (this.hour = zt(e)), (this.minute = zt(t)), (this.second = zt(n));
        }
        changeHour(e = 1) {
          this.updateHour((isNaN(this.hour) ? 0 : this.hour) + e);
        }
        updateHour(e) {
          $t(e) ? (this.hour = (e < 0 ? 24 + e : e) % 24) : (this.hour = NaN);
        }
        changeMinute(e = 1) {
          this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + e);
        }
        updateMinute(e) {
          $t(e)
            ? ((this.minute = e % 60 < 0 ? 60 + (e % 60) : e % 60),
              this.changeHour(Math.floor(e / 60)))
            : (this.minute = NaN);
        }
        changeSecond(e = 1) {
          this.updateSecond((isNaN(this.second) ? 0 : this.second) + e);
        }
        updateSecond(e) {
          $t(e)
            ? ((this.second = e < 0 ? 60 + (e % 60) : e % 60),
              this.changeMinute(Math.floor(e / 60)))
            : (this.second = NaN);
        }
        isValid(e = !0) {
          return $t(this.hour) && $t(this.minute) && (!e || $t(this.second));
        }
        toString() {
          return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`;
        }
      }
      class Vr {
        constructor() {
          (this.meridian = !1),
            (this.spinners = !0),
            (this.seconds = !1),
            (this.hourStep = 1),
            (this.minuteStep = 1),
            (this.secondStep = 1),
            (this.disabled = !1),
            (this.readonlyInputs = !1),
            (this.size = "medium");
        }
      }
      function Br() {
        return new Hr();
      }
      (Vr.ɵfac = function (e) {
        return new (e || Vr)();
      }),
        (Vr.ɵprov = Object(s.Ic)({
          factory: function () {
            return new Vr();
          },
          token: Vr,
          providedIn: "root",
        }));
      class zr {}
      (zr.ɵfac = function (e) {
        return new (e || zr)();
      }),
        (zr.ɵprov = Object(s.Ic)({
          factory: Br,
          token: zr,
          providedIn: "root",
        }));
      class Hr extends zr {
        fromModel(e) {
          return e && qt(e.hour) && qt(e.minute)
            ? {
                hour: e.hour,
                minute: e.minute,
                second: qt(e.second) ? e.second : null,
              }
            : null;
        }
        toModel(e) {
          return e && qt(e.hour) && qt(e.minute)
            ? {
                hour: e.hour,
                minute: e.minute,
                second: qt(e.second) ? e.second : null,
              }
            : null;
        }
      }
      (Hr.ɵfac = function (e) {
        return Gr(e || Hr);
      }),
        (Hr.ɵprov = s.Ic({ token: Hr, factory: Hr.ɵfac }));
      const Gr = s.Tc(Hr);
      function Ur(e) {
        return new qr(e);
      }
      class $r {}
      ($r.ɵfac = function (e) {
        return new (e || $r)();
      }),
        ($r.ɵprov = Object(s.Ic)({
          factory: function () {
            return Ur(Object(s.Yc)(s.J));
          },
          token: $r,
          providedIn: "root",
        }));
      class qr extends $r {
        constructor(e) {
          super(), (this._periods = Object(i.x)(e, i.d.Standalone, i.t.Narrow));
        }
        getMorningPeriod() {
          return this._periods[0];
        }
        getAfternoonPeriod() {
          return this._periods[1];
        }
      }
      (qr.ɵfac = function (e) {
        return new (e || qr)(s.Yc(s.J));
      }),
        (qr.ɵprov = s.Ic({ token: qr, factory: qr.ɵfac })),
        (qr.ctorParameters = () => [
          { type: String, decorators: [{ type: s.C, args: [s.J] }] },
        ]);
      const Wr = /[^0-9]/g,
        Yr = { provide: Q.h, useExisting: Object(s.sb)(() => Qr), multi: !0 };
      class Qr {
        constructor(e, t, n, s) {
          (this._config = e),
            (this._ngbTimeAdapter = t),
            (this._cd = n),
            (this.i18n = s),
            (this.onChange = (e) => {}),
            (this.onTouched = () => {}),
            (this.meridian = e.meridian),
            (this.spinners = e.spinners),
            (this.seconds = e.seconds),
            (this.hourStep = e.hourStep),
            (this.minuteStep = e.minuteStep),
            (this.secondStep = e.secondStep),
            (this.disabled = e.disabled),
            (this.readonlyInputs = e.readonlyInputs),
            (this.size = e.size);
        }
        set hourStep(e) {
          this._hourStep = qt(e) ? e : this._config.hourStep;
        }
        get hourStep() {
          return this._hourStep;
        }
        set minuteStep(e) {
          this._minuteStep = qt(e) ? e : this._config.minuteStep;
        }
        get minuteStep() {
          return this._minuteStep;
        }
        set secondStep(e) {
          this._secondStep = qt(e) ? e : this._config.secondStep;
        }
        get secondStep() {
          return this._secondStep;
        }
        writeValue(e) {
          const t = this._ngbTimeAdapter.fromModel(e);
          (this.model = t ? new Lr(t.hour, t.minute, t.second) : new Lr()),
            this.seconds || (t && $t(t.second)) || (this.model.second = 0),
            this._cd.markForCheck();
        }
        registerOnChange(e) {
          this.onChange = e;
        }
        registerOnTouched(e) {
          this.onTouched = e;
        }
        setDisabledState(e) {
          this.disabled = e;
        }
        changeHour(e) {
          this.model.changeHour(e), this.propagateModelChange();
        }
        changeMinute(e) {
          this.model.changeMinute(e), this.propagateModelChange();
        }
        changeSecond(e) {
          this.model.changeSecond(e), this.propagateModelChange();
        }
        updateHour(e) {
          const t = this.model.hour >= 12,
            n = zt(e);
          this.meridian && ((t && n < 12) || (!t && 12 === n))
            ? this.model.updateHour(n + 12)
            : this.model.updateHour(n),
            this.propagateModelChange();
        }
        updateMinute(e) {
          this.model.updateMinute(zt(e)), this.propagateModelChange();
        }
        updateSecond(e) {
          this.model.updateSecond(zt(e)), this.propagateModelChange();
        }
        toggleMeridian() {
          this.meridian && this.changeHour(12);
        }
        formatInput(e) {
          e.value = e.value.replace(Wr, "");
        }
        formatHour(e) {
          return $t(e)
            ? this.meridian
              ? Yt(e % 12 == 0 ? 12 : e % 12)
              : Yt(e % 24)
            : Yt(NaN);
        }
        formatMinSec(e) {
          return Yt($t(e) ? e : NaN);
        }
        get isSmallSize() {
          return "small" === this.size;
        }
        get isLargeSize() {
          return "large" === this.size;
        }
        ngOnChanges(e) {
          e.seconds &&
            !this.seconds &&
            this.model &&
            !$t(this.model.second) &&
            ((this.model.second = 0), this.propagateModelChange(!1));
        }
        propagateModelChange(e = !0) {
          e && this.onTouched(),
            this.model.isValid(this.seconds)
              ? this.onChange(
                  this._ngbTimeAdapter.toModel({
                    hour: this.model.hour,
                    minute: this.model.minute,
                    second: this.model.second,
                  })
                )
              : this.onChange(this._ngbTimeAdapter.toModel(null));
        }
      }
      (Qr.ɵfac = function (e) {
        return new (e || Qr)(s.Mc(Vr), s.Mc(zr), s.Mc(s.k), s.Mc($r));
      }),
        (Qr.ɵcmp = s.Gc({
          type: Qr,
          selectors: [["ngb-timepicker"]],
          inputs: {
            meridian: "meridian",
            spinners: "spinners",
            seconds: "seconds",
            hourStep: "hourStep",
            minuteStep: "minuteStep",
            secondStep: "secondStep",
            readonlyInputs: "readonlyInputs",
            size: "size",
          },
          features: [s.yc([Yr]), s.xc],
          decls: 16,
          vars: 25,
          consts: function () {
            let e, t, n, s, i, r, o, a, l, c, u, d, h, p;
            return (
              (e = $localize`:@@ngb.timepicker.HH␟ce676ab1d6d98f85c836381cf100a4a91ef95a1f␟4043638465245303811:HH`),
              (t = $localize`:@@ngb.timepicker.hours␟3bbce5fef7e1151da052a4e529453edb340e3912␟8070396816726827304:Hours`),
              (n = $localize`:@@ngb.timepicker.MM␟72c8edf6a50068a05bde70991e36b1e881f4ca54␟1647282246509919852:MM`),
              (s = $localize`:@@ngb.timepicker.minutes␟41e62daa962947c0d23ded0981975d1bddf0bf38␟5531237363767747080:Minutes`),
              (i = $localize`:@@ngb.timepicker.increment-hours␟cb74bc1d625a6c1742f0d7d47306cf495780c218␟5939278348542933629:Increment hours`),
              (r = $localize`:@@ngb.timepicker.decrement-hours␟147c7a19429da7d999e247d22e33fee370b1691b␟3651829882940481818:Decrement hours`),
              (o = $localize`:@@ngb.timepicker.increment-minutes␟f5a4a3bc05e053f6732475d0e74875ec01c3a348␟180147720391025024:Increment minutes`),
              (a = $localize`:@@ngb.timepicker.decrement-minutes␟c1a6899e529c096da5b660385d4e77fe1f7ad271␟7447789825403243588:Decrement minutes`),
              (l = $localize`:@@ngb.timepicker.SS␟ebe38d36a40a2383c5fefa9b4608ffbda08bd4a3␟3628127143071124194:SS`),
              (c = $localize`:@@ngb.timepicker.seconds␟4f2ed9e71a7c981db3e50ae2fedb28aff2ec4e6c␟8874012390997067175:Seconds`),
              (u = $localize`:@@ngb.timepicker.increment-seconds␟912322ecee7d659d04dcf494a70e22e49d334b26␟5364772110539092174:Increment seconds`),
              (d = $localize`:@@ngb.timepicker.decrement-seconds␟5db47ac104294243a70eb9124fbea9d0004ddf69␟753633511487974857:Decrement seconds`),
              (h = $localize`:@@ngb.timepicker.PM␟8d6e691e10306c1b34c6b26805151aaea320ef7f␟3564199131264287502:${"\ufffd0\ufffd"}:INTERPOLATION:`),
              (p = $localize`:@@ngb.timepicker.AM␟69a1f176a93998876952adac57c3bc3863b6105e␟4592818992509942761:${"\ufffd0\ufffd"}:INTERPOLATION:`),
              [
                [3, "disabled"],
                [1, "ngb-tp"],
                [1, "ngb-tp-input-container", "ngb-tp-hour"],
                [
                  "tabindex",
                  "-1",
                  "type",
                  "button",
                  "class",
                  "btn btn-link",
                  3,
                  "btn-sm",
                  "btn-lg",
                  "disabled",
                  "click",
                  4,
                  "ngIf",
                ],
                [
                  "type",
                  "text",
                  "maxlength",
                  "2",
                  "inputmode",
                  "numeric",
                  "placeholder",
                  e,
                  "aria-label",
                  t,
                  1,
                  "ngb-tp-input",
                  "form-control",
                  3,
                  "value",
                  "readOnly",
                  "disabled",
                  "change",
                  "input",
                  "keydown.ArrowUp",
                  "keydown.ArrowDown",
                ],
                [1, "ngb-tp-spacer"],
                [1, "ngb-tp-input-container", "ngb-tp-minute"],
                [
                  "type",
                  "text",
                  "maxlength",
                  "2",
                  "inputmode",
                  "numeric",
                  "placeholder",
                  n,
                  "aria-label",
                  s,
                  1,
                  "ngb-tp-input",
                  "form-control",
                  3,
                  "value",
                  "readOnly",
                  "disabled",
                  "change",
                  "input",
                  "keydown.ArrowUp",
                  "keydown.ArrowDown",
                ],
                ["class", "ngb-tp-spacer", 4, "ngIf"],
                ["class", "ngb-tp-input-container ngb-tp-second", 4, "ngIf"],
                ["class", "ngb-tp-meridian", 4, "ngIf"],
                [
                  "tabindex",
                  "-1",
                  "type",
                  "button",
                  1,
                  "btn",
                  "btn-link",
                  3,
                  "disabled",
                  "click",
                ],
                [1, "chevron", "ngb-tp-chevron"],
                [1, "sr-only"],
                i,
                [1, "chevron", "ngb-tp-chevron", "bottom"],
                r,
                o,
                a,
                [1, "ngb-tp-input-container", "ngb-tp-second"],
                [
                  "type",
                  "text",
                  "maxlength",
                  "2",
                  "inputmode",
                  "numeric",
                  "placeholder",
                  l,
                  "aria-label",
                  c,
                  1,
                  "ngb-tp-input",
                  "form-control",
                  3,
                  "value",
                  "readOnly",
                  "disabled",
                  "change",
                  "input",
                  "keydown.ArrowUp",
                  "keydown.ArrowDown",
                ],
                u,
                d,
                [1, "ngb-tp-meridian"],
                [
                  "type",
                  "button",
                  1,
                  "btn",
                  "btn-outline-primary",
                  3,
                  "disabled",
                  "click",
                ],
                [4, "ngIf", "ngIfElse"],
                ["am", ""],
                h,
                p,
              ]
            );
          },
          template: function (e, t) {
            1 & e &&
              (s.Rc(0, "fieldset", 0),
              s.Rc(1, "div", 1),
              s.Rc(2, "div", 2),
              s.Cd(3, bt, 4, 7, "button", 3),
              s.Rc(4, "input", 4),
              s.cd("change", function (e) {
                return t.updateHour(e.target.value);
              })("input", function (e) {
                return t.formatInput(e.target);
              })("keydown.ArrowUp", function (e) {
                return t.changeHour(t.hourStep), e.preventDefault();
              })("keydown.ArrowDown", function (e) {
                return t.changeHour(-t.hourStep), e.preventDefault();
              }),
              s.Qc(),
              s.Cd(5, xt, 4, 7, "button", 3),
              s.Qc(),
              s.Rc(6, "div", 5),
              s.Ed(7, ":"),
              s.Qc(),
              s.Rc(8, "div", 6),
              s.Cd(9, _t, 4, 7, "button", 3),
              s.Rc(10, "input", 7),
              s.cd("change", function (e) {
                return t.updateMinute(e.target.value);
              })("input", function (e) {
                return t.formatInput(e.target);
              })("keydown.ArrowUp", function (e) {
                return t.changeMinute(t.minuteStep), e.preventDefault();
              })("keydown.ArrowDown", function (e) {
                return t.changeMinute(-t.minuteStep), e.preventDefault();
              }),
              s.Qc(),
              s.Cd(11, wt, 4, 7, "button", 3),
              s.Qc(),
              s.Cd(12, Ct, 2, 0, "div", 8),
              s.Cd(13, kt, 4, 9, "div", 9),
              s.Cd(14, Ot, 1, 0, "div", 8),
              s.Cd(15, At, 5, 9, "div", 10),
              s.Qc(),
              s.Qc()),
              2 & e &&
                (s.Ec("disabled", t.disabled),
                s.ld("disabled", t.disabled),
                s.zc(3),
                s.ld("ngIf", t.spinners),
                s.zc(1),
                s.Ec("form-control-sm", t.isSmallSize)(
                  "form-control-lg",
                  t.isLargeSize
                ),
                s.ld(
                  "value",
                  t.formatHour(null == t.model ? null : t.model.hour)
                )("readOnly", t.readonlyInputs)("disabled", t.disabled),
                s.zc(1),
                s.ld("ngIf", t.spinners),
                s.zc(4),
                s.ld("ngIf", t.spinners),
                s.zc(1),
                s.Ec("form-control-sm", t.isSmallSize)(
                  "form-control-lg",
                  t.isLargeSize
                ),
                s.ld(
                  "value",
                  t.formatMinSec(null == t.model ? null : t.model.minute)
                )("readOnly", t.readonlyInputs)("disabled", t.disabled),
                s.zc(1),
                s.ld("ngIf", t.spinners),
                s.zc(1),
                s.ld("ngIf", t.seconds),
                s.zc(1),
                s.ld("ngIf", t.seconds),
                s.zc(1),
                s.ld("ngIf", t.meridian),
                s.zc(1),
                s.ld("ngIf", t.meridian));
          },
          directives: [i.k],
          styles: [
            'ngb-timepicker{font-size:1rem}.ngb-tp{-ms-flex-align:center;align-items:center;display:-ms-flexbox;display:flex}.ngb-tp-input-container{width:4em}.ngb-tp-chevron:before{-webkit-transform:rotate(-45deg);border-style:solid;border-width:.29em .29em 0 0;content:"";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{-webkit-transform:rotate(135deg);top:-.3em;transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-meridian,.ngb-tp-minute,.ngb-tp-second{-ms-flex-align:center;-ms-flex-direction:column;-ms-flex-pack:distribute;align-items:center;display:-ms-flexbox;display:flex;flex-direction:column;justify-content:space-around}.ngb-tp-spacer{text-align:center;width:1em}',
          ],
          encapsulation: 2,
        })),
        (Qr.ctorParameters = () => [
          { type: Vr },
          { type: zr },
          { type: s.k },
          { type: $r },
        ]),
        (Qr.propDecorators = {
          meridian: [{ type: s.G }],
          spinners: [{ type: s.G }],
          seconds: [{ type: s.G }],
          hourStep: [{ type: s.G }],
          minuteStep: [{ type: s.G }],
          secondStep: [{ type: s.G }],
          readonlyInputs: [{ type: s.G }],
          size: [{ type: s.G }],
        });
      class Kr {}
      (Kr.ɵmod = s.Kc({ type: Kr })),
        (Kr.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || Kr)();
          },
          imports: [[i.b]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(Kr, {
            declarations: function () {
              return [Qr];
            },
            imports: function () {
              return [i.b];
            },
            exports: function () {
              return [Qr];
            },
          });
      class Jr {
        constructor(e) {
          (this.autohide = !0),
            (this.delay = 500),
            (this.ariaLive = "polite"),
            (this.animation = e.animation);
        }
      }
      (Jr.ɵfac = function (e) {
        return new (e || Jr)(s.Yc(Xt));
      }),
        (Jr.ɵprov = Object(s.Ic)({
          factory: function () {
            return new Jr(Object(s.Yc)(Xt));
          },
          token: Jr,
          providedIn: "root",
        })),
        (Jr.ctorParameters = () => [{ type: Xt }]);
      const Xr = ({ classList: e }) => (
          e.remove("hide"),
          e.add("showing"),
          () => {
            e.remove("showing"), e.add("show");
          }
        ),
        Zr = ({ classList: e }) => (
          e.remove("show"),
          () => {
            e.add("hide");
          }
        );
      class eo {}
      (eo.ɵfac = function (e) {
        return new (e || eo)();
      }),
        (eo.ɵdir = s.Hc({ type: eo, selectors: [["", "ngbToastHeader", ""]] }));
      class to {
        constructor(e, t, n, i) {
          (this.ariaLive = e),
            (this._zone = n),
            (this._element = i),
            (this.contentHeaderTpl = null),
            (this.shown = new s.x()),
            (this.hidden = new s.x()),
            null == this.ariaLive && (this.ariaLive = t.ariaLive),
            (this.delay = t.delay),
            (this.autohide = t.autohide),
            (this.animation = t.animation);
        }
        ngAfterContentInit() {
          this._zone.onStable
            .asObservable()
            .pipe(Object(j.a)(1))
            .subscribe(() => {
              this._init(), this.show();
            });
        }
        ngOnChanges(e) {
          "autohide" in e && (this._clearTimeout(), this._init());
        }
        hide() {
          this._clearTimeout();
          const e = sn(this._element.nativeElement, Zr, {
            animation: this.animation,
            runningTransition: "stop",
          });
          return (
            e.subscribe(() => {
              this.hidden.emit();
            }),
            e
          );
        }
        show() {
          const e = sn(this._element.nativeElement, Xr, {
            animation: this.animation,
            runningTransition: "continue",
          });
          return (
            e.subscribe(() => {
              this.shown.emit();
            }),
            e
          );
        }
        _init() {
          this.autohide &&
            !this._timeoutID &&
            (this._timeoutID = setTimeout(() => this.hide(), this.delay));
        }
        _clearTimeout() {
          this._timeoutID &&
            (clearTimeout(this._timeoutID), (this._timeoutID = null));
        }
      }
      (to.ɵfac = function (e) {
        return new (e || to)(s.Zc("aria-live"), s.Mc(Jr), s.Mc(s.Q), s.Mc(s.v));
      }),
        (to.ɵcmp = s.Gc({
          type: to,
          selectors: [["ngb-toast"]],
          contentQueries: function (e, t, n) {
            if ((1 & e && s.xd(n, eo, !0, s.ib), 2 & e)) {
              let e;
              s.sd((e = s.dd())) && (t.contentHeaderTpl = e.first);
            }
          },
          hostAttrs: ["role", "alert", "aria-atomic", "true", 1, "toast"],
          hostVars: 3,
          hostBindings: function (e, t) {
            2 & e && (s.Ac("aria-live", t.ariaLive), s.Ec("fade", t.animation));
          },
          inputs: {
            delay: "delay",
            autohide: "autohide",
            animation: "animation",
            header: "header",
          },
          outputs: { shown: "shown", hidden: "hidden" },
          exportAs: ["ngbToast"],
          features: [s.xc],
          ngContentSelectors: ie,
          decls: 5,
          vars: 1,
          consts: function () {
            let e;
            return (
              (e = $localize`:@@ngb.toast.close-aria␟f4e529ae5ffd73001d1ff4bbdeeb0a72e342e5c8␟7819314041543176992:Close`),
              [
                ["headerTpl", ""],
                [3, "ngIf"],
                [1, "toast-body"],
                [1, "mr-auto"],
                [1, "toast-header"],
                [3, "ngTemplateOutlet"],
                ["type", "button", "aria-label", e, 1, "close", 3, "click"],
                ["aria-hidden", "true"],
              ]
            );
          },
          template: function (e, t) {
            1 & e &&
              (s.kd(),
              s.Cd(0, Dt, 2, 1, "ng-template", null, 0, s.Dd),
              s.Cd(2, Pt, 5, 1, "ng-template", 1),
              s.Rc(3, "div", 2),
              s.jd(4),
              s.Qc()),
              2 & e && (s.zc(2), s.ld("ngIf", t.contentHeaderTpl || t.header));
          },
          directives: [i.k, i.p],
          styles: [
            ".ngb-toasts{margin:.5em;position:fixed;right:0;top:0;z-index:1200}ngb-toast{display:block}ngb-toast .toast-header .close{margin-bottom:.25rem;margin-left:auto}",
          ],
          encapsulation: 2,
        })),
        (to.ctorParameters = () => [
          { type: String, decorators: [{ type: s.h, args: ["aria-live"] }] },
          { type: Jr },
          { type: s.Q },
          { type: s.v },
        ]),
        (to.propDecorators = {
          animation: [{ type: s.G }],
          delay: [{ type: s.G }],
          autohide: [{ type: s.G }],
          header: [{ type: s.G }],
          contentHeaderTpl: [
            { type: s.r, args: [eo, { read: s.ib, static: !0 }] },
          ],
          shown: [{ type: s.S }],
          hidden: [{ type: s.S }],
        });
      class no {}
      (no.ɵmod = s.Kc({ type: no })),
        (no.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || no)();
          },
          imports: [[i.b]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(no, {
            declarations: function () {
              return [to, eo];
            },
            imports: function () {
              return [i.b];
            },
            exports: function () {
              return [to, eo];
            },
          });
      class so {
        constructor(e) {
          (this.autoClose = !0),
            (this.placement = "auto"),
            (this.triggers = "hover focus"),
            (this.disableTooltip = !1),
            (this.openDelay = 0),
            (this.closeDelay = 0),
            (this.animation = e.animation);
        }
      }
      (so.ɵfac = function (e) {
        return new (e || so)(s.Yc(Xt));
      }),
        (so.ɵprov = Object(s.Ic)({
          factory: function () {
            return new so(Object(s.Yc)(Xt));
          },
          token: so,
          providedIn: "root",
        })),
        (so.ctorParameters = () => [{ type: Xt }]);
      let io = 0;
      class ro {}
      (ro.ɵfac = function (e) {
        return new (e || ro)();
      }),
        (ro.ɵcmp = s.Gc({
          type: ro,
          selectors: [["ngb-tooltip-window"]],
          hostAttrs: ["role", "tooltip"],
          hostVars: 5,
          hostBindings: function (e, t) {
            2 & e &&
              (s.Uc("id", t.id),
              s.Bc("tooltip" + (t.tooltipClass ? " " + t.tooltipClass : "")),
              s.Ec("fade", t.animation));
          },
          inputs: {
            animation: "animation",
            id: "id",
            tooltipClass: "tooltipClass",
          },
          ngContentSelectors: ie,
          decls: 3,
          vars: 0,
          consts: [
            [1, "arrow"],
            [1, "tooltip-inner"],
          ],
          template: function (e, t) {
            1 & e &&
              (s.kd(), s.Nc(0, "div", 0), s.Rc(1, "div", 1), s.jd(2), s.Qc());
          },
          styles: [
            "ngb-tooltip-window.bs-tooltip-bottom .arrow,ngb-tooltip-window.bs-tooltip-top .arrow{left:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-bottom-left .arrow,ngb-tooltip-window.bs-tooltip-top-left .arrow{left:1em}ngb-tooltip-window.bs-tooltip-bottom-right .arrow,ngb-tooltip-window.bs-tooltip-top-right .arrow{left:auto;right:.8rem}ngb-tooltip-window.bs-tooltip-left .arrow,ngb-tooltip-window.bs-tooltip-right .arrow{top:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-left-top .arrow,ngb-tooltip-window.bs-tooltip-right-top .arrow{top:.4rem}ngb-tooltip-window.bs-tooltip-left-bottom .arrow,ngb-tooltip-window.bs-tooltip-right-bottom .arrow{bottom:.4rem;top:auto}",
          ],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (ro.propDecorators = {
          animation: [{ type: s.G }],
          id: [{ type: s.G }],
          tooltipClass: [{ type: s.G }],
        });
      class oo {
        constructor(e, t, n, i, r, o, a, l, c, u) {
          (this._elementRef = e),
            (this._renderer = t),
            (this._ngZone = a),
            (this._document = l),
            (this._changeDetector = c),
            (this.shown = new s.x()),
            (this.hidden = new s.x()),
            (this._ngbTooltipWindowId = "ngb-tooltip-" + io++),
            (this._windowRef = null),
            (this.animation = o.animation),
            (this.autoClose = o.autoClose),
            (this.placement = o.placement),
            (this.triggers = o.triggers),
            (this.container = o.container),
            (this.disableTooltip = o.disableTooltip),
            (this.tooltipClass = o.tooltipClass),
            (this.openDelay = o.openDelay),
            (this.closeDelay = o.closeDelay),
            (this._popupService = new Gi(ro, n, r, t, this._ngZone, i, u)),
            (this._zoneSubscription = a.onStable.subscribe(() => {
              this._windowRef &&
                ks(
                  this._elementRef.nativeElement,
                  this._windowRef.location.nativeElement,
                  this.placement,
                  "body" === this.container,
                  "bs-tooltip"
                );
            }));
        }
        set ngbTooltip(e) {
          (this._ngbTooltip = e), !e && this._windowRef && this.close();
        }
        get ngbTooltip() {
          return this._ngbTooltip;
        }
        open(e) {
          if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {
            const { windowRef: t, transition$: n } = this._popupService.open(
              this._ngbTooltip,
              e,
              this.animation
            );
            (this._windowRef = t),
              (this._windowRef.instance.animation = this.animation),
              (this._windowRef.instance.tooltipClass = this.tooltipClass),
              (this._windowRef.instance.id = this._ngbTooltipWindowId),
              this._renderer.setAttribute(
                this._elementRef.nativeElement,
                "aria-describedby",
                this._ngbTooltipWindowId
              ),
              "body" === this.container &&
                this._document
                  .querySelector(this.container)
                  .appendChild(this._windowRef.location.nativeElement),
              this._windowRef.changeDetectorRef.detectChanges(),
              this._windowRef.changeDetectorRef.markForCheck(),
              xs(
                this._ngZone,
                this._document,
                this.autoClose,
                () => this.close(),
                this.hidden,
                [this._windowRef.location.nativeElement]
              ),
              n.subscribe(() => this.shown.emit());
          }
        }
        close() {
          null != this._windowRef &&
            (this._renderer.removeAttribute(
              this._elementRef.nativeElement,
              "aria-describedby"
            ),
            this._popupService.close(this.animation).subscribe(() => {
              (this._windowRef = null),
                this.hidden.emit(),
                this._changeDetector.markForCheck();
            }));
        }
        toggle() {
          this._windowRef ? this.close() : this.open();
        }
        isOpen() {
          return null != this._windowRef;
        }
        ngOnInit() {
          this._unregisterListenersFn = Er(
            this._renderer,
            this._elementRef.nativeElement,
            this.triggers,
            this.isOpen.bind(this),
            this.open.bind(this),
            this.close.bind(this),
            +this.openDelay,
            +this.closeDelay
          );
        }
        ngOnChanges({ tooltipClass: e }) {
          e &&
            this.isOpen() &&
            (this._windowRef.instance.tooltipClass = e.currentValue);
        }
        ngOnDestroy() {
          this.close(),
            this._unregisterListenersFn && this._unregisterListenersFn(),
            this._zoneSubscription.unsubscribe();
        }
      }
      (oo.ɵfac = function (e) {
        return new (e || oo)(
          s.Mc(s.v),
          s.Mc(s.Y),
          s.Mc(s.F),
          s.Mc(s.p),
          s.Mc(s.ob),
          s.Mc(so),
          s.Mc(s.Q),
          s.Mc(i.c),
          s.Mc(s.k),
          s.Mc(s.g)
        );
      }),
        (oo.ɵdir = s.Hc({
          type: oo,
          selectors: [["", "ngbTooltip", ""]],
          inputs: {
            animation: "animation",
            autoClose: "autoClose",
            placement: "placement",
            triggers: "triggers",
            container: "container",
            disableTooltip: "disableTooltip",
            tooltipClass: "tooltipClass",
            openDelay: "openDelay",
            closeDelay: "closeDelay",
            ngbTooltip: "ngbTooltip",
          },
          outputs: { shown: "shown", hidden: "hidden" },
          exportAs: ["ngbTooltip"],
          features: [s.xc],
        })),
        (oo.ctorParameters = () => [
          { type: s.v },
          { type: s.Y },
          { type: s.F },
          { type: s.p },
          { type: s.ob },
          { type: so },
          { type: s.Q },
          { type: void 0, decorators: [{ type: s.C, args: [i.c] }] },
          { type: s.k },
          { type: s.g },
        ]),
        (oo.propDecorators = {
          animation: [{ type: s.G }],
          autoClose: [{ type: s.G }],
          placement: [{ type: s.G }],
          triggers: [{ type: s.G }],
          container: [{ type: s.G }],
          disableTooltip: [{ type: s.G }],
          tooltipClass: [{ type: s.G }],
          openDelay: [{ type: s.G }],
          closeDelay: [{ type: s.G }],
          shown: [{ type: s.S }],
          hidden: [{ type: s.S }],
          ngbTooltip: [{ type: s.G }],
        });
      class ao {}
      (ao.ɵmod = s.Kc({ type: ao })),
        (ao.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || ao)();
          },
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(ao, { declarations: [oo, ro], exports: [oo] });
      class lo {
        constructor() {
          this.highlightClass = "ngb-highlight";
        }
        ngOnChanges(e) {
          const t = Ht(this.result),
            n = (Array.isArray(this.term) ? this.term : [this.term])
              .map((e) => Ht(e).replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&"))
              .filter((e) => e);
          this.parts = n.length
            ? t.split(new RegExp(`(${n.join("|")})`, "gmi"))
            : [t];
        }
      }
      (lo.ɵfac = function (e) {
        return new (e || lo)();
      }),
        (lo.ɵcmp = s.Gc({
          type: lo,
          selectors: [["ngb-highlight"]],
          inputs: {
            highlightClass: "highlightClass",
            result: "result",
            term: "term",
          },
          features: [s.xc],
          decls: 1,
          vars: 1,
          consts: [
            ["ngFor", "", 3, "ngForOf"],
            [3, "class", 4, "ngIf", "ngIfElse"],
            ["even", ""],
          ],
          template: function (e, t) {
            1 & e && s.Cd(0, Nt, 3, 2, "ng-template", 0),
              2 & e && s.ld("ngForOf", t.parts);
          },
          directives: [i.j, i.k],
          styles: [".ngb-highlight{font-weight:700}"],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (lo.propDecorators = {
          highlightClass: [{ type: s.G }],
          result: [{ type: s.G }],
          term: [{ type: s.G }],
        });
      class co {
        constructor() {
          (this.activeIdx = 0),
            (this.focusFirst = !0),
            (this.formatter = Ht),
            (this.selectEvent = new s.x()),
            (this.activeChangeEvent = new s.x());
        }
        hasActive() {
          return this.activeIdx > -1 && this.activeIdx < this.results.length;
        }
        getActive() {
          return this.results[this.activeIdx];
        }
        markActive(e) {
          (this.activeIdx = e), this._activeChanged();
        }
        next() {
          this.activeIdx === this.results.length - 1
            ? (this.activeIdx = this.focusFirst
                ? (this.activeIdx + 1) % this.results.length
                : -1)
            : this.activeIdx++,
            this._activeChanged();
        }
        prev() {
          this.activeIdx < 0
            ? (this.activeIdx = this.results.length - 1)
            : 0 === this.activeIdx
            ? (this.activeIdx = this.focusFirst ? this.results.length - 1 : -1)
            : this.activeIdx--,
            this._activeChanged();
        }
        resetActive() {
          (this.activeIdx = this.focusFirst ? 0 : -1), this._activeChanged();
        }
        select(e) {
          this.selectEvent.emit(e);
        }
        ngOnInit() {
          this.resetActive();
        }
        _activeChanged() {
          this.activeChangeEvent.emit(
            this.activeIdx >= 0 ? this.id + "-" + this.activeIdx : void 0
          );
        }
      }
      (co.ɵfac = function (e) {
        return new (e || co)();
      }),
        (co.ɵcmp = s.Gc({
          type: co,
          selectors: [["ngb-typeahead-window"]],
          hostAttrs: ["role", "listbox", 1, "dropdown-menu", "show"],
          hostVars: 1,
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("mousedown", function (e) {
                return e.preventDefault();
              }),
              2 & e && s.Uc("id", t.id);
          },
          inputs: {
            focusFirst: "focusFirst",
            formatter: "formatter",
            id: "id",
            results: "results",
            term: "term",
            resultTemplate: "resultTemplate",
          },
          outputs: { selectEvent: "select", activeChangeEvent: "activeChange" },
          exportAs: ["ngbTypeaheadWindow"],
          decls: 3,
          vars: 1,
          consts: [
            ["rt", ""],
            ["ngFor", "", 3, "ngForOf"],
            [3, "result", "term"],
            [
              "type",
              "button",
              "role",
              "option",
              1,
              "dropdown-item",
              3,
              "id",
              "mouseenter",
              "click",
            ],
            [3, "ngTemplateOutlet", "ngTemplateOutletContext"],
          ],
          template: function (e, t) {
            1 & e &&
              (s.Cd(0, Ft, 1, 2, "ng-template", null, 0, s.Dd),
              s.Cd(2, Bt, 2, 9, "ng-template", 1)),
              2 & e && (s.zc(2), s.ld("ngForOf", t.results));
          },
          directives: [i.j, lo, i.p],
          encapsulation: 2,
        })),
        (co.propDecorators = {
          id: [{ type: s.G }],
          focusFirst: [{ type: s.G }],
          results: [{ type: s.G }],
          term: [{ type: s.G }],
          formatter: [{ type: s.G }],
          resultTemplate: [{ type: s.G }],
          selectEvent: [{ type: s.S, args: ["select"] }],
          activeChangeEvent: [{ type: s.S, args: ["activeChange"] }],
        });
      const uo = new s.E("live announcer delay", {
        providedIn: "root",
        factory: function () {
          return 100;
        },
      });
      function ho(e, t = !1) {
        let n = e.body.querySelector("#ngb-live");
        return (
          null == n &&
            t &&
            ((n = e.createElement("div")),
            n.setAttribute("id", "ngb-live"),
            n.setAttribute("aria-live", "polite"),
            n.setAttribute("aria-atomic", "true"),
            n.classList.add("sr-only"),
            e.body.appendChild(n)),
          n
        );
      }
      class po {
        constructor(e, t) {
          (this._document = e), (this._delay = t);
        }
        ngOnDestroy() {
          const e = ho(this._document);
          e && e.parentElement.removeChild(e);
        }
        say(e) {
          const t = ho(this._document, !0),
            n = this._delay;
          if (null != t) {
            t.textContent = "";
            const s = () => (t.textContent = e);
            null === n ? s() : setTimeout(s, n);
          }
        }
      }
      (po.ɵfac = function (e) {
        return new (e || po)(s.Yc(i.c), s.Yc(uo));
      }),
        (po.ɵprov = Object(s.Ic)({
          factory: function () {
            return new po(Object(s.Yc)(i.c), Object(s.Yc)(uo));
          },
          token: po,
          providedIn: "root",
        })),
        (po.ctorParameters = () => [
          { type: void 0, decorators: [{ type: s.C, args: [i.c] }] },
          { type: void 0, decorators: [{ type: s.C, args: [uo] }] },
        ]);
      class mo {
        constructor() {
          (this.editable = !0),
            (this.focusFirst = !0),
            (this.showHint = !1),
            (this.placement = [
              "bottom-left",
              "bottom-right",
              "top-left",
              "top-right",
            ]);
        }
      }
      (mo.ɵfac = function (e) {
        return new (e || mo)();
      }),
        (mo.ɵprov = Object(s.Ic)({
          factory: function () {
            return new mo();
          },
          token: mo,
          providedIn: "root",
        }));
      const fo = {
        provide: Q.h,
        useExisting: Object(s.sb)(() => yo),
        multi: !0,
      };
      let go = 0;
      class yo {
        constructor(e, t, n, i, r, o, c, u, d, h, p, m) {
          (this._elementRef = e),
            (this._renderer = n),
            (this._live = u),
            (this._document = d),
            (this._ngZone = h),
            (this._changeDetector = p),
            (this._subscription = null),
            (this._closed$ = new a.a()),
            (this._inputValueBackup = null),
            (this._windowRef = null),
            (this.autocomplete = "off"),
            (this.placement = "bottom-left"),
            (this.selectItem = new s.x()),
            (this.activeDescendant = null),
            (this.popupId = "ngb-typeahead-" + go++),
            (this._onTouched = () => {}),
            (this._onChange = (e) => {}),
            (this.container = o.container),
            (this.editable = o.editable),
            (this.focusFirst = o.focusFirst),
            (this.showHint = o.showHint),
            (this.placement = o.placement),
            (this._valueChanges = Object(l.a)(e.nativeElement, "input").pipe(
              Object(N.a)((e) => e.target.value)
            )),
            (this._resubscribeTypeahead = new y.a(null)),
            (this._popupService = new Gi(co, i, t, n, this._ngZone, r, m)),
            (this._zoneSubscription = c.onStable.subscribe(() => {
              this.isPopupOpen() &&
                ks(
                  this._elementRef.nativeElement,
                  this._windowRef.location.nativeElement,
                  this.placement,
                  "body" === this.container
                );
            }));
        }
        ngOnInit() {
          const e = this._valueChanges
              .pipe(
                Object(B.a)((e) => {
                  (this._inputValueBackup = this.showHint ? e : null),
                    this._onChange(this.editable ? e : void 0);
                })
              )
              .pipe(this.ngbTypeahead),
            t = this._resubscribeTypeahead.pipe(Object(V.a)(() => e));
          this._subscription = this._subscribeToUserInput(t);
        }
        ngOnDestroy() {
          this._closePopup(),
            this._unsubscribeFromUserInput(),
            this._zoneSubscription.unsubscribe();
        }
        registerOnChange(e) {
          this._onChange = e;
        }
        registerOnTouched(e) {
          this._onTouched = e;
        }
        writeValue(e) {
          this._writeInputValue(this._formatItemForInput(e)),
            this.showHint && (this._inputValueBackup = e);
        }
        setDisabledState(e) {
          this._renderer.setProperty(
            this._elementRef.nativeElement,
            "disabled",
            e
          );
        }
        dismissPopup() {
          this.isPopupOpen() &&
            (this._resubscribeTypeahead.next(null),
            this._closePopup(),
            this.showHint &&
              null !== this._inputValueBackup &&
              this._writeInputValue(this._inputValueBackup),
            this._changeDetector.markForCheck());
        }
        isPopupOpen() {
          return null != this._windowRef;
        }
        handleBlur() {
          this._resubscribeTypeahead.next(null), this._onTouched();
        }
        handleKeyDown(e) {
          if (this.isPopupOpen())
            switch (e.which) {
              case hs.ArrowDown:
                e.preventDefault(),
                  this._windowRef.instance.next(),
                  this._showHint();
                break;
              case hs.ArrowUp:
                e.preventDefault(),
                  this._windowRef.instance.prev(),
                  this._showHint();
                break;
              case hs.Enter:
              case hs.Tab:
                const t = this._windowRef.instance.getActive();
                Wt(t) &&
                  (e.preventDefault(),
                  e.stopPropagation(),
                  this._selectResult(t)),
                  this._closePopup();
            }
        }
        _openPopup() {
          if (!this.isPopupOpen()) {
            this._inputValueBackup = this._elementRef.nativeElement.value;
            const { windowRef: e } = this._popupService.open();
            (this._windowRef = e),
              (this._windowRef.instance.id = this.popupId),
              this._windowRef.instance.selectEvent.subscribe((e) =>
                this._selectResultClosePopup(e)
              ),
              this._windowRef.instance.activeChangeEvent.subscribe(
                (e) => (this.activeDescendant = e)
              ),
              "body" === this.container &&
                this._document
                  .querySelector(this.container)
                  .appendChild(this._windowRef.location.nativeElement),
              this._changeDetector.markForCheck(),
              xs(
                this._ngZone,
                this._document,
                "outside",
                () => this.dismissPopup(),
                this._closed$,
                [
                  this._elementRef.nativeElement,
                  this._windowRef.location.nativeElement,
                ]
              );
          }
        }
        _closePopup() {
          this._popupService.close().subscribe(() => {
            this._closed$.next(),
              (this._windowRef = null),
              (this.activeDescendant = null);
          });
        }
        _selectResult(e) {
          let t = !1;
          this.selectItem.emit({
            item: e,
            preventDefault: () => {
              t = !0;
            },
          }),
            this._resubscribeTypeahead.next(null),
            t || (this.writeValue(e), this._onChange(e));
        }
        _selectResultClosePopup(e) {
          this._selectResult(e), this._closePopup();
        }
        _showHint() {
          var e;
          if (
            this.showHint &&
            (null === (e = this._windowRef) || void 0 === e
              ? void 0
              : e.instance.hasActive()) &&
            null != this._inputValueBackup
          ) {
            const e = this._inputValueBackup.toLowerCase(),
              t = this._formatItemForInput(
                this._windowRef.instance.getActive()
              );
            e === t.substr(0, this._inputValueBackup.length).toLowerCase()
              ? (this._writeInputValue(
                  this._inputValueBackup +
                    t.substr(this._inputValueBackup.length)
                ),
                this._elementRef.nativeElement.setSelectionRange.apply(
                  this._elementRef.nativeElement,
                  [this._inputValueBackup.length, t.length]
                ))
              : this._writeInputValue(t);
          }
        }
        _formatItemForInput(e) {
          return null != e && this.inputFormatter
            ? this.inputFormatter(e)
            : Ht(e);
        }
        _writeInputValue(e) {
          this._renderer.setProperty(
            this._elementRef.nativeElement,
            "value",
            Ht(e)
          );
        }
        _subscribeToUserInput(e) {
          return e.subscribe((e) => {
            e && 0 !== e.length
              ? (this._openPopup(),
                (this._windowRef.instance.focusFirst = this.focusFirst),
                (this._windowRef.instance.results = e),
                (this._windowRef.instance.term =
                  this._elementRef.nativeElement.value),
                this.resultFormatter &&
                  (this._windowRef.instance.formatter = this.resultFormatter),
                this.resultTemplate &&
                  (this._windowRef.instance.resultTemplate =
                    this.resultTemplate),
                this._windowRef.instance.resetActive(),
                this._windowRef.changeDetectorRef.detectChanges(),
                this._showHint())
              : this._closePopup();
            const t = e ? e.length : 0;
            this._live.say(
              0 === t
                ? "No results available"
                : `${t} result${1 === t ? "" : "s"} available`
            );
          });
        }
        _unsubscribeFromUserInput() {
          this._subscription && this._subscription.unsubscribe(),
            (this._subscription = null);
        }
      }
      (yo.ɵfac = function (e) {
        return new (e || yo)(
          s.Mc(s.v),
          s.Mc(s.ob),
          s.Mc(s.Y),
          s.Mc(s.F),
          s.Mc(s.p),
          s.Mc(mo),
          s.Mc(s.Q),
          s.Mc(po),
          s.Mc(i.c),
          s.Mc(s.Q),
          s.Mc(s.k),
          s.Mc(s.g)
        );
      }),
        (yo.ɵdir = s.Hc({
          type: yo,
          selectors: [["input", "ngbTypeahead", ""]],
          hostAttrs: [
            "autocapitalize",
            "off",
            "autocorrect",
            "off",
            "role",
            "combobox",
            "aria-multiline",
            "false",
          ],
          hostVars: 7,
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("blur", function () {
                return t.handleBlur();
              })("keydown", function (e) {
                return t.handleKeyDown(e);
              }),
              2 & e &&
                (s.Uc("autocomplete", t.autocomplete),
                s.Ac("aria-autocomplete", t.showHint ? "both" : "list")(
                  "aria-activedescendant",
                  t.activeDescendant
                )("aria-owns", t.isPopupOpen() ? t.popupId : null)(
                  "aria-expanded",
                  t.isPopupOpen()
                ),
                s.Ec("open", t.isPopupOpen()));
          },
          inputs: {
            autocomplete: "autocomplete",
            placement: "placement",
            container: "container",
            editable: "editable",
            focusFirst: "focusFirst",
            showHint: "showHint",
            inputFormatter: "inputFormatter",
            ngbTypeahead: "ngbTypeahead",
            resultFormatter: "resultFormatter",
            resultTemplate: "resultTemplate",
          },
          outputs: { selectItem: "selectItem" },
          exportAs: ["ngbTypeahead"],
          features: [s.yc([fo])],
        })),
        (yo.ctorParameters = () => [
          { type: s.v },
          { type: s.ob },
          { type: s.Y },
          { type: s.F },
          { type: s.p },
          { type: mo },
          { type: s.Q },
          { type: po },
          { type: void 0, decorators: [{ type: s.C, args: [i.c] }] },
          { type: s.Q },
          { type: s.k },
          { type: s.g },
        ]),
        (yo.propDecorators = {
          autocomplete: [{ type: s.G }],
          container: [{ type: s.G }],
          editable: [{ type: s.G }],
          focusFirst: [{ type: s.G }],
          inputFormatter: [{ type: s.G }],
          ngbTypeahead: [{ type: s.G }],
          resultFormatter: [{ type: s.G }],
          resultTemplate: [{ type: s.G }],
          showHint: [{ type: s.G }],
          placement: [{ type: s.G }],
          selectItem: [{ type: s.S }],
        });
      class vo {}
      (vo.ɵmod = s.Kc({ type: vo })),
        (vo.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || vo)();
          },
          imports: [[i.b]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(vo, {
            declarations: function () {
              return [yo, lo, co];
            },
            imports: function () {
              return [i.b];
            },
            exports: function () {
              return [yo, lo];
            },
          });
      const bo = [
        pn,
        yn,
        En,
        Fn,
        Bn,
        Mi,
        Bi,
        Zi,
        hr,
        _r,
        Ar,
        Pr,
        Fr,
        Kr,
        no,
        ao,
        vo,
      ];
      class xo {}
      (xo.ɵmod = s.Kc({ type: xo })),
        (xo.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || xo)();
          },
          imports: [
            bo,
            pn,
            yn,
            En,
            Fn,
            Bn,
            Mi,
            Bi,
            Zi,
            hr,
            _r,
            Ar,
            Pr,
            Fr,
            Kr,
            no,
            ao,
            vo,
          ],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(xo, {
            imports: [
              pn,
              yn,
              En,
              Fn,
              Bn,
              Mi,
              Bi,
              Zi,
              hr,
              _r,
              Ar,
              Pr,
              Fr,
              Kr,
              no,
              ao,
              vo,
            ],
            exports: [
              pn,
              yn,
              En,
              Fn,
              Bn,
              Mi,
              Bi,
              Zi,
              hr,
              _r,
              Ar,
              Pr,
              Fr,
              Kr,
              no,
              ao,
              vo,
            ],
          });
    },
    "20q5": function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, "MathsModule", function () {
          return h;
        });
      var s = n("mrSG"),
        i = n("d3UM"),
        r = n("beVS"),
        o = n("fXoL"),
        a = n("ofXK"),
        l = n("dtin");
      let c = class {
        constructor() {
          this.showVideo = !1;
        }
        ngOnInit() {}
      };
      (c.ctorParameters = () => []),
        (c = Object(s.a)(
          [
            Object(o.n)({
              selector: "app-maths-intro",
              template:
                '<div class="mathsIntroSection">\n    <div class="introHeader">\n        <h1>\n        <div class="introHeaderLeft">\n            <p class="mathsIntroTitle">Personalised Effective <span [ngStyle]="{color: \'#c53135\'}">Maths</span> Learning</p>\n            <p class="mathsIntroSubTitle">Ei Mindspark Maths is a personalised learning software that helps children to improve their Maths skills. Ei Mindspark allows children to effectively advance at their own pace.</p>\n            <a target="_blank"  href="https://play.google.com/store/apps/details?id=com.mindspark.edicine">\n                <img class="appStore-googlePlay-imgs" src="assets/images/google_play.png" alt="Google Play" />\n            </a>\n            <a class="margLeft" target="_blank" href="https://apps.apple.com/in/app/ei-mindspark-learning-app/id1541664545">\n                <img class="appStore-googlePlay-imgs" src="assets/images/app_store.png" alt="App Store" />\n            </a>\n        </div>\n    </h1>\n        <div class="introHeaderRight">\n            <div class="rightContainer">\n                <div *ngIf="showVideo==false">\n                    <img (click)="showVideo=true" [ngStyle.xs]="{\'width\':\'100%\'}" class="introImage" src="assets/images/ei-mindspark-video-thumbnail.svg" alt="Ei Mindspark" />\n                    <img (click)="showVideo=true" [ngStyle.xs]="{\'width\':\'100%\'}" class="playButton" src="assets/images/play.png" alt="play button" />\n\n                </div>\n\n            </div>\n            <div *ngIf="showVideo==true">\n                <iframe width=100%; height=285px; src="https://www.youtube.com/embed/hvHyVgZhJqc?autoplay=1" allow=\'autoplay\' allowfullscreen></iframe>\n            </div>\n        </div>\n    </div>\n    <div class="mathsIntroInfo">\n        <div class="introSectionItem">\n            <img src="assets/images/mathsInto1.svg" alt="tick box icon" />\n            <p class="introSectionText">Aligned to CBSE, ICSE, IGCSE, Common Core State Standards (U.S curriculum), CAPS (South African curriculum)</p>\n        </div>\n        <div class="introSectionItem">\n            <img src="assets/images/mathsIntro2.svg" alt="play button icon" />\n            <p class="introSectionText">Available for classes 1 - 10</p>\n        </div>\n        <div class="introSectionItem">\n            <img src="assets/images/mathsIntro3.svg" alt="happy smiley icon" />\n            <p class="introSectionText">Fun-based Learning with Games, Rewards and Interactive Questions</p>\n        </div>\n        <div class="introSectionItem">\n            <img src="assets/images/mathsIntro4.svg" alt="box icon" />\n            <p class="introSectionText">Adapts to each student\u2019s learning pace</p>\n        </div>\n    </div>\n</div>',
              styles: [
                ".introHeader {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 126px;\n}\n\n.introImage {\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  object-fit: contain;\n}\n\n.introImage:hover {\n  transform: scale(1.01);\n}\n\n.rightContainer {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.mathsIntroTitle {\n  font-family: Manrope;\n  font-size: 48px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.35;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n}\n\n.mathsIntroSubTitle {\n  font-family: Manrope;\n  font-size: 16px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.5;\n  letter-spacing: normal;\n  text-align: left;\n  color: #46494b;\n  margin-top: 24px;\n}\n\n.videoSection {\n  height: 284px;\n  background-color: #0D5898;\n  border-radius: 30px;\n}\n\n.playButton {\n  position: absolute;\n  margin-left: -91px;\n  margin-top: 210px;\n  border-radius: 20px;\n  width: 76px;\n}\n\n.mathsIntroInfo {\n  margin-top: 60px;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  column-gap: 30px;\n}\n\n.introSectionItem {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.introSectionText {\n  font-family: Manrope;\n  font-size: 13px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n  padding: 0;\n  margin: 0px 16px 0px;\n}\n\n.margLeft {\n  margin-left: 3rem;\n}\n\n@media only screen and (max-width: 767px) {\n  .introHeader {\n    grid-template-columns: 1fr;\n    row-gap: 40px;\n  }\n\n  .mathsIntroInfo {\n    margin-top: 40px;\n    grid-template-columns: 1fr;\n    row-gap: 40px;\n  }\n\n  .playButton {\n    margin-top: 30%;\n    width: 76px !important;\n  }\n\n  .margLeft {\n    margin-left: 0rem !important;\n    display: flex;\n  }\n}",
              ],
            }),
          ],
          c
        ));
      var u = n("FpXt");
      let d = class {
        constructor() {
          this.studyMaterials = [
            {
              title: "Maths Solutions",
              classText: "Class 1 to 6",
              bgColor: "rgba(165, 209, 112, 0.4) ",
            },
            {
              title: "Questions with solutions",
              classText: "Class 1 to 10",
              bgColor: "rgba(243, 111, 49, 0.2)",
            },
            {
              title: "Question papers",
              classText: "Class 1 to 6",
              bgColor: "#fff4c7",
            },
            {
              title: "Questions with solutions",
              classText: "Class 1 to 6",
              bgColor: "rgba(40, 167, 223, 0.28)",
            },
          ];
        }
        ngOnInit() {}
      };
      (d.ctorParameters = () => []),
        (d = Object(s.a)(
          [
            Object(o.n)({
              selector: "app-study-material",
              template:
                '<div class="study-material-container">\n    <div class="study-material-title">\n        <span class="title-highlight">FREE</span> study material\n    </div>\n    <div class="material-items">\n    <div class="material-item" *ngFor="let item of studyMaterials" [ngStyle]="{\'background-color\': item.bgColor}">\n            <div>\n                <div class="item-title">{{ item.title }}</div>\n                <div class="class-upto">{{ item.classText }}</div>\n            </div>\n            <a mat-button class="free-download" routerLink="/">Free Download</a>\n        </div>\n    </div>\n</div>\n',
              styles: [
                ".study-material-container {\n  margin: 120px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.study-material-title {\n  font-size: 36px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.36;\n  letter-spacing: normal;\n  color: #212121;\n}\n\n.title-highlight {\n  color: #f36f31;\n}\n\n.material-items {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  column-gap: 27px;\n  width: 100%;\n  margin: 40px 0;\n}\n\n.material-item {\n  height: 250px;\n  border-radius: 24px;\n  background-color: rgba(165, 209, 112, 0.4);\n  padding: 60px 32px 18px 32px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.item-title {\n  font-size: 20px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.2;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n}\n\n.class-upto {\n  font-size: 14px;\n  font-weight: 600;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.71;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n  margin-top: 12px;\n  opacity: 0.6;\n}\n\n.free-download {\n  background-color: #ffffff;\n  width: 100%;\n  border-radius: 24px;\n  color: #212121;\n}\n\n@media only screen and (max-width: 767px) {\n  .study-material-container {\n    margin: 60px 0;\n  }\n\n  .material-items {\n    display: grid;\n    grid-template-columns: 1fr;\n    row-gap: 20px;\n  }\n\n  .material-item {\n    height: 172px;\n    padding: 20px 60px 20px 60px;\n  }\n}",
              ],
            }),
          ],
          d
        ));
      let h = class {};
      h = Object(s.a)(
        [
          Object(o.L)({
            declarations: [l.a, c, d],
            imports: [r.e, a.b, u.a, i.a],
          }),
        ],
        h
      );
    },
    "2QA8": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      const s =
        "function" == typeof Symbol
          ? Symbol("rxSubscriber")
          : "@@rxSubscriber_" + Math.random();
    },
    "2Vo4": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var s = n("XNiG"),
        i = n("9ppp");
      class r extends s.a {
        constructor(e) {
          super(), (this._value = e);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(e) {
          const t = super._subscribe(e);
          return t && !t.closed && e.next(this._value), t;
        }
        getValue() {
          if (this.hasError) throw this.thrownError;
          if (this.closed) throw new i.a();
          return this._value;
        }
        next(e) {
          super.next((this._value = e));
        }
      }
    },
    "2fFW": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      let s = !1;
      const i = {
        Promise: void 0,
        set useDeprecatedSynchronousErrorHandling(e) {
          if (e) {
            const e = new Error();
            console.warn(
              "DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n" +
                e.stack
            );
          } else
            s &&
              console.log(
                "RxJS: Back to a better error behavior. Thank you. <3"
              );
          s = e;
        },
        get useDeprecatedSynchronousErrorHandling() {
          return s;
        },
      };
    },
    "3E0/": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var s = n("D0XW");
      var i = n("7o/Q"),
        r = n("WMd4");
      function o(e, t = s.a) {
        var n;
        const i =
          (n = e) instanceof Date && !isNaN(+n) ? +e - t.now() : Math.abs(e);
        return (e) => e.lift(new a(i, t));
      }
      class a {
        constructor(e, t) {
          (this.delay = e), (this.scheduler = t);
        }
        call(e, t) {
          return t.subscribe(new l(e, this.delay, this.scheduler));
        }
      }
      class l extends i.a {
        constructor(e, t, n) {
          super(e),
            (this.delay = t),
            (this.scheduler = n),
            (this.queue = []),
            (this.active = !1),
            (this.errored = !1);
        }
        static dispatch(e) {
          const t = e.source,
            n = t.queue,
            s = e.scheduler,
            i = e.destination;
          for (; n.length > 0 && n[0].time - s.now() <= 0; )
            n.shift().notification.observe(i);
          if (n.length > 0) {
            const t = Math.max(0, n[0].time - s.now());
            this.schedule(e, t);
          } else this.unsubscribe(), (t.active = !1);
        }
        _schedule(e) {
          this.active = !0;
          this.destination.add(
            e.schedule(l.dispatch, this.delay, {
              source: this,
              destination: this.destination,
              scheduler: e,
            })
          );
        }
        scheduleNotification(e) {
          if (!0 === this.errored) return;
          const t = this.scheduler,
            n = new c(t.now() + this.delay, e);
          this.queue.push(n), !1 === this.active && this._schedule(t);
        }
        _next(e) {
          this.scheduleNotification(r.a.createNext(e));
        }
        _error(e) {
          (this.errored = !0),
            (this.queue = []),
            this.destination.error(e),
            this.unsubscribe();
        }
        _complete() {
          this.scheduleNotification(r.a.createComplete()), this.unsubscribe();
        }
      }
      class c {
        constructor(e, t) {
          (this.time = e), (this.notification = t);
        }
      }
    },
    "3N8a": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var s = n("quSY");
      class i extends s.a {
        constructor(e, t) {
          super();
        }
        schedule(e, t = 0) {
          return this;
        }
      }
      class r extends i {
        constructor(e, t) {
          super(e, t),
            (this.scheduler = e),
            (this.work = t),
            (this.pending = !1);
        }
        schedule(e, t = 0) {
          if (this.closed) return this;
          this.state = e;
          const n = this.id,
            s = this.scheduler;
          return (
            null != n && (this.id = this.recycleAsyncId(s, n, t)),
            (this.pending = !0),
            (this.delay = t),
            (this.id = this.id || this.requestAsyncId(s, this.id, t)),
            this
          );
        }
        requestAsyncId(e, t, n = 0) {
          return setInterval(e.flush.bind(e, this), n);
        }
        recycleAsyncId(e, t, n = 0) {
          if (null !== n && this.delay === n && !1 === this.pending) return t;
          clearInterval(t);
        }
        execute(e, t) {
          if (this.closed) return new Error("executing a cancelled action");
          this.pending = !1;
          const n = this._execute(e, t);
          if (n) return n;
          !1 === this.pending &&
            null != this.id &&
            (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(e, t) {
          let n = !1,
            s = void 0;
          try {
            this.work(e);
          } catch (i) {
            (n = !0), (s = (!!i && i) || new Error(i));
          }
          if (n) return this.unsubscribe(), s;
        }
        _unsubscribe() {
          const e = this.id,
            t = this.scheduler,
            n = t.actions,
            s = n.indexOf(this);
          (this.work = null),
            (this.state = null),
            (this.pending = !1),
            (this.scheduler = null),
            -1 !== s && n.splice(s, 1),
            null != e && (this.id = this.recycleAsyncId(t, e, null)),
            (this.delay = null);
        }
      }
    },
    "3Pt+": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return Je;
      }),
        n.d(t, "b", function () {
          return lt;
        }),
        n.d(t, "c", function () {
          return we;
        }),
        n.d(t, "d", function () {
          return Ce;
        }),
        n.d(t, "e", function () {
          return Be;
        }),
        n.d(t, "f", function () {
          return ct;
        }),
        n.d(t, "g", function () {
          return g;
        }),
        n.d(t, "h", function () {
          return l;
        }),
        n.d(t, "i", function () {
          return P;
        }),
        n.d(t, "j", function () {
          return Oe;
        }),
        n.d(t, "k", function () {
          return W;
        }),
        n.d(t, "l", function () {
          return ut;
        }),
        n.d(t, "m", function () {
          return b;
        }),
        n.d(t, "n", function () {
          return J;
        });
      var s = n("fXoL"),
        i = n("ofXK"),
        r = n("cp0P"),
        o = n("Cfvw"),
        a = n("lJxs");
      const l = new s.E("NgValueAccessor"),
        c = { provide: l, useExisting: Object(s.sb)(() => u), multi: !0 };
      class u {
        constructor(e, t) {
          (this._renderer = e),
            (this._elementRef = t),
            (this.onChange = (e) => {}),
            (this.onTouched = () => {});
        }
        writeValue(e) {
          this._renderer.setProperty(
            this._elementRef.nativeElement,
            "checked",
            e
          );
        }
        registerOnChange(e) {
          this.onChange = e;
        }
        registerOnTouched(e) {
          this.onTouched = e;
        }
        setDisabledState(e) {
          this._renderer.setProperty(
            this._elementRef.nativeElement,
            "disabled",
            e
          );
        }
      }
      (u.ɵfac = function (e) {
        return new (e || u)(s.Mc(s.Y), s.Mc(s.v));
      }),
        (u.ɵdir = s.Hc({
          type: u,
          selectors: [
            ["input", "type", "checkbox", "formControlName", ""],
            ["input", "type", "checkbox", "formControl", ""],
            ["input", "type", "checkbox", "ngModel", ""],
          ],
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("change", function (e) {
                return t.onChange(e.target.checked);
              })("blur", function () {
                return t.onTouched();
              });
          },
          features: [s.yc([c])],
        })),
        (u.ctorParameters = () => [{ type: s.Y }, { type: s.v }]);
      const d = { provide: l, useExisting: Object(s.sb)(() => p), multi: !0 };
      const h = new s.E("CompositionEventMode");
      class p {
        constructor(e, t, n) {
          (this._renderer = e),
            (this._elementRef = t),
            (this._compositionMode = n),
            (this.onChange = (e) => {}),
            (this.onTouched = () => {}),
            (this._composing = !1),
            null == this._compositionMode &&
              (this._compositionMode = !(function () {
                const e = Object(i.D)() ? Object(i.D)().getUserAgent() : "";
                return /android (\d+)/.test(e.toLowerCase());
              })());
        }
        writeValue(e) {
          const t = null == e ? "" : e;
          this._renderer.setProperty(
            this._elementRef.nativeElement,
            "value",
            t
          );
        }
        registerOnChange(e) {
          this.onChange = e;
        }
        registerOnTouched(e) {
          this.onTouched = e;
        }
        setDisabledState(e) {
          this._renderer.setProperty(
            this._elementRef.nativeElement,
            "disabled",
            e
          );
        }
        _handleInput(e) {
          (!this._compositionMode ||
            (this._compositionMode && !this._composing)) &&
            this.onChange(e);
        }
        _compositionStart() {
          this._composing = !0;
        }
        _compositionEnd(e) {
          (this._composing = !1), this._compositionMode && this.onChange(e);
        }
      }
      function m(e) {
        return null == e || 0 === e.length;
      }
      function f(e) {
        return null != e && "number" == typeof e.length;
      }
      (p.ɵfac = function (e) {
        return new (e || p)(s.Mc(s.Y), s.Mc(s.v), s.Mc(h, 8));
      }),
        (p.ɵdir = s.Hc({
          type: p,
          selectors: [
            ["input", "formControlName", "", 3, "type", "checkbox"],
            ["textarea", "formControlName", ""],
            ["input", "formControl", "", 3, "type", "checkbox"],
            ["textarea", "formControl", ""],
            ["input", "ngModel", "", 3, "type", "checkbox"],
            ["textarea", "ngModel", ""],
            ["", "ngDefaultControl", ""],
          ],
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("input", function (e) {
                return t._handleInput(e.target.value);
              })("blur", function () {
                return t.onTouched();
              })("compositionstart", function () {
                return t._compositionStart();
              })("compositionend", function (e) {
                return t._compositionEnd(e.target.value);
              });
          },
          features: [s.yc([d])],
        })),
        (p.ctorParameters = () => [
          { type: s.Y },
          { type: s.v },
          {
            type: Boolean,
            decorators: [{ type: s.R }, { type: s.C, args: [h] }],
          },
        ]);
      const g = new s.E("NgValidators"),
        y = new s.E("NgAsyncValidators"),
        v =
          /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
      class b {
        static min(e) {
          return (t) => {
            if (m(t.value) || m(e)) return null;
            const n = parseFloat(t.value);
            return !isNaN(n) && n < e
              ? { min: { min: e, actual: t.value } }
              : null;
          };
        }
        static max(e) {
          return (t) => {
            if (m(t.value) || m(e)) return null;
            const n = parseFloat(t.value);
            return !isNaN(n) && n > e
              ? { max: { max: e, actual: t.value } }
              : null;
          };
        }
        static required(e) {
          return m(e.value) ? { required: !0 } : null;
        }
        static requiredTrue(e) {
          return !0 === e.value ? null : { required: !0 };
        }
        static email(e) {
          return m(e.value) || v.test(e.value) ? null : { email: !0 };
        }
        static minLength(e) {
          return (t) =>
            m(t.value) || !f(t.value)
              ? null
              : t.value.length < e
              ? {
                  minlength: {
                    requiredLength: e,
                    actualLength: t.value.length,
                  },
                }
              : null;
        }
        static maxLength(e) {
          return (t) =>
            f(t.value) && t.value.length > e
              ? {
                  maxlength: {
                    requiredLength: e,
                    actualLength: t.value.length,
                  },
                }
              : null;
        }
        static pattern(e) {
          if (!e) return b.nullValidator;
          let t, n;
          return (
            "string" == typeof e
              ? ((n = ""),
                "^" !== e.charAt(0) && (n += "^"),
                (n += e),
                "$" !== e.charAt(e.length - 1) && (n += "$"),
                (t = new RegExp(n)))
              : ((n = e.toString()), (t = e)),
            (e) => {
              if (m(e.value)) return null;
              const s = e.value;
              return t.test(s)
                ? null
                : { pattern: { requiredPattern: n, actualValue: s } };
            }
          );
        }
        static nullValidator(e) {
          return null;
        }
        static compose(e) {
          if (!e) return null;
          const t = e.filter(x);
          return 0 == t.length
            ? null
            : function (e) {
                return w(C(e, t));
              };
        }
        static composeAsync(e) {
          if (!e) return null;
          const t = e.filter(x);
          return 0 == t.length
            ? null
            : function (e) {
                const n = C(e, t).map(_);
                return Object(r.a)(n).pipe(Object(a.a)(w));
              };
        }
      }
      function x(e) {
        return null != e;
      }
      function _(e) {
        const t = Object(s.cc)(e) ? Object(o.a)(e) : e;
        return Object(s.bc)(t), t;
      }
      function w(e) {
        let t = {};
        return (
          e.forEach((e) => {
            t = null != e ? Object.assign(Object.assign({}, t), e) : t;
          }),
          0 === Object.keys(t).length ? null : t
        );
      }
      function C(e, t) {
        return t.map((t) => t(e));
      }
      function S(e) {
        return e.map((e) =>
          (function (e) {
            return !e.validate;
          })(e)
            ? e
            : (t) => e.validate(t)
        );
      }
      function E(e) {
        return null != e ? b.compose(S(e)) : null;
      }
      function k(e) {
        return null != e ? b.composeAsync(S(e)) : null;
      }
      function O(e, t) {
        return null === e ? [t] : Array.isArray(e) ? [...e, t] : [e, t];
      }
      function I(e) {
        return e._rawValidators;
      }
      function T(e) {
        return e._rawAsyncValidators;
      }
      class A {
        constructor() {
          (this._rawValidators = []),
            (this._rawAsyncValidators = []),
            (this._onDestroyCallbacks = []);
        }
        get value() {
          return this.control ? this.control.value : null;
        }
        get valid() {
          return this.control ? this.control.valid : null;
        }
        get invalid() {
          return this.control ? this.control.invalid : null;
        }
        get pending() {
          return this.control ? this.control.pending : null;
        }
        get disabled() {
          return this.control ? this.control.disabled : null;
        }
        get enabled() {
          return this.control ? this.control.enabled : null;
        }
        get errors() {
          return this.control ? this.control.errors : null;
        }
        get pristine() {
          return this.control ? this.control.pristine : null;
        }
        get dirty() {
          return this.control ? this.control.dirty : null;
        }
        get touched() {
          return this.control ? this.control.touched : null;
        }
        get status() {
          return this.control ? this.control.status : null;
        }
        get untouched() {
          return this.control ? this.control.untouched : null;
        }
        get statusChanges() {
          return this.control ? this.control.statusChanges : null;
        }
        get valueChanges() {
          return this.control ? this.control.valueChanges : null;
        }
        get path() {
          return null;
        }
        _setValidators(e) {
          (this._rawValidators = e || []),
            (this._composedValidatorFn = E(this._rawValidators));
        }
        _setAsyncValidators(e) {
          (this._rawAsyncValidators = e || []),
            (this._composedAsyncValidatorFn = k(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn || null;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn || null;
        }
        _registerOnDestroy(e) {
          this._onDestroyCallbacks.push(e);
        }
        _invokeOnDestroyCallbacks() {
          this._onDestroyCallbacks.forEach((e) => e()),
            (this._onDestroyCallbacks = []);
        }
        reset(e) {
          this.control && this.control.reset(e);
        }
        hasError(e, t) {
          return !!this.control && this.control.hasError(e, t);
        }
        getError(e, t) {
          return this.control ? this.control.getError(e, t) : null;
        }
      }
      (A.ɵfac = function (e) {
        return new (e || A)();
      }),
        (A.ɵdir = s.Hc({ type: A }));
      class D extends A {
        get formDirective() {
          return null;
        }
        get path() {
          return null;
        }
      }
      (D.ɵfac = function (e) {
        return M(e || D);
      }),
        (D.ɵdir = s.Hc({ type: D, features: [s.wc] }));
      const M = s.Tc(D);
      class P extends A {
        constructor() {
          super(...arguments),
            (this._parent = null),
            (this.name = null),
            (this.valueAccessor = null);
        }
      }
      class R {
        constructor(e) {
          this._cd = e;
        }
        get ngClassUntouched() {
          return !!this._cd.control && this._cd.control.untouched;
        }
        get ngClassTouched() {
          return !!this._cd.control && this._cd.control.touched;
        }
        get ngClassPristine() {
          return !!this._cd.control && this._cd.control.pristine;
        }
        get ngClassDirty() {
          return !!this._cd.control && this._cd.control.dirty;
        }
        get ngClassValid() {
          return !!this._cd.control && this._cd.control.valid;
        }
        get ngClassInvalid() {
          return !!this._cd.control && this._cd.control.invalid;
        }
        get ngClassPending() {
          return !!this._cd.control && this._cd.control.pending;
        }
      }
      class j extends R {
        constructor(e) {
          super(e);
        }
      }
      (j.ɵfac = function (e) {
        return new (e || j)(s.Mc(P, 2));
      }),
        (j.ɵdir = s.Hc({
          type: j,
          selectors: [
            ["", "formControlName", ""],
            ["", "ngModel", ""],
            ["", "formControl", ""],
          ],
          hostVars: 14,
          hostBindings: function (e, t) {
            2 & e &&
              s.Ec("ng-untouched", t.ngClassUntouched)(
                "ng-touched",
                t.ngClassTouched
              )("ng-pristine", t.ngClassPristine)("ng-dirty", t.ngClassDirty)(
                "ng-valid",
                t.ngClassValid
              )("ng-invalid", t.ngClassInvalid)("ng-pending", t.ngClassPending);
          },
          features: [s.wc],
        })),
        (j.ctorParameters = () => [{ type: P, decorators: [{ type: s.db }] }]);
      class N extends R {
        constructor(e) {
          super(e);
        }
      }
      (N.ɵfac = function (e) {
        return new (e || N)(s.Mc(D, 2));
      }),
        (N.ɵdir = s.Hc({
          type: N,
          selectors: [
            ["", "formGroupName", ""],
            ["", "formArrayName", ""],
            ["", "ngModelGroup", ""],
            ["", "formGroup", ""],
            ["form", 3, "ngNoForm", ""],
            ["", "ngForm", ""],
          ],
          hostVars: 14,
          hostBindings: function (e, t) {
            2 & e &&
              s.Ec("ng-untouched", t.ngClassUntouched)(
                "ng-touched",
                t.ngClassTouched
              )("ng-pristine", t.ngClassPristine)("ng-dirty", t.ngClassDirty)(
                "ng-valid",
                t.ngClassValid
              )("ng-invalid", t.ngClassInvalid)("ng-pending", t.ngClassPending);
          },
          features: [s.wc],
        })),
        (N.ctorParameters = () => [{ type: D, decorators: [{ type: s.db }] }]);
      const F = { provide: l, useExisting: Object(s.sb)(() => L), multi: !0 };
      class L {
        constructor(e, t) {
          (this._renderer = e),
            (this._elementRef = t),
            (this.onChange = (e) => {}),
            (this.onTouched = () => {});
        }
        writeValue(e) {
          const t = null == e ? "" : e;
          this._renderer.setProperty(
            this._elementRef.nativeElement,
            "value",
            t
          );
        }
        registerOnChange(e) {
          this.onChange = (t) => {
            e("" == t ? null : parseFloat(t));
          };
        }
        registerOnTouched(e) {
          this.onTouched = e;
        }
        setDisabledState(e) {
          this._renderer.setProperty(
            this._elementRef.nativeElement,
            "disabled",
            e
          );
        }
      }
      (L.ɵfac = function (e) {
        return new (e || L)(s.Mc(s.Y), s.Mc(s.v));
      }),
        (L.ɵdir = s.Hc({
          type: L,
          selectors: [
            ["input", "type", "number", "formControlName", ""],
            ["input", "type", "number", "formControl", ""],
            ["input", "type", "number", "ngModel", ""],
          ],
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("input", function (e) {
                return t.onChange(e.target.value);
              })("blur", function () {
                return t.onTouched();
              });
          },
          features: [s.yc([F])],
        })),
        (L.ctorParameters = () => [{ type: s.Y }, { type: s.v }]);
      const V = { provide: l, useExisting: Object(s.sb)(() => z), multi: !0 };
      class B {
        constructor() {
          this._accessors = [];
        }
        add(e, t) {
          this._accessors.push([e, t]);
        }
        remove(e) {
          for (let t = this._accessors.length - 1; t >= 0; --t)
            if (this._accessors[t][1] === e)
              return void this._accessors.splice(t, 1);
        }
        select(e) {
          this._accessors.forEach((t) => {
            this._isSameGroup(t, e) && t[1] !== e && t[1].fireUncheck(e.value);
          });
        }
        _isSameGroup(e, t) {
          return (
            !!e[0].control &&
            e[0]._parent === t._control._parent &&
            e[1].name === t.name
          );
        }
      }
      (B.ɵfac = function (e) {
        return new (e || B)();
      }),
        (B.ɵprov = s.Ic({ token: B, factory: B.ɵfac }));
      class z {
        constructor(e, t, n, s) {
          (this._renderer = e),
            (this._elementRef = t),
            (this._registry = n),
            (this._injector = s),
            (this.onChange = () => {}),
            (this.onTouched = () => {});
        }
        ngOnInit() {
          (this._control = this._injector.get(P)),
            this._checkName(),
            this._registry.add(this._control, this);
        }
        ngOnDestroy() {
          this._registry.remove(this);
        }
        writeValue(e) {
          (this._state = e === this.value),
            this._renderer.setProperty(
              this._elementRef.nativeElement,
              "checked",
              this._state
            );
        }
        registerOnChange(e) {
          (this._fn = e),
            (this.onChange = () => {
              e(this.value), this._registry.select(this);
            });
        }
        fireUncheck(e) {
          this.writeValue(e);
        }
        registerOnTouched(e) {
          this.onTouched = e;
        }
        setDisabledState(e) {
          this._renderer.setProperty(
            this._elementRef.nativeElement,
            "disabled",
            e
          );
        }
        _checkName() {
          this.name &&
            this.formControlName &&
            (this.name, this.formControlName),
            !this.name &&
              this.formControlName &&
              (this.name = this.formControlName);
        }
      }
      (z.ɵfac = function (e) {
        return new (e || z)(s.Mc(s.Y), s.Mc(s.v), s.Mc(B), s.Mc(s.F));
      }),
        (z.ɵdir = s.Hc({
          type: z,
          selectors: [
            ["input", "type", "radio", "formControlName", ""],
            ["input", "type", "radio", "formControl", ""],
            ["input", "type", "radio", "ngModel", ""],
          ],
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("change", function () {
                return t.onChange();
              })("blur", function () {
                return t.onTouched();
              });
          },
          inputs: {
            name: "name",
            formControlName: "formControlName",
            value: "value",
          },
          features: [s.yc([V])],
        })),
        (z.ctorParameters = () => [
          { type: s.Y },
          { type: s.v },
          { type: B },
          { type: s.F },
        ]),
        (z.propDecorators = {
          name: [{ type: s.G }],
          formControlName: [{ type: s.G }],
          value: [{ type: s.G }],
        });
      const H = { provide: l, useExisting: Object(s.sb)(() => G), multi: !0 };
      class G {
        constructor(e, t) {
          (this._renderer = e),
            (this._elementRef = t),
            (this.onChange = (e) => {}),
            (this.onTouched = () => {});
        }
        writeValue(e) {
          this._renderer.setProperty(
            this._elementRef.nativeElement,
            "value",
            parseFloat(e)
          );
        }
        registerOnChange(e) {
          this.onChange = (t) => {
            e("" == t ? null : parseFloat(t));
          };
        }
        registerOnTouched(e) {
          this.onTouched = e;
        }
        setDisabledState(e) {
          this._renderer.setProperty(
            this._elementRef.nativeElement,
            "disabled",
            e
          );
        }
      }
      (G.ɵfac = function (e) {
        return new (e || G)(s.Mc(s.Y), s.Mc(s.v));
      }),
        (G.ɵdir = s.Hc({
          type: G,
          selectors: [
            ["input", "type", "range", "formControlName", ""],
            ["input", "type", "range", "formControl", ""],
            ["input", "type", "range", "ngModel", ""],
          ],
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("change", function (e) {
                return t.onChange(e.target.value);
              })("input", function (e) {
                return t.onChange(e.target.value);
              })("blur", function () {
                return t.onTouched();
              });
          },
          features: [s.yc([H])],
        })),
        (G.ctorParameters = () => [{ type: s.Y }, { type: s.v }]);
      const U = { provide: l, useExisting: Object(s.sb)(() => q), multi: !0 };
      function $(e, t) {
        return null == e
          ? "" + t
          : (t && "object" == typeof t && (t = "Object"),
            `${e}: ${t}`.slice(0, 50));
      }
      class q {
        constructor(e, t) {
          (this._renderer = e),
            (this._elementRef = t),
            (this._optionMap = new Map()),
            (this._idCounter = 0),
            (this.onChange = (e) => {}),
            (this.onTouched = () => {}),
            (this._compareWith = Object.is);
        }
        set compareWith(e) {
          this._compareWith = e;
        }
        writeValue(e) {
          this.value = e;
          const t = this._getOptionId(e);
          null == t &&
            this._renderer.setProperty(
              this._elementRef.nativeElement,
              "selectedIndex",
              -1
            );
          const n = $(t, e);
          this._renderer.setProperty(
            this._elementRef.nativeElement,
            "value",
            n
          );
        }
        registerOnChange(e) {
          this.onChange = (t) => {
            (this.value = this._getOptionValue(t)), e(this.value);
          };
        }
        registerOnTouched(e) {
          this.onTouched = e;
        }
        setDisabledState(e) {
          this._renderer.setProperty(
            this._elementRef.nativeElement,
            "disabled",
            e
          );
        }
        _registerOption() {
          return (this._idCounter++).toString();
        }
        _getOptionId(e) {
          for (const t of Array.from(this._optionMap.keys()))
            if (this._compareWith(this._optionMap.get(t), e)) return t;
          return null;
        }
        _getOptionValue(e) {
          const t = (function (e) {
            return e.split(":")[0];
          })(e);
          return this._optionMap.has(t) ? this._optionMap.get(t) : e;
        }
      }
      (q.ɵfac = function (e) {
        return new (e || q)(s.Mc(s.Y), s.Mc(s.v));
      }),
        (q.ɵdir = s.Hc({
          type: q,
          selectors: [
            ["select", "formControlName", "", 3, "multiple", ""],
            ["select", "formControl", "", 3, "multiple", ""],
            ["select", "ngModel", "", 3, "multiple", ""],
          ],
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("change", function (e) {
                return t.onChange(e.target.value);
              })("blur", function () {
                return t.onTouched();
              });
          },
          inputs: { compareWith: "compareWith" },
          features: [s.yc([U])],
        })),
        (q.ctorParameters = () => [{ type: s.Y }, { type: s.v }]),
        (q.propDecorators = { compareWith: [{ type: s.G }] });
      class W {
        constructor(e, t, n) {
          (this._element = e),
            (this._renderer = t),
            (this._select = n),
            this._select && (this.id = this._select._registerOption());
        }
        set ngValue(e) {
          null != this._select &&
            (this._select._optionMap.set(this.id, e),
            this._setElementValue($(this.id, e)),
            this._select.writeValue(this._select.value));
        }
        set value(e) {
          this._setElementValue(e),
            this._select && this._select.writeValue(this._select.value);
        }
        _setElementValue(e) {
          this._renderer.setProperty(this._element.nativeElement, "value", e);
        }
        ngOnDestroy() {
          this._select &&
            (this._select._optionMap.delete(this.id),
            this._select.writeValue(this._select.value));
        }
      }
      (W.ɵfac = function (e) {
        return new (e || W)(s.Mc(s.v), s.Mc(s.Y), s.Mc(q, 9));
      }),
        (W.ɵdir = s.Hc({
          type: W,
          selectors: [["option"]],
          inputs: { ngValue: "ngValue", value: "value" },
        })),
        (W.ctorParameters = () => [
          { type: s.v },
          { type: s.Y },
          { type: q, decorators: [{ type: s.R }, { type: s.y }] },
        ]),
        (W.propDecorators = {
          ngValue: [{ type: s.G, args: ["ngValue"] }],
          value: [{ type: s.G, args: ["value"] }],
        });
      const Y = { provide: l, useExisting: Object(s.sb)(() => K), multi: !0 };
      function Q(e, t) {
        return null == e
          ? "" + t
          : ("string" == typeof t && (t = `'${t}'`),
            t && "object" == typeof t && (t = "Object"),
            `${e}: ${t}`.slice(0, 50));
      }
      class K {
        constructor(e, t) {
          (this._renderer = e),
            (this._elementRef = t),
            (this._optionMap = new Map()),
            (this._idCounter = 0),
            (this.onChange = (e) => {}),
            (this.onTouched = () => {}),
            (this._compareWith = Object.is);
        }
        set compareWith(e) {
          this._compareWith = e;
        }
        writeValue(e) {
          let t;
          if (((this.value = e), Array.isArray(e))) {
            const n = e.map((e) => this._getOptionId(e));
            t = (e, t) => {
              e._setSelected(n.indexOf(t.toString()) > -1);
            };
          } else
            t = (e, t) => {
              e._setSelected(!1);
            };
          this._optionMap.forEach(t);
        }
        registerOnChange(e) {
          this.onChange = (t) => {
            const n = [];
            if (void 0 !== t.selectedOptions) {
              const e = t.selectedOptions;
              for (let t = 0; t < e.length; t++) {
                const s = e.item(t),
                  i = this._getOptionValue(s.value);
                n.push(i);
              }
            } else {
              const e = t.options;
              for (let t = 0; t < e.length; t++) {
                const s = e.item(t);
                if (s.selected) {
                  const e = this._getOptionValue(s.value);
                  n.push(e);
                }
              }
            }
            (this.value = n), e(n);
          };
        }
        registerOnTouched(e) {
          this.onTouched = e;
        }
        setDisabledState(e) {
          this._renderer.setProperty(
            this._elementRef.nativeElement,
            "disabled",
            e
          );
        }
        _registerOption(e) {
          const t = (this._idCounter++).toString();
          return this._optionMap.set(t, e), t;
        }
        _getOptionId(e) {
          for (const t of Array.from(this._optionMap.keys()))
            if (this._compareWith(this._optionMap.get(t)._value, e)) return t;
          return null;
        }
        _getOptionValue(e) {
          const t = (function (e) {
            return e.split(":")[0];
          })(e);
          return this._optionMap.has(t) ? this._optionMap.get(t)._value : e;
        }
      }
      (K.ɵfac = function (e) {
        return new (e || K)(s.Mc(s.Y), s.Mc(s.v));
      }),
        (K.ɵdir = s.Hc({
          type: K,
          selectors: [
            ["select", "multiple", "", "formControlName", ""],
            ["select", "multiple", "", "formControl", ""],
            ["select", "multiple", "", "ngModel", ""],
          ],
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("change", function (e) {
                return t.onChange(e.target);
              })("blur", function () {
                return t.onTouched();
              });
          },
          inputs: { compareWith: "compareWith" },
          features: [s.yc([Y])],
        })),
        (K.ctorParameters = () => [{ type: s.Y }, { type: s.v }]),
        (K.propDecorators = { compareWith: [{ type: s.G }] });
      class J {
        constructor(e, t, n) {
          (this._element = e),
            (this._renderer = t),
            (this._select = n),
            this._select && (this.id = this._select._registerOption(this));
        }
        set ngValue(e) {
          null != this._select &&
            ((this._value = e),
            this._setElementValue(Q(this.id, e)),
            this._select.writeValue(this._select.value));
        }
        set value(e) {
          this._select
            ? ((this._value = e),
              this._setElementValue(Q(this.id, e)),
              this._select.writeValue(this._select.value))
            : this._setElementValue(e);
        }
        _setElementValue(e) {
          this._renderer.setProperty(this._element.nativeElement, "value", e);
        }
        _setSelected(e) {
          this._renderer.setProperty(
            this._element.nativeElement,
            "selected",
            e
          );
        }
        ngOnDestroy() {
          this._select &&
            (this._select._optionMap.delete(this.id),
            this._select.writeValue(this._select.value));
        }
      }
      function X(e, t) {
        return [...t.path, e];
      }
      function Z(e, t) {
        ne(e, t, !0),
          t.valueAccessor.writeValue(e.value),
          (function (e, t) {
            t.valueAccessor.registerOnChange((n) => {
              (e._pendingValue = n),
                (e._pendingChange = !0),
                (e._pendingDirty = !0),
                "change" === e.updateOn && ie(e, t);
            });
          })(e, t),
          (function (e, t) {
            const n = (e, n) => {
              t.valueAccessor.writeValue(e), n && t.viewToModelUpdate(e);
            };
            e.registerOnChange(n),
              t._registerOnDestroy(() => {
                e._unregisterOnChange(n);
              });
          })(e, t),
          (function (e, t) {
            t.valueAccessor.registerOnTouched(() => {
              (e._pendingTouched = !0),
                "blur" === e.updateOn && e._pendingChange && ie(e, t),
                "submit" !== e.updateOn && e.markAsTouched();
            });
          })(e, t),
          (function (e, t) {
            if (t.valueAccessor.setDisabledState) {
              const n = (e) => {
                t.valueAccessor.setDisabledState(e);
              };
              e.registerOnDisabledChange(n),
                t._registerOnDestroy(() => {
                  e._unregisterOnDisabledChange(n);
                });
            }
          })(e, t);
      }
      function ee(e, t) {
        const n = () => {
          0;
        };
        t.valueAccessor.registerOnChange(n),
          t.valueAccessor.registerOnTouched(n),
          se(e, t, !0),
          e &&
            (t._invokeOnDestroyCallbacks(),
            e._registerOnCollectionChange(() => {}));
      }
      function te(e, t) {
        e.forEach((e) => {
          e.registerOnValidatorChange && e.registerOnValidatorChange(t);
        });
      }
      function ne(e, t, n) {
        const s = I(e);
        null !== t.validator
          ? e.setValidators(O(s, t.validator))
          : "function" == typeof s && e.setValidators([s]);
        const i = T(e);
        if (
          (null !== t.asyncValidator
            ? e.setAsyncValidators(O(i, t.asyncValidator))
            : "function" == typeof i && e.setAsyncValidators([i]),
          n)
        ) {
          const n = () => e.updateValueAndValidity();
          te(t._rawValidators, n), te(t._rawAsyncValidators, n);
        }
      }
      function se(e, t, n) {
        if (null !== e) {
          if (null !== t.validator) {
            const n = I(e);
            Array.isArray(n) &&
              n.length > 0 &&
              e.setValidators(n.filter((e) => e !== t.validator));
          }
          if (null !== t.asyncValidator) {
            const n = T(e);
            Array.isArray(n) &&
              n.length > 0 &&
              e.setAsyncValidators(n.filter((e) => e !== t.asyncValidator));
          }
        }
        if (n) {
          const e = () => {};
          te(t._rawValidators, e), te(t._rawAsyncValidators, e);
        }
      }
      function ie(e, t) {
        e._pendingDirty && e.markAsDirty(),
          e.setValue(e._pendingValue, { emitModelToViewChange: !1 }),
          t.viewToModelUpdate(e._pendingValue),
          (e._pendingChange = !1);
      }
      function re(e, t) {
        ne(e, t, !1);
      }
      function oe(e, t) {
        if (!e.hasOwnProperty("model")) return !1;
        const n = e.model;
        return !!n.isFirstChange() || !Object.is(t, n.currentValue);
      }
      (J.ɵfac = function (e) {
        return new (e || J)(s.Mc(s.v), s.Mc(s.Y), s.Mc(K, 9));
      }),
        (J.ɵdir = s.Hc({
          type: J,
          selectors: [["option"]],
          inputs: { ngValue: "ngValue", value: "value" },
        })),
        (J.ctorParameters = () => [
          { type: s.v },
          { type: s.Y },
          { type: K, decorators: [{ type: s.R }, { type: s.y }] },
        ]),
        (J.propDecorators = {
          ngValue: [{ type: s.G, args: ["ngValue"] }],
          value: [{ type: s.G, args: ["value"] }],
        });
      const ae = [u, G, L, q, K, z];
      function le(e, t) {
        e._syncPendingControls(),
          t.forEach((e) => {
            const t = e.control;
            "submit" === t.updateOn &&
              t._pendingChange &&
              (e.viewToModelUpdate(t._pendingValue), (t._pendingChange = !1));
          });
      }
      function ce(e, t) {
        if (!t) return null;
        Array.isArray(t);
        let n = void 0,
          s = void 0,
          i = void 0;
        return (
          t.forEach((e) => {
            var t;
            e.constructor === p
              ? (n = e)
              : ((t = e),
                ae.some((e) => t.constructor === e) ? (s = e) : (i = e));
          }),
          i || s || n || null
        );
      }
      function ue(e, t) {
        const n = e.indexOf(t);
        n > -1 && e.splice(n, 1);
      }
      function de(e, t, n, i) {
        Object(s.ub)() &&
          "never" !== i &&
          ((((null !== i && "once" !== i) || t._ngModelWarningSentOnce) &&
            ("always" !== i || n._ngModelWarningSent)) ||
            ((t._ngModelWarningSentOnce = !0), (n._ngModelWarningSent = !0)));
      }
      const he = "VALID",
        pe = "INVALID",
        me = "PENDING",
        fe = "DISABLED";
      function ge(e) {
        return (xe(e) ? e.validators : e) || null;
      }
      function ye(e) {
        return Array.isArray(e) ? E(e) : e || null;
      }
      function ve(e, t) {
        return (xe(t) ? t.asyncValidators : e) || null;
      }
      function be(e) {
        return Array.isArray(e) ? k(e) : e || null;
      }
      function xe(e) {
        return null != e && !Array.isArray(e) && "object" == typeof e;
      }
      class _e {
        constructor(e, t) {
          (this._hasOwnPendingAsyncValidator = !1),
            (this._onCollectionChange = () => {}),
            (this._parent = null),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []),
            (this._rawValidators = e),
            (this._rawAsyncValidators = t),
            (this._composedValidatorFn = ye(this._rawValidators)),
            (this._composedAsyncValidatorFn = be(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn;
        }
        set validator(e) {
          this._rawValidators = this._composedValidatorFn = e;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn;
        }
        set asyncValidator(e) {
          this._rawAsyncValidators = this._composedAsyncValidatorFn = e;
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return this.status === he;
        }
        get invalid() {
          return this.status === pe;
        }
        get pending() {
          return this.status == me;
        }
        get disabled() {
          return this.status === fe;
        }
        get enabled() {
          return this.status !== fe;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn
            ? this._updateOn
            : this.parent
            ? this.parent.updateOn
            : "change";
        }
        setValidators(e) {
          (this._rawValidators = e), (this._composedValidatorFn = ye(e));
        }
        setAsyncValidators(e) {
          (this._rawAsyncValidators = e),
            (this._composedAsyncValidatorFn = be(e));
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(e = {}) {
          (this.touched = !0),
            this._parent && !e.onlySelf && this._parent.markAsTouched(e);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }),
            this._forEachChild((e) => e.markAllAsTouched());
        }
        markAsUntouched(e = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild((e) => {
              e.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !e.onlySelf && this._parent._updateTouched(e);
        }
        markAsDirty(e = {}) {
          (this.pristine = !1),
            this._parent && !e.onlySelf && this._parent.markAsDirty(e);
        }
        markAsPristine(e = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild((e) => {
              e.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !e.onlySelf && this._parent._updatePristine(e);
        }
        markAsPending(e = {}) {
          (this.status = me),
            !1 !== e.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !e.onlySelf && this._parent.markAsPending(e);
        }
        disable(e = {}) {
          const t = this._parentMarkedDirty(e.onlySelf);
          (this.status = fe),
            (this.errors = null),
            this._forEachChild((t) => {
              t.disable(Object.assign(Object.assign({}, e), { onlySelf: !0 }));
            }),
            this._updateValue(),
            !1 !== e.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._updateAncestors(
              Object.assign(Object.assign({}, e), { skipPristineCheck: t })
            ),
            this._onDisabledChange.forEach((e) => e(!0));
        }
        enable(e = {}) {
          const t = this._parentMarkedDirty(e.onlySelf);
          (this.status = he),
            this._forEachChild((t) => {
              t.enable(Object.assign(Object.assign({}, e), { onlySelf: !0 }));
            }),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: e.emitEvent,
            }),
            this._updateAncestors(
              Object.assign(Object.assign({}, e), { skipPristineCheck: t })
            ),
            this._onDisabledChange.forEach((e) => e(!1));
        }
        _updateAncestors(e) {
          this._parent &&
            !e.onlySelf &&
            (this._parent.updateValueAndValidity(e),
            e.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(e) {
          this._parent = e;
        }
        updateValueAndValidity(e = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              (this.status !== he && this.status !== me) ||
                this._runAsyncValidator(e.emitEvent)),
            !1 !== e.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._parent &&
              !e.onlySelf &&
              this._parent.updateValueAndValidity(e);
        }
        _updateTreeValidity(e = { emitEvent: !0 }) {
          this._forEachChild((t) => t._updateTreeValidity(e)),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: e.emitEvent,
            });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? fe : he;
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(e) {
          if (this.asyncValidator) {
            (this.status = me), (this._hasOwnPendingAsyncValidator = !0);
            const t = _(this.asyncValidator(this));
            this._asyncValidationSubscription = t.subscribe((t) => {
              (this._hasOwnPendingAsyncValidator = !1),
                this.setErrors(t, { emitEvent: e });
            });
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            (this._asyncValidationSubscription.unsubscribe(),
            (this._hasOwnPendingAsyncValidator = !1));
        }
        setErrors(e, t = {}) {
          (this.errors = e), this._updateControlsErrors(!1 !== t.emitEvent);
        }
        get(e) {
          return (function (e, t, n) {
            if (null == t) return null;
            if (
              (Array.isArray(t) || (t = t.split(n)),
              Array.isArray(t) && 0 === t.length)
            )
              return null;
            let s = e;
            return (
              t.forEach((e) => {
                s =
                  s instanceof Ce
                    ? s.controls.hasOwnProperty(e)
                      ? s.controls[e]
                      : null
                    : (s instanceof Se && s.at(e)) || null;
              }),
              s
            );
          })(this, e, ".");
        }
        getError(e, t) {
          const n = t ? this.get(t) : this;
          return n && n.errors ? n.errors[e] : null;
        }
        hasError(e, t) {
          return !!this.getError(e, t);
        }
        get root() {
          let e = this;
          for (; e._parent; ) e = e._parent;
          return e;
        }
        _updateControlsErrors(e) {
          (this.status = this._calculateStatus()),
            e && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(e);
        }
        _initObservables() {
          (this.valueChanges = new s.x()), (this.statusChanges = new s.x());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? fe
            : this.errors
            ? pe
            : this._hasOwnPendingAsyncValidator ||
              this._anyControlsHaveStatus(me)
            ? me
            : this._anyControlsHaveStatus(pe)
            ? pe
            : he;
        }
        _anyControlsHaveStatus(e) {
          return this._anyControls((t) => t.status === e);
        }
        _anyControlsDirty() {
          return this._anyControls((e) => e.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls((e) => e.touched);
        }
        _updatePristine(e = {}) {
          (this.pristine = !this._anyControlsDirty()),
            this._parent && !e.onlySelf && this._parent._updatePristine(e);
        }
        _updateTouched(e = {}) {
          (this.touched = this._anyControlsTouched()),
            this._parent && !e.onlySelf && this._parent._updateTouched(e);
        }
        _isBoxedValue(e) {
          return (
            "object" == typeof e &&
            null !== e &&
            2 === Object.keys(e).length &&
            "value" in e &&
            "disabled" in e
          );
        }
        _registerOnCollectionChange(e) {
          this._onCollectionChange = e;
        }
        _setUpdateStrategy(e) {
          xe(e) && null != e.updateOn && (this._updateOn = e.updateOn);
        }
        _parentMarkedDirty(e) {
          const t = this._parent && this._parent.dirty;
          return !e && !!t && !this._parent._anyControlsDirty();
        }
      }
      class we extends _e {
        constructor(e = null, t, n) {
          super(ge(t), ve(n, t)),
            (this._onChange = []),
            this._applyFormState(e),
            this._setUpdateStrategy(t),
            this._initObservables(),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: !!n });
        }
        setValue(e, t = {}) {
          (this.value = this._pendingValue = e),
            this._onChange.length &&
              !1 !== t.emitModelToViewChange &&
              this._onChange.forEach((e) =>
                e(this.value, !1 !== t.emitViewToModelChange)
              ),
            this.updateValueAndValidity(t);
        }
        patchValue(e, t = {}) {
          this.setValue(e, t);
        }
        reset(e = null, t = {}) {
          this._applyFormState(e),
            this.markAsPristine(t),
            this.markAsUntouched(t),
            this.setValue(this.value, t),
            (this._pendingChange = !1);
        }
        _updateValue() {}
        _anyControls(e) {
          return !1;
        }
        _allControlsDisabled() {
          return this.disabled;
        }
        registerOnChange(e) {
          this._onChange.push(e);
        }
        _unregisterOnChange(e) {
          ue(this._onChange, e);
        }
        registerOnDisabledChange(e) {
          this._onDisabledChange.push(e);
        }
        _unregisterOnDisabledChange(e) {
          ue(this._onDisabledChange, e);
        }
        _forEachChild(e) {}
        _syncPendingControls() {
          return (
            !(
              "submit" !== this.updateOn ||
              (this._pendingDirty && this.markAsDirty(),
              this._pendingTouched && this.markAsTouched(),
              !this._pendingChange)
            ) &&
            (this.setValue(this._pendingValue, {
              onlySelf: !0,
              emitModelToViewChange: !1,
            }),
            !0)
          );
        }
        _applyFormState(e) {
          this._isBoxedValue(e)
            ? ((this.value = this._pendingValue = e.value),
              e.disabled
                ? this.disable({ onlySelf: !0, emitEvent: !1 })
                : this.enable({ onlySelf: !0, emitEvent: !1 }))
            : (this.value = this._pendingValue = e);
        }
      }
      class Ce extends _e {
        constructor(e, t, n) {
          super(ge(t), ve(n, t)),
            (this.controls = e),
            this._initObservables(),
            this._setUpdateStrategy(t),
            this._setUpControls(),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: !!n });
        }
        registerControl(e, t) {
          return this.controls[e]
            ? this.controls[e]
            : ((this.controls[e] = t),
              t.setParent(this),
              t._registerOnCollectionChange(this._onCollectionChange),
              t);
        }
        addControl(e, t) {
          this.registerControl(e, t),
            this.updateValueAndValidity(),
            this._onCollectionChange();
        }
        removeControl(e) {
          this.controls[e] &&
            this.controls[e]._registerOnCollectionChange(() => {}),
            delete this.controls[e],
            this.updateValueAndValidity(),
            this._onCollectionChange();
        }
        setControl(e, t) {
          this.controls[e] &&
            this.controls[e]._registerOnCollectionChange(() => {}),
            delete this.controls[e],
            t && this.registerControl(e, t),
            this.updateValueAndValidity(),
            this._onCollectionChange();
        }
        contains(e) {
          return this.controls.hasOwnProperty(e) && this.controls[e].enabled;
        }
        setValue(e, t = {}) {
          this._checkAllValuesPresent(e),
            Object.keys(e).forEach((n) => {
              this._throwIfControlMissing(n),
                this.controls[n].setValue(e[n], {
                  onlySelf: !0,
                  emitEvent: t.emitEvent,
                });
            }),
            this.updateValueAndValidity(t);
        }
        patchValue(e, t = {}) {
          Object.keys(e).forEach((n) => {
            this.controls[n] &&
              this.controls[n].patchValue(e[n], {
                onlySelf: !0,
                emitEvent: t.emitEvent,
              });
          }),
            this.updateValueAndValidity(t);
        }
        reset(e = {}, t = {}) {
          this._forEachChild((n, s) => {
            n.reset(e[s], { onlySelf: !0, emitEvent: t.emitEvent });
          }),
            this._updatePristine(t),
            this._updateTouched(t),
            this.updateValueAndValidity(t);
        }
        getRawValue() {
          return this._reduceChildren(
            {},
            (e, t, n) => (
              (e[n] = t instanceof we ? t.value : t.getRawValue()), e
            )
          );
        }
        _syncPendingControls() {
          let e = this._reduceChildren(
            !1,
            (e, t) => !!t._syncPendingControls() || e
          );
          return e && this.updateValueAndValidity({ onlySelf: !0 }), e;
        }
        _throwIfControlMissing(e) {
          if (!Object.keys(this.controls).length)
            throw new Error(
              "\n        There are no form controls registered with this group yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      "
            );
          if (!this.controls[e])
            throw new Error(`Cannot find form control with name: ${e}.`);
        }
        _forEachChild(e) {
          Object.keys(this.controls).forEach((t) => e(this.controls[t], t));
        }
        _setUpControls() {
          this._forEachChild((e) => {
            e.setParent(this),
              e._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(e) {
          for (const t of Object.keys(this.controls)) {
            const n = this.controls[t];
            if (this.contains(t) && e(n)) return !0;
          }
          return !1;
        }
        _reduceValue() {
          return this._reduceChildren(
            {},
            (e, t, n) => ((t.enabled || this.disabled) && (e[n] = t.value), e)
          );
        }
        _reduceChildren(e, t) {
          let n = e;
          return (
            this._forEachChild((e, s) => {
              n = t(n, e, s);
            }),
            n
          );
        }
        _allControlsDisabled() {
          for (const e of Object.keys(this.controls))
            if (this.controls[e].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
        _checkAllValuesPresent(e) {
          this._forEachChild((t, n) => {
            if (void 0 === e[n])
              throw new Error(
                `Must supply a value for form control with name: '${n}'.`
              );
          });
        }
      }
      class Se extends _e {
        constructor(e, t, n) {
          super(ge(t), ve(n, t)),
            (this.controls = e),
            this._initObservables(),
            this._setUpdateStrategy(t),
            this._setUpControls(),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: !!n });
        }
        at(e) {
          return this.controls[e];
        }
        push(e) {
          this.controls.push(e),
            this._registerControl(e),
            this.updateValueAndValidity(),
            this._onCollectionChange();
        }
        insert(e, t) {
          this.controls.splice(e, 0, t),
            this._registerControl(t),
            this.updateValueAndValidity();
        }
        removeAt(e) {
          this.controls[e] &&
            this.controls[e]._registerOnCollectionChange(() => {}),
            this.controls.splice(e, 1),
            this.updateValueAndValidity();
        }
        setControl(e, t) {
          this.controls[e] &&
            this.controls[e]._registerOnCollectionChange(() => {}),
            this.controls.splice(e, 1),
            t && (this.controls.splice(e, 0, t), this._registerControl(t)),
            this.updateValueAndValidity(),
            this._onCollectionChange();
        }
        get length() {
          return this.controls.length;
        }
        setValue(e, t = {}) {
          this._checkAllValuesPresent(e),
            e.forEach((e, n) => {
              this._throwIfControlMissing(n),
                this.at(n).setValue(e, {
                  onlySelf: !0,
                  emitEvent: t.emitEvent,
                });
            }),
            this.updateValueAndValidity(t);
        }
        patchValue(e, t = {}) {
          e.forEach((e, n) => {
            this.at(n) &&
              this.at(n).patchValue(e, {
                onlySelf: !0,
                emitEvent: t.emitEvent,
              });
          }),
            this.updateValueAndValidity(t);
        }
        reset(e = [], t = {}) {
          this._forEachChild((n, s) => {
            n.reset(e[s], { onlySelf: !0, emitEvent: t.emitEvent });
          }),
            this._updatePristine(t),
            this._updateTouched(t),
            this.updateValueAndValidity(t);
        }
        getRawValue() {
          return this.controls.map((e) =>
            e instanceof we ? e.value : e.getRawValue()
          );
        }
        clear() {
          this.controls.length < 1 ||
            (this._forEachChild((e) => e._registerOnCollectionChange(() => {})),
            this.controls.splice(0),
            this.updateValueAndValidity());
        }
        _syncPendingControls() {
          let e = this.controls.reduce(
            (e, t) => !!t._syncPendingControls() || e,
            !1
          );
          return e && this.updateValueAndValidity({ onlySelf: !0 }), e;
        }
        _throwIfControlMissing(e) {
          if (!this.controls.length)
            throw new Error(
              "\n        There are no form controls registered with this array yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      "
            );
          if (!this.at(e))
            throw new Error("Cannot find form control at index " + e);
        }
        _forEachChild(e) {
          this.controls.forEach((t, n) => {
            e(t, n);
          });
        }
        _updateValue() {
          this.value = this.controls
            .filter((e) => e.enabled || this.disabled)
            .map((e) => e.value);
        }
        _anyControls(e) {
          return this.controls.some((t) => t.enabled && e(t));
        }
        _setUpControls() {
          this._forEachChild((e) => this._registerControl(e));
        }
        _checkAllValuesPresent(e) {
          this._forEachChild((t, n) => {
            if (void 0 === e[n])
              throw new Error(
                `Must supply a value for form control at index: ${n}.`
              );
          });
        }
        _allControlsDisabled() {
          for (const e of this.controls) if (e.enabled) return !1;
          return this.controls.length > 0 || this.disabled;
        }
        _registerControl(e) {
          e.setParent(this),
            e._registerOnCollectionChange(this._onCollectionChange);
        }
      }
      const Ee = { provide: D, useExisting: Object(s.sb)(() => Oe) },
        ke = Promise.resolve(null);
      class Oe extends D {
        constructor(e, t) {
          super(),
            (this.submitted = !1),
            (this._directives = []),
            (this.ngSubmit = new s.x()),
            (this.form = new Ce({}, E(e), k(t)));
        }
        ngAfterViewInit() {
          this._setUpdateStrategy();
        }
        get formDirective() {
          return this;
        }
        get control() {
          return this.form;
        }
        get path() {
          return [];
        }
        get controls() {
          return this.form.controls;
        }
        addControl(e) {
          ke.then(() => {
            const t = this._findContainer(e.path);
            (e.control = t.registerControl(e.name, e.control)),
              Z(e.control, e),
              e.control.updateValueAndValidity({ emitEvent: !1 }),
              this._directives.push(e);
          });
        }
        getControl(e) {
          return this.form.get(e.path);
        }
        removeControl(e) {
          ke.then(() => {
            const t = this._findContainer(e.path);
            t && t.removeControl(e.name), ue(this._directives, e);
          });
        }
        addFormGroup(e) {
          ke.then(() => {
            const t = this._findContainer(e.path),
              n = new Ce({});
            re(n, e),
              t.registerControl(e.name, n),
              n.updateValueAndValidity({ emitEvent: !1 });
          });
        }
        removeFormGroup(e) {
          ke.then(() => {
            const t = this._findContainer(e.path);
            t && t.removeControl(e.name);
          });
        }
        getFormGroup(e) {
          return this.form.get(e.path);
        }
        updateModel(e, t) {
          ke.then(() => {
            this.form.get(e.path).setValue(t);
          });
        }
        setValue(e) {
          this.control.setValue(e);
        }
        onSubmit(e) {
          return (
            (this.submitted = !0),
            le(this.form, this._directives),
            this.ngSubmit.emit(e),
            !1
          );
        }
        onReset() {
          this.resetForm();
        }
        resetForm(e) {
          this.form.reset(e), (this.submitted = !1);
        }
        _setUpdateStrategy() {
          this.options &&
            null != this.options.updateOn &&
            (this.form._updateOn = this.options.updateOn);
        }
        _findContainer(e) {
          return e.pop(), e.length ? this.form.get(e) : this.form;
        }
      }
      (Oe.ɵfac = function (e) {
        return new (e || Oe)(s.Mc(g, 10), s.Mc(y, 10));
      }),
        (Oe.ɵdir = s.Hc({
          type: Oe,
          selectors: [
            ["form", 3, "ngNoForm", "", 3, "formGroup", ""],
            ["ng-form"],
            ["", "ngForm", ""],
          ],
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("submit", function (e) {
                return t.onSubmit(e);
              })("reset", function () {
                return t.onReset();
              });
          },
          inputs: { options: ["ngFormOptions", "options"] },
          outputs: { ngSubmit: "ngSubmit" },
          exportAs: ["ngForm"],
          features: [s.yc([Ee]), s.wc],
        })),
        (Oe.ctorParameters = () => [
          {
            type: Array,
            decorators: [
              { type: s.R },
              { type: s.db },
              { type: s.C, args: [g] },
            ],
          },
          {
            type: Array,
            decorators: [
              { type: s.R },
              { type: s.db },
              { type: s.C, args: [y] },
            ],
          },
        ]),
        (Oe.propDecorators = {
          options: [{ type: s.G, args: ["ngFormOptions"] }],
        });
      class Ie extends D {
        ngOnInit() {
          this._checkParentType(), this.formDirective.addFormGroup(this);
        }
        ngOnDestroy() {
          this.formDirective && this.formDirective.removeFormGroup(this);
        }
        get control() {
          return this.formDirective.getFormGroup(this);
        }
        get path() {
          return X(
            null == this.name ? this.name : this.name.toString(),
            this._parent
          );
        }
        get formDirective() {
          return this._parent ? this._parent.formDirective : null;
        }
        _checkParentType() {}
      }
      (Ie.ɵfac = function (e) {
        return Te(e || Ie);
      }),
        (Ie.ɵdir = s.Hc({ type: Ie, features: [s.wc] }));
      const Te = s.Tc(Ie);
      const Ae = { provide: D, useExisting: Object(s.sb)(() => De) };
      class De extends Ie {
        constructor(e, t, n) {
          super(),
            (this._parent = e),
            this._setValidators(t),
            this._setAsyncValidators(n);
        }
        _checkParentType() {
          !(this._parent instanceof De) && this._parent, 0;
        }
      }
      (De.ɵfac = function (e) {
        return new (e || De)(s.Mc(D, 5), s.Mc(g, 10), s.Mc(y, 10));
      }),
        (De.ɵdir = s.Hc({
          type: De,
          selectors: [["", "ngModelGroup", ""]],
          inputs: { name: ["ngModelGroup", "name"] },
          exportAs: ["ngModelGroup"],
          features: [s.yc([Ae]), s.wc],
        })),
        (De.ctorParameters = () => [
          { type: D, decorators: [{ type: s.y }, { type: s.eb }] },
          {
            type: Array,
            decorators: [
              { type: s.R },
              { type: s.db },
              { type: s.C, args: [g] },
            ],
          },
          {
            type: Array,
            decorators: [
              { type: s.R },
              { type: s.db },
              { type: s.C, args: [y] },
            ],
          },
        ]),
        (De.propDecorators = { name: [{ type: s.G, args: ["ngModelGroup"] }] });
      const Me = { provide: P, useExisting: Object(s.sb)(() => Re) },
        Pe = Promise.resolve(null);
      class Re extends P {
        constructor(e, t, n, i) {
          super(),
            (this.control = new we()),
            (this._registered = !1),
            (this.update = new s.x()),
            (this._parent = e),
            this._setValidators(t),
            this._setAsyncValidators(n),
            (this.valueAccessor = ce(0, i));
        }
        ngOnChanges(e) {
          this._checkForErrors(),
            this._registered || this._setUpControl(),
            "isDisabled" in e && this._updateDisabled(e),
            oe(e, this.viewModel) &&
              (this._updateValue(this.model), (this.viewModel = this.model));
        }
        ngOnDestroy() {
          this.formDirective && this.formDirective.removeControl(this);
        }
        get path() {
          return this._parent ? X(this.name, this._parent) : [this.name];
        }
        get formDirective() {
          return this._parent ? this._parent.formDirective : null;
        }
        viewToModelUpdate(e) {
          (this.viewModel = e), this.update.emit(e);
        }
        _setUpControl() {
          this._setUpdateStrategy(),
            this._isStandalone()
              ? this._setUpStandalone()
              : this.formDirective.addControl(this),
            (this._registered = !0);
        }
        _setUpdateStrategy() {
          this.options &&
            null != this.options.updateOn &&
            (this.control._updateOn = this.options.updateOn);
        }
        _isStandalone() {
          return !this._parent || !(!this.options || !this.options.standalone);
        }
        _setUpStandalone() {
          Z(this.control, this),
            this.control.updateValueAndValidity({ emitEvent: !1 });
        }
        _checkForErrors() {
          this._isStandalone() || this._checkParentType(), this._checkName();
        }
        _checkParentType() {
          0;
        }
        _checkName() {
          this.options && this.options.name && (this.name = this.options.name),
            !this._isStandalone() && this.name;
        }
        _updateValue(e) {
          Pe.then(() => {
            this.control.setValue(e, { emitViewToModelChange: !1 });
          });
        }
        _updateDisabled(e) {
          const t = e.isDisabled.currentValue,
            n = "" === t || (t && "false" !== t);
          Pe.then(() => {
            n && !this.control.disabled
              ? this.control.disable()
              : !n && this.control.disabled && this.control.enable();
          });
        }
      }
      (Re.ɵfac = function (e) {
        return new (e || Re)(s.Mc(D, 9), s.Mc(g, 10), s.Mc(y, 10), s.Mc(l, 10));
      }),
        (Re.ɵdir = s.Hc({
          type: Re,
          selectors: [
            ["", "ngModel", "", 3, "formControlName", "", 3, "formControl", ""],
          ],
          inputs: {
            name: "name",
            isDisabled: ["disabled", "isDisabled"],
            model: ["ngModel", "model"],
            options: ["ngModelOptions", "options"],
          },
          outputs: { update: "ngModelChange" },
          exportAs: ["ngModel"],
          features: [s.yc([Me]), s.wc, s.xc],
        })),
        (Re.ctorParameters = () => [
          { type: D, decorators: [{ type: s.R }, { type: s.y }] },
          {
            type: Array,
            decorators: [
              { type: s.R },
              { type: s.db },
              { type: s.C, args: [g] },
            ],
          },
          {
            type: Array,
            decorators: [
              { type: s.R },
              { type: s.db },
              { type: s.C, args: [y] },
            ],
          },
          {
            type: Array,
            decorators: [
              { type: s.R },
              { type: s.db },
              { type: s.C, args: [l] },
            ],
          },
        ]),
        (Re.propDecorators = {
          name: [{ type: s.G }],
          isDisabled: [{ type: s.G, args: ["disabled"] }],
          model: [{ type: s.G, args: ["ngModel"] }],
          options: [{ type: s.G, args: ["ngModelOptions"] }],
          update: [{ type: s.S, args: ["ngModelChange"] }],
        });
      class je {}
      (je.ɵfac = function (e) {
        return new (e || je)();
      }),
        (je.ɵdir = s.Hc({
          type: je,
          selectors: [["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""]],
          hostAttrs: ["novalidate", ""],
        }));
      const Ne = new s.E("NgModelWithFormControlWarning"),
        Fe = { provide: P, useExisting: Object(s.sb)(() => Le) };
      class Le extends P {
        constructor(e, t, n, i) {
          super(),
            (this._ngModelWarningConfig = i),
            (this.update = new s.x()),
            (this._ngModelWarningSent = !1),
            this._setValidators(e),
            this._setAsyncValidators(t),
            (this.valueAccessor = ce(0, n));
        }
        set isDisabled(e) {
          0;
        }
        ngOnChanges(e) {
          this._isControlChanged(e) &&
            (Z(this.form, this),
            this.control.disabled &&
              this.valueAccessor.setDisabledState &&
              this.valueAccessor.setDisabledState(!0),
            this.form.updateValueAndValidity({ emitEvent: !1 })),
            oe(e, this.viewModel) &&
              (de(0, Le, this, this._ngModelWarningConfig),
              this.form.setValue(this.model),
              (this.viewModel = this.model));
        }
        get path() {
          return [];
        }
        get control() {
          return this.form;
        }
        viewToModelUpdate(e) {
          (this.viewModel = e), this.update.emit(e);
        }
        _isControlChanged(e) {
          return e.hasOwnProperty("form");
        }
      }
      (Le.ɵfac = function (e) {
        return new (e || Le)(
          s.Mc(g, 10),
          s.Mc(y, 10),
          s.Mc(l, 10),
          s.Mc(Ne, 8)
        );
      }),
        (Le.ɵdir = s.Hc({
          type: Le,
          selectors: [["", "formControl", ""]],
          inputs: {
            isDisabled: ["disabled", "isDisabled"],
            form: ["formControl", "form"],
            model: ["ngModel", "model"],
          },
          outputs: { update: "ngModelChange" },
          exportAs: ["ngForm"],
          features: [s.yc([Fe]), s.wc, s.xc],
        })),
        (Le._ngModelWarningSentOnce = !1),
        (Le.ctorParameters = () => [
          {
            type: Array,
            decorators: [
              { type: s.R },
              { type: s.db },
              { type: s.C, args: [g] },
            ],
          },
          {
            type: Array,
            decorators: [
              { type: s.R },
              { type: s.db },
              { type: s.C, args: [y] },
            ],
          },
          {
            type: Array,
            decorators: [
              { type: s.R },
              { type: s.db },
              { type: s.C, args: [l] },
            ],
          },
          {
            type: String,
            decorators: [{ type: s.R }, { type: s.C, args: [Ne] }],
          },
        ]),
        (Le.propDecorators = {
          form: [{ type: s.G, args: ["formControl"] }],
          isDisabled: [{ type: s.G, args: ["disabled"] }],
          model: [{ type: s.G, args: ["ngModel"] }],
          update: [{ type: s.S, args: ["ngModelChange"] }],
        });
      const Ve = { provide: D, useExisting: Object(s.sb)(() => Be) };
      class Be extends D {
        constructor(e, t) {
          super(),
            (this.validators = e),
            (this.asyncValidators = t),
            (this.submitted = !1),
            (this.directives = []),
            (this.form = null),
            (this.ngSubmit = new s.x()),
            this._setValidators(e),
            this._setAsyncValidators(t);
        }
        ngOnChanges(e) {
          this._checkFormPresent(),
            e.hasOwnProperty("form") &&
              (this._updateValidators(),
              this._updateDomValue(),
              this._updateRegistrations(),
              (this._oldForm = this.form));
        }
        get formDirective() {
          return this;
        }
        get control() {
          return this.form;
        }
        get path() {
          return [];
        }
        addControl(e) {
          const t = this.form.get(e.path);
          return (
            Z(t, e),
            t.updateValueAndValidity({ emitEvent: !1 }),
            this.directives.push(e),
            t
          );
        }
        getControl(e) {
          return this.form.get(e.path);
        }
        removeControl(e) {
          ue(this.directives, e);
        }
        addFormGroup(e) {
          const t = this.form.get(e.path);
          re(t, e), t.updateValueAndValidity({ emitEvent: !1 });
        }
        removeFormGroup(e) {}
        getFormGroup(e) {
          return this.form.get(e.path);
        }
        addFormArray(e) {
          const t = this.form.get(e.path);
          re(t, e), t.updateValueAndValidity({ emitEvent: !1 });
        }
        removeFormArray(e) {}
        getFormArray(e) {
          return this.form.get(e.path);
        }
        updateModel(e, t) {
          this.form.get(e.path).setValue(t);
        }
        onSubmit(e) {
          return (
            (this.submitted = !0),
            le(this.form, this.directives),
            this.ngSubmit.emit(e),
            !1
          );
        }
        onReset() {
          this.resetForm();
        }
        resetForm(e) {
          this.form.reset(e), (this.submitted = !1);
        }
        _updateDomValue() {
          this.directives.forEach((e) => {
            const t = this.form.get(e.path);
            e.control !== t &&
              (ee(e.control || null, e), t && Z(t, e), (e.control = t));
          }),
            this.form._updateTreeValidity({ emitEvent: !1 });
        }
        _updateRegistrations() {
          this.form._registerOnCollectionChange(() => this._updateDomValue()),
            this._oldForm &&
              this._oldForm._registerOnCollectionChange(() => {});
        }
        _updateValidators() {
          ne(this.form, this, !1), this._oldForm && se(this._oldForm, this, !1);
        }
        _checkFormPresent() {
          this.form, 0;
        }
      }
      (Be.ɵfac = function (e) {
        return new (e || Be)(s.Mc(g, 10), s.Mc(y, 10));
      }),
        (Be.ɵdir = s.Hc({
          type: Be,
          selectors: [["", "formGroup", ""]],
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("submit", function (e) {
                return t.onSubmit(e);
              })("reset", function () {
                return t.onReset();
              });
          },
          inputs: { form: ["formGroup", "form"] },
          outputs: { ngSubmit: "ngSubmit" },
          exportAs: ["ngForm"],
          features: [s.yc([Ve]), s.wc, s.xc],
        })),
        (Be.ctorParameters = () => [
          {
            type: Array,
            decorators: [
              { type: s.R },
              { type: s.db },
              { type: s.C, args: [g] },
            ],
          },
          {
            type: Array,
            decorators: [
              { type: s.R },
              { type: s.db },
              { type: s.C, args: [y] },
            ],
          },
        ]),
        (Be.propDecorators = {
          form: [{ type: s.G, args: ["formGroup"] }],
          ngSubmit: [{ type: s.S }],
        });
      const ze = { provide: D, useExisting: Object(s.sb)(() => He) };
      class He extends Ie {
        constructor(e, t, n) {
          super(),
            (this._parent = e),
            this._setValidators(t),
            this._setAsyncValidators(n);
        }
        _checkParentType() {
          $e(this._parent), 0;
        }
      }
      (He.ɵfac = function (e) {
        return new (e || He)(s.Mc(D, 13), s.Mc(g, 10), s.Mc(y, 10));
      }),
        (He.ɵdir = s.Hc({
          type: He,
          selectors: [["", "formGroupName", ""]],
          inputs: { name: ["formGroupName", "name"] },
          features: [s.yc([ze]), s.wc],
        })),
        (He.ctorParameters = () => [
          {
            type: D,
            decorators: [{ type: s.R }, { type: s.y }, { type: s.eb }],
          },
          {
            type: Array,
            decorators: [
              { type: s.R },
              { type: s.db },
              { type: s.C, args: [g] },
            ],
          },
          {
            type: Array,
            decorators: [
              { type: s.R },
              { type: s.db },
              { type: s.C, args: [y] },
            ],
          },
        ]),
        (He.propDecorators = {
          name: [{ type: s.G, args: ["formGroupName"] }],
        });
      const Ge = { provide: D, useExisting: Object(s.sb)(() => Ue) };
      class Ue extends D {
        constructor(e, t, n) {
          super(),
            (this._parent = e),
            this._setValidators(t),
            this._setAsyncValidators(n);
        }
        ngOnInit() {
          this._checkParentType(), this.formDirective.addFormArray(this);
        }
        ngOnDestroy() {
          this.formDirective && this.formDirective.removeFormArray(this);
        }
        get control() {
          return this.formDirective.getFormArray(this);
        }
        get formDirective() {
          return this._parent ? this._parent.formDirective : null;
        }
        get path() {
          return X(
            null == this.name ? this.name : this.name.toString(),
            this._parent
          );
        }
        _checkParentType() {
          $e(this._parent), 0;
        }
      }
      function $e(e) {
        return !(e instanceof He || e instanceof Be || e instanceof Ue);
      }
      (Ue.ɵfac = function (e) {
        return new (e || Ue)(s.Mc(D, 13), s.Mc(g, 10), s.Mc(y, 10));
      }),
        (Ue.ɵdir = s.Hc({
          type: Ue,
          selectors: [["", "formArrayName", ""]],
          inputs: { name: ["formArrayName", "name"] },
          features: [s.yc([Ge]), s.wc],
        })),
        (Ue.ctorParameters = () => [
          {
            type: D,
            decorators: [{ type: s.R }, { type: s.y }, { type: s.eb }],
          },
          {
            type: Array,
            decorators: [
              { type: s.R },
              { type: s.db },
              { type: s.C, args: [g] },
            ],
          },
          {
            type: Array,
            decorators: [
              { type: s.R },
              { type: s.db },
              { type: s.C, args: [y] },
            ],
          },
        ]),
        (Ue.propDecorators = {
          name: [{ type: s.G, args: ["formArrayName"] }],
        });
      const qe = { provide: P, useExisting: Object(s.sb)(() => We) };
      class We extends P {
        constructor(e, t, n, i, r) {
          super(),
            (this._ngModelWarningConfig = r),
            (this._added = !1),
            (this.update = new s.x()),
            (this._ngModelWarningSent = !1),
            (this._parent = e),
            this._setValidators(t),
            this._setAsyncValidators(n),
            (this.valueAccessor = ce(0, i));
        }
        set isDisabled(e) {
          0;
        }
        ngOnChanges(e) {
          this._added || this._setUpControl(),
            oe(e, this.viewModel) &&
              (de(0, We, this, this._ngModelWarningConfig),
              (this.viewModel = this.model),
              this.formDirective.updateModel(this, this.model));
        }
        ngOnDestroy() {
          this.formDirective && this.formDirective.removeControl(this);
        }
        viewToModelUpdate(e) {
          (this.viewModel = e), this.update.emit(e);
        }
        get path() {
          return X(
            null == this.name ? this.name : this.name.toString(),
            this._parent
          );
        }
        get formDirective() {
          return this._parent ? this._parent.formDirective : null;
        }
        _checkParentType() {
          0;
        }
        _setUpControl() {
          this._checkParentType(),
            (this.control = this.formDirective.addControl(this)),
            this.control.disabled &&
              this.valueAccessor.setDisabledState &&
              this.valueAccessor.setDisabledState(!0),
            (this._added = !0);
        }
      }
      (We.ɵfac = function (e) {
        return new (e || We)(
          s.Mc(D, 13),
          s.Mc(g, 10),
          s.Mc(y, 10),
          s.Mc(l, 10),
          s.Mc(Ne, 8)
        );
      }),
        (We.ɵdir = s.Hc({
          type: We,
          selectors: [["", "formControlName", ""]],
          inputs: {
            isDisabled: ["disabled", "isDisabled"],
            name: ["formControlName", "name"],
            model: ["ngModel", "model"],
          },
          outputs: { update: "ngModelChange" },
          features: [s.yc([qe]), s.wc, s.xc],
        })),
        (We._ngModelWarningSentOnce = !1),
        (We.ctorParameters = () => [
          {
            type: D,
            decorators: [{ type: s.R }, { type: s.y }, { type: s.eb }],
          },
          {
            type: Array,
            decorators: [
              { type: s.R },
              { type: s.db },
              { type: s.C, args: [g] },
            ],
          },
          {
            type: Array,
            decorators: [
              { type: s.R },
              { type: s.db },
              { type: s.C, args: [y] },
            ],
          },
          {
            type: Array,
            decorators: [
              { type: s.R },
              { type: s.db },
              { type: s.C, args: [l] },
            ],
          },
          {
            type: String,
            decorators: [{ type: s.R }, { type: s.C, args: [Ne] }],
          },
        ]),
        (We.propDecorators = {
          name: [{ type: s.G, args: ["formControlName"] }],
          isDisabled: [{ type: s.G, args: ["disabled"] }],
          model: [{ type: s.G, args: ["ngModel"] }],
          update: [{ type: s.S, args: ["ngModelChange"] }],
        });
      const Ye = { provide: g, useExisting: Object(s.sb)(() => Ke), multi: !0 },
        Qe = { provide: g, useExisting: Object(s.sb)(() => Je), multi: !0 };
      class Ke {
        constructor() {
          this._required = !1;
        }
        get required() {
          return this._required;
        }
        set required(e) {
          (this._required = null != e && !1 !== e && "" + e != "false"),
            this._onChange && this._onChange();
        }
        validate(e) {
          return this.required ? b.required(e) : null;
        }
        registerOnValidatorChange(e) {
          this._onChange = e;
        }
      }
      (Ke.ɵfac = function (e) {
        return new (e || Ke)();
      }),
        (Ke.ɵdir = s.Hc({
          type: Ke,
          selectors: [
            ["", "required", "", "formControlName", "", 3, "type", "checkbox"],
            ["", "required", "", "formControl", "", 3, "type", "checkbox"],
            ["", "required", "", "ngModel", "", 3, "type", "checkbox"],
          ],
          hostVars: 1,
          hostBindings: function (e, t) {
            2 & e && s.Ac("required", t.required ? "" : null);
          },
          inputs: { required: "required" },
          features: [s.yc([Ye])],
        })),
        (Ke.propDecorators = { required: [{ type: s.G }] });
      class Je extends Ke {
        validate(e) {
          return this.required ? b.requiredTrue(e) : null;
        }
      }
      (Je.ɵfac = function (e) {
        return Xe(e || Je);
      }),
        (Je.ɵdir = s.Hc({
          type: Je,
          selectors: [
            [
              "input",
              "type",
              "checkbox",
              "required",
              "",
              "formControlName",
              "",
            ],
            ["input", "type", "checkbox", "required", "", "formControl", ""],
            ["input", "type", "checkbox", "required", "", "ngModel", ""],
          ],
          hostVars: 1,
          hostBindings: function (e, t) {
            2 & e && s.Ac("required", t.required ? "" : null);
          },
          features: [s.yc([Qe]), s.wc],
        }));
      const Xe = s.Tc(Je),
        Ze = { provide: g, useExisting: Object(s.sb)(() => et), multi: !0 };
      class et {
        constructor() {
          this._enabled = !1;
        }
        set email(e) {
          (this._enabled = "" === e || !0 === e || "true" === e),
            this._onChange && this._onChange();
        }
        validate(e) {
          return this._enabled ? b.email(e) : null;
        }
        registerOnValidatorChange(e) {
          this._onChange = e;
        }
      }
      (et.ɵfac = function (e) {
        return new (e || et)();
      }),
        (et.ɵdir = s.Hc({
          type: et,
          selectors: [
            ["", "email", "", "formControlName", ""],
            ["", "email", "", "formControl", ""],
            ["", "email", "", "ngModel", ""],
          ],
          inputs: { email: "email" },
          features: [s.yc([Ze])],
        })),
        (et.propDecorators = { email: [{ type: s.G }] });
      const tt = { provide: g, useExisting: Object(s.sb)(() => nt), multi: !0 };
      class nt {
        constructor() {
          this._validator = b.nullValidator;
        }
        ngOnChanges(e) {
          "minlength" in e &&
            (this._createValidator(), this._onChange && this._onChange());
        }
        validate(e) {
          return null == this.minlength ? null : this._validator(e);
        }
        registerOnValidatorChange(e) {
          this._onChange = e;
        }
        _createValidator() {
          this._validator = b.minLength(
            "number" == typeof this.minlength
              ? this.minlength
              : parseInt(this.minlength, 10)
          );
        }
      }
      (nt.ɵfac = function (e) {
        return new (e || nt)();
      }),
        (nt.ɵdir = s.Hc({
          type: nt,
          selectors: [
            ["", "minlength", "", "formControlName", ""],
            ["", "minlength", "", "formControl", ""],
            ["", "minlength", "", "ngModel", ""],
          ],
          hostVars: 1,
          hostBindings: function (e, t) {
            2 & e && s.Ac("minlength", t.minlength ? t.minlength : null);
          },
          inputs: { minlength: "minlength" },
          features: [s.yc([tt]), s.xc],
        })),
        (nt.propDecorators = { minlength: [{ type: s.G }] });
      const st = { provide: g, useExisting: Object(s.sb)(() => it), multi: !0 };
      class it {
        constructor() {
          this._validator = b.nullValidator;
        }
        ngOnChanges(e) {
          "maxlength" in e &&
            (this._createValidator(), this._onChange && this._onChange());
        }
        validate(e) {
          return null != this.maxlength ? this._validator(e) : null;
        }
        registerOnValidatorChange(e) {
          this._onChange = e;
        }
        _createValidator() {
          this._validator = b.maxLength(
            "number" == typeof this.maxlength
              ? this.maxlength
              : parseInt(this.maxlength, 10)
          );
        }
      }
      (it.ɵfac = function (e) {
        return new (e || it)();
      }),
        (it.ɵdir = s.Hc({
          type: it,
          selectors: [
            ["", "maxlength", "", "formControlName", ""],
            ["", "maxlength", "", "formControl", ""],
            ["", "maxlength", "", "ngModel", ""],
          ],
          hostVars: 1,
          hostBindings: function (e, t) {
            2 & e && s.Ac("maxlength", t.maxlength ? t.maxlength : null);
          },
          inputs: { maxlength: "maxlength" },
          features: [s.yc([st]), s.xc],
        })),
        (it.propDecorators = { maxlength: [{ type: s.G }] });
      const rt = { provide: g, useExisting: Object(s.sb)(() => ot), multi: !0 };
      class ot {
        constructor() {
          this._validator = b.nullValidator;
        }
        ngOnChanges(e) {
          "pattern" in e &&
            (this._createValidator(), this._onChange && this._onChange());
        }
        validate(e) {
          return this._validator(e);
        }
        registerOnValidatorChange(e) {
          this._onChange = e;
        }
        _createValidator() {
          this._validator = b.pattern(this.pattern);
        }
      }
      (ot.ɵfac = function (e) {
        return new (e || ot)();
      }),
        (ot.ɵdir = s.Hc({
          type: ot,
          selectors: [
            ["", "pattern", "", "formControlName", ""],
            ["", "pattern", "", "formControl", ""],
            ["", "pattern", "", "ngModel", ""],
          ],
          hostVars: 1,
          hostBindings: function (e, t) {
            2 & e && s.Ac("pattern", t.pattern ? t.pattern : null);
          },
          inputs: { pattern: "pattern" },
          features: [s.yc([rt]), s.xc],
        })),
        (ot.propDecorators = { pattern: [{ type: s.G }] });
      class at {}
      (at.ɵmod = s.Kc({ type: at })),
        (at.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || at)();
          },
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(at, {
            declarations: [
              je,
              W,
              J,
              p,
              L,
              G,
              u,
              q,
              K,
              z,
              j,
              N,
              Ke,
              nt,
              it,
              ot,
              Je,
              et,
            ],
            exports: [
              je,
              W,
              J,
              p,
              L,
              G,
              u,
              q,
              K,
              z,
              j,
              N,
              Ke,
              nt,
              it,
              ot,
              Je,
              et,
            ],
          });
      class lt {
        group(e, t = null) {
          const n = this._reduceControls(e);
          let s = null,
            i = null,
            r = void 0;
          return (
            null != t &&
              (!(function (e) {
                return (
                  void 0 !== e.asyncValidators ||
                  void 0 !== e.validators ||
                  void 0 !== e.updateOn
                );
              })(t)
                ? ((s = null != t.validator ? t.validator : null),
                  (i = null != t.asyncValidator ? t.asyncValidator : null))
                : ((s = null != t.validators ? t.validators : null),
                  (i = null != t.asyncValidators ? t.asyncValidators : null),
                  (r = null != t.updateOn ? t.updateOn : void 0))),
            new Ce(n, { asyncValidators: i, updateOn: r, validators: s })
          );
        }
        control(e, t, n) {
          return new we(e, t, n);
        }
        array(e, t, n) {
          const s = e.map((e) => this._createControl(e));
          return new Se(s, t, n);
        }
        _reduceControls(e) {
          const t = {};
          return (
            Object.keys(e).forEach((n) => {
              t[n] = this._createControl(e[n]);
            }),
            t
          );
        }
        _createControl(e) {
          if (e instanceof we || e instanceof Ce || e instanceof Se) return e;
          if (Array.isArray(e)) {
            const t = e[0],
              n = e.length > 1 ? e[1] : null,
              s = e.length > 2 ? e[2] : null;
            return this.control(t, n, s);
          }
          return this.control(e);
        }
      }
      (lt.ɵfac = function (e) {
        return new (e || lt)();
      }),
        (lt.ɵprov = s.Ic({ token: lt, factory: lt.ɵfac }));
      new s.lb("11.0.2");
      class ct {}
      (ct.ɵmod = s.Kc({ type: ct })),
        (ct.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || ct)();
          },
          providers: [B],
          imports: [at],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(ct, { declarations: [Re, De, Oe], exports: [at, Re, De, Oe] });
      class ut {
        static withConfig(e) {
          return {
            ngModule: ut,
            providers: [
              { provide: Ne, useValue: e.warnOnNgModelWithFormControl },
            ],
          };
        }
      }
      (ut.ɵmod = s.Kc({ type: ut })),
        (ut.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || ut)();
          },
          providers: [lt, B],
          imports: [at],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(ut, {
            declarations: [Le, Be, We, He, Ue],
            exports: [at, Le, Be, We, He, Ue],
          });
    },
    "3UWI": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return l;
      });
      var s = n("D0XW"),
        i = n("zx2A");
      class r {
        constructor(e) {
          this.durationSelector = e;
        }
        call(e, t) {
          return t.subscribe(new o(e, this.durationSelector));
        }
      }
      class o extends i.b {
        constructor(e, t) {
          super(e), (this.durationSelector = t), (this.hasValue = !1);
        }
        _next(e) {
          if (((this.value = e), (this.hasValue = !0), !this.throttled)) {
            let n;
            try {
              const { durationSelector: t } = this;
              n = t(e);
            } catch (t) {
              return this.destination.error(t);
            }
            const s = Object(i.c)(n, new i.a(this));
            !s || s.closed
              ? this.clearThrottle()
              : this.add((this.throttled = s));
          }
        }
        clearThrottle() {
          const { value: e, hasValue: t, throttled: n } = this;
          n && (this.remove(n), (this.throttled = void 0), n.unsubscribe()),
            t &&
              ((this.value = void 0),
              (this.hasValue = !1),
              this.destination.next(e));
        }
        notifyNext() {
          this.clearThrottle();
        }
        notifyComplete() {
          this.clearThrottle();
        }
      }
      var a = n("PqYM");
      function l(e, t = s.a) {
        return (
          (n = () => Object(a.a)(e, t)),
          function (e) {
            return e.lift(new r(n));
          }
        );
        var n;
      }
    },
    "4I5i": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      const s = (() => {
        function e() {
          return (
            Error.call(this),
            (this.message = "argument out of range"),
            (this.name = "ArgumentOutOfRangeError"),
            this
          );
        }
        return (e.prototype = Object.create(Error.prototype)), e;
      })();
    },
    "5+tZ": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var s = n("lJxs"),
        i = n("Cfvw"),
        r = n("zx2A");
      function o(e, t, n = Number.POSITIVE_INFINITY) {
        return "function" == typeof t
          ? (r) =>
              r.pipe(
                o(
                  (n, r) =>
                    Object(i.a)(e(n, r)).pipe(
                      Object(s.a)((e, s) => t(n, e, r, s))
                    ),
                  n
                )
              )
          : ("number" == typeof t && (n = t), (t) => t.lift(new a(e, n)));
      }
      class a {
        constructor(e, t = Number.POSITIVE_INFINITY) {
          (this.project = e), (this.concurrent = t);
        }
        call(e, t) {
          return t.subscribe(new l(e, this.project, this.concurrent));
        }
      }
      class l extends r.b {
        constructor(e, t, n = Number.POSITIVE_INFINITY) {
          super(e),
            (this.project = t),
            (this.concurrent = n),
            (this.hasCompleted = !1),
            (this.buffer = []),
            (this.active = 0),
            (this.index = 0);
        }
        _next(e) {
          this.active < this.concurrent
            ? this._tryNext(e)
            : this.buffer.push(e);
        }
        _tryNext(e) {
          let t;
          const n = this.index++;
          try {
            t = this.project(e, n);
          } catch (s) {
            return void this.destination.error(s);
          }
          this.active++, this._innerSub(t);
        }
        _innerSub(e) {
          const t = new r.a(this),
            n = this.destination;
          n.add(t);
          const s = Object(r.c)(e, t);
          s !== t && n.add(s);
        }
        _complete() {
          (this.hasCompleted = !0),
            0 === this.active &&
              0 === this.buffer.length &&
              this.destination.complete(),
            this.unsubscribe();
        }
        notifyNext(e) {
          this.destination.next(e);
        }
        notifyComplete() {
          const e = this.buffer;
          this.active--,
            e.length > 0
              ? this._next(e.shift())
              : 0 === this.active &&
                this.hasCompleted &&
                this.destination.complete();
        }
      }
    },
    "7+OI": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      var s = n("HDdC");
      function i(e) {
        return (
          !!e &&
          (e instanceof s.a ||
            ("function" == typeof e.lift && "function" == typeof e.subscribe))
        );
      }
    },
    "7EHt": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return q;
      });
      var s = n("fXoL"),
        i = n("0EQZ"),
        r = n("8LU1"),
        o = n("XNiG"),
        a = n("quSY");
      let l = 0;
      const c = new s.E("CdkAccordion");
      class u {
        constructor() {
          (this._stateChanges = new o.a()),
            (this._openCloseAllActions = new o.a()),
            (this.id = "cdk-accordion-" + l++),
            (this._multi = !1);
        }
        get multi() {
          return this._multi;
        }
        set multi(e) {
          this._multi = Object(r.b)(e);
        }
        openAll() {
          this._openCloseAll(!0);
        }
        closeAll() {
          this._openCloseAll(!1);
        }
        ngOnChanges(e) {
          this._stateChanges.next(e);
        }
        ngOnDestroy() {
          this._stateChanges.complete();
        }
        _openCloseAll(e) {
          this.multi && this._openCloseAllActions.next(e);
        }
      }
      (u.ɵfac = function (e) {
        return new (e || u)();
      }),
        (u.ɵdir = s.Hc({
          type: u,
          selectors: [["cdk-accordion"], ["", "cdkAccordion", ""]],
          inputs: { multi: "multi" },
          exportAs: ["cdkAccordion"],
          features: [s.yc([{ provide: c, useExisting: u }]), s.xc],
        })),
        (u.propDecorators = { multi: [{ type: s.G }] });
      let d = 0;
      const h = void 0;
      class p {
        constructor(e, t, n) {
          (this.accordion = e),
            (this._changeDetectorRef = t),
            (this._expansionDispatcher = n),
            (this._openCloseAllSubscription = a.a.EMPTY),
            (this.closed = new s.x()),
            (this.opened = new s.x()),
            (this.destroyed = new s.x()),
            (this.expandedChange = new s.x()),
            (this.id = "cdk-accordion-child-" + d++),
            (this._expanded = !1),
            (this._disabled = !1),
            (this._removeUniqueSelectionListener = () => {}),
            (this._removeUniqueSelectionListener = n.listen((e, t) => {
              this.accordion &&
                !this.accordion.multi &&
                this.accordion.id === t &&
                this.id !== e &&
                (this.expanded = !1);
            })),
            this.accordion &&
              (this._openCloseAllSubscription =
                this._subscribeToOpenCloseAllActions());
        }
        get expanded() {
          return this._expanded;
        }
        set expanded(e) {
          if (((e = Object(r.b)(e)), this._expanded !== e)) {
            if (((this._expanded = e), this.expandedChange.emit(e), e)) {
              this.opened.emit();
              const e = this.accordion ? this.accordion.id : this.id;
              this._expansionDispatcher.notify(this.id, e);
            } else this.closed.emit();
            this._changeDetectorRef.markForCheck();
          }
        }
        get disabled() {
          return this._disabled;
        }
        set disabled(e) {
          this._disabled = Object(r.b)(e);
        }
        ngOnDestroy() {
          this.opened.complete(),
            this.closed.complete(),
            this.destroyed.emit(),
            this.destroyed.complete(),
            this._removeUniqueSelectionListener(),
            this._openCloseAllSubscription.unsubscribe();
        }
        toggle() {
          this.disabled || (this.expanded = !this.expanded);
        }
        close() {
          this.disabled || (this.expanded = !1);
        }
        open() {
          this.disabled || (this.expanded = !0);
        }
        _subscribeToOpenCloseAllActions() {
          return this.accordion._openCloseAllActions.subscribe((e) => {
            this.disabled || (this.expanded = e);
          });
        }
      }
      (p.ɵfac = function (e) {
        return new (e || p)(s.Mc(c, 12), s.Mc(s.k), s.Mc(i.c));
      }),
        (p.ɵdir = s.Hc({
          type: p,
          selectors: [["cdk-accordion-item"], ["", "cdkAccordionItem", ""]],
          inputs: { expanded: "expanded", disabled: "disabled" },
          outputs: {
            closed: "closed",
            opened: "opened",
            destroyed: "destroyed",
            expandedChange: "expandedChange",
          },
          exportAs: ["cdkAccordionItem"],
          features: [s.yc([{ provide: c, useValue: h }])],
        })),
        (p.ctorParameters = () => [
          {
            type: u,
            decorators: [
              { type: s.R },
              { type: s.C, args: [c] },
              { type: s.eb },
            ],
          },
          { type: s.k },
          { type: i.c },
        ]),
        (p.propDecorators = {
          closed: [{ type: s.S }],
          opened: [{ type: s.S }],
          destroyed: [{ type: s.S }],
          expandedChange: [{ type: s.S }],
          expanded: [{ type: s.G }],
          disabled: [{ type: s.G }],
        });
      class m {}
      (m.ɵmod = s.Kc({ type: m })),
        (m.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || m)();
          },
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(m, { declarations: [u, p], exports: [u, p] });
      var f = n("+rOU"),
        g = n("ofXK"),
        y = n("u47x"),
        v = n("/uUt"),
        b = n("JX91"),
        x = n("pLZG"),
        _ = n("IzEk"),
        w = n("FtGj"),
        C = n("R1ws"),
        S = n("EY2u"),
        E = n("VRyK"),
        k = n("R0Ic");
      const O = ["body"];
      function I(e, t) {}
      const T = [[["mat-expansion-panel-header"]], "*", [["mat-action-row"]]];
      function A(e, t) {
        if ((1 & e && s.Nc(0, "span", 2), 2 & e)) {
          const e = s.gd();
          s.ld("@indicatorRotate", e._getExpandedState());
        }
      }
      const D = [[["mat-panel-title"]], [["mat-panel-description"]], "*"],
        M = new s.E("MAT_ACCORDION"),
        P = "225ms cubic-bezier(0.4,0.0,0.2,1)",
        R = {
          indicatorRotate: Object(k.n)("indicatorRotate", [
            Object(k.k)(
              "collapsed, void",
              Object(k.l)({ transform: "rotate(0deg)" })
            ),
            Object(k.k)(
              "expanded",
              Object(k.l)({ transform: "rotate(180deg)" })
            ),
            Object(k.m)(
              "expanded <=> collapsed, void => collapsed",
              Object(k.e)(P)
            ),
          ]),
          bodyExpansion: Object(k.n)("bodyExpansion", [
            Object(k.k)(
              "collapsed, void",
              Object(k.l)({ height: "0px", visibility: "hidden" })
            ),
            Object(k.k)(
              "expanded",
              Object(k.l)({ height: "*", visibility: "visible" })
            ),
            Object(k.m)(
              "expanded <=> collapsed, void => collapsed",
              Object(k.e)(P)
            ),
          ]),
        };
      class j {
        constructor(e) {
          this._template = e;
        }
      }
      (j.ɵfac = function (e) {
        return new (e || j)(s.Mc(s.ib));
      }),
        (j.ɵdir = s.Hc({
          type: j,
          selectors: [["ng-template", "matExpansionPanelContent", ""]],
        })),
        (j.ctorParameters = () => [{ type: s.ib }]);
      let N = 0;
      const F = new s.E("MAT_EXPANSION_PANEL_DEFAULT_OPTIONS"),
        L = void 0;
      class V extends p {
        constructor(e, t, n, i, r, a, l) {
          super(e, t, n),
            (this._viewContainerRef = i),
            (this._animationMode = a),
            (this._hideToggle = !1),
            (this.afterExpand = new s.x()),
            (this.afterCollapse = new s.x()),
            (this._inputChanges = new o.a()),
            (this._headerId = "mat-expansion-panel-header-" + N++),
            (this._bodyAnimationDone = new o.a()),
            (this.accordion = e),
            (this._document = r),
            this._bodyAnimationDone
              .pipe(
                Object(v.a)(
                  (e, t) =>
                    e.fromState === t.fromState && e.toState === t.toState
                )
              )
              .subscribe((e) => {
                "void" !== e.fromState &&
                  ("expanded" === e.toState
                    ? this.afterExpand.emit()
                    : "collapsed" === e.toState && this.afterCollapse.emit());
              }),
            l && (this.hideToggle = l.hideToggle);
        }
        get hideToggle() {
          return (
            this._hideToggle || (this.accordion && this.accordion.hideToggle)
          );
        }
        set hideToggle(e) {
          this._hideToggle = Object(r.b)(e);
        }
        get togglePosition() {
          return (
            this._togglePosition ||
            (this.accordion && this.accordion.togglePosition)
          );
        }
        set togglePosition(e) {
          this._togglePosition = e;
        }
        _hasSpacing() {
          return (
            !!this.accordion &&
            this.expanded &&
            "default" === this.accordion.displayMode
          );
        }
        _getExpandedState() {
          return this.expanded ? "expanded" : "collapsed";
        }
        toggle() {
          this.expanded = !this.expanded;
        }
        close() {
          this.expanded = !1;
        }
        open() {
          this.expanded = !0;
        }
        ngAfterContentInit() {
          this._lazyContent &&
            this.opened
              .pipe(
                Object(b.a)(null),
                Object(x.a)(() => this.expanded && !this._portal),
                Object(_.a)(1)
              )
              .subscribe(() => {
                this._portal = new f.f(
                  this._lazyContent._template,
                  this._viewContainerRef
                );
              });
        }
        ngOnChanges(e) {
          this._inputChanges.next(e);
        }
        ngOnDestroy() {
          super.ngOnDestroy(),
            this._bodyAnimationDone.complete(),
            this._inputChanges.complete();
        }
        _containsFocus() {
          if (this._body) {
            const e = this._document.activeElement,
              t = this._body.nativeElement;
            return e === t || t.contains(e);
          }
          return !1;
        }
      }
      (V.ɵfac = function (e) {
        return new (e || V)(
          s.Mc(M, 12),
          s.Mc(s.k),
          s.Mc(i.c),
          s.Mc(s.ob),
          s.Mc(g.c),
          s.Mc(C.a, 8),
          s.Mc(F, 8)
        );
      }),
        (V.ɵcmp = s.Gc({
          type: V,
          selectors: [["mat-expansion-panel"]],
          contentQueries: function (e, t, n) {
            if ((1 & e && s.Fc(n, j, !0), 2 & e)) {
              let e;
              s.sd((e = s.dd())) && (t._lazyContent = e.first);
            }
          },
          viewQuery: function (e, t) {
            if ((1 & e && s.Id(O, !0), 2 & e)) {
              let e;
              s.sd((e = s.dd())) && (t._body = e.first);
            }
          },
          hostAttrs: [1, "mat-expansion-panel"],
          hostVars: 6,
          hostBindings: function (e, t) {
            2 & e &&
              s.Ec("mat-expanded", t.expanded)(
                "_mat-animation-noopable",
                "NoopAnimations" === t._animationMode
              )("mat-expansion-panel-spacing", t._hasSpacing());
          },
          inputs: {
            disabled: "disabled",
            expanded: "expanded",
            hideToggle: "hideToggle",
            togglePosition: "togglePosition",
          },
          outputs: {
            opened: "opened",
            closed: "closed",
            expandedChange: "expandedChange",
            afterExpand: "afterExpand",
            afterCollapse: "afterCollapse",
          },
          exportAs: ["matExpansionPanel"],
          features: [s.yc([{ provide: M, useValue: L }]), s.wc, s.xc],
          ngContentSelectors: [
            "mat-expansion-panel-header",
            "*",
            "mat-action-row",
          ],
          decls: 7,
          vars: 4,
          consts: [
            ["role", "region", 1, "mat-expansion-panel-content", 3, "id"],
            ["body", ""],
            [1, "mat-expansion-panel-body"],
            [3, "cdkPortalOutlet"],
          ],
          template: function (e, t) {
            1 & e &&
              (s.kd(T),
              s.jd(0),
              s.Rc(1, "div", 0, 1),
              s.cd("@bodyExpansion.done", function (e) {
                return t._bodyAnimationDone.next(e);
              }),
              s.Rc(3, "div", 2),
              s.jd(4, 1),
              s.Cd(5, I, 0, 0, "ng-template", 3),
              s.Qc(),
              s.jd(6, 2),
              s.Qc()),
              2 & e &&
                (s.zc(1),
                s.ld("@bodyExpansion", t._getExpandedState())("id", t.id),
                s.Ac("aria-labelledby", t._headerId),
                s.zc(4),
                s.ld("cdkPortalOutlet", t._portal));
          },
          directives: [f.b],
          styles: [
            ".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\n",
          ],
          encapsulation: 2,
          data: { animation: [R.bodyExpansion] },
          changeDetection: 0,
        })),
        (V.ctorParameters = () => [
          {
            type: void 0,
            decorators: [
              { type: s.R },
              { type: s.eb },
              { type: s.C, args: [M] },
            ],
          },
          { type: s.k },
          { type: i.c },
          { type: s.ob },
          { type: void 0, decorators: [{ type: s.C, args: [g.c] }] },
          {
            type: String,
            decorators: [{ type: s.R }, { type: s.C, args: [C.a] }],
          },
          {
            type: void 0,
            decorators: [{ type: s.C, args: [F] }, { type: s.R }],
          },
        ]),
        (V.propDecorators = {
          hideToggle: [{ type: s.G }],
          togglePosition: [{ type: s.G }],
          afterExpand: [{ type: s.S }],
          afterCollapse: [{ type: s.S }],
          _lazyContent: [{ type: s.r, args: [j] }],
          _body: [{ type: s.mb, args: ["body"] }],
        });
      class B {}
      (B.ɵfac = function (e) {
        return new (e || B)();
      }),
        (B.ɵdir = s.Hc({
          type: B,
          selectors: [["mat-action-row"]],
          hostAttrs: [1, "mat-action-row"],
        }));
      class z {
        constructor(e, t, n, s, i, r) {
          (this.panel = e),
            (this._element = t),
            (this._focusMonitor = n),
            (this._changeDetectorRef = s),
            (this._animationMode = r),
            (this._parentChangeSubscription = a.a.EMPTY);
          const o = e.accordion
            ? e.accordion._stateChanges.pipe(
                Object(x.a)((e) => !(!e.hideToggle && !e.togglePosition))
              )
            : S.a;
          (this._parentChangeSubscription = Object(E.a)(
            e.opened,
            e.closed,
            o,
            e._inputChanges.pipe(
              Object(x.a)(
                (e) => !!(e.hideToggle || e.disabled || e.togglePosition)
              )
            )
          ).subscribe(() => this._changeDetectorRef.markForCheck())),
            e.closed
              .pipe(Object(x.a)(() => e._containsFocus()))
              .subscribe(() => n.focusVia(t, "program")),
            i &&
              ((this.expandedHeight = i.expandedHeight),
              (this.collapsedHeight = i.collapsedHeight));
        }
        get disabled() {
          return this.panel.disabled;
        }
        _toggle() {
          this.disabled || this.panel.toggle();
        }
        _isExpanded() {
          return this.panel.expanded;
        }
        _getExpandedState() {
          return this.panel._getExpandedState();
        }
        _getPanelId() {
          return this.panel.id;
        }
        _getTogglePosition() {
          return this.panel.togglePosition;
        }
        _showToggle() {
          return !this.panel.hideToggle && !this.panel.disabled;
        }
        _getHeaderHeight() {
          const e = this._isExpanded();
          return e && this.expandedHeight
            ? this.expandedHeight
            : !e && this.collapsedHeight
            ? this.collapsedHeight
            : null;
        }
        _keydown(e) {
          switch (e.keyCode) {
            case w.j:
            case w.d:
              Object(w.o)(e) || (e.preventDefault(), this._toggle());
              break;
            default:
              return void (
                this.panel.accordion &&
                this.panel.accordion._handleHeaderKeydown(e)
              );
          }
        }
        focus(e = "program", t) {
          this._focusMonitor.focusVia(this._element, e, t);
        }
        ngAfterViewInit() {
          this._focusMonitor.monitor(this._element).subscribe((e) => {
            e &&
              this.panel.accordion &&
              this.panel.accordion._handleHeaderFocus(this);
          });
        }
        ngOnDestroy() {
          this._parentChangeSubscription.unsubscribe(),
            this._focusMonitor.stopMonitoring(this._element);
        }
      }
      (z.ɵfac = function (e) {
        return new (e || z)(
          s.Mc(V, 1),
          s.Mc(s.v),
          s.Mc(y.c),
          s.Mc(s.k),
          s.Mc(F, 8),
          s.Mc(C.a, 8)
        );
      }),
        (z.ɵcmp = s.Gc({
          type: z,
          selectors: [["mat-expansion-panel-header"]],
          hostAttrs: [
            "role",
            "button",
            1,
            "mat-expansion-panel-header",
            "mat-focus-indicator",
          ],
          hostVars: 15,
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("click", function () {
                return t._toggle();
              })("keydown", function (e) {
                return t._keydown(e);
              }),
              2 & e &&
                (s.Ac("id", t.panel._headerId)("tabindex", t.disabled ? -1 : 0)(
                  "aria-controls",
                  t._getPanelId()
                )("aria-expanded", t._isExpanded())(
                  "aria-disabled",
                  t.panel.disabled
                ),
                s.zd("height", t._getHeaderHeight()),
                s.Ec("mat-expanded", t._isExpanded())(
                  "mat-expansion-toggle-indicator-after",
                  "after" === t._getTogglePosition()
                )(
                  "mat-expansion-toggle-indicator-before",
                  "before" === t._getTogglePosition()
                )(
                  "_mat-animation-noopable",
                  "NoopAnimations" === t._animationMode
                ));
          },
          inputs: {
            expandedHeight: "expandedHeight",
            collapsedHeight: "collapsedHeight",
          },
          ngContentSelectors: ["mat-panel-title", "mat-panel-description", "*"],
          decls: 5,
          vars: 1,
          consts: [
            [1, "mat-content"],
            ["class", "mat-expansion-indicator", 4, "ngIf"],
            [1, "mat-expansion-indicator"],
          ],
          template: function (e, t) {
            1 & e &&
              (s.kd(D),
              s.Rc(0, "span", 0),
              s.jd(1),
              s.jd(2, 1),
              s.jd(3, 2),
              s.Qc(),
              s.Cd(4, A, 1, 1, "span", 1)),
              2 & e && (s.zc(4), s.ld("ngIf", t._showToggle()));
          },
          directives: [g.k],
          styles: [
            '.mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:"";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\n',
          ],
          encapsulation: 2,
          data: { animation: [R.indicatorRotate] },
          changeDetection: 0,
        })),
        (z.ctorParameters = () => [
          { type: V, decorators: [{ type: s.y }] },
          { type: s.v },
          { type: y.c },
          { type: s.k },
          {
            type: void 0,
            decorators: [{ type: s.C, args: [F] }, { type: s.R }],
          },
          {
            type: String,
            decorators: [{ type: s.R }, { type: s.C, args: [C.a] }],
          },
        ]),
        (z.propDecorators = {
          expandedHeight: [{ type: s.G }],
          collapsedHeight: [{ type: s.G }],
        });
      class H {}
      (H.ɵfac = function (e) {
        return new (e || H)();
      }),
        (H.ɵdir = s.Hc({
          type: H,
          selectors: [["mat-panel-description"]],
          hostAttrs: [1, "mat-expansion-panel-header-description"],
        }));
      class G {}
      (G.ɵfac = function (e) {
        return new (e || G)();
      }),
        (G.ɵdir = s.Hc({
          type: G,
          selectors: [["mat-panel-title"]],
          hostAttrs: [1, "mat-expansion-panel-header-title"],
        }));
      class U extends u {
        constructor() {
          super(...arguments),
            (this._ownHeaders = new s.X()),
            (this._hideToggle = !1),
            (this.displayMode = "default"),
            (this.togglePosition = "after");
        }
        get hideToggle() {
          return this._hideToggle;
        }
        set hideToggle(e) {
          this._hideToggle = Object(r.b)(e);
        }
        ngAfterContentInit() {
          this._headers.changes
            .pipe(Object(b.a)(this._headers))
            .subscribe((e) => {
              this._ownHeaders.reset(
                e.filter((e) => e.panel.accordion === this)
              ),
                this._ownHeaders.notifyOnChanges();
            }),
            (this._keyManager = new y.b(this._ownHeaders)
              .withWrap()
              .withHomeAndEnd());
        }
        _handleHeaderKeydown(e) {
          this._keyManager.onKeydown(e);
        }
        _handleHeaderFocus(e) {
          this._keyManager.updateActiveItem(e);
        }
      }
      (U.ɵfac = function (e) {
        return $(e || U);
      }),
        (U.ɵdir = s.Hc({
          type: U,
          selectors: [["mat-accordion"]],
          contentQueries: function (e, t, n) {
            if ((1 & e && s.Fc(n, z, !0), 2 & e)) {
              let e;
              s.sd((e = s.dd())) && (t._headers = e);
            }
          },
          hostAttrs: [1, "mat-accordion"],
          hostVars: 2,
          hostBindings: function (e, t) {
            2 & e && s.Ec("mat-accordion-multi", t.multi);
          },
          inputs: {
            multi: "multi",
            displayMode: "displayMode",
            togglePosition: "togglePosition",
            hideToggle: "hideToggle",
          },
          exportAs: ["matAccordion"],
          features: [s.yc([{ provide: M, useExisting: U }]), s.wc],
        })),
        (U.propDecorators = {
          _headers: [{ type: s.s, args: [z, { descendants: !0 }] }],
          hideToggle: [{ type: s.G }],
          displayMode: [{ type: s.G }],
          togglePosition: [{ type: s.G }],
        });
      const $ = s.Tc(U);
      class q {}
      (q.ɵmod = s.Kc({ type: q })),
        (q.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || q)();
          },
          imports: [[g.b, m, f.e]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(q, {
            declarations: function () {
              return [U, V, B, z, G, H, j];
            },
            imports: function () {
              return [g.b, m, f.e];
            },
            exports: function () {
              return [U, V, B, z, G, H, j];
            },
          });
    },
    "7Hc7": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return h;
      });
      let s = 1;
      const i = Promise.resolve(),
        r = {};
      function o(e) {
        return e in r && (delete r[e], !0);
      }
      const a = {
        setImmediate(e) {
          const t = s++;
          return (r[t] = !0), i.then(() => o(t) && e()), t;
        },
        clearImmediate(e) {
          o(e);
        },
      };
      var l = n("3N8a");
      class c extends l.a {
        constructor(e, t) {
          super(e, t), (this.scheduler = e), (this.work = t);
        }
        requestAsyncId(e, t, n = 0) {
          return null !== n && n > 0
            ? super.requestAsyncId(e, t, n)
            : (e.actions.push(this),
              e.scheduled ||
                (e.scheduled = a.setImmediate(e.flush.bind(e, null))));
        }
        recycleAsyncId(e, t, n = 0) {
          if ((null !== n && n > 0) || (null === n && this.delay > 0))
            return super.recycleAsyncId(e, t, n);
          0 === e.actions.length &&
            (a.clearImmediate(t), (e.scheduled = void 0));
        }
      }
      var u = n("IjjT");
      class d extends u.a {
        flush(e) {
          (this.active = !0), (this.scheduled = void 0);
          const { actions: t } = this;
          let n,
            s = -1,
            i = t.length;
          e = e || t.shift();
          do {
            if ((n = e.execute(e.state, e.delay))) break;
          } while (++s < i && (e = t.shift()));
          if (((this.active = !1), n)) {
            for (; ++s < i && (e = t.shift()); ) e.unsubscribe();
            throw n;
          }
        }
      }
      const h = new d(c);
    },
    "7o/Q": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return c;
      });
      var s = n("n6bG"),
        i = n("gRHU"),
        r = n("quSY"),
        o = n("2QA8"),
        a = n("2fFW"),
        l = n("NJ4a");
      class c extends r.a {
        constructor(e, t, n) {
          switch (
            (super(),
            (this.syncErrorValue = null),
            (this.syncErrorThrown = !1),
            (this.syncErrorThrowable = !1),
            (this.isStopped = !1),
            arguments.length)
          ) {
            case 0:
              this.destination = i.a;
              break;
            case 1:
              if (!e) {
                this.destination = i.a;
                break;
              }
              if ("object" == typeof e) {
                e instanceof c
                  ? ((this.syncErrorThrowable = e.syncErrorThrowable),
                    (this.destination = e),
                    e.add(this))
                  : ((this.syncErrorThrowable = !0),
                    (this.destination = new u(this, e)));
                break;
              }
            default:
              (this.syncErrorThrowable = !0),
                (this.destination = new u(this, e, t, n));
          }
        }
        [o.a]() {
          return this;
        }
        static create(e, t, n) {
          const s = new c(e, t, n);
          return (s.syncErrorThrowable = !1), s;
        }
        next(e) {
          this.isStopped || this._next(e);
        }
        error(e) {
          this.isStopped || ((this.isStopped = !0), this._error(e));
        }
        complete() {
          this.isStopped || ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed || ((this.isStopped = !0), super.unsubscribe());
        }
        _next(e) {
          this.destination.next(e);
        }
        _error(e) {
          this.destination.error(e), this.unsubscribe();
        }
        _complete() {
          this.destination.complete(), this.unsubscribe();
        }
        _unsubscribeAndRecycle() {
          const { _parentOrParents: e } = this;
          return (
            (this._parentOrParents = null),
            this.unsubscribe(),
            (this.closed = !1),
            (this.isStopped = !1),
            (this._parentOrParents = e),
            this
          );
        }
      }
      class u extends c {
        constructor(e, t, n, r) {
          let o;
          super(), (this._parentSubscriber = e);
          let a = this;
          Object(s.a)(t)
            ? (o = t)
            : t &&
              ((o = t.next),
              (n = t.error),
              (r = t.complete),
              t !== i.a &&
                ((a = Object.create(t)),
                Object(s.a)(a.unsubscribe) && this.add(a.unsubscribe.bind(a)),
                (a.unsubscribe = this.unsubscribe.bind(this)))),
            (this._context = a),
            (this._next = o),
            (this._error = n),
            (this._complete = r);
        }
        next(e) {
          if (!this.isStopped && this._next) {
            const { _parentSubscriber: t } = this;
            a.a.useDeprecatedSynchronousErrorHandling && t.syncErrorThrowable
              ? this.__tryOrSetError(t, this._next, e) && this.unsubscribe()
              : this.__tryOrUnsub(this._next, e);
          }
        }
        error(e) {
          if (!this.isStopped) {
            const { _parentSubscriber: t } = this,
              { useDeprecatedSynchronousErrorHandling: n } = a.a;
            if (this._error)
              n && t.syncErrorThrowable
                ? (this.__tryOrSetError(t, this._error, e), this.unsubscribe())
                : (this.__tryOrUnsub(this._error, e), this.unsubscribe());
            else if (t.syncErrorThrowable)
              n
                ? ((t.syncErrorValue = e), (t.syncErrorThrown = !0))
                : Object(l.a)(e),
                this.unsubscribe();
            else {
              if ((this.unsubscribe(), n)) throw e;
              Object(l.a)(e);
            }
          }
        }
        complete() {
          if (!this.isStopped) {
            const { _parentSubscriber: e } = this;
            if (this._complete) {
              const t = () => this._complete.call(this._context);
              a.a.useDeprecatedSynchronousErrorHandling && e.syncErrorThrowable
                ? (this.__tryOrSetError(e, t), this.unsubscribe())
                : (this.__tryOrUnsub(t), this.unsubscribe());
            } else this.unsubscribe();
          }
        }
        __tryOrUnsub(e, t) {
          try {
            e.call(this._context, t);
          } catch (n) {
            if ((this.unsubscribe(), a.a.useDeprecatedSynchronousErrorHandling))
              throw n;
            Object(l.a)(n);
          }
        }
        __tryOrSetError(e, t, n) {
          if (!a.a.useDeprecatedSynchronousErrorHandling)
            throw new Error("bad call");
          try {
            t.call(this._context, n);
          } catch (s) {
            return a.a.useDeprecatedSynchronousErrorHandling
              ? ((e.syncErrorValue = s), (e.syncErrorThrown = !0), !0)
              : (Object(l.a)(s), !0);
          }
          return !1;
        }
        _unsubscribe() {
          const { _parentSubscriber: e } = this;
          (this._context = null),
            (this._parentSubscriber = null),
            e.unsubscribe();
        }
      }
    },
    "8LU1": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      }),
        n.d(t, "b", function () {
          return i;
        }),
        n.d(t, "c", function () {
          return a;
        }),
        n.d(t, "d", function () {
          return l;
        }),
        n.d(t, "e", function () {
          return r;
        });
      var s = n("fXoL");
      function i(e) {
        return null != e && "" + e != "false";
      }
      function r(e, t = 0) {
        return (function (e) {
          return !isNaN(parseFloat(e)) && !isNaN(Number(e));
        })(e)
          ? Number(e)
          : t;
      }
      function o(e) {
        return Array.isArray(e) ? e : [e];
      }
      function a(e) {
        return null == e ? "" : "string" == typeof e ? e : e + "px";
      }
      function l(e) {
        return e instanceof s.v ? e.nativeElement : e;
      }
    },
    "96hE": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return a;
      });
      var s = n("mrSG"),
        i = n("fXoL"),
        r = n("tyNb"),
        o = n("xKP8");
      let a = class {
        constructor(e, t) {
          (this.subscriptionService = e), (this.route = t), (this.token = "");
        }
        ngOnInit() {}
        continueAction() {
          this.route.navigate(["/home"]);
        }
      };
      (a.ctorParameters = () => [{ type: o.a }, { type: r.b }]),
        (a = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-registration-confirmation",
              template:
                '<div>\n    <div class="logoHeader">\n        <div class="logoWrapper">\n            <img loading="lazy" class="logo" src="assets/images/ei-mindspark-maroon.svg" alt="Ei Mindspark" />\n        </div>\n    </div>\n    <div class="successContainer">\n        <div class="successWrapper">\n            <div class="successImage">\n                <img src="assets/images/success.svg" alt="happy smiley">\n            </div>\n            <br>\n            <div>\n                <h2 class="registrationSucess" [ngStyle.xs]="{\'font-size\':\'24px\'}">\n                    Registration Successful!</h2>\n            </div>\n            <div>\n                <p class="succesContent"\n                    [ngStyle.xs]="{\'font-size\':\'16px\',\'color\':\'#46494b\',\'padding-top\':\'50px\',\'font-weight\':\'500\'}">\n                    {{\'Your registration for the Mindspark Live Demo Class has been confirmed! Details have been shared on your registered mobile and email.\'}}\n                </p>\n                <p class="succesSecondContent" [ngStyle.xs]="{\'font-size\':\'14px\'}">\n                    Press \'continue\' to go to Home page.\n                </p>\n            </div>\n            <div class="btnContainer">\n                <div id="continueBtn" mat-button class="tryAgain" (click)="continueAction()">\n                    Continue\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n</div>',
              styles: [
                ".logoHeader {\n  display: flex;\n  justify-content: center;\n}\n\n.logoWrapper {\n  margin: 20px;\n  width: 1302px;\n}\n\n.successContainer {\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  min-height: 80vh;\n}\n\n.successWrapper {\n  max-width: 800px;\n}\n\n.registrationSucess {\n  text-align: center;\n  color: #a5d170;\n  font-size: 32px;\n  font-weight: bold;\n  margin-top: 10px;\n}\n\n.successImage {\n  margin-top: 10px;\n  display: flex;\n  justify-content: center;\n}\n\n.succesContent {\n  font-size: 20px;\n  color: #000000;\n  font-weight: bold;\n  text-align: center;\n  margin-bottom: 0px;\n}\n\n.succesSecondContent {\n  font-size: 16px;\n  color: #969696;\n  text-align: center;\n  margin-bottom: 0px;\n}\n\n.btnContainer {\n  display: flex;\n  justify-content: center;\n}\n\n.tryAgain {\n  margin: 20px;\n  padding: 17px 86px 17px 87px;\n  border-radius: 30px;\n  background-color: #faba2a;\n  font-size: 16px;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  color: #ffffff;\n  height: 56px;\n  cursor: pointer;\n  border: 0;\n}\n\n.tryAgain:hover {\n  background-color: #faba2a 0, 0, 0, 0.803;\n}\n\n@media only screen and (max-width: 767px) {\n  .logoWrapper {\n    width: 100%;\n  }\n}",
              ],
            }),
          ],
          a
        ));
    },
    "9ppp": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      const s = (() => {
        function e() {
          return (
            Error.call(this),
            (this.message = "object unsubscribed"),
            (this.name = "ObjectUnsubscribedError"),
            this
          );
        }
        return (e.prototype = Object.create(Error.prototype)), e;
      })();
    },
    AytR: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      const s = {
        production: !0,
        API_END_POINT: "/mindspark-website/index.php/api/",
        PRODUCT_URL: "https://v3.mindspark.in/",
        PRODUCT_REDIRECT_URL:
          "https://v3.mindspark.in/Student/onboard/auto-login?setSession=",
        RECAPTCHA_SITE_KEY: "6Lc-RRcmAAAAANTr3FNCUaCtiLGYTDBhPvOCMFyT",
      };
    },
    Cfvw: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return h;
      });
      var s = n("HDdC"),
        i = n("SeVD"),
        r = n("quSY"),
        o = n("kJWO");
      var a = n("jZKg"),
        l = n("Lhse");
      var c = n("c2HN"),
        u = n("I55L");
      function d(e, t) {
        if (null != e) {
          if (
            (function (e) {
              return e && "function" == typeof e[o.a];
            })(e)
          )
            return (function (e, t) {
              return new s.a((n) => {
                const s = new r.a();
                return (
                  s.add(
                    t.schedule(() => {
                      const i = e[o.a]();
                      s.add(
                        i.subscribe({
                          next(e) {
                            s.add(t.schedule(() => n.next(e)));
                          },
                          error(e) {
                            s.add(t.schedule(() => n.error(e)));
                          },
                          complete() {
                            s.add(t.schedule(() => n.complete()));
                          },
                        })
                      );
                    })
                  ),
                  s
                );
              });
            })(e, t);
          if (Object(c.a)(e))
            return (function (e, t) {
              return new s.a((n) => {
                const s = new r.a();
                return (
                  s.add(
                    t.schedule(() =>
                      e.then(
                        (e) => {
                          s.add(
                            t.schedule(() => {
                              n.next(e), s.add(t.schedule(() => n.complete()));
                            })
                          );
                        },
                        (e) => {
                          s.add(t.schedule(() => n.error(e)));
                        }
                      )
                    )
                  ),
                  s
                );
              });
            })(e, t);
          if (Object(u.a)(e)) return Object(a.a)(e, t);
          if (
            (function (e) {
              return e && "function" == typeof e[l.a];
            })(e) ||
            "string" == typeof e
          )
            return (function (e, t) {
              if (!e) throw new Error("Iterable cannot be null");
              return new s.a((n) => {
                const s = new r.a();
                let i;
                return (
                  s.add(() => {
                    i && "function" == typeof i.return && i.return();
                  }),
                  s.add(
                    t.schedule(() => {
                      (i = e[l.a]()),
                        s.add(
                          t.schedule(function () {
                            if (n.closed) return;
                            let e, t;
                            try {
                              const n = i.next();
                              (e = n.value), (t = n.done);
                            } catch (s) {
                              return void n.error(s);
                            }
                            t ? n.complete() : (n.next(e), this.schedule());
                          })
                        );
                    })
                  ),
                  s
                );
              });
            })(e, t);
        }
        throw new TypeError(
          ((null !== e && typeof e) || e) + " is not observable"
        );
      }
      function h(e, t) {
        return t ? d(e, t) : e instanceof s.a ? e : new s.a(Object(i.a)(e));
      }
    },
    D0XW: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      var s = n("3N8a");
      const i = new (n("IjjT").a)(s.a);
    },
    DH7j: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      const s = Array.isArray || ((e) => e && "number" == typeof e.length);
    },
    EY2u: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      }),
        n.d(t, "b", function () {
          return r;
        });
      var s = n("HDdC");
      const i = new s.a((e) => e.complete());
      function r(e) {
        return e
          ? (function (e) {
              return new s.a((t) => e.schedule(() => t.complete()));
            })(e)
          : i;
      }
    },
    FKr1: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return V;
      }),
        n.d(t, "b", function () {
          return se;
        }),
        n.d(t, "c", function () {
          return le;
        }),
        n.d(t, "d", function () {
          return b;
        }),
        n.d(t, "e", function () {
          return ue;
        }),
        n.d(t, "f", function () {
          return pe;
        }),
        n.d(t, "g", function () {
          return Q;
        }),
        n.d(t, "h", function () {
          return K;
        }),
        n.d(t, "i", function () {
          return de;
        }),
        n.d(t, "j", function () {
          return he;
        }),
        n.d(t, "k", function () {
          return _;
        }),
        n.d(t, "l", function () {
          return w;
        }),
        n.d(t, "m", function () {
          return x;
        }),
        n.d(t, "n", function () {
          return S;
        }),
        n.d(t, "o", function () {
          return C;
        });
      var s = n("fXoL"),
        i = n("u47x"),
        r = n("cH1L");
      const o = new s.lb("11.0.0");
      var a = n("ofXK"),
        l = n("8LU1"),
        c = n("XNiG"),
        u = (n("HDdC"), n("nLfN")),
        d = (n("JX91"), n("R1ws")),
        h = n("FtGj");
      const p = ["*", [["mat-option"], ["ng-container"]]];
      function m(e, t) {
        if ((1 & e && s.Nc(0, "mat-pseudo-checkbox", 3), 2 & e)) {
          const e = s.gd();
          s.ld("state", e.selected ? "checked" : "unchecked")(
            "disabled",
            e.disabled
          );
        }
      }
      new s.lb("11.0.0");
      class f {}
      (f.STANDARD_CURVE = "cubic-bezier(0.4,0.0,0.2,1)"),
        (f.DECELERATION_CURVE = "cubic-bezier(0.0,0.0,0.2,1)"),
        (f.ACCELERATION_CURVE = "cubic-bezier(0.4,0.0,1,1)"),
        (f.SHARP_CURVE = "cubic-bezier(0.4,0.0,0.6,1)");
      class g {}
      (g.COMPLEX = "375ms"), (g.ENTERING = "225ms"), (g.EXITING = "195ms");
      const y = new s.lb("11.0.0");
      const v = new s.E("mat-sanity-checks", {
        providedIn: "root",
        factory: function () {
          return !0;
        },
      });
      class b {
        constructor(e, t, n) {
          (this._hasDoneGlobalChecks = !1),
            (this._document = n),
            e._applyBodyHighContrastModeCssClasses(),
            (this._sanityChecks = t),
            this._hasDoneGlobalChecks ||
              (this._checkDoctypeIsDefined(),
              this._checkThemeIsPresent(),
              this._checkCdkVersionMatch(),
              (this._hasDoneGlobalChecks = !0));
        }
        _getWindow() {
          const e = this._document.defaultView || window;
          return "object" == typeof e && e ? e : null;
        }
        _checksAreEnabled() {
          return Object(s.ub)() && !this._isTestEnv();
        }
        _isTestEnv() {
          const e = this._getWindow();
          return e && (e.__karma__ || e.jasmine);
        }
        _checkDoctypeIsDefined() {
          this._checksAreEnabled() &&
            (!0 === this._sanityChecks || this._sanityChecks.doctype) &&
            !this._document.doctype &&
            console.warn(
              "Current document does not have a doctype. This may cause some Angular Material components not to behave as expected."
            );
        }
        _checkThemeIsPresent() {
          if (
            !this._checksAreEnabled() ||
            !1 === this._sanityChecks ||
            !this._sanityChecks.theme ||
            !this._document.body ||
            "function" != typeof getComputedStyle
          )
            return;
          const e = this._document.createElement("div");
          e.classList.add("mat-theme-loaded-marker"),
            this._document.body.appendChild(e);
          const t = getComputedStyle(e);
          t &&
            "none" !== t.display &&
            console.warn(
              "Could not find Angular Material core theme. Most Material components may not work as expected. For more info refer to the theming guide: https://material.angular.io/guide/theming"
            ),
            this._document.body.removeChild(e);
        }
        _checkCdkVersionMatch() {
          this._checksAreEnabled() &&
            (!0 === this._sanityChecks || this._sanityChecks.version) &&
            y.full !== o.full &&
            console.warn(
              "The Angular Material version (" +
                y.full +
                ") does not match the Angular CDK version (" +
                o.full +
                ").\nPlease ensure the versions of these two packages exactly match."
            );
        }
      }
      function x(e) {
        return class extends e {
          constructor(...e) {
            super(...e), (this._disabled = !1);
          }
          get disabled() {
            return this._disabled;
          }
          set disabled(e) {
            this._disabled = Object(l.b)(e);
          }
        };
      }
      function _(e, t) {
        return class extends e {
          constructor(...e) {
            super(...e), (this.defaultColor = t), (this.color = t);
          }
          get color() {
            return this._color;
          }
          set color(e) {
            const t = e || this.defaultColor;
            t !== this._color &&
              (this._color &&
                this._elementRef.nativeElement.classList.remove(
                  "mat-" + this._color
                ),
              t && this._elementRef.nativeElement.classList.add("mat-" + t),
              (this._color = t));
          }
        };
      }
      function w(e) {
        return class extends e {
          constructor(...e) {
            super(...e), (this._disableRipple = !1);
          }
          get disableRipple() {
            return this._disableRipple;
          }
          set disableRipple(e) {
            this._disableRipple = Object(l.b)(e);
          }
        };
      }
      function C(e, t = 0) {
        return class extends e {
          constructor(...e) {
            super(...e), (this._tabIndex = t), (this.defaultTabIndex = t);
          }
          get tabIndex() {
            return this.disabled ? -1 : this._tabIndex;
          }
          set tabIndex(e) {
            this._tabIndex = null != e ? Object(l.e)(e) : this.defaultTabIndex;
          }
        };
      }
      function S(e) {
        return class extends e {
          constructor(...e) {
            super(...e),
              (this.errorState = !1),
              (this.stateChanges = new c.a());
          }
          updateErrorState() {
            const e = this.errorState,
              t = this._parentFormGroup || this._parentForm,
              n = this.errorStateMatcher || this._defaultErrorStateMatcher,
              s = this.ngControl ? this.ngControl.control : null,
              i = n.isErrorState(s, t);
            i !== e && ((this.errorState = i), this.stateChanges.next());
          }
        };
      }
      (b.ɵmod = s.Kc({ type: b })),
        (b.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || b)(s.Yc(i.e), s.Yc(v, 8), s.Yc(a.c));
          },
          imports: [[r.a], r.a],
        })),
        (b.ctorParameters = () => [
          { type: i.e },
          {
            type: void 0,
            decorators: [{ type: s.R }, { type: s.C, args: [v] }],
          },
          { type: void 0, decorators: [{ type: s.C, args: [a.c] }] },
        ]),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(b, {
            imports: function () {
              return [r.a];
            },
            exports: function () {
              return [r.a];
            },
          });
      const E = new s.E("MAT_DATE_LOCALE", {
        providedIn: "root",
        factory: function () {
          return Object(s.tb)(s.J);
        },
      });
      class k {
        constructor() {
          (this._localeChanges = new c.a()),
            (this.localeChanges = this._localeChanges);
        }
        getValidDateOrNull(e) {
          return this.isDateInstance(e) && this.isValid(e) ? e : null;
        }
        deserialize(e) {
          return null == e || (this.isDateInstance(e) && this.isValid(e))
            ? e
            : this.invalid();
        }
        setLocale(e) {
          (this.locale = e), this._localeChanges.next();
        }
        compareDate(e, t) {
          return (
            this.getYear(e) - this.getYear(t) ||
            this.getMonth(e) - this.getMonth(t) ||
            this.getDate(e) - this.getDate(t)
          );
        }
        sameDate(e, t) {
          if (e && t) {
            let n = this.isValid(e),
              s = this.isValid(t);
            return n && s ? !this.compareDate(e, t) : n == s;
          }
          return e == t;
        }
        clampDate(e, t, n) {
          return t && this.compareDate(e, t) < 0
            ? t
            : n && this.compareDate(e, n) > 0
            ? n
            : e;
        }
      }
      const O = new s.E("mat-date-formats");
      let I;
      try {
        I = "undefined" != typeof Intl;
      } catch (me) {
        I = !1;
      }
      const T = {
          long: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ],
          short: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ],
          narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
        },
        A = P(31, (e) => String(e + 1)),
        D = {
          long: [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
          ],
          short: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          narrow: ["S", "M", "T", "W", "T", "F", "S"],
        },
        M =
          /^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/;
      function P(e, t) {
        const n = Array(e);
        for (let s = 0; s < e; s++) n[s] = t(s);
        return n;
      }
      class R extends k {
        constructor(e, t) {
          super(),
            (this.useUtcForDisplay = !0),
            super.setLocale(e),
            (this.useUtcForDisplay = !t.TRIDENT),
            (this._clampDate = t.TRIDENT || t.EDGE);
        }
        getYear(e) {
          return e.getFullYear();
        }
        getMonth(e) {
          return e.getMonth();
        }
        getDate(e) {
          return e.getDate();
        }
        getDayOfWeek(e) {
          return e.getDay();
        }
        getMonthNames(e) {
          if (I) {
            const t = new Intl.DateTimeFormat(this.locale, {
              month: e,
              timeZone: "utc",
            });
            return P(12, (e) =>
              this._stripDirectionalityCharacters(
                this._format(t, new Date(2017, e, 1))
              )
            );
          }
          return T[e];
        }
        getDateNames() {
          if (I) {
            const e = new Intl.DateTimeFormat(this.locale, {
              day: "numeric",
              timeZone: "utc",
            });
            return P(31, (t) =>
              this._stripDirectionalityCharacters(
                this._format(e, new Date(2017, 0, t + 1))
              )
            );
          }
          return A;
        }
        getDayOfWeekNames(e) {
          if (I) {
            const t = new Intl.DateTimeFormat(this.locale, {
              weekday: e,
              timeZone: "utc",
            });
            return P(7, (e) =>
              this._stripDirectionalityCharacters(
                this._format(t, new Date(2017, 0, e + 1))
              )
            );
          }
          return D[e];
        }
        getYearName(e) {
          if (I) {
            const t = new Intl.DateTimeFormat(this.locale, {
              year: "numeric",
              timeZone: "utc",
            });
            return this._stripDirectionalityCharacters(this._format(t, e));
          }
          return String(this.getYear(e));
        }
        getFirstDayOfWeek() {
          return 0;
        }
        getNumDaysInMonth(e) {
          return this.getDate(
            this._createDateWithOverflow(
              this.getYear(e),
              this.getMonth(e) + 1,
              0
            )
          );
        }
        clone(e) {
          return new Date(e.getTime());
        }
        createDate(e, t, n) {
          let s = this._createDateWithOverflow(e, t, n);
          return s.getMonth(), s;
        }
        today() {
          return new Date();
        }
        parse(e) {
          return "number" == typeof e
            ? new Date(e)
            : e
            ? new Date(Date.parse(e))
            : null;
        }
        format(e, t) {
          if (!this.isValid(e))
            throw Error("NativeDateAdapter: Cannot format invalid date.");
          if (I) {
            this._clampDate &&
              (e.getFullYear() < 1 || e.getFullYear() > 9999) &&
              (e = this.clone(e)).setFullYear(
                Math.max(1, Math.min(9999, e.getFullYear()))
              ),
              (t = Object.assign(Object.assign({}, t), { timeZone: "utc" }));
            const n = new Intl.DateTimeFormat(this.locale, t);
            return this._stripDirectionalityCharacters(this._format(n, e));
          }
          return this._stripDirectionalityCharacters(e.toDateString());
        }
        addCalendarYears(e, t) {
          return this.addCalendarMonths(e, 12 * t);
        }
        addCalendarMonths(e, t) {
          let n = this._createDateWithOverflow(
            this.getYear(e),
            this.getMonth(e) + t,
            this.getDate(e)
          );
          return (
            this.getMonth(n) != (((this.getMonth(e) + t) % 12) + 12) % 12 &&
              (n = this._createDateWithOverflow(
                this.getYear(n),
                this.getMonth(n),
                0
              )),
            n
          );
        }
        addCalendarDays(e, t) {
          return this._createDateWithOverflow(
            this.getYear(e),
            this.getMonth(e),
            this.getDate(e) + t
          );
        }
        toIso8601(e) {
          return [
            e.getUTCFullYear(),
            this._2digit(e.getUTCMonth() + 1),
            this._2digit(e.getUTCDate()),
          ].join("-");
        }
        deserialize(e) {
          if ("string" == typeof e) {
            if (!e) return null;
            if (M.test(e)) {
              let t = new Date(e);
              if (this.isValid(t)) return t;
            }
          }
          return super.deserialize(e);
        }
        isDateInstance(e) {
          return e instanceof Date;
        }
        isValid(e) {
          return !isNaN(e.getTime());
        }
        invalid() {
          return new Date(NaN);
        }
        _createDateWithOverflow(e, t, n) {
          const s = new Date();
          return s.setFullYear(e, t, n), s.setHours(0, 0, 0, 0), s;
        }
        _2digit(e) {
          return ("00" + e).slice(-2);
        }
        _stripDirectionalityCharacters(e) {
          return e.replace(/[\u200e\u200f]/g, "");
        }
        _format(e, t) {
          const n = new Date();
          return (
            n.setUTCFullYear(t.getFullYear(), t.getMonth(), t.getDate()),
            n.setUTCHours(
              t.getHours(),
              t.getMinutes(),
              t.getSeconds(),
              t.getMilliseconds()
            ),
            e.format(n)
          );
        }
      }
      (R.ɵfac = function (e) {
        return new (e || R)(s.Yc(E, 8), s.Yc(u.a));
      }),
        (R.ɵprov = s.Ic({ token: R, factory: R.ɵfac })),
        (R.ctorParameters = () => [
          {
            type: String,
            decorators: [{ type: s.R }, { type: s.C, args: [E] }],
          },
          { type: u.a },
        ]);
      class j {}
      (j.ɵmod = s.Kc({ type: j })),
        (j.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || j)();
          },
          providers: [{ provide: k, useClass: R }],
          imports: [[u.b]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(j, {
            imports: function () {
              return [u.b];
            },
          });
      const N = {
        parse: { dateInput: null },
        display: {
          dateInput: { year: "numeric", month: "numeric", day: "numeric" },
          monthYearLabel: { year: "numeric", month: "short" },
          dateA11yLabel: { year: "numeric", month: "long", day: "numeric" },
          monthYearA11yLabel: { year: "numeric", month: "long" },
        },
      };
      class F {}
      (F.ɵmod = s.Kc({ type: F })),
        (F.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || F)();
          },
          providers: [{ provide: O, useValue: N }],
          imports: [[j]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(F, { imports: [j] });
      class L {
        isErrorState(e, t) {
          return !!(e && e.invalid && (e.dirty || (t && t.submitted)));
        }
      }
      (L.ɵfac = function (e) {
        return new (e || L)();
      }),
        (L.ɵprov = s.Ic({ token: L, factory: L.ɵfac }));
      class V {
        isErrorState(e, t) {
          return !!(e && e.invalid && (e.touched || (t && t.submitted)));
        }
      }
      (V.ɵfac = function (e) {
        return new (e || V)();
      }),
        (V.ɵprov = Object(s.Ic)({
          factory: function () {
            return new V();
          },
          token: V,
          providedIn: "root",
        }));
      class B {}
      (B.ɵfac = function (e) {
        return new (e || B)();
      }),
        (B.ɵdir = s.Hc({
          type: B,
          selectors: [
            ["", "mat-line", ""],
            ["", "matLine", ""],
          ],
          hostAttrs: [1, "mat-line"],
        }));
      class z {}
      (z.ɵmod = s.Kc({ type: z })),
        (z.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || z)();
          },
          imports: [[b], b],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(z, { declarations: [B], imports: [b], exports: [B, b] });
      class H {
        constructor(e, t, n) {
          (this._renderer = e),
            (this.element = t),
            (this.config = n),
            (this.state = 3);
        }
        fadeOut() {
          this._renderer.fadeOutRipple(this);
        }
      }
      const G = { enterDuration: 450, exitDuration: 400 },
        U = Object(u.f)({ passive: !0 }),
        $ = ["mousedown", "touchstart"],
        q = ["mouseup", "mouseleave", "touchend", "touchcancel"];
      class W {
        constructor(e, t, n, s) {
          (this._target = e),
            (this._ngZone = t),
            (this._isPointerDown = !1),
            (this._activeRipples = new Set()),
            (this._pointerUpEventsRegistered = !1),
            s.isBrowser && (this._containerElement = Object(l.d)(n));
        }
        fadeInRipple(e, t, n = {}) {
          const s = (this._containerRect =
              this._containerRect ||
              this._containerElement.getBoundingClientRect()),
            i = Object.assign(Object.assign({}, G), n.animation);
          n.centered &&
            ((e = s.left + s.width / 2), (t = s.top + s.height / 2));
          const r =
              n.radius ||
              (function (e, t, n) {
                const s = Math.max(Math.abs(e - n.left), Math.abs(e - n.right)),
                  i = Math.max(Math.abs(t - n.top), Math.abs(t - n.bottom));
                return Math.sqrt(s * s + i * i);
              })(e, t, s),
            o = e - s.left,
            a = t - s.top,
            l = i.enterDuration,
            c = document.createElement("div");
          var u;
          c.classList.add("mat-ripple-element"),
            (c.style.left = o - r + "px"),
            (c.style.top = a - r + "px"),
            (c.style.height = 2 * r + "px"),
            (c.style.width = 2 * r + "px"),
            null != n.color && (c.style.backgroundColor = n.color),
            (c.style.transitionDuration = l + "ms"),
            this._containerElement.appendChild(c),
            (u = c),
            window.getComputedStyle(u).getPropertyValue("opacity"),
            (c.style.transform = "scale(1)");
          const d = new H(this, c, n);
          return (
            (d.state = 0),
            this._activeRipples.add(d),
            n.persistent || (this._mostRecentTransientRipple = d),
            this._runTimeoutOutsideZone(() => {
              const e = d === this._mostRecentTransientRipple;
              (d.state = 1),
                n.persistent || (e && this._isPointerDown) || d.fadeOut();
            }, l),
            d
          );
        }
        fadeOutRipple(e) {
          const t = this._activeRipples.delete(e);
          if (
            (e === this._mostRecentTransientRipple &&
              (this._mostRecentTransientRipple = null),
            this._activeRipples.size || (this._containerRect = null),
            !t)
          )
            return;
          const n = e.element,
            s = Object.assign(Object.assign({}, G), e.config.animation);
          (n.style.transitionDuration = s.exitDuration + "ms"),
            (n.style.opacity = "0"),
            (e.state = 2),
            this._runTimeoutOutsideZone(() => {
              (e.state = 3), n.parentNode.removeChild(n);
            }, s.exitDuration);
        }
        fadeOutAll() {
          this._activeRipples.forEach((e) => e.fadeOut());
        }
        setupTriggerEvents(e) {
          const t = Object(l.d)(e);
          t &&
            t !== this._triggerElement &&
            (this._removeTriggerEvents(),
            (this._triggerElement = t),
            this._registerEvents($));
        }
        handleEvent(e) {
          "mousedown" === e.type
            ? this._onMousedown(e)
            : "touchstart" === e.type
            ? this._onTouchStart(e)
            : this._onPointerUp(),
            this._pointerUpEventsRegistered ||
              (this._registerEvents(q), (this._pointerUpEventsRegistered = !0));
        }
        _onMousedown(e) {
          const t = Object(i.g)(e),
            n =
              this._lastTouchStartEvent &&
              Date.now() < this._lastTouchStartEvent + 800;
          this._target.rippleDisabled ||
            t ||
            n ||
            ((this._isPointerDown = !0),
            this.fadeInRipple(e.clientX, e.clientY, this._target.rippleConfig));
        }
        _onTouchStart(e) {
          if (!this._target.rippleDisabled) {
            (this._lastTouchStartEvent = Date.now()),
              (this._isPointerDown = !0);
            const t = e.changedTouches;
            for (let e = 0; e < t.length; e++)
              this.fadeInRipple(
                t[e].clientX,
                t[e].clientY,
                this._target.rippleConfig
              );
          }
        }
        _onPointerUp() {
          this._isPointerDown &&
            ((this._isPointerDown = !1),
            this._activeRipples.forEach((e) => {
              const t =
                1 === e.state ||
                (e.config.terminateOnPointerUp && 0 === e.state);
              !e.config.persistent && t && e.fadeOut();
            }));
        }
        _runTimeoutOutsideZone(e, t = 0) {
          this._ngZone.runOutsideAngular(() => setTimeout(e, t));
        }
        _registerEvents(e) {
          this._ngZone.runOutsideAngular(() => {
            e.forEach((e) => {
              this._triggerElement.addEventListener(e, this, U);
            });
          });
        }
        _removeTriggerEvents() {
          this._triggerElement &&
            ($.forEach((e) => {
              this._triggerElement.removeEventListener(e, this, U);
            }),
            this._pointerUpEventsRegistered &&
              q.forEach((e) => {
                this._triggerElement.removeEventListener(e, this, U);
              }));
        }
      }
      const Y = new s.E("mat-ripple-global-options");
      class Q {
        constructor(e, t, n, s, i) {
          (this._elementRef = e),
            (this._animationMode = i),
            (this.radius = 0),
            (this._disabled = !1),
            (this._isInitialized = !1),
            (this._globalOptions = s || {}),
            (this._rippleRenderer = new W(this, t, e, n));
        }
        get disabled() {
          return this._disabled;
        }
        set disabled(e) {
          (this._disabled = e), this._setupTriggerEventsIfEnabled();
        }
        get trigger() {
          return this._trigger || this._elementRef.nativeElement;
        }
        set trigger(e) {
          (this._trigger = e), this._setupTriggerEventsIfEnabled();
        }
        ngOnInit() {
          (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
        }
        ngOnDestroy() {
          this._rippleRenderer._removeTriggerEvents();
        }
        fadeOutAll() {
          this._rippleRenderer.fadeOutAll();
        }
        get rippleConfig() {
          return {
            centered: this.centered,
            radius: this.radius,
            color: this.color,
            animation: Object.assign(
              Object.assign(
                Object.assign({}, this._globalOptions.animation),
                "NoopAnimations" === this._animationMode
                  ? { enterDuration: 0, exitDuration: 0 }
                  : {}
              ),
              this.animation
            ),
            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
          };
        }
        get rippleDisabled() {
          return this.disabled || !!this._globalOptions.disabled;
        }
        _setupTriggerEventsIfEnabled() {
          !this.disabled &&
            this._isInitialized &&
            this._rippleRenderer.setupTriggerEvents(this.trigger);
        }
        launch(e, t = 0, n) {
          return "number" == typeof e
            ? this._rippleRenderer.fadeInRipple(
                e,
                t,
                Object.assign(Object.assign({}, this.rippleConfig), n)
              )
            : this._rippleRenderer.fadeInRipple(
                0,
                0,
                Object.assign(Object.assign({}, this.rippleConfig), e)
              );
        }
      }
      (Q.ɵfac = function (e) {
        return new (e || Q)(
          s.Mc(s.v),
          s.Mc(s.Q),
          s.Mc(u.a),
          s.Mc(Y, 8),
          s.Mc(d.a, 8)
        );
      }),
        (Q.ɵdir = s.Hc({
          type: Q,
          selectors: [
            ["", "mat-ripple", ""],
            ["", "matRipple", ""],
          ],
          hostAttrs: [1, "mat-ripple"],
          hostVars: 2,
          hostBindings: function (e, t) {
            2 & e && s.Ec("mat-ripple-unbounded", t.unbounded);
          },
          inputs: {
            radius: ["matRippleRadius", "radius"],
            disabled: ["matRippleDisabled", "disabled"],
            trigger: ["matRippleTrigger", "trigger"],
            color: ["matRippleColor", "color"],
            unbounded: ["matRippleUnbounded", "unbounded"],
            centered: ["matRippleCentered", "centered"],
            animation: ["matRippleAnimation", "animation"],
          },
          exportAs: ["matRipple"],
        })),
        (Q.ctorParameters = () => [
          { type: s.v },
          { type: s.Q },
          { type: u.a },
          {
            type: void 0,
            decorators: [{ type: s.R }, { type: s.C, args: [Y] }],
          },
          {
            type: String,
            decorators: [{ type: s.R }, { type: s.C, args: [d.a] }],
          },
        ]),
        (Q.propDecorators = {
          color: [{ type: s.G, args: ["matRippleColor"] }],
          unbounded: [{ type: s.G, args: ["matRippleUnbounded"] }],
          centered: [{ type: s.G, args: ["matRippleCentered"] }],
          radius: [{ type: s.G, args: ["matRippleRadius"] }],
          animation: [{ type: s.G, args: ["matRippleAnimation"] }],
          disabled: [{ type: s.G, args: ["matRippleDisabled"] }],
          trigger: [{ type: s.G, args: ["matRippleTrigger"] }],
        });
      class K {}
      (K.ɵmod = s.Kc({ type: K })),
        (K.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || K)();
          },
          imports: [[b, u.b], b],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(K, {
            declarations: function () {
              return [Q];
            },
            imports: function () {
              return [b, u.b];
            },
            exports: function () {
              return [Q, b];
            },
          });
      class J {
        constructor(e) {
          (this._animationMode = e),
            (this.state = "unchecked"),
            (this.disabled = !1);
        }
      }
      (J.ɵfac = function (e) {
        return new (e || J)(s.Mc(d.a, 8));
      }),
        (J.ɵcmp = s.Gc({
          type: J,
          selectors: [["mat-pseudo-checkbox"]],
          hostAttrs: [1, "mat-pseudo-checkbox"],
          hostVars: 8,
          hostBindings: function (e, t) {
            2 & e &&
              s.Ec(
                "mat-pseudo-checkbox-indeterminate",
                "indeterminate" === t.state
              )("mat-pseudo-checkbox-checked", "checked" === t.state)(
                "mat-pseudo-checkbox-disabled",
                t.disabled
              )(
                "_mat-animation-noopable",
                "NoopAnimations" === t._animationMode
              );
          },
          inputs: { state: "state", disabled: "disabled" },
          decls: 0,
          vars: 0,
          template: function (e, t) {},
          styles: [
            '.mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:"";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\n',
          ],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (J.ctorParameters = () => [
          {
            type: String,
            decorators: [{ type: s.R }, { type: s.C, args: [d.a] }],
          },
        ]),
        (J.propDecorators = {
          state: [{ type: s.G }],
          disabled: [{ type: s.G }],
        });
      class X {}
      (X.ɵmod = s.Kc({ type: X })),
        (X.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || X)();
          },
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(X, { declarations: [J], exports: [J] });
      const Z = x(class {});
      let ee = 0;
      class te extends Z {
        constructor() {
          super(...arguments), (this._labelId = "mat-optgroup-label-" + ee++);
        }
      }
      (te.ɵfac = function (e) {
        return ne(e || te);
      }),
        (te.ɵdir = s.Hc({
          type: te,
          inputs: { label: "label" },
          features: [s.wc],
        })),
        (te.propDecorators = { label: [{ type: s.G }] });
      const ne = s.Tc(te),
        se = new s.E("MatOptgroup");
      class ie extends te {}
      (ie.ɵfac = function (e) {
        return re(e || ie);
      }),
        (ie.ɵcmp = s.Gc({
          type: ie,
          selectors: [["mat-optgroup"]],
          hostAttrs: ["role", "group", 1, "mat-optgroup"],
          hostVars: 4,
          hostBindings: function (e, t) {
            2 & e &&
              (s.Ac("aria-disabled", t.disabled.toString())(
                "aria-labelledby",
                t._labelId
              ),
              s.Ec("mat-optgroup-disabled", t.disabled));
          },
          inputs: { disabled: "disabled" },
          exportAs: ["matOptgroup"],
          features: [s.yc([{ provide: se, useExisting: ie }]), s.wc],
          ngContentSelectors: ["*", "mat-option, ng-container"],
          decls: 4,
          vars: 2,
          consts: [[1, "mat-optgroup-label", 3, "id"]],
          template: function (e, t) {
            1 & e &&
              (s.kd(p),
              s.Rc(0, "label", 0),
              s.Ed(1),
              s.jd(2),
              s.Qc(),
              s.jd(3, 1)),
              2 & e &&
                (s.ld("id", t._labelId), s.zc(1), s.Gd("", t.label, " "));
          },
          styles: [
            ".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\n",
          ],
          encapsulation: 2,
          changeDetection: 0,
        }));
      const re = s.Tc(ie);
      let oe = 0;
      class ae {
        constructor(e, t = !1) {
          (this.source = e), (this.isUserInput = t);
        }
      }
      const le = new s.E("MAT_OPTION_PARENT_COMPONENT");
      class ce {
        constructor(e, t, n, i) {
          (this._element = e),
            (this._changeDetectorRef = t),
            (this._parent = n),
            (this.group = i),
            (this._selected = !1),
            (this._active = !1),
            (this._disabled = !1),
            (this._mostRecentViewValue = ""),
            (this.id = "mat-option-" + oe++),
            (this.onSelectionChange = new s.x()),
            (this._stateChanges = new c.a());
        }
        get multiple() {
          return this._parent && this._parent.multiple;
        }
        get selected() {
          return this._selected;
        }
        get disabled() {
          return (this.group && this.group.disabled) || this._disabled;
        }
        set disabled(e) {
          this._disabled = Object(l.b)(e);
        }
        get disableRipple() {
          return this._parent && this._parent.disableRipple;
        }
        get active() {
          return this._active;
        }
        get viewValue() {
          return (this._getHostElement().textContent || "").trim();
        }
        select() {
          this._selected ||
            ((this._selected = !0),
            this._changeDetectorRef.markForCheck(),
            this._emitSelectionChangeEvent());
        }
        deselect() {
          this._selected &&
            ((this._selected = !1),
            this._changeDetectorRef.markForCheck(),
            this._emitSelectionChangeEvent());
        }
        focus(e, t) {
          const n = this._getHostElement();
          "function" == typeof n.focus && n.focus(t);
        }
        setActiveStyles() {
          this._active ||
            ((this._active = !0), this._changeDetectorRef.markForCheck());
        }
        setInactiveStyles() {
          this._active &&
            ((this._active = !1), this._changeDetectorRef.markForCheck());
        }
        getLabel() {
          return this.viewValue;
        }
        _handleKeydown(e) {
          (e.keyCode !== h.d && e.keyCode !== h.j) ||
            Object(h.o)(e) ||
            (this._selectViaInteraction(), e.preventDefault());
        }
        _selectViaInteraction() {
          this.disabled ||
            ((this._selected = !this.multiple || !this._selected),
            this._changeDetectorRef.markForCheck(),
            this._emitSelectionChangeEvent(!0));
        }
        _getAriaSelected() {
          return this.selected || (!this.multiple && null);
        }
        _getTabIndex() {
          return this.disabled ? "-1" : "0";
        }
        _getHostElement() {
          return this._element.nativeElement;
        }
        ngAfterViewChecked() {
          if (this._selected) {
            const e = this.viewValue;
            e !== this._mostRecentViewValue &&
              ((this._mostRecentViewValue = e), this._stateChanges.next());
          }
        }
        ngOnDestroy() {
          this._stateChanges.complete();
        }
        _emitSelectionChangeEvent(e = !1) {
          this.onSelectionChange.emit(new ae(this, e));
        }
      }
      (ce.ɵfac = function (e) {
        return new (e || ce)(s.Mc(s.v), s.Mc(s.k), s.Mc(void 0), s.Mc(te));
      }),
        (ce.ɵdir = s.Hc({
          type: ce,
          inputs: { id: "id", disabled: "disabled", value: "value" },
          outputs: { onSelectionChange: "onSelectionChange" },
        })),
        (ce.ctorParameters = () => [
          { type: s.v },
          { type: s.k },
          { type: void 0 },
          { type: te },
        ]),
        (ce.propDecorators = {
          value: [{ type: s.G }],
          id: [{ type: s.G }],
          disabled: [{ type: s.G }],
          onSelectionChange: [{ type: s.S }],
        });
      class ue extends ce {
        constructor(e, t, n, s) {
          super(e, t, n, s);
        }
      }
      function de(e, t, n) {
        if (n.length) {
          let s = t.toArray(),
            i = n.toArray(),
            r = 0;
          for (let t = 0; t < e + 1; t++)
            s[t].group && s[t].group === i[r] && r++;
          return r;
        }
        return 0;
      }
      function he(e, t, n, s) {
        return e < n ? e : e + t > n + s ? Math.max(0, e - s + t) : n;
      }
      (ue.ɵfac = function (e) {
        return new (e || ue)(s.Mc(s.v), s.Mc(s.k), s.Mc(le, 8), s.Mc(se, 8));
      }),
        (ue.ɵcmp = s.Gc({
          type: ue,
          selectors: [["mat-option"]],
          hostAttrs: ["role", "option", 1, "mat-option", "mat-focus-indicator"],
          hostVars: 12,
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("click", function () {
                return t._selectViaInteraction();
              })("keydown", function (e) {
                return t._handleKeydown(e);
              }),
              2 & e &&
                (s.Uc("id", t.id),
                s.Ac("tabindex", t._getTabIndex())(
                  "aria-selected",
                  t._getAriaSelected()
                )("aria-disabled", t.disabled.toString()),
                s.Ec("mat-selected", t.selected)(
                  "mat-option-multiple",
                  t.multiple
                )("mat-active", t.active)("mat-option-disabled", t.disabled));
          },
          exportAs: ["matOption"],
          features: [s.wc],
          ngContentSelectors: ["*"],
          decls: 4,
          vars: 3,
          consts: [
            [
              "class",
              "mat-option-pseudo-checkbox",
              3,
              "state",
              "disabled",
              4,
              "ngIf",
            ],
            [1, "mat-option-text"],
            [
              "mat-ripple",
              "",
              1,
              "mat-option-ripple",
              3,
              "matRippleTrigger",
              "matRippleDisabled",
            ],
            [1, "mat-option-pseudo-checkbox", 3, "state", "disabled"],
          ],
          template: function (e, t) {
            1 & e &&
              (s.kd(),
              s.Cd(0, m, 1, 2, "mat-pseudo-checkbox", 0),
              s.Rc(1, "span", 1),
              s.jd(2),
              s.Qc(),
              s.Nc(3, "div", 2)),
              2 & e &&
                (s.ld("ngIf", t.multiple),
                s.zc(3),
                s.ld("matRippleTrigger", t._getHostElement())(
                  "matRippleDisabled",
                  t.disabled || t.disableRipple
                ));
          },
          directives: [a.k, Q, J],
          styles: [
            ".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\n",
          ],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (ue.ctorParameters = () => [
          { type: s.v },
          { type: s.k },
          {
            type: void 0,
            decorators: [{ type: s.R }, { type: s.C, args: [le] }],
          },
          { type: ie, decorators: [{ type: s.R }, { type: s.C, args: [se] }] },
        ]);
      class pe {}
      (pe.ɵmod = s.Kc({ type: pe })),
        (pe.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || pe)();
          },
          imports: [[K, a.b, X]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(pe, {
            declarations: function () {
              return [ue, ie];
            },
            imports: function () {
              return [K, a.b, X];
            },
            exports: function () {
              return [ue, ie];
            },
          });
    },
    FpXt: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return Ue;
      });
      var s = n("mrSG"),
        i = n("d3UM"),
        r = n("qFsG"),
        o = n("kmnG"),
        a = n("3Pt+"),
        l = n("Wp6s"),
        c = n("0IaG"),
        u = n("fXoL"),
        d = n("ofXK"),
        h = n("TxPR");
      let p = class {
        constructor(e) {
          (this.document = e),
            (this.productUrl = ""),
            (this.isCTBannerOpen = !1),
            (this.ctBannerURL = "https://ct.ei-usa.com/"),
            (this.openCTWeb = () => window.open(this.ctBannerURL, "_blank")),
            (this.closeCTBanner = () => (this.isCTBannerOpen = !1));
          const t = this.document.location.hostname;
          this.productUrl = Object(h.b)(t);
        }
        ngOnInit() {
          new Date() <= new Date(2023, 11, 15) && (this.isCTBannerOpen = !0);
        }
        toggleExpand(e) {
          this.expanded = this.expanded == e ? null : e;
        }
        closeMathsPopUp() {
          var e;
          null === (e = this.mathsDropdown) || void 0 === e || e.close();
        }
        closeEnglishPopUp() {
          var e;
          null === (e = this.englishDropDown) || void 0 === e || e.close();
        }
        closeLiveClassesPopUp() {
          var e;
          null === (e = this.liveClassesDropdown) || void 0 === e || e.close();
        }
      };
      (p.ctorParameters = () => [
        { type: Document, decorators: [{ type: u.C, args: [d.c] }] },
      ]),
        (p.propDecorators = {
          englishDropDown: [{ type: u.mb, args: ["englishDropDown"] }],
          mathsDropdown: [{ type: u.mb, args: ["mathsDropdown"] }],
          liveClassesDropdown: [{ type: u.mb, args: ["liveClassesDropdown"] }],
        }),
        (p = Object(s.a)(
          [
            Object(u.n)({
              selector: "app-header",
              template:
                '\x3c!-- TODO remove banner element after nov 15 2023 --\x3e\n<div class="banner" *ngIf="isCTBannerOpen">\n    <div class="banner-logo-wrapper">\n        <img src="assets/images/CTBanner.png" alt="ct-png">\n        <p class="banner-text">A global computational thinking competition </p>\n    </div>\n    <div class="link-wrapper" (click)="openCTWeb()">\n        <a class="ct-register-link" [href]="ctBannerURL" target="_blank">REGISTER NOW </a>\n        <div class="ct-register-link">&#x3e;</div>\n    </div>\n    <button class="ct-banner-close-btn" (click)="closeCTBanner()">&#x2715;</button>\n</div>\n<div class="headerContainer">\n    <div class="header">\n        <mat-toolbar color="primary">\n            <a routerLink="/" class="logo">\n                <img loading="lazy" class="logo" src="assets/images/ei-mindspark-maroon.svg" alt="Ei Mindspark" />\n            </a>\n            <div fxShow="true" fxHide.gt-sm="true" [ngStyle.xs]="{\'margin-left\':\'101px\'}">\n                <button mat-button [matMenuTriggerFor]="menu">\n                    <mat-icon>menu</mat-icon>\n                </button>\n            </div>\n            <div fxShow="true" fxHide.gt-sm="true">\n                <mat-menu #menu="matMenu" class="customMenu">\n                    <mat-accordion (click)="$event.stopPropagation();$event.preventDefault();">\n                        <mat-expansion-panel (opened)="panelOpenState = true" (closed)="panelOpenState = false">\n                            <mat-expansion-panel-header>\n                                <mat-panel-title class="footTitle" [ngStyle.xs]="{\'margin\':\'10px\'}">\n                                    Maths\n                                </mat-panel-title>\n                            </mat-expansion-panel-header>\n                            <app-dropdown-modal></app-dropdown-modal>\n                        </mat-expansion-panel>\n                    </mat-accordion>\n                    <mat-accordion (click)="$event.stopPropagation();$event.preventDefault();">\n                        <mat-expansion-panel (opened)="panelOpenState = true" (closed)="panelOpenState = false">\n                            <mat-expansion-panel-header>\n                                <mat-panel-title class="footTitle" [ngStyle.xs]="{\'margin\':\'10px\'}">\n                                    English\n                                </mat-panel-title>\n                            </mat-expansion-panel-header>\n                            <app-dropdown-modal [subject]="\'English\'"></app-dropdown-modal>\n                        </mat-expansion-panel>\n                    </mat-accordion>\n                    <mat-accordion (click)="$event.stopPropagation();$event.preventDefault();">\n                        <mat-expansion-panel (opened)="panelOpenState = true" (closed)="panelOpenState = false">\n                            <mat-expansion-panel-header>\n                                <mat-panel-title class="footTitle" [ngStyle.xs]="{\'margin\':\'10px\'}">\n                                    Science\n                                </mat-panel-title>\n                            </mat-expansion-panel-header>\n                            <app-dropdown-modal [subject]="\'Science\'"></app-dropdown-modal>\n                        </mat-expansion-panel>\n                    </mat-accordion>\n                    <div class="headerActions">\n                        <a mat-button class="responsiveBtn" routerLink="/subscription">Buy Now</a>\n                        <a mat-button class="responsiveBtn" href="{{productUrl}}" target="_blank">Login</a>\n                    </div>\n                    <div class="headerSecondaryBtns">\n                        <a mat-button class="freeTrial" [routerLink]="[\'/free-trial\']">Start Free Trial</a>\n                    </div>\n                </mat-menu>\n            </div>\n            <span class="spacer"></span>\n            <div class="font16 menuItems" fxShow="true" fxHide.lt-md="true">\n                <div ngbDropdown #mathsDropdown="ngbDropdown">\n                    <button class="matBtn" mat-button id="dropdownBasic1" ngbDropdownToggle\n                        (click)="toggleExpand(\'maths\')">\n                        <div class="matBtnContent">\n                            Maths\n                            <mat-icon *ngIf="this.expanded!=\'maths\'">expand_more</mat-icon>\n                            <mat-icon *ngIf="this.expanded==\'maths\'">expand_less</mat-icon>\n                        </div>\n                    </button>\n                    <div ngbDropdownMenu aria-labelledby="dropdownBasic1">\n                        <app-dropdown-modal (onClassChange)="closeMathsPopUp()" [subject]="\'Maths\'">\n                        </app-dropdown-modal>\n                    </div>\n                </div>\n                <div ngbDropdown #englishDropDown="ngbDropdown">\n                    <button class="matBtn" mat-button id="dropdownBasic2" (click)="toggleExpand(\'english\')"\n                        ngbDropdownToggle>\n                        <div class="matBtnContent">\n                            English\n                            <mat-icon *ngIf="this.expanded!=\'english\'">expand_more</mat-icon>\n                            <mat-icon *ngIf="this.expanded==\'english\'">expand_less</mat-icon>\n                        </div>\n                    </button>\n                    <div ngbDropdownMenu aria-labelledby="dropdownBasic2">\n                        <app-dropdown-modal (onClassChange)="closeEnglishPopUp()" [subject]="\'English\'">\n                        </app-dropdown-modal>\n                    </div>\n                </div>\n                <div ngbDropdown #mathsDropdown="ngbDropdown">\n                    <button class="matBtn" mat-button id="dropdownBasic1" ngbDropdownToggle\n                        (click)="toggleExpand(\'science\')">\n                        <div class="matBtnContent">\n                            Science\n                            <mat-icon *ngIf="this.expanded!=\'science\'">expand_more</mat-icon>\n                            <mat-icon *ngIf="this.expanded==\'science\'">expand_less</mat-icon>\n                        </div>\n                    </button>\n                    <div ngbDropdownMenu aria-labelledby="dropdownBasic1">\n                        <app-dropdown-modal (onClassChange)="closeMathsPopUp()" [subject]="\'Science\'">\n                        </app-dropdown-modal>\n                    </div>\n                </div>\n                \x3c!-- <div ngbDropdown #liveClassesDropdown="ngbDropdown">\n                    <button\n                      class="matBtn"\n                      mat-button\n                      id="dropdownBasic2"\n                      (click)="toggleExpand(\'liveClasses\')"\n                      ngbDropdownToggle\n                    >\n                      <div class="matBtnContent">\n                        Live Classes\n                        <mat-icon *ngIf="this.expanded != \'liveClasses\'"\n                          >expand_more</mat-icon\n                        >\n                        <mat-icon *ngIf="this.expanded == \'liveClasses\'"\n                          >expand_less</mat-icon\n                        >\n                      </div>\n                    </button>\n                    <div ngbDropdownMenu aria-labelledby="dropdownBasic2">\n                      <div class="btnConatiner">\n                        <app-dropdown-modal\n                          (onClassChange)="closeLiveClassesPopUp()"\n                          [subject]="\'Live Classes\'"\n                        ></app-dropdown-modal>\n                      </div>\n                    </div>\n                  </div> --\x3e\n                <a mat-button class="login" href="{{productUrl}}" target="_blank">Login</a>\n                <a mat-button class="login" routerLink="/subscription">Buy Now</a>\n                <a mat-button class="freeTrial" [routerLink]="[\'/free-trial\']">Start Free Trial</a>\n            </div>\n\n        </mat-toolbar>\n\n\n    </div>\n</div>',
              styles: [
                ".headerContainer {\n  display: flex;\n  justify-content: center;\n}\n\n.header {\n  margin: 20px;\n  width: 1302px;\n}\n\n.mat-toolbar {\n  height: 7vh;\n}\n\ndiv {\n  overflow: inherit;\n}\n\n::ng-deep.mat-menu-panel {\n  max-width: none !important;\n  width: 400px;\n}\n\n.mat-sidenav-container {\n  background-color: transparent;\n}\n\na {\n  text-decoration: none;\n  white-space: normal;\n}\n\n.spacer {\n  flex: 1 1 auto;\n}\n\n.mat-sidenav-content {\n  font-size: 200%;\n  text-align: center;\n}\n\n.mat-toolbar.mat-primary {\n  background: transparent;\n  color: black;\n  padding: 0px;\n}\n\n.matBtn {\n  display: flex;\n}\n\n.matBtn:focus {\n  outline: none;\n}\n\n.matBtnContent {\n  display: flex;\n  align-items: center;\n  color: #46494b;\n  font-size: 16px;\n}\n\n.menuItems {\n  margin: 0;\n  font-family: Manrope;\n  font-size: 16px;\n  line-height: 1.38;\n  text-align: left;\n  color: #46494b;\n  display: flex;\n  align-items: flex-end;\n}\n\n.login {\n  margin: 23px 0px 2px 0px;\n  padding: 1px 21px 1px 21px;\n  border-radius: 20px;\n  margin-left: 24px;\n  border: solid 1px rgba(33, 33, 33, 0.15);\n  color: #212121;\n  font-size: 16px;\n}\n\n.headerActions {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 43px;\n  margin: 30px 20px 20px 20px;\n}\n\n.headerSecondaryBtns {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 40px;\n}\n\n.responsiveBtn {\n  border-radius: 20px;\n  border: solid 1px rgba(33, 33, 33, 0.15);\n  color: #212121;\n  font-size: 16px;\n}\n\n.freeTrial {\n  margin: 1px 0 2px 32px;\n  padding: 9px 34px;\n  border-radius: 30px;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);\n  background-image: linear-gradient(257deg, #ff3449, #b91e1e);\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.38;\n  text-align: center;\n  color: #ffffff;\n}\n\n.mathsDetail {\n  top: 12px !important;\n  left: -31px !important;\n}\n\n.dropdown-toggle::after {\n  border: 0 !important;\n}\n\n.mat-icon-button {\n  margin: 10px 4px 10px 50px;\n}\n\n.cdk-overlay-connected-position-bounding-box {\n  right: 1px;\n  width: 100%;\n}\n\n.cdk-overlay-pane {\n  right: 0px !important;\n}\n\n::ng-deep.mat-expansion-panel {\n  display: inline !important;\n}\n\n.mobileButtons {\n  text-align: center;\n}\n\n.logo {\n  display: flex;\n  align-self: flex-end;\n}\n\n@media only screen and (max-width: 767px) {\n  .header {\n    width: 100%;\n  }\n\n  .btnContainer {\n    display: flex;\n    justify-content: space-around;\n  }\n\n  .freeTrial {\n    margin-left: 0px;\n  }\n}\n\n.banner {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #e3e1e1;\n  flex-wrap: wrap;\n  position: relative;\n}\n\n.banner-logo-wrapper {\n  position: relative;\n}\n\n.banner-logo-wrapper > img {\n  height: 75px;\n}\n\n.banner-text {\n  color: #b91e1e;\n  position: absolute;\n  top: 39px;\n  left: 55px;\n  font-weight: bold;\n  font-size: 11px;\n}\n\n.ct-register-link {\n  color: black;\n  font-weight: bold;\n  font-size: 20px;\n  background: #ffd90b;\n  padding: 8px;\n  animation: blink 0.8s alternate-reverse infinite;\n}\n\n.link-wrapper {\n  display: flex;\n  margin-left: 15px;\n  cursor: pointer;\n}\n\n.ct-register-link:last-child {\n  margin-left: 5px;\n}\n\n.ct-banner-close-btn {\n  position: absolute;\n  right: 10px;\n  background: none;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  font-size: 20px;\n  font-weight: bolder;\n}\n\n@keyframes blink {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n@media only screen and (max-width: 750px) {\n  .banner {\n    padding: 5px 0px;\n  }\n}\n\n@media only screen and (max-width: 400px) {\n  .banner-logo-wrapper > img {\n    height: 60px;\n  }\n\n  .banner-text {\n    top: 30px;\n    left: 45px;\n    font-size: 9px;\n  }\n\n  .ct-register-link {\n    font-size: 15px;\n    padding: 5px;\n  }\n}",
              ],
            }),
          ],
          p
        ));
      var m = n("NFeN"),
        f = n("bTqV"),
        g = n("XhcP"),
        y = n("/t3+"),
        v = n("7EHt"),
        b = n("YUcS"),
        x = n("1kSV");
      let _ = class {
        constructor() {
          (this.subjectId = "Maths"),
            (this.onClassChange = new u.x()),
            (this.classArrayLeft = [
              "Class 1",
              "Class 2",
              "Class 3",
              "Class 4",
              "Class 5",
            ]),
            (this.classArrayRight = [
              "Class 6",
              "Class 7",
              "Class 8",
              "Class 9",
              "Class 10",
            ]),
            (this.logoPath = "assets/images/graph.svg"),
            (this.alt = "triangle and circle icon"),
            (this.desc =
              "Ei Mindspark Maths is a personalised learning software that helps children to improve their Maths skills.");
        }
        getUrlFromClassName(e) {
          let t = "/maths";
          switch (
            ("English" == this.subjectId
              ? (t = "/english")
              : "Science" == this.subjectId && (t = "/science"),
            "Live Classes" == this.subjectId && (t = "/live-classes"),
            e)
          ) {
            case "Class 1":
              return t + "/class1";
            case "Class 2":
              return t + "/class2";
            case "Class 2":
              return t + "/class3";
            case "Class 4":
              return t + "/class4";
            case "Class 5":
              return t + "/class5";
            case "Class 6":
              return t + "/class6";
            case "Class 7":
              return t + "/class7";
            case "Class 8":
              return t + "/class8";
            case "Class 9":
              return t + "/class9";
            case "Class 10":
              return t + "/class10";
            case "Book A Demo":
              return t + "/book-a-demo";
            case "Buy Now":
              return "/subscription";
            default:
              return t + "/class1";
          }
        }
        ngOnInit() {
          "English" == this.subjectId
            ? ((this.classArrayLeft = ["Class 4", "Class 5", "Class 6"]),
              (this.classArrayRight = ["Class 7", "Class 8", "Class 9"]),
              (this.logoPath = "assets/images/angreji.svg"),
              (this.alt = "A Z"),
              (this.desc =
                "Ei Mindspark English is a personalised learning software which helps children build proficiency in the English language through sustained engagement and exposure."))
            : "Science" == this.subjectId &&
              ((this.classArrayLeft = []),
              (this.classArrayRight = [
                "Class 6",
                "Class 7",
                "Class 8",
                "Class 9",
                "Class 10",
              ]),
              (this.logoPath = "assets/images/science.svg"),
              (this.alt = "Science"),
              (this.desc =
                "Ei Mindspark Science is a personalised learning software that helps children improve their scientific understanding.")),
            "Live Classes" == this.subjectId &&
              ((this.classArrayLeft = ["Book A Demo", "Buy Now"]),
              (this.logoPath = "assets/images/demo-learning-image.png"),
              (this.alt = "learning"),
              (this.desc =
                "Personalised learning from world class experienced Math faculty aided with the most proven Maths learning platform."));
        }
        onClickItem() {
          this.onClassChange.emit();
        }
      };
      (_.ctorParameters = () => []),
        (_.propDecorators = {
          subjectId: [{ type: u.G, args: ["subject"] }],
          onClassChange: [{ type: u.S, args: ["onClassChange"] }],
        }),
        (_ = Object(s.a)(
          [
            Object(u.n)({
              selector: "app-dropdown-modal",
              template:
                '<div class="mathsDropdown" fxLayout.xs="column" fxLayout="row" [ngStyle.xs]="{\'margin\':\'0px\'}">\n    <div>\n        <div fxLayout.xs="row">\n            <div class="mathsTitle" [ngStyle.xs]="{\'margin\':\'38px 61px 2px 11px\'}">{{subjectId}}</div>\n            <div fxShow.xs="true" fxHide><img class="dropDownLogo" src="{{logoPath}}" alt="{{alt}}" [ngStyle.xs]="{\'margin\':\'8px 2px 0px 55px\',\'width\':\'100px\', \'margin-left\':subjectId == \'Live Classes\' ?\'20px\' : \'55px\'  }" /></div>\n        </div>\n        <div class="mathsInfo">{{desc}}</div>\n        <div fxHide.xs="true"><img class="dropDownLogo" src="{{logoPath}}" alt="{{alt}}" /></div>\n    </div>\n    <div class="classSection">\n        <div class="classTitle" *ngIf="subjectId != \'Live Classes\'">Class</div>\n    <div class="classTitle" *ngIf="subjectId === \'Live Classes\'">Go to</div>\n        <div class="classContainer">\n            <ul class="Class">\n                <li class="syllabusOption" *ngFor="let classes of classArrayLeft"\n                [routerLink]="[getUrlFromClassName(classes)]" \n                target=\'_blank\'\n                (click)="onClickItem()"\n                [ngStyle.xs]="{\'padding\':\'8px 8px\',\'border-bottom\':\'1px solid grey\'}">\n                    {{classes}} \n                </li>\n            </ul>\n            <ul class="Class" *ngIf="subjectId != \'Live Classes\'">\n                <li class="syllabusOption" *ngFor="let classes of classArrayRight"\n                [routerLink]="[getUrlFromClassName(classes)]" \n                (click)="onClickItem()"\n                target=\'_blank\'\n                [ngStyle.xs]="{\'padding\':\'8px 8px\',\'border-bottom\':\'1px solid grey\'}">\n                    {{classes}} \n                </li>\n            </ul>\n        </div>\n    </div>\n    \n</div>',
              styles: [
                ".mathsInfo {\n  width: 220px;\n  margin: 32px 0px 26px 0;\n  font-family: Manrope;\n  font-size: 14px;\n  line-height: 1.43;\n  text-align: left;\n  color: #46494b;\n  white-space: pre-line;\n}\n\n.dropDownLogo {\n  height: 100px;\n}\n\n.mathsDropdown {\n  margin: 28px 20px;\n}\n\n.mathsTitle {\n  font-size: 32px;\n  font-weight: var(--bold-font);\n  line-height: 1.38;\n  text-align: left;\n  color: #212121;\n}\n\n.syllabusHead {\n  margin: 35px 0px 35px 0px;\n  font-size: 18px;\n  font-weight: var(--bold-font);\n  line-height: 1.33;\n  color: #212121;\n}\n\nul {\n  list-style: none;\n  padding: 0px;\n}\n\n.classContainer {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.classSection {\n  margin-left: 32px;\n}\n\n.syllabusOption {\n  font-size: 13px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 3.2;\n  letter-spacing: 0.15px;\n  text-align: left;\n  padding: 0px 15px;\n  border-radius: 12px;\n  cursor: pointer;\n}\n\n.classTitle {\n  font-size: 24px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n  margin-left: 10px;\n  margin-bottom: 32px;\n  margin-top: 8px;\n}\n\n.syllabusOption:hover {\n  text-decoration: underline;\n  background-color: #e0f2fd;\n}\n\n@media only screen and (max-width: 767px) {\n  ul {\n    padding: 0px 5px;\n    margin-bottom: 0px;\n  }\n\n  .syllabusHead {\n    margin: 0px 0px 18px 0px;\n  }\n\n  .classContainer {\n    grid-template-columns: 1fr;\n  }\n\n  .classSection,\n.classTitle {\n    margin-left: 0px;\n  }\n\n  .syllabusOption {\n    border-radius: 0px;\n  }\n}",
              ],
            }),
          ],
          _
        ));
      let w = class {
        constructor() {
          (this.withBackground = !1),
            (this.fromHome = !1),
            (this.fromLiveClasses = !1);
        }
        ngOnInit() {}
      };
      (w.ctorParameters = () => []),
        (w.propDecorators = {
          withBackground: [{ type: u.G, args: ["background"] }],
          fromHome: [{ type: u.G, args: ["fromHome"] }],
          fromLiveClasses: [{ type: u.G, args: ["fromLiveClasses"] }],
        }),
        (w = Object(s.a)(
          [
            Object(u.n)({
              selector: "app-free-trial-callout",
              template:
                '<div class="freeTrialWrapper">\n    <div [ngClass]="{containerHeighlight: withBackground}" class="freeTrialContainer" [ngStyle.xs]="{\'margin-left\': fromHome ? \'20px\': \'0px\', \'margin-right\': fromHome ? \'20px\': \'0px\'}">\n        <img  *ngIf="withBackground" class="calloutImage" loading="lazy" src="assets/images/calloutImage.svg" alt="half circle image" />\n        <div class="freeTrailSection" fxLayout="row nowrap" fxLayout.xs="column nowrap" fxLayoutAlign.xs="center center">\n            <div [ngStyle.xs]= "{\'display\':\'none\'}">\n                \x3c!-- <img src="assets/images/start-demo-left.svg" class="start-demo-left" alt="" loading="lazy"> --\x3e\n            </div>\n            <div fxFlex="70" fxLayout="row nowrap" fxLayoutAlign="flex-start center" fxLayout.xs="column nowrap">\n                <div class="freeTrailSectionLeft">\n                    <p class="freeTrialText">Ready to get started?</p>\n                </div>\n                <div class="freeTrailSectionRight">\n                    <a class="calloutHref" routerLink="/free-trial" *ngIf="!fromLiveClasses"> \n                        <div class="emailContainer">\n                            \x3c!-- <div class="emailAdress">\n                                <p class="freeTrailInfo">Enter your phone number</p>\n                            </div> --\x3e\n                            <a mat-button class="freeTrial" >Start Free Trial</a>\n                        </div>\n                    </a>\n                    <a class="calloutHref" onclick="document.getElementById(\'introHeaderRight\').scrollIntoView({ behavior: \'smooth\' });" *ngIf="fromLiveClasses"> \n                        <div class="emailContainer">\n                            \x3c!-- <div class="emailAdress">\n                                <p class="freeTrailInfo">Enter your phone number</p>\n                            </div> --\x3e\n                            <a mat-button class="freeTrial" >Book a Demo</a>\n                        </div>\n                    </a>\n                </div>\n                <div fxFlex="70" fxLayout="row nowrap" fxLayoutAlign="space-between center" fxHide fxShow.xs>\n                    \x3c!-- <img src="assets/images/start-demo-left.svg" class="start-demo-left" alt="" loading="lazy"> --\x3e\n                    \x3c!-- <img src="assets/images/free-trail-call-bottom.png" class="free-trail-call-bottom" alt="" loading="lazy"> --\x3e\n                </div>                \n            </div>\n            <div class="calloutImage1" [ngStyle.xs]= "{\'display\':\'none\'}">\n                <img src="assets/images/free-trail-call-bottom.png" class="free-trail-call-bottom" alt="call" loading="lazy">\n            </div>\n        </div>        \n        <img *ngIf="withBackground" class="calloutImage1" loading="lazy" src="assets/images/down-circle.svg" alt="half circle image" />\n    </div>\n</div>\n\n',
              styles: [
                ".freeTrialWrapper {\n  display: flex;\n  justify-content: center;\n}\n\n.freeTrialContainer {\n  margin: 120px 0px;\n  border-radius: 30px;\n  display: flex;\n  justify-content: center;\n  position: relative;\n  width: 1302px;\n}\n\n.containerHeighlight {\n  background-color: #fff7d6;\n}\n\n.homeStyle {\n  margin-left: 20px;\n  margin-right: 20px;\n}\n\n.calloutImage {\n  position: absolute;\n  left: 0;\n  height: 60px;\n  top: 30px;\n}\n\n.calloutImage1 {\n  position: absolute;\n  bottom: 0px;\n  right: 140px;\n  height: 18px;\n}\n\n.free-trail-call-bottom {\n  height: 18px;\n  width: 45px;\n  vertical-align: top;\n}\n\n.freeTrailSection {\n  padding: 42px 0px;\n  border-radius: 12px;\n  background-color: #fff7d6;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.start-demo-left {\n  width: 30px;\n  height: 65px;\n  object-fit: contain;\n}\n\n@media only screen and (max-width: 767px) {\n  .start-demo-left {\n    transform: rotate(270deg);\n  }\n}\n\n.calloutHref:hover {\n  text-decoration: none;\n}\n\n.freeTrialText {\n  padding: 0px;\n  margin: 0px;\n  font-family: Manrope;\n  font-size: 24px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n}\n\n.freeTrailSectionRight {\n  margin-left: 107px;\n}\n\n.emailContainer {\n  border-radius: 30px;\n  background-color: #f5f5f5;\n  display: flex;\n  align-items: center;\n}\n\n.freeTrial {\n  padding: 14px 32px;\n  border-radius: 30px;\n  font-family: Manrope;\n  font-size: 16px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: center;\n  color: #ffffff;\n}\n\n.freeTrial:hover {\n  text-decoration: none;\n}\n\n.freeTrailInfo {\n  padding: 0px;\n  margin: 0px;\n  opacity: 0.6;\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.36;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n  margin-left: 26px;\n}\n\n@media only screen and (max-width: 767px) {\n  .freeTrailSection {\n    height: -webkit-fit-content;\n    height: -moz-fit-content;\n    height: fit-content;\n    width: 100%;\n    margin: 0 20px;\n  }\n\n  .freeTrialContainer {\n    margin: 60px 0px;\n    padding: 47px 20px;\n    width: 100%;\n  }\n\n  .freeTrailSectionRight,\n.freeTrial {\n    margin-left: 0px;\n  }\n\n  .freeTrialText {\n    margin-bottom: 24px;\n    text-align: center;\n  }\n\n  .emailContainer {\n    flex-direction: column;\n    border-radius: 0px;\n    background-color: transparent;\n  }\n\n  .freeTrial {\n    margin-top: 24px;\n    width: 100%;\n  }\n\n  .emailAdress {\n    background-color: #f5f5f5;\n    padding: 20px;\n    border-radius: 30px;\n    width: 100%;\n  }\n}",
              ],
            }),
          ],
          w
        ));
      let C = class {
        constructor() {
          this.panelOpenState = !1;
        }
        ngOnInit() {}
      };
      (C.ctorParameters = () => []),
        (C = Object(s.a)(
          [
            Object(u.n)({
              selector: "app-footer",
              template:
                '<div class="footerConatiner">\n    <div fxHide.xs="true" class="footerWrapper">\n        <div fxLayout="row">\n            <div fxFlex="20">\n                <ul>\n                    <li class="footTitle">Quick Links </li>\n                    <li>\n                        <a class="footerItem" href="https://blog.ei-india.com" target="_blank">Blog</a>\n                    </li>\n                    <li>\n                        <a class="footerItem" routerLink="/faq" target="_blank">FAQs</a>\n                    </li>\n                    <li class="pt-2">\n                        <a target="_blank"  href="https://play.google.com/store/apps/details?id=com.mindspark.edicine">\n                            <img class="appStore-googlePlay-imgs" src="assets/images/google_play.png" alt="Google Play" />\n                        </a>\n                    </li>\n                    <li class="pt-2">\n                        <a class="margLeft" target="_blank" href="https://apps.apple.com/in/app/ei-mindspark-learning-app/id1541664545">\n                            <img class="appStore-googlePlay-imgs" src="assets/images/app_store.png" alt="App Store" />\n                        </a>\n                    </li>\n                </ul>\n            </div>\n            <div fxFlex="15">\n                <ul>\n                    <li class="footTitle">Subjects </li>\n                    <li>\n                        <a class="footerItem" routerLink="/maths" target="_blank">Maths</a>\n                    </li>\n                    <li>\n                        <a class="footerItem" routerLink="/english" target="_blank">English</a>\n                    </li>\n                    <li>\n                        <a class="footerItem" routerLink="/science" target="_blank">Science</a>\n                    </li>\n                </ul>\n            </div>\n            <div fxFlex="15">\n                <ul>\n                    <li class="footTitle">About </li>\n                    <li>\n                        <a class="footerItem" href="https://www.ei-india.com/" target="_blank">About EI</a>\n                    </li>\n                    <li>\n                        <a class="footerItem" href="https://www.ei-india.com/careers" target="_blank">Careers</a>\n                    </li>\n                    \x3c!-- <li>\n                        <a class="footerItem" href="https://www.ei-india.com/careers" target="_blank">Contact</a>\n                    </li> --\x3e\n                </ul>\n            </div>\n            <div fxFlex="25">\n                <ul>\n                    <li class="footTitle">Ei offerings </li>\n                    <li>\n                        <a class="footerItem" href="https://www.mindspark.in" target="_blank">Ei Mindspark</a>\n                    </li>\n                    <li>\n                        <a class="footerItem" href="https://ei.study/ei-asset/" target="_blank">Ei ASSET</a>\n                    </li>\n                    <li>\n                        <a class="footerItem" href="https://ei.study/ei-shiksha/"\n                            target="_blank">Ei Shiksha</a>\n                    </li>\n                    <li>\n                        <a class="footerItem" href="https://ei-ats.com/"\n                            target="_blank">Ei Gifted Education</a>\n                    </li>\n                </ul>\n            </div>\n            <div fxFlex="25">\n                <ul>\n                    <li class="footTitle">Help and Support</li>\n                    \x3c!-- <li>Tel No:<span class="link"><a class="mailTo" href="tel:1800-102-8885"> 1800-102-8885</a></span>\n                    </li> --\x3e\n                    <li> Email: <span class="link"><a class="mailTo" href="mailto:mindspark@ei-india.com">\n                                mindspark@ei-india.com</a></span></li>\n                    <li> Call Us: <span class="link">080-471-87451</span></li>\n\n                </ul>\n            </div>\n        </div>\n        <div>\n            <img class="logo" loading="lazy" src="assets/images/ei-mindspark-maroon.svg" alt="Ei Mindspark" />\n        </div>\n        <div fxLayout="row">\n            <div fxFlex="80" fxLayout="row">\n                <div class="privacyText">\n                    <a class="footerItem" href="https://mindspark-ei.s3.ap-southeast-1.amazonaws.com/website/Privacy_Policy_Document_2021.pdf" target="_blank">Privacy\n                        Policy</a>\n                </div>\n                <div class="privacyText">\n                    <a class="footerItem" href="https://mindspark-ei.s3.ap-southeast-1.amazonaws.com/website/2020%20EI_Mindspark_website_TnC.pdf" target="_blank">Terms of\n                        Use</a>\n                </div>\n                <div class="privacyText">\n                    <a class="footerItem" href="https://mindspark-ei.s3.ap-southeast-1.amazonaws.com/website/EiMindsparkRefundPolicy.pdf" target="_blank">Refund Policy</a>\n                </div>\n                \n                <div class="privacyText">Mindspark \xa9 2021 </div>\n            </div>\n            <div fxFlex="20" fxLayout="row" fxLayoutAlign="end start" class="footerIcon">\n                <div class="icon">\n                    <a class="footerItem" href="https://www.facebook.com/Mindspark.EI" target="_blank">\n                        <img loading="lazy" src="assets/images/fb.svg" alt="facebook icon" />\n                    </a>\n                </div>\n                <div class="icon">\n                    <a class="footerItem" href="https://www.instagram.com/educational__initiatives/" target="_blank">\n                        <img loading="lazy" src="assets/images/insta.svg" alt="instagram icon" />\n                    </a>\n                </div>\n                <div class="icon">\n                    <a class="footerItem" href="https://twitter.com/mindspark_ei" target="_blank">\n                        <img loading="lazy" src="assets/images/twitter.svg" alt="Twitter logo" />\n                    </a>\n                </div>\n                <div class="icon">\n                    <a class="footerItem" href="http://www.youtube.com/eivideos" target="_blank">\n                        <img loading="lazy" src="assets/images/youtube.svg" alt="play button icon" />\n                    </a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div fxHide fxShow.xs>\n    <mat-accordion>\n\n        <mat-expansion-panel (opened)="panelOpenState = true" (closed)="panelOpenState = false">\n            <mat-expansion-panel-header>\n                <mat-panel-title class="footTitle" [ngStyle.xs]="{\'margin\':\'10px\'}">\n                    Quick Links\n                </mat-panel-title>\n\n            </mat-expansion-panel-header>\n            <ul>\n                <li>\n                    <a class="footerItem" href="https://blog.ei-india.com" target="_blank">Blog</a>\n                </li>\n                <li>\n                    <a class="footerItem" routerLink="/faq" target="_blank">FAQs</a>\n                </li>\n            </ul>\n\n        </mat-expansion-panel>\n        <mat-expansion-panel (opened)="panelOpenState = true" (closed)="panelOpenState = false">\n            <mat-expansion-panel-header>\n                <mat-panel-title class="footTitle" [ngStyle.xs]="{\'margin\':\'10px\'}">\n                    Subjects\n                </mat-panel-title>\n\n            </mat-expansion-panel-header>\n            <ul>\n                <li>\n                    <a class="footerItem" href="/maths" target="_blank">Maths</a>\n                </li>\n                <li>\n                    <a class="footerItem" routerLink="/english" target="_blank">English</a>\n                </li>\n                <li>\n                    <a class="footerItem" routerLink="/science" target="_blank">Science</a>\n                </li>\n            </ul>\n\n        </mat-expansion-panel>\n        <mat-expansion-panel (opened)="panelOpenState = true" (closed)="panelOpenState = false">\n            <mat-expansion-panel-header>\n                <mat-panel-title class="footTitle" [ngStyle.xs]="{\'margin\':\'10px\'}">\n                    About\n                </mat-panel-title>\n\n            </mat-expansion-panel-header>\n            <ul>\n                <li>\n                    <a class="footerItem" href="https://www.ei-india.com/" target="_blank">About EI</a>\n                </li>\n                <li>\n                    <a class="footerItem" href="https://www.ei-india.com/careers" target="_blank">Careers</a>\n                </li>\n            </ul>\n\n        </mat-expansion-panel>\n        <mat-expansion-panel (opened)="panelOpenState = true" (closed)="panelOpenState = false">\n            <mat-expansion-panel-header>\n                <mat-panel-title class="footTitle" [ngStyle.xs]="{\'margin\':\'10px\'}">\n                    Ei offerings\n                </mat-panel-title>\n\n            </mat-expansion-panel-header>\n            <ul>\n                <li>\n                    <a class="footerItem" href="https://www.mindspark.in" target="_blank">Ei Mindspark</a>\n                </li>\n                <li>\n                    <a class="footerItem" href="https://ei.study/ei-asset/" target="_blank">Ei ASSET</a>\n                </li>\n                <li>\n                    <a class="footerItem" href="https://ei.study/ei-shiksha/"\n                    target="_blank">Ei Shiksha</a>\n                </li>\n                <li>\n                    <a class="footerItem" href="https://ei-ats.com/"\n                    target="_blank">Ei Gifted Education</a>\n                </li>\n                \x3c!-- <li>\n                    <a class="footerItem" href="https://ei-india.com/mindspark-math/" target="_blank">Mindspark\n                        Maths</a>\n                </li>\n                <li>\n                    <a class="footerItem" href="https://www.ei-india.com/mindspark-english" target="_blank">Mindspark\n                        English</a>\n                </li> --\x3e\n                \x3c!-- <li>\n                    <a class="footerItem" href="https://www.ei-india.com/detailed-assessment" target="_blank">Detailed\n                        Assessment</a>\n                </li>\n                <li>\n                    <a class="footerItem" href="https://www.ei-india.com/lsep" target="_blank">Large Scale education\n                        Programmes</a>\n                </li> --\x3e\n            </ul>\n\n        </mat-expansion-panel>\n    </mat-accordion>\n    <div [ngStyle.xs]="{\'margin\':\'25px\', \'text-align\':\'center\'}">\n        <img loading="lazy" class="logo" src="assets/images/ei-mindspark-maroon.svg" alt="Ei Mindspark" />\n    </div>\n    <div class="privacyText" fxLayoutAlign="center center" [ngStyle.xs]="{\'text-align\':\'center\'}">\n        <ul>\n            <div class="privacyText">\n                <a class="privacyTxt" href="https://mindspark-ei.s3.ap-southeast-1.amazonaws.com/website/Privacy_Policy_Document_2021.pdf" target="_blank">Privacy Policy</a>\n            </div>\n            <div class="privacyText">\n                <a class="privacyTxt" href="https://mindspark-ei.s3.ap-southeast-1.amazonaws.com/website/2020%20EI_Mindspark_website_TnC.pdf" target="_blank">Terms of Use</a>\n            </div>\n            <div class="privacyText">\n                <a class="privacyTxt" href="https://mindspark-ei.s3.ap-southeast-1.amazonaws.com/website/EiMindsparkRefundPolicy.pdf" target="_blank">Refund Policy</a>\n            </div>\n            <div>\n                <div class="privacyText">\n                    <li class="privacyTxt">Mindspark \xa9 2021 </li>\n                </div>\n            </div>\n        </ul>\n\n    </div>\n    <div class="seperatorContainer">\n        <div class="seperator"></div>\n    </div>\n    <div fxLayout="row" fxLayoutAlign="center center" class="footerIcon">\n        <div class="icon">\n            <a href="https://www.facebook.com/Mindspark.EI" target="_blank">\n                <img loading="lazy" src="assets/images/fb.svg" alt="facebook icon" />\n            </a>\n        </div>\n        <div class="icon">\n            <a href="https://www.instagram.com/educational__initiatives/" target="_blank">\n                <img loading="lazy" src="assets/images/insta.svg" alt="instagram icon" />\n            </a>\n        </div>\n        <div class="icon">\n            <a href="https://twitter.com/mindspark_ei" target="_blank">\n                <img loading="lazy" src="assets/images/twitter.svg" alt="Twitter logo" />\n            </a>\n        </div>\n        <div class="icon">\n            <a href="http://www.youtube.com/eivideos" target="_blank">\n                <img loading="lazy" src="assets/images/youtube.svg" alt="play button icon" />\n            </a>\n        </div>\n    </div>\n</div>',
              styles: [
                ".footerConatiner {\n  display: flex;\n  justify-content: center;\n}\n\n.footerWrapper {\n  width: 1302px;\n}\n\n.footTitle {\n  margin: 0 29px 31px 0;\n  font-family: Manrope;\n  font-size: 18px;\n  font-weight: bold;\n  line-height: 1.33;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n}\n\n.footerItem {\n  color: #555555;\n}\n\n.mailTo {\n  color: #28a7df;\n}\n\nli {\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 2.4;\n  letter-spacing: 0.15px;\n  text-align: left;\n  color: #555555;\n  padding: 0px;\n}\n\n.privacyText {\n  padding: 20px 20px 20px 0px;\n  font-family: Manrope;\n  font-size: 13px;\n  font-weight: 500;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: left;\n  color: #000000;\n}\n\n.footerIcon {\n  text-align: right;\n}\n\n.icon {\n  padding: 5px;\n}\n\n.link {\n  color: #28a7df;\n}\n\nul {\n  padding: 0px;\n}\n\n.mat-form-field + .mat-form-field {\n  margin-left: 8px;\n}\n\n.seperatorContainer {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 16px;\n}\n\n.seperator {\n  height: 0;\n  border: solid 1px #d3d3d3;\n  width: 100%;\n  margin: 0px 43px;\n}\n\n@media only screen and (max-width: 767px) {\n  .footerWrapper {\n    width: 100%;\n  }\n\n  .footerItem {\n    font-size: 14px;\n    font-weight: 500;\n    font-stretch: normal;\n    font-style: normal;\n    line-height: 3.57;\n    letter-spacing: 0.14px;\n    text-align: left;\n    color: #555555;\n    margin-left: 40px;\n  }\n\n  .privacyTxt {\n    font-size: 13px;\n    font-weight: 600;\n    font-stretch: normal;\n    font-style: normal;\n    line-height: 1.23;\n    letter-spacing: normal;\n    text-align: center;\n    color: #000000;\n  }\n\n  .privacyText {\n    display: flex;\n    justify-content: center;\n    width: 100%;\n  }\n\n  .footerIcon {\n    margin-bottom: 30px;\n  }\n\n  .icon {\n    margin-left: 24px;\n  }\n}",
              ],
            }),
          ],
          C
        ));
      let S = class {
        constructor() {}
        ngOnInit() {}
      };
      (S.ctorParameters = () => []),
        (S = Object(s.a)(
          [
            Object(u.n)({
              selector: "app-awards",
              template:
                '<div class="awardContainer">\n    <div class="awardWrapper">\n        <h3>\n            <div class="awardTittle" [ngStyle.xs]="{\'font-size\':\'24px\',\'margin\':\'0px\'}">\n                Awards & Recognition\n            </div>\n        </h3>\n        <div fxLayout="row wrap" fxLayout.xs="column" fxLayoutAlign="space-around center" class="awards" [ngStyle.xs]="{\'margin\':\'20px 0px\'}">\n            <div fxFlex="25" fxFlex.xs="50" fxFlex.sm="50" class="awardInfo">\n                <div class="awardSymbol">\n                    <img loading="lazy" class="awardImage" src="assets/images/jpal.jpg" alt="J PAL" />\n                </div>\n                <div class="awardDetails">\n                    J-PAL, a research center at MIT established that Ei Mindspark shows a 2-4X gain in learning outcomes.\n                </div>\n            </div>\n            <div fxFlex="25" fxFlex.xs="50" fxFlex.sm="50" class="awardInfo">\n                <div class="awardSymbol">\n                    <img loading="lazy" class="awardImage" src="assets/images/harvard-award.jpg" alt="Harvard Business School" />\n                </div>\n                <div class="awardDetails">\n                    Ei Mindspark is a Harvard Business School case study.\n                </div>\n            </div>\n            <div fxFlex="25" fxFlex.xs="50" fxFlex.sm="50" class="awardInfo" [ngStyle.xs]="{\'margin-top\':\'30px\'}">\n                <div class="awardSymbol">\n                    <img loading="lazy" class="awardImage" src="assets/images/economist.jpg" alt="The Economist" />\n                </div>\n                <div class="awardDetails">\n                    Ei Mindspark has been featured twice in The Economist for its learning-by-doing approach to maths.\n                </div>\n            </div>\n            <div fxFlex="25" fxFlex.xs="50" fxFlex.sm="50" class="awardInfo" [ngStyle.xs]="{\'margin-top\':\'30px\'}">\n                <div class="awardSymbol">\n                    <img loading="lazy" class="awardImage" src="assets/images/ida.jpg" alt="IDA AWARDS EDUCATION" />\n                </div>\n                <div class="awardDetails">\n                    Ei Mindspark was declared Best Product of the Year by the IDA Awards at DIDAC India 2018.\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>',
              styles: [
                ".awardContainer {\n  display: flex;\n  justify-content: center;\n}\n\n.awardWrapper {\n  margin: 120px 0px 20px 0px;\n  width: 1302px;\n}\n\n.awardTittle {\n  margin: 10px 10px;\n  font-size: 36px;\n  font-weight: bold;\n  line-height: 1.36;\n  text-align: center;\n  color: #212121;\n}\n\n.awardDetails {\n  width: 172px;\n  margin: 25px 0 0;\n  font-family: Manrope;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: left;\n  color: #868686;\n}\n\n.awards {\n  margin: 100px 0px 80px 111px;\n}\n\n.awardSymbol {\n  height: 66px;\n}\n\n@media only screen and (max-width: 767px) {\n  .awardDetails {\n    font-size: 12px;\n    width: 100%;\n    text-align: center;\n  }\n\n  .awardImage {\n    margin: 0;\n    max-width: 106px;\n  }\n\n  .awardWrapper {\n    width: 100%;\n    margin: 60px 20px 20px 20px;\n  }\n\n  .awardSymbol {\n    text-align: center;\n    margin: 9px;\n  }\n}",
              ],
            }),
          ],
          S
        ));
      let E = class {
        constructor() {
          (this.fromEnglish = !1),
            (this.roles = ["Students", "Parents"]),
            (this.model = { role: "Students" }),
            (this.studentsData = {
              studentTittle: "self-paced, personalised learning",
              image: "assets/images/studentImage.svg",
              iconDetail: "Helps students discover the why behind Maths",
              alt: "student Icon",
            }),
            (this.parentsData = {
              studentTittle: "Parents",
              image: "assets/images/parent.png",
              iconDetail: "Helps parents discover the why behind Maths",
              alt: "parent",
            }),
            (this.teachersData = {
              studentTittle: "Teachers",
              image: "assets/images/teacher.png",
              iconDetail: "Helps teachers discover the why behind Maths",
              alt: "Teacher",
            }),
            (this.selectedRole = "studentsData"),
            (this.roleWiseData = {
              Students: [
                "Adapts to each student's individual learning pace",
                "Provides instant and detailed feedback based on student response",
                "Helps students discover the why behind subject",
                "Offers inquiry based learning to ensure progress on the basis of real learning",
                "Provides Granular content to promote real learning",
              ],
              Parents: [
                "Provides regular reports on the child's performance and progress",
                "Benchmarks the child's  learning against peer groups across India",
                "Helps parents understand the child's misconceptions and areas of improvement",
                "Highlights the child's achievements and strengths",
                "Provides tailor-made recommendations on how parents can aid their child's learning",
              ],
              English: [
                "For grades 4 to 9",
                "Unique login credentials for each student",
                "Question-based learning methodology and instant feedback",
                "Contains games and activities to encourage multiple modes of engagement",
                "Teachers are provided reports based on their students\u2019 skill-specific performance as well as usage",
              ],
            });
        }
        ngOnInit() {
          1 == this.fromEnglish && (this.model.role = "English"),
            (this.data = this.studentsData);
        }
        selectTab(e) {
          (this.model.role = e),
            (this.data =
              "Students" === e
                ? this.studentsData
                : "Parents" === e
                ? this.parentsData
                : this.teachersData);
        }
      };
      (E.ctorParameters = () => []),
        (E.propDecorators = {
          fromEnglish: [{ type: u.G, args: ["fromEnglish"] }],
        }),
        (E = Object(s.a)(
          [
            Object(u.n)({
              selector: "app-role-wise",
              template:
                '<div class="roleContainer">\n    <div class="roleRectangle" [ngClass]="{\'englishContainer\': fromEnglish}">\n        <div *ngIf="!fromEnglish" class="roleSelection">\n            <label *ngFor="let option of roles; let i = index">\n                <input type="radio" name="role" (click)="selectTab(option)" [checked]="option === model.role"><span\n                    class="option" [ngStyle.xs]="{\'font-size\':\'18px\',\'padding\':\'12px 20px\'}">{{option}}</span>\n            </label>\n        </div>\n        <div class="studentDetail">\n            <div fxLayout.xs="column" fxLayout="row">\n                <div fxFlex="60">\n                    <div class="studentImage" [ngStyle.xs]="{\'margin-left\':\'67px\'}">\n                        <img loading="lazy" src="{{data.image}}" alt={{data.alt}} />\n                    </div>\n                    <div class="" [ngStyle.xs]="{\'font-size\':\'32px\',\'margin\':\'16px\'}">\n                        <div *ngIf="!fromEnglish">\n                            <h2 class="studentTittle">\n                            How Ei Mindspark helps students with <span class="text2">{{data.studentTittle}}</span>\n                        </h2>\n                        </div>\n                        <div *ngIf="fromEnglish">\n                            How Does Ei Mindspark <span class="text2">English</span> Work?\n                        </div>\n                    </div>\n                    <div class="info" [ngStyle.xs]="{\'font-size\':\'14px\',\'margin-left\':\'14px\'}">\n                        <div *ngIf="!fromEnglish">\n                            Ei Mindspark adapts itself to every student\u2019s learning level & progressively questions a\n                            student on\n                            a particular concept, providing feedback for their answers. If the student responds\n                            correctly,\n                            the next question presented is marginally more difficult than the previous one, which\n                            enables\n                            the student to self-learn the concept gradually and thoroughly.\n                        </div>\n                        <div *ngIf="fromEnglish">\n                            Ei Mindspark English is an online English learning tool.\n                        </div>\n                    </div>\n                </div>\n                <div class="benefitList" fxFlex="40" [ngStyle.xs]="{\'margin\':\'0px 10px\'}">\n                    <div class="icon" fxLayout="row">\n                        <div class="iconImage">\n\n                            <img loading="lazy" src="assets/images/circle.svg" alt="circle image" />\n                        </div>\n                        <div class="iconDetail">\n                            {{roleWiseData[model.role][0]}}\n                        </div>\n                    </div>\n                    <div class="icon" fxLayout="row">\n                        <div class="iconImage">\n                            <img loading="lazy" src="assets/images/cloud.svg" alt="clouds image" />\n                        </div>\n                        <div class="iconDetail">\n                            {{roleWiseData[model.role][1]}}\n                        </div>\n                    </div>\n                    <div class="icon" fxLayout="row">\n                        <div class="iconImage">\n\n\n                            <img loading="lazy" src="assets/images/puzzle.svg" alt="jigsaw puzzle" />\n                        </div>\n                        <div class="iconDetail">\n                            {{roleWiseData[model.role][2]}}\n                        </div>\n                    </div>\n                    <div class="icon" fxLayout="row">\n                        <div class="iconImage">\n\n                            <img loading="lazy" src="assets/images/question.svg" alt="question mark symbol" />\n                        </div>\n                        <div class="iconDetail">\n                            {{roleWiseData[model.role][3]}}\n                        </div>\n                    </div>\n                    <div class="icon" fxLayout="row">\n                        <div class="iconImage">\n\n                            <img loading="lazy" src="assets/images/msg.svg" alt="comment popup icon" />\n                        </div>\n                        <div class="iconDetail">\n                            {{roleWiseData[model.role][4]}}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>',
              styles: [
                ".roleContainer {\n  display: flex;\n  justify-content: center;\n}\n\n.roleRectangle {\n  width: 1302px;\n  padding-top: 101px;\n  background-color: #ffffff;\n}\n\n.englishContainer {\n  padding-top: 0px;\n}\n\ninput[type=radio]:checked + span {\n  background-color: #ffffff !important;\n  cursor: pointer;\n  padding: 13px 61px;\n  border: solid 2px #a01e21;\n  color: #a01e21;\n  border-radius: 29px;\n}\n\ninput[type=radio]:focus + span,\ninput:hover + span {\n  opacity: 0.7;\n}\n\ninput[type=radio] {\n  visibility: hidden;\n}\n\n.option {\n  padding: 49px;\n  opacity: 0.8;\n  font-family: Manrope;\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1.38;\n  cursor: pointer;\n  text-align: center;\n  color: #212121;\n}\n\nlabel {\n  margin-bottom: 0rem;\n  margin-left: -11px;\n}\n\n.studentImage {\n  margin: 59px 24px 24px 100px;\n  object-fit: contain;\n}\n\n.studentTittle {\n  margin: 36px 128px 24px 98px;\n  font-size: 48px;\n  font-weight: bold;\n  line-height: 1.35;\n  text-align: left;\n  color: #212121;\n}\n\n.studentTittle .text2 {\n  color: var(--maroon-color);\n  display: flex;\n}\n\n.iconDetail {\n  margin: 0px 26px;\n  font-family: Manrope;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 1.38;\n  text-align: left;\n  color: #212121;\n}\n\n.benefitList {\n  margin: 142px 40px 20px 40px;\n}\n\n.icon {\n  margin: 46px 21px;\n  align-items: center;\n}\n\n@media screen and (max-width: 1302px) and (min-width: 768px) {\n  .roleRectangle {\n    width: 100%;\n  }\n}\n\n@media only screen and (max-width: 767px) {\n  .roleRectangle {\n    width: 100%;\n  }\n\n  .iconDetail {\n    font-size: 14px;\n    margin: 0px 0px 0px 24px;\n  }\n\n  .info {\n    text-align: justify;\n  }\n\n  .studentTittle {\n    margin: 0px 0px 0px 0px;\n  }\n}\n\n.text2 {\n  font-size: 48px;\n}",
              ],
            }),
          ],
          E
        ));
      var k = n("tyNb"),
        O = n("u47x"),
        I = n("8LU1"),
        T = n("FtGj"),
        A = n("XNiG"),
        D = n("quSY"),
        M = n("VRyK"),
        P = n("LRne"),
        R = n("7Hc7"),
        j = n("JX91"),
        N = n("eIep"),
        F = n("IzEk"),
        L = n("pLZG"),
        V = n("1G5W"),
        B = n("3E0/"),
        z = n("R0Ic"),
        H = n("+rOU"),
        G = n("FKr1"),
        U = n("cH1L"),
        $ = n("rDax"),
        q = n("nLfN"),
        W = n("vxfF");
      const Y = ["*"];
      function Q(e, t) {
        if (1 & e) {
          const e = u.Sc();
          u.Rc(0, "div", 0),
            u.cd("keydown", function (t) {
              u.ud(e);
              return u.gd()._handleKeydown(t);
            })("click", function () {
              u.ud(e);
              return u.gd().closed.emit("click");
            })("@transformMenu.start", function (t) {
              u.ud(e);
              return u.gd()._onAnimationStart(t);
            })("@transformMenu.done", function (t) {
              u.ud(e);
              return u.gd()._onAnimationDone(t);
            }),
            u.Rc(1, "div", 1),
            u.jd(2),
            u.Qc(),
            u.Qc();
        }
        if (2 & e) {
          const e = u.gd();
          u.ld("id", e.panelId)("ngClass", e._classList)(
            "@transformMenu",
            e._panelAnimationState
          ),
            u.Ac("aria-label", e.ariaLabel || null)(
              "aria-labelledby",
              e.ariaLabelledby || null
            )("aria-describedby", e.ariaDescribedby || null);
        }
      }
      const K = {
          transformMenu: Object(z.n)("transformMenu", [
            Object(z.k)(
              "void",
              Object(z.l)({ opacity: 0, transform: "scale(0.8)" })
            ),
            Object(z.m)(
              "void => enter",
              Object(z.e)(
                "120ms cubic-bezier(0, 0, 0.2, 1)",
                Object(z.l)({ opacity: 1, transform: "scale(1)" })
              )
            ),
            Object(z.m)(
              "* => void",
              Object(z.e)("100ms 25ms linear", Object(z.l)({ opacity: 0 }))
            ),
          ]),
          fadeInItems: Object(z.n)("fadeInItems", [
            Object(z.k)("showing", Object(z.l)({ opacity: 1 })),
            Object(z.m)("void => *", [
              Object(z.l)({ opacity: 0 }),
              Object(z.e)("400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)"),
            ]),
          ]),
        },
        J = (K.fadeInItems, K.transformMenu, new u.E("MatMenuContent"));
      class X {
        constructor(e, t, n, s, i, r, o) {
          (this._template = e),
            (this._componentFactoryResolver = t),
            (this._appRef = n),
            (this._injector = s),
            (this._viewContainerRef = i),
            (this._document = r),
            (this._changeDetectorRef = o),
            (this._attached = new A.a());
        }
        attach(e = {}) {
          this._portal ||
            (this._portal = new H.f(this._template, this._viewContainerRef)),
            this.detach(),
            this._outlet ||
              (this._outlet = new H.d(
                this._document.createElement("div"),
                this._componentFactoryResolver,
                this._appRef,
                this._injector
              ));
          const t = this._template.elementRef.nativeElement;
          t.parentNode.insertBefore(this._outlet.outletElement, t),
            this._changeDetectorRef && this._changeDetectorRef.markForCheck(),
            this._portal.attach(this._outlet, e),
            this._attached.next();
        }
        detach() {
          this._portal.isAttached && this._portal.detach();
        }
        ngOnDestroy() {
          this._outlet && this._outlet.dispose();
        }
      }
      (X.ɵfac = function (e) {
        return new (e || X)(
          u.Mc(u.ib),
          u.Mc(u.p),
          u.Mc(u.g),
          u.Mc(u.F),
          u.Mc(u.ob),
          u.Mc(d.c),
          u.Mc(u.k)
        );
      }),
        (X.ɵdir = u.Hc({
          type: X,
          selectors: [["ng-template", "matMenuContent", ""]],
          features: [u.yc([{ provide: J, useExisting: X }])],
        })),
        (X.ctorParameters = () => [
          { type: u.ib },
          { type: u.p },
          { type: u.g },
          { type: u.F },
          { type: u.ob },
          { type: void 0, decorators: [{ type: u.C, args: [d.c] }] },
          { type: u.k },
        ]);
      const Z = new u.E("MAT_MENU_PANEL");
      const ee = Object(G.l)(Object(G.m)(class {}));
      class te extends ee {
        constructor(e, t, n, s) {
          super(),
            (this._elementRef = e),
            (this._focusMonitor = n),
            (this._parentMenu = s),
            (this.role = "menuitem"),
            (this._hovered = new A.a()),
            (this._focused = new A.a()),
            (this._highlighted = !1),
            (this._triggersSubmenu = !1),
            s && s.addItem && s.addItem(this);
        }
        focus(e = "program", t) {
          this._focusMonitor
            ? this._focusMonitor.focusVia(this._getHostElement(), e, t)
            : this._getHostElement().focus(t),
            this._focused.next(this);
        }
        ngAfterViewInit() {
          this._focusMonitor &&
            this._focusMonitor.monitor(this._elementRef, !1);
        }
        ngOnDestroy() {
          this._focusMonitor &&
            this._focusMonitor.stopMonitoring(this._elementRef),
            this._parentMenu &&
              this._parentMenu.removeItem &&
              this._parentMenu.removeItem(this),
            this._hovered.complete(),
            this._focused.complete();
        }
        _getTabIndex() {
          return this.disabled ? "-1" : "0";
        }
        _getHostElement() {
          return this._elementRef.nativeElement;
        }
        _checkDisabled(e) {
          this.disabled && (e.preventDefault(), e.stopPropagation());
        }
        _handleMouseEnter() {
          this._hovered.next(this);
        }
        getLabel() {
          var e, t;
          const n = this._elementRef.nativeElement.cloneNode(!0),
            s = n.querySelectorAll("mat-icon, .material-icons");
          for (let i = 0; i < s.length; i++) {
            const t = s[i];
            null === (e = t.parentNode) || void 0 === e || e.removeChild(t);
          }
          return (
            (null === (t = n.textContent) || void 0 === t
              ? void 0
              : t.trim()) || ""
          );
        }
      }
      (te.ɵfac = function (e) {
        return new (e || te)(u.Mc(u.v), u.Mc(d.c), u.Mc(O.c), u.Mc(Z, 8));
      }),
        (te.ɵcmp = u.Gc({
          type: te,
          selectors: [["", "mat-menu-item", ""]],
          hostAttrs: [1, "mat-focus-indicator"],
          hostVars: 10,
          hostBindings: function (e, t) {
            1 & e &&
              u.cd("click", function (e) {
                return t._checkDisabled(e);
              })("mouseenter", function () {
                return t._handleMouseEnter();
              }),
              2 & e &&
                (u.Ac("role", t.role)("tabindex", t._getTabIndex())(
                  "aria-disabled",
                  t.disabled.toString()
                )("disabled", t.disabled || null),
                u.Ec("mat-menu-item", !0)(
                  "mat-menu-item-highlighted",
                  t._highlighted
                )("mat-menu-item-submenu-trigger", t._triggersSubmenu));
          },
          inputs: {
            disabled: "disabled",
            disableRipple: "disableRipple",
            role: "role",
          },
          exportAs: ["matMenuItem"],
          features: [u.wc],
          attrs: ["mat-menu-item", ""],
          ngContentSelectors: Y,
          decls: 2,
          vars: 2,
          consts: [
            [
              "matRipple",
              "",
              1,
              "mat-menu-ripple",
              3,
              "matRippleDisabled",
              "matRippleTrigger",
            ],
          ],
          template: function (e, t) {
            1 & e && (u.kd(), u.jd(0), u.Nc(1, "div", 0)),
              2 & e &&
                (u.zc(1),
                u.ld("matRippleDisabled", t.disableRipple || t.disabled)(
                  "matRippleTrigger",
                  t._getHostElement()
                ));
          },
          directives: [G.g],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (te.ctorParameters = () => [
          { type: u.v },
          { type: void 0, decorators: [{ type: u.C, args: [d.c] }] },
          { type: O.c },
          {
            type: void 0,
            decorators: [{ type: u.C, args: [Z] }, { type: u.R }],
          },
        ]),
        (te.propDecorators = {
          role: [{ type: u.G }],
          _checkDisabled: [{ type: u.A, args: ["click", ["$event"]] }],
          _handleMouseEnter: [{ type: u.A, args: ["mouseenter"] }],
        });
      const ne = new u.E("mat-menu-default-options", {
        providedIn: "root",
        factory: function () {
          return {
            overlapTrigger: !1,
            xPosition: "after",
            yPosition: "below",
            backdropClass: "cdk-overlay-transparent-backdrop",
          };
        },
      });
      let se = 0;
      class ie {
        constructor(e, t, n) {
          (this._elementRef = e),
            (this._ngZone = t),
            (this._defaultOptions = n),
            (this._xPosition = this._defaultOptions.xPosition),
            (this._yPosition = this._defaultOptions.yPosition),
            (this._directDescendantItems = new u.X()),
            (this._tabSubscription = D.a.EMPTY),
            (this._classList = {}),
            (this._panelAnimationState = "void"),
            (this._animationDone = new A.a()),
            (this.overlayPanelClass =
              this._defaultOptions.overlayPanelClass || ""),
            (this.backdropClass = this._defaultOptions.backdropClass),
            (this._overlapTrigger = this._defaultOptions.overlapTrigger),
            (this._hasBackdrop = this._defaultOptions.hasBackdrop),
            (this.closed = new u.x()),
            (this.close = this.closed),
            (this.panelId = "mat-menu-panel-" + se++);
        }
        get xPosition() {
          return this._xPosition;
        }
        set xPosition(e) {
          (this._xPosition = e), this.setPositionClasses();
        }
        get yPosition() {
          return this._yPosition;
        }
        set yPosition(e) {
          (this._yPosition = e), this.setPositionClasses();
        }
        get overlapTrigger() {
          return this._overlapTrigger;
        }
        set overlapTrigger(e) {
          this._overlapTrigger = Object(I.b)(e);
        }
        get hasBackdrop() {
          return this._hasBackdrop;
        }
        set hasBackdrop(e) {
          this._hasBackdrop = Object(I.b)(e);
        }
        set panelClass(e) {
          const t = this._previousPanelClass;
          t &&
            t.length &&
            t.split(" ").forEach((e) => {
              this._classList[e] = !1;
            }),
            (this._previousPanelClass = e),
            e &&
              e.length &&
              (e.split(" ").forEach((e) => {
                this._classList[e] = !0;
              }),
              (this._elementRef.nativeElement.className = ""));
        }
        get classList() {
          return this.panelClass;
        }
        set classList(e) {
          this.panelClass = e;
        }
        ngOnInit() {
          this.setPositionClasses();
        }
        ngAfterContentInit() {
          this._updateDirectDescendants(),
            (this._keyManager = new O.b(this._directDescendantItems)
              .withWrap()
              .withTypeAhead()
              .withHomeAndEnd()),
            (this._tabSubscription = this._keyManager.tabOut.subscribe(() =>
              this.closed.emit("tab")
            )),
            this._directDescendantItems.changes
              .pipe(
                Object(j.a)(this._directDescendantItems),
                Object(N.a)((e) => Object(M.a)(...e.map((e) => e._focused)))
              )
              .subscribe((e) => this._keyManager.updateActiveItem(e));
        }
        ngOnDestroy() {
          this._directDescendantItems.destroy(),
            this._tabSubscription.unsubscribe(),
            this.closed.complete();
        }
        _hovered() {
          return this._directDescendantItems.changes.pipe(
            Object(j.a)(this._directDescendantItems),
            Object(N.a)((e) => Object(M.a)(...e.map((e) => e._hovered)))
          );
        }
        addItem(e) {}
        removeItem(e) {}
        _handleKeydown(e) {
          const t = e.keyCode,
            n = this._keyManager;
          switch (t) {
            case T.e:
              Object(T.o)(e) ||
                (e.preventDefault(), this.closed.emit("keydown"));
              break;
            case T.g:
              this.parentMenu &&
                "ltr" === this.direction &&
                this.closed.emit("keydown");
              break;
            case T.i:
              this.parentMenu &&
                "rtl" === this.direction &&
                this.closed.emit("keydown");
              break;
            default:
              (t !== T.l && t !== T.b) || n.setFocusOrigin("keyboard"),
                n.onKeydown(e);
          }
        }
        focusFirstItem(e = "program") {
          this.lazyContent
            ? this._ngZone.onStable
                .pipe(Object(F.a)(1))
                .subscribe(() => this._focusFirstItem(e))
            : this._focusFirstItem(e);
        }
        _focusFirstItem(e) {
          const t = this._keyManager;
          if (
            (t.setFocusOrigin(e).setFirstItemActive(),
            !t.activeItem && this._directDescendantItems.length)
          ) {
            let e =
              this._directDescendantItems.first._getHostElement().parentElement;
            for (; e; ) {
              if ("menu" === e.getAttribute("role")) {
                e.focus();
                break;
              }
              e = e.parentElement;
            }
          }
        }
        resetActiveItem() {
          this._keyManager.setActiveItem(-1);
        }
        setElevation(e) {
          const t = "mat-elevation-z" + Math.min(4 + e, 24),
            n = Object.keys(this._classList).find((e) =>
              e.startsWith("mat-elevation-z")
            );
          (n && n !== this._previousElevation) ||
            (this._previousElevation &&
              (this._classList[this._previousElevation] = !1),
            (this._classList[t] = !0),
            (this._previousElevation = t));
        }
        setPositionClasses(e = this.xPosition, t = this.yPosition) {
          const n = this._classList;
          (n["mat-menu-before"] = "before" === e),
            (n["mat-menu-after"] = "after" === e),
            (n["mat-menu-above"] = "above" === t),
            (n["mat-menu-below"] = "below" === t);
        }
        _startAnimation() {
          this._panelAnimationState = "enter";
        }
        _resetAnimation() {
          this._panelAnimationState = "void";
        }
        _onAnimationDone(e) {
          this._animationDone.next(e), (this._isAnimating = !1);
        }
        _onAnimationStart(e) {
          (this._isAnimating = !0),
            "enter" === e.toState &&
              0 === this._keyManager.activeItemIndex &&
              (e.element.scrollTop = 0);
        }
        _updateDirectDescendants() {
          this._allItems.changes
            .pipe(Object(j.a)(this._allItems))
            .subscribe((e) => {
              this._directDescendantItems.reset(
                e.filter((e) => e._parentMenu === this)
              ),
                this._directDescendantItems.notifyOnChanges();
            });
        }
      }
      (ie.ɵfac = function (e) {
        return new (e || ie)(u.Mc(u.v), u.Mc(u.Q), u.Mc(ne));
      }),
        (ie.ɵdir = u.Hc({
          type: ie,
          contentQueries: function (e, t, n) {
            if (
              (1 & e && (u.Fc(n, J, !0), u.Fc(n, te, !0), u.Fc(n, te, !1)),
              2 & e)
            ) {
              let e;
              u.sd((e = u.dd())) && (t.lazyContent = e.first),
                u.sd((e = u.dd())) && (t._allItems = e),
                u.sd((e = u.dd())) && (t.items = e);
            }
          },
          viewQuery: function (e, t) {
            if ((1 & e && u.Id(u.ib, !0), 2 & e)) {
              let e;
              u.sd((e = u.dd())) && (t.templateRef = e.first);
            }
          },
          inputs: {
            backdropClass: "backdropClass",
            xPosition: "xPosition",
            yPosition: "yPosition",
            overlapTrigger: "overlapTrigger",
            hasBackdrop: "hasBackdrop",
            panelClass: ["class", "panelClass"],
            classList: "classList",
            ariaLabel: ["aria-label", "ariaLabel"],
            ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
            ariaDescribedby: ["aria-describedby", "ariaDescribedby"],
          },
          outputs: { closed: "closed", close: "close" },
        })),
        (ie.ctorParameters = () => [
          { type: u.v },
          { type: u.Q },
          { type: void 0, decorators: [{ type: u.C, args: [ne] }] },
        ]),
        (ie.propDecorators = {
          _allItems: [{ type: u.s, args: [te, { descendants: !0 }] }],
          backdropClass: [{ type: u.G }],
          ariaLabel: [{ type: u.G, args: ["aria-label"] }],
          ariaLabelledby: [{ type: u.G, args: ["aria-labelledby"] }],
          ariaDescribedby: [{ type: u.G, args: ["aria-describedby"] }],
          xPosition: [{ type: u.G }],
          yPosition: [{ type: u.G }],
          templateRef: [{ type: u.mb, args: [u.ib] }],
          items: [{ type: u.s, args: [te, { descendants: !1 }] }],
          lazyContent: [{ type: u.r, args: [J] }],
          overlapTrigger: [{ type: u.G }],
          hasBackdrop: [{ type: u.G }],
          panelClass: [{ type: u.G, args: ["class"] }],
          classList: [{ type: u.G }],
          closed: [{ type: u.S }],
          close: [{ type: u.S }],
        });
      class re extends ie {
        constructor(e, t, n) {
          super(e, t, n);
        }
      }
      (re.ɵfac = function (e) {
        return new (e || re)(u.Mc(u.v), u.Mc(u.Q), u.Mc(ne));
      }),
        (re.ɵcmp = u.Gc({
          type: re,
          selectors: [["mat-menu"]],
          exportAs: ["matMenu"],
          features: [u.yc([{ provide: Z, useExisting: re }]), u.wc],
          ngContentSelectors: Y,
          decls: 1,
          vars: 0,
          consts: [
            [
              "tabindex",
              "-1",
              "role",
              "menu",
              1,
              "mat-menu-panel",
              3,
              "id",
              "ngClass",
              "keydown",
              "click",
            ],
            [1, "mat-menu-content"],
          ],
          template: function (e, t) {
            1 & e && (u.kd(), u.Cd(0, Q, 3, 6, "ng-template"));
          },
          directives: [d.i],
          styles: [
            '.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:"";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\n',
          ],
          encapsulation: 2,
          data: { animation: [K.transformMenu, K.fadeInItems] },
          changeDetection: 0,
        })),
        (re.ctorParameters = () => [
          { type: u.v },
          { type: u.Q },
          { type: void 0, decorators: [{ type: u.C, args: [ne] }] },
        ]);
      const oe = new u.E("mat-menu-scroll-strategy");
      const ae = {
          provide: oe,
          deps: [$.c],
          useFactory: function (e) {
            return () => e.scrollStrategies.reposition();
          },
        },
        le = Object(q.f)({ passive: !0 });
      class ce {
        constructor(e, t, n, s, i, r, o, a) {
          (this._overlay = e),
            (this._element = t),
            (this._viewContainerRef = n),
            (this._menuItemInstance = r),
            (this._dir = o),
            (this._focusMonitor = a),
            (this._overlayRef = null),
            (this._menuOpen = !1),
            (this._closingActionsSubscription = D.a.EMPTY),
            (this._hoverSubscription = D.a.EMPTY),
            (this._menuCloseSubscription = D.a.EMPTY),
            (this._handleTouchStart = () => (this._openedBy = "touch")),
            (this._openedBy = null),
            (this.restoreFocus = !0),
            (this.menuOpened = new u.x()),
            (this.onMenuOpen = this.menuOpened),
            (this.menuClosed = new u.x()),
            (this.onMenuClose = this.menuClosed),
            (this._scrollStrategy = s),
            (this._parentMaterialMenu = i instanceof ie ? i : void 0),
            t.nativeElement.addEventListener(
              "touchstart",
              this._handleTouchStart,
              le
            ),
            r && (r._triggersSubmenu = this.triggersSubmenu());
        }
        get _deprecatedMatMenuTriggerFor() {
          return this.menu;
        }
        set _deprecatedMatMenuTriggerFor(e) {
          this.menu = e;
        }
        get menu() {
          return this._menu;
        }
        set menu(e) {
          e !== this._menu &&
            ((this._menu = e),
            this._menuCloseSubscription.unsubscribe(),
            e &&
              (this._parentMaterialMenu,
              (this._menuCloseSubscription = e.close.subscribe((e) => {
                this._destroyMenu(),
                  ("click" !== e && "tab" !== e) ||
                    !this._parentMaterialMenu ||
                    this._parentMaterialMenu.closed.emit(e);
              }))));
        }
        ngAfterContentInit() {
          this._checkMenu(), this._handleHover();
        }
        ngOnDestroy() {
          this._overlayRef &&
            (this._overlayRef.dispose(), (this._overlayRef = null)),
            this._element.nativeElement.removeEventListener(
              "touchstart",
              this._handleTouchStart,
              le
            ),
            this._menuCloseSubscription.unsubscribe(),
            this._closingActionsSubscription.unsubscribe(),
            this._hoverSubscription.unsubscribe();
        }
        get menuOpen() {
          return this._menuOpen;
        }
        get dir() {
          return this._dir && "rtl" === this._dir.value ? "rtl" : "ltr";
        }
        triggersSubmenu() {
          return !(!this._menuItemInstance || !this._parentMaterialMenu);
        }
        toggleMenu() {
          return this._menuOpen ? this.closeMenu() : this.openMenu();
        }
        openMenu() {
          if (this._menuOpen) return;
          this._checkMenu();
          const e = this._createOverlay(),
            t = e.getConfig();
          this._setPosition(t.positionStrategy),
            (t.hasBackdrop =
              null == this.menu.hasBackdrop
                ? !this.triggersSubmenu()
                : this.menu.hasBackdrop),
            e.attach(this._getPortal()),
            this.menu.lazyContent &&
              this.menu.lazyContent.attach(this.menuData),
            (this._closingActionsSubscription =
              this._menuClosingActions().subscribe(() => this.closeMenu())),
            this._initMenu(),
            this.menu instanceof ie && this.menu._startAnimation();
        }
        closeMenu() {
          this.menu.close.emit();
        }
        focus(e = "program", t) {
          this._focusMonitor
            ? this._focusMonitor.focusVia(this._element, e, t)
            : this._element.nativeElement.focus(t);
        }
        _destroyMenu() {
          if (!this._overlayRef || !this.menuOpen) return;
          const e = this.menu;
          this._closingActionsSubscription.unsubscribe(),
            this._overlayRef.detach(),
            this._restoreFocus(),
            e instanceof ie
              ? (e._resetAnimation(),
                e.lazyContent
                  ? e._animationDone
                      .pipe(
                        Object(L.a)((e) => "void" === e.toState),
                        Object(F.a)(1),
                        Object(V.a)(e.lazyContent._attached)
                      )
                      .subscribe({
                        next: () => e.lazyContent.detach(),
                        complete: () => this._setIsMenuOpen(!1),
                      })
                  : this._setIsMenuOpen(!1))
              : (this._setIsMenuOpen(!1),
                e.lazyContent && e.lazyContent.detach());
        }
        _initMenu() {
          (this.menu.parentMenu = this.triggersSubmenu()
            ? this._parentMaterialMenu
            : void 0),
            (this.menu.direction = this.dir),
            this._setMenuElevation(),
            this._setIsMenuOpen(!0),
            this.menu.focusFirstItem(this._openedBy || "program");
        }
        _setMenuElevation() {
          if (this.menu.setElevation) {
            let e = 0,
              t = this.menu.parentMenu;
            for (; t; ) e++, (t = t.parentMenu);
            this.menu.setElevation(e);
          }
        }
        _restoreFocus() {
          this.restoreFocus &&
            (this._openedBy
              ? this.triggersSubmenu() || this.focus(this._openedBy)
              : this.focus()),
            (this._openedBy = null);
        }
        _setIsMenuOpen(e) {
          (this._menuOpen = e),
            this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit(),
            this.triggersSubmenu() && (this._menuItemInstance._highlighted = e);
        }
        _checkMenu() {
          this.menu, 0;
        }
        _createOverlay() {
          if (!this._overlayRef) {
            const e = this._getOverlayConfig();
            this._subscribeToPositions(e.positionStrategy),
              (this._overlayRef = this._overlay.create(e)),
              this._overlayRef.keydownEvents().subscribe();
          }
          return this._overlayRef;
        }
        _getOverlayConfig() {
          return new $.d({
            positionStrategy: this._overlay
              .position()
              .flexibleConnectedTo(this._element)
              .withLockedPosition()
              .withTransformOriginOn(".mat-menu-panel, .mat-mdc-menu-panel"),
            backdropClass:
              this.menu.backdropClass || "cdk-overlay-transparent-backdrop",
            panelClass: this.menu.overlayPanelClass,
            scrollStrategy: this._scrollStrategy(),
            direction: this._dir,
          });
        }
        _subscribeToPositions(e) {
          this.menu.setPositionClasses &&
            e.positionChanges.subscribe((e) => {
              const t =
                  "start" === e.connectionPair.overlayX ? "after" : "before",
                n = "top" === e.connectionPair.overlayY ? "below" : "above";
              this.menu.setPositionClasses(t, n);
            });
        }
        _setPosition(e) {
          let [t, n] =
              "before" === this.menu.xPosition
                ? ["end", "start"]
                : ["start", "end"],
            [s, i] =
              "above" === this.menu.yPosition
                ? ["bottom", "top"]
                : ["top", "bottom"],
            [r, o] = [s, i],
            [a, l] = [t, n],
            c = 0;
          this.triggersSubmenu()
            ? ((l = t = "before" === this.menu.xPosition ? "start" : "end"),
              (n = a = "end" === t ? "start" : "end"),
              (c = "bottom" === s ? 8 : -8))
            : this.menu.overlapTrigger ||
              ((r = "top" === s ? "bottom" : "top"),
              (o = "top" === i ? "bottom" : "top")),
            e.withPositions([
              { originX: t, originY: r, overlayX: a, overlayY: s, offsetY: c },
              { originX: n, originY: r, overlayX: l, overlayY: s, offsetY: c },
              { originX: t, originY: o, overlayX: a, overlayY: i, offsetY: -c },
              { originX: n, originY: o, overlayX: l, overlayY: i, offsetY: -c },
            ]);
        }
        _menuClosingActions() {
          const e = this._overlayRef.backdropClick(),
            t = this._overlayRef.detachments(),
            n = this._parentMaterialMenu
              ? this._parentMaterialMenu.closed
              : Object(P.a)(),
            s = this._parentMaterialMenu
              ? this._parentMaterialMenu._hovered().pipe(
                  Object(L.a)((e) => e !== this._menuItemInstance),
                  Object(L.a)(() => this._menuOpen)
                )
              : Object(P.a)();
          return Object(M.a)(e, n, s, t);
        }
        _handleMousedown(e) {
          Object(O.g)(e) ||
            ((this._openedBy = 0 === e.button ? "mouse" : null),
            this.triggersSubmenu() && e.preventDefault());
        }
        _handleKeydown(e) {
          const t = e.keyCode;
          this.triggersSubmenu() &&
            ((t === T.i && "ltr" === this.dir) ||
              (t === T.g && "rtl" === this.dir)) &&
            this.openMenu();
        }
        _handleClick(e) {
          this.triggersSubmenu()
            ? (e.stopPropagation(), this.openMenu())
            : this.toggleMenu();
        }
        _handleHover() {
          this.triggersSubmenu() &&
            this._parentMaterialMenu &&
            (this._hoverSubscription = this._parentMaterialMenu
              ._hovered()
              .pipe(
                Object(L.a)((e) => e === this._menuItemInstance && !e.disabled),
                Object(B.a)(0, R.a)
              )
              .subscribe(() => {
                (this._openedBy = "mouse"),
                  this.menu instanceof ie && this.menu._isAnimating
                    ? this.menu._animationDone
                        .pipe(
                          Object(F.a)(1),
                          Object(B.a)(0, R.a),
                          Object(V.a)(this._parentMaterialMenu._hovered())
                        )
                        .subscribe(() => this.openMenu())
                    : this.openMenu();
              }));
        }
        _getPortal() {
          return (
            (this._portal &&
              this._portal.templateRef === this.menu.templateRef) ||
              (this._portal = new H.f(
                this.menu.templateRef,
                this._viewContainerRef
              )),
            this._portal
          );
        }
      }
      (ce.ɵfac = function (e) {
        return new (e || ce)(
          u.Mc($.c),
          u.Mc(u.v),
          u.Mc(u.ob),
          u.Mc(oe),
          u.Mc(Z, 8),
          u.Mc(te, 10),
          u.Mc(U.b, 8),
          u.Mc(O.c)
        );
      }),
        (ce.ɵdir = u.Hc({
          type: ce,
          selectors: [
            ["", "mat-menu-trigger-for", ""],
            ["", "matMenuTriggerFor", ""],
          ],
          hostAttrs: ["aria-haspopup", "true", 1, "mat-menu-trigger"],
          hostVars: 2,
          hostBindings: function (e, t) {
            1 & e &&
              u.cd("mousedown", function (e) {
                return t._handleMousedown(e);
              })("keydown", function (e) {
                return t._handleKeydown(e);
              })("click", function (e) {
                return t._handleClick(e);
              }),
              2 & e &&
                u.Ac("aria-expanded", t.menuOpen || null)(
                  "aria-controls",
                  t.menuOpen ? t.menu.panelId : null
                );
          },
          inputs: {
            restoreFocus: ["matMenuTriggerRestoreFocus", "restoreFocus"],
            _deprecatedMatMenuTriggerFor: [
              "mat-menu-trigger-for",
              "_deprecatedMatMenuTriggerFor",
            ],
            menu: ["matMenuTriggerFor", "menu"],
            menuData: ["matMenuTriggerData", "menuData"],
          },
          outputs: {
            menuOpened: "menuOpened",
            onMenuOpen: "onMenuOpen",
            menuClosed: "menuClosed",
            onMenuClose: "onMenuClose",
          },
          exportAs: ["matMenuTrigger"],
        })),
        (ce.ctorParameters = () => [
          { type: $.c },
          { type: u.v },
          { type: u.ob },
          { type: void 0, decorators: [{ type: u.C, args: [oe] }] },
          {
            type: void 0,
            decorators: [{ type: u.C, args: [Z] }, { type: u.R }],
          },
          { type: te, decorators: [{ type: u.R }, { type: u.db }] },
          { type: U.b, decorators: [{ type: u.R }] },
          { type: O.c },
        ]),
        (ce.propDecorators = {
          _deprecatedMatMenuTriggerFor: [
            { type: u.G, args: ["mat-menu-trigger-for"] },
          ],
          menu: [{ type: u.G, args: ["matMenuTriggerFor"] }],
          menuData: [{ type: u.G, args: ["matMenuTriggerData"] }],
          restoreFocus: [{ type: u.G, args: ["matMenuTriggerRestoreFocus"] }],
          menuOpened: [{ type: u.S }],
          onMenuOpen: [{ type: u.S }],
          menuClosed: [{ type: u.S }],
          onMenuClose: [{ type: u.S }],
        });
      class ue {}
      (ue.ɵmod = u.Kc({ type: ue })),
        (ue.ɵinj = u.Jc({
          factory: function (e) {
            return new (e || ue)();
          },
          providers: [ae],
          imports: [G.d],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          u.wd(ue, {
            declarations: function () {
              return [ce, X];
            },
            exports: function () {
              return [ce, X, G.d];
            },
          });
      class de {}
      (de.ɵmod = u.Kc({ type: de })),
        (de.ɵinj = u.Jc({
          factory: function (e) {
            return new (e || de)();
          },
          providers: [ae],
          imports: [[d.b, G.d, G.h, $.f, ue], W.b, G.d, ue],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          u.wd(de, {
            declarations: function () {
              return [re, te];
            },
            imports: function () {
              return [d.b, G.d, G.h, $.f, ue];
            },
            exports: function () {
              return [W.b, G.d, re, te, ue];
            },
          });
      var he = n("ZVe6"),
        pe = n("PqYM"),
        me = n("vYmM");
      let fe = class {
        constructor(e, t, n, s) {
          (this.freeTrialService = e),
            (this.liveClassesService = t),
            (this.changeDetectorRef = n),
            (this.document = s),
            (this.countDown = new D.a()),
            (this.counter = 120),
            (this.type = "resendOtp"),
            (this.token = ""),
            (this.pid = "MS1"),
            (this.tick = 1e3),
            (this.autoLoginUrl = "");
          const i = this.document.location.hostname;
          this.autoLoginUrl = Object(h.a)(i);
        }
        ngOnInit() {
          this.countDown = Object(pe.a)(0, this.tick).subscribe(() => {
            --this.counter,
              this.changeDetectorRef.detectChanges(),
              0 == this.counter &&
                (this.countDown.unsubscribe(),
                "resendOtp" == this.type
                  ? (this.freeTrialService.showResendOtp(),
                    this.liveClassesService.showResendOtp())
                  : (window.location.href =
                      this.autoLoginUrl + this.token + "&pid=" + this.pid));
          });
        }
        ngOnDestroy() {
          this.countDown.unsubscribe();
        }
      };
      (fe.ctorParameters = () => [
        { type: he.a },
        { type: me.a },
        { type: u.k },
        { type: Document, decorators: [{ type: u.C, args: [d.c] }] },
      ]),
        (fe.propDecorators = {
          counter: [{ type: u.G, args: ["countValue"] }],
          type: [{ type: u.G, args: ["counterType"] }],
          token: [{ type: u.G, args: ["token"] }],
          pid: [{ type: u.G, args: ["pid"] }],
        }),
        (fe = Object(s.a)(
          [
            Object(u.n)({
              selector: "app-countdown-timer",
              template: "{{counter | formatTime}}",
              styles: [""],
            }),
          ],
          fe
        ));
      let ge = class {
        transform(e) {
          const t = Math.floor(e / 60);
          return (
            ("00" + t).slice(-2) +
            ":" +
            ("00" + Math.floor(e - 60 * t)).slice(-2)
          );
        }
      };
      ge = Object(s.a)([Object(u.W)({ name: "formatTime" })], ge);
      var ye = n("LLTW");
      let ve = class {
        constructor(e) {
          (this.loaderService = e),
            (this.loading = !1),
            this.loaderService.isLoading.subscribe((e) => {
              this.loading = e;
            });
        }
        ngOnInit() {}
      };
      (ve.ctorParameters = () => [{ type: ye.a }]),
        (ve = Object(s.a)(
          [
            Object(u.n)({
              selector: "app-loader",
              template: '<div class="loader"></div>',
              styles: [
                ".loader {\n  width: 22px;\n  height: 22px;\n  display: inline-block;\n  padding: 0px;\n  border-radius: 100%;\n  margin-left: 4px;\n  border: 2.5px solid;\n  border-top-color: white;\n  border-bottom-color: #ffffff80;\n  border-left-color: #ffffff80;\n  border-right-color: #ffffff80;\n  animation: loader 0.5s linear infinite;\n}\n\n@keyframes loader {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}",
              ],
            }),
          ],
          ve
        ));
      let be = class {
        constructor() {
          (this.subjectId = "Maths"), (this.alt = ""), (this.subjectAlt = "");
        }
        ngOnInit() {
          console.log(this.subjectId);
        }
        getBgColor() {
          switch (this.subjectId) {
            case "English":
              return "#E0F2FD";
            case "Science":
              return "rgba(165, 209, 112, 0.4)";
            default:
              return "#FDEFE0";
          }
        }
        getLogo() {
          switch (this.subjectId) {
            case "English":
              return (this.alt = "A Z"), "assets/images/angreji.svg";
            case "Science":
              return (this.alt = "Science"), "assets/images/science.svg";
            default:
              return (
                (this.alt = "triangle and circle icon"),
                "assets/images/mathsIcon.svg"
              );
          }
        }
        getSubjectLogo() {
          switch (this.subjectId) {
            case "English":
              return (
                (this.subjectAlt = "Ei Mindspark English"),
                "assets/images/ei-mindspark-logo-eng.svg"
              );
            case "Science":
              return (
                (this.subjectAlt = "Ei Mindspark Science"),
                "assets/images/ei-mindspark-logo-science.svg"
              );
            default:
              return (
                (this.subjectAlt = "Ei Mindspark Maths"),
                "assets/images/ei-mindspark-logo-math.svg"
              );
          }
        }
        getRouterLink() {
          switch (this.subjectId) {
            case "English":
              return "/english";
            case "Science":
              return "/science";
            default:
              return "/maths";
          }
        }
      };
      (be.ctorParameters = () => []),
        (be.propDecorators = { subjectId: [{ type: u.G, args: ["subject"] }] }),
        (be = Object(s.a)(
          [
            Object(u.n)({
              selector: "app-product-intro",
              template:
                '<div class="productIntroContainer">\n    <div class="productIntroWrapper">\n        <div class="mathsItem" [ngStyle]="{background: getBgColor()}" routerLink={{getRouterLink()}}>\n            <div class="mathsItemLeft">\n                <img class="productLogo" loading="lazy"  alt={{alt}} src={{getLogo()}}/>\n                <div class="mathsInfo">\n                    <div *ngIf="subjectId == \'Maths\'">\n                        Personalised <br> <span class="math">{{subjectId}}</span> Learning\n                    </div>\n                    <div *ngIf="subjectId == \'English\'">\n                        Mastering the mountain of <br> <span class="math">Language</span>\n                    </div>\n                    <div *ngIf="subjectId == \'Science\'">\n                        Personalised <br> <span class="math">{{subjectId}}</span> Learning\n                    </div>\n\n                </div>\n            </div>\n            <div class="mathsItemRight">\n                <img loading="lazy" class="logo"  [ngStyle]="{width: \'177px\'}" alt={{subjectAlt}} src={{getSubjectLogo()}}/>\n                <img loading="lazy" fxHide.xs="true" [ngStyle]="{height: \'16px\'}" alt="right arrow mark" src="assets/images/right-arrow.svg"/>\n            </div>\n        </div>\n    </div>\n</div>\n',
              styles: [
                ".productIntroContainer {\n  display: flex;\n  justify-content: center;\n}\n\n.productIntroWrapper {\n  width: 1302px;\n  margin-top: 40px;\n}\n\n.productLogo {\n  height: 60px;\n  width: 60px;\n}\n\n.mathsItem {\n  border-radius: 24px;\n  background-color: #fdefe0;\n  padding: 20px 50px 30px 50px;\n  margin: 0px 50px;\n  display: flex;\n  justify-content: space-between;\n  cursor: pointer;\n  transition: box-shadow 0.3s;\n}\n\n.mathsItem:hover {\n  box-shadow: 0 0 11px rgba(33, 33, 33, 0.2);\n}\n\n.mathsItemLeft {\n  display: flex;\n  align-items: center;\n}\n\n.mathsInfo {\n  margin-left: 53px;\n  font-size: 20px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.35;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n}\n\n.math {\n  font-weight: bold;\n}\n\n.mathsItemRight {\n  display: flex;\n  align-items: center;\n}\n\n.logo {\n  margin-right: 80px;\n  margin-top: 10px;\n  width: 100%;\n}\n\n@media only screen and (max-width: 767px) {\n  .productIntroWrapper {\n    width: 100%;\n    margin-top: 40px;\n  }\n\n  .mathsItem {\n    margin: 0px 20px;\n    flex-direction: column;\n    margin-bottom: 40px;\n  }\n\n  .mathsItemLeft,\n.mathsItemRight {\n    flex-direction: column;\n  }\n\n  .mathsInfo {\n    margin-left: 9px;\n    margin-top: 16px;\n    text-align: center;\n  }\n\n  .logo {\n    margin-right: 0px;\n    margin-top: 42px;\n  }\n}",
              ],
            }),
          ],
          be
        ));
      let xe = class {
        constructor(e, t) {
          (this.data = e),
            (this.document = t),
            (this.success = !0),
            (this.freeTrial = !0),
            (this.token = ""),
            (this.productUrl = ""),
            (this.trialDays = "15"),
            (this.redirectPID = ""),
            (this.autoLoginUrl = ""),
            (this.token = e.token),
            (this.trialDays = e.trialPeriod ? e.trialPeriod : "15"),
            (this.redirectPID = e.redirectPid ? e.redirectPid : "MS1");
          const n = this.document.location.hostname;
          (this.productUrl = n), (this.autoLoginUrl = Object(h.a)(n));
        }
        ngOnInit() {}
        continueAction() {
          window.location.href =
            this.autoLoginUrl + this.token + "&pid=" + this.redirectPID;
        }
      };
      (xe.ctorParameters = () => [
        { type: void 0, decorators: [{ type: u.C, args: [c.a] }] },
        { type: Document, decorators: [{ type: u.C, args: [d.c] }] },
      ]),
        (xe = Object(s.a)(
          [
            Object(u.n)({
              selector: "app-success-failure-dialog",
              template:
                "<div *ngIf=\"success; else failure\">\n    \x3c!-- <div>\n        <mat-icon (click)=\"closeDialog()\" class=\"close\">close</mat-icon>\n    </div> --\x3e\n    <div class=\"successContainer\" [ngStyle.xs]=\"{'display':'block','text-align':'center','padding':'0px'}\">\n        <div class=\"successImage\">\n            <img src=\"assets/images/success.svg\" alt=\"happy smiley\">\n        </div>\n        <br>\n        <div>\n            <h2 class=\"paymentSucess\" [ngStyle.xs]=\"{'font-size':'24px'}\">\n                {{freeTrial ? 'Welcome to Mindspark' : 'Payment Successful!'}}</h2>\n        </div>\n        <div *ngIf=\"!freeTrial\">\n            <p class=\"transaction\" [ngStyle.xs]=\"{'font-size':'16px','margin-bottom':'20px','color':'#868686'}\">\n                Transaction Number : #514267876</p>\n        </div>\n        <div>\n            <p class=\"succesContent\"\n                [ngStyle.xs]=\"{'font-size':'16px','color':'#46494b','padding-top':'50px','font-weight':'500'}\">\n                {{freeTrial ? ('Your free trial of Mindspark for ' + trialDays + ' days has now begun!') : 'Your payment was processed successfully.\n                We have sent receipt to email@gmail.com'}}\n            </p>\n            <p class=\"succesSecondContent\" [ngStyle.xs]=\"{'font-size':'14px'}\">\n                Press 'continue' to log on to your Mindspark account.\n            </p>\n        </div>\n        <div *ngIf=\"freeTrial\" class=\"countDownTimer\">\n            <p>You will be redirected to <span [ngStyle]=\"{color: 'blue'}\">{{productUrl}}</span> in <span><app-countdown-timer [countValue]='20' [counterType]='free-trial' [token]=\"token\" [pid]=\"redirectPID\"></app-countdown-timer></span> seconds.</p>\n        </div>\n       \n        <div id=\"continueBtn\" mat-button class=\"tryAgain\" (click)=\"continueAction()\">\n            Continue\n        </div>\n\n        \x3c!-- <form method=\"post\" action='https://v3.mindspark.in/Mindspark/Framework/Mindspark/CommonLogin/GetLandingPage'>\n            <input type=\"hidden\" value=\"{{token}}\" name=\"token\" />\n            <input class=\"tryAgain\" (click)=\"continueAction()\" type=\"submit\" value=\"Continue\" />\n        </form> --\x3e\n    </div>\n</div>\n\n<ng-template #failure>\n    <div>\n        <mat-icon (click)=\"closeDialog()\" class=\"close\">close</mat-icon>\n    </div>\n    <div class=\"successContainer\" [ngStyle.xs]=\"{'display':'block','text-align':'center'}\">\n        <div class=\"successImage\">\n            <img src=\"assets/images/failure.png\" alt=\"failure\">\n        </div>\n        <br>\n        <div>\n            <h2 class=\"paymentFailure\" [ngStyle.xs]=\"{'font-size':'24px'}\">Sorry! Something went wrong</h2>\n        </div>\n        <div>\n            <p class=\"transaction-failed\" [ngStyle.xs]=\"{'font-size':'16px'}\">We are temporarily unable to process\n                subscription changes. Don\u2019t worry, your account will remain active on its current subscription. Please\n                try again soon or contact our service team for urgent subscription changes.</p>\n        </div>\n        <div>\n            <p class=\"suggestion\">\n                Suggection\n            </p>\n            <div class=\"verify\" [ngStyle.xs]=\"{'font-size':'16px'}\">\n                Please verify the number and try again\n            </div>\n        </div>\n        <div mat-button class=\"tryAgain\" [ngStyle.xs]=\"{'justify-content':'center','padding':'17px 66px 17px 60px;'}\">\n            Try Again\n        </div>\n        <div mat-button routerLink=\"/home\" class=\"backToHome\"\n            [ngStyle.xs]=\"{'justify-content':'center','text-align':'center'}\">Back to home\n\n        </div>\n    </div>\n</ng-template>",
              styles: [
                ".successContainer {\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.close {\n  display: flex;\n  justify-content: flex-end !important;\n  text-align: end;\n}\n\n.countDownTimer {\n  margin-top: 14px;\n}\n\n.paymentSucess {\n  text-align: center;\n  color: #a5d170;\n  font-size: 32px;\n  font-weight: bold;\n  margin-top: 10px;\n}\n\n.transaction {\n  text-align: center;\n  color: #868686;\n  font-size: 16px;\n  margin-bottom: 10px;\n}\n\n.successImage {\n  margin-top: 10px;\n  display: flex;\n  justify-content: center;\n}\n\n.succesContent {\n  font-size: 20px;\n  color: #000000;\n  font-weight: bold;\n  text-align: center;\n  margin-bottom: 0px;\n}\n\n.succesSecondContent {\n  font-size: 16px;\n  color: #969696;\n  text-align: center;\n  margin-bottom: 0px;\n}\n\n.buyNow {\n  margin: 20px;\n  padding: 17px 86px 17px 87px;\n  border-radius: 30px;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);\n  background-image: linear-gradient(257deg, #ff3449, #b91e1e);\n  font-size: 16px;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  color: #ffffff;\n  height: 56px;\n}\n\n.paymentFailure {\n  color: #f36f31;\n  font-size: 32px;\n  font-weight: bold;\n}\n\n.transaction-failed {\n  color: #46494b;\n  font-size: 20px;\n  text-align: center;\n}\n\n.verify {\n  text-align: center;\n  color: #46494b;\n  font-size: 20px;\n}\n\n.suggestion {\n  font-size: 20px;\n  color: #000000;\n  font-weight: bold;\n  text-align: center;\n}\n\n.tryAgain {\n  margin: 20px;\n  padding: 17px 86px 17px 87px;\n  border-radius: 30px;\n  background-color: black;\n  font-size: 16px;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  color: #ffffff;\n  height: 56px;\n  cursor: pointer;\n  border: 0;\n}\n\n.tryAgain:hover {\n  background-color: rgba(0, 0, 0, 0.803);\n}",
              ],
            }),
          ],
          xe
        ));
      var _e = n("uZrY"),
        we = n("xKP8");
      let Ce = class {
        constructor(e, t, n, s) {
          if (
            ((this.data = e),
            (this.dialogRef = t),
            (this.router = n),
            (this.subscriptionService = s),
            (this.message = ""),
            (this.isUpdatePackage = !1),
            1 == e.products.length)
          ) {
            let t = e.products[0].split(",");
            if (t.length > 1)
              this.message =
                "You have already have an active subscription for " +
                t.join(" and ") +
                ". Please log in to the student account and go to the profile page to view the active subscription.";
            else {
              let n = e.subject.split(",");
              const s = t[0];
              if (n.length > 1) {
                let e = n.filter(function (e) {
                    return e != s;
                  }),
                  t = this.subscriptionService.activePlan,
                  i = this.subscriptionService
                    .getPackageDataById(t)
                    .month.split(",")[0],
                  r = e.join(",");
                this.subscriptionService.updateSubject(r);
                let o =
                  "L" === this.subscriptionService.selectedProductType
                    ? this.subscriptionService.liveClassesPackages[r]
                    : this.subscriptionService.noLiveClassesPackages[r];
                if (o.length > 0) {
                  let e = o.filter(function (e) {
                    return e.month == i;
                  });
                  e.length > 0
                    ? this.subscriptionService.updatePlan(e[0].id)
                    : this.subscriptionService.updatePlan(o[0].id);
                }
                (this.isUpdatePackage = !0),
                  this.subscriptionService.updatePackageEmitter(),
                  (this.message =
                    "You have already have an active subscription in " +
                    s +
                    " Please log in to the student account and go to the profile page to view the active subscription. You can subscribe only for " +
                    e.join(",") +
                    " here. We have updated the subscription details.");
              } else
                this.message =
                  "You have already have an active subscription. Please log in to the student account and go to the profile page to view the active subscription.";
            }
          } else
            this.message =
              "You have already have an active subscription for " +
              e.products.join(" and ") +
              ". Please log in to the student account and go to the profile page to view the active subscription.";
        }
        ngOnInit() {}
        goToHome() {
          this.dialogRef.close();
        }
      };
      (Ce.ctorParameters = () => [
        { type: void 0, decorators: [{ type: u.C, args: [c.a] }] },
        { type: c.d },
        { type: k.b },
        { type: we.a },
      ]),
        (Ce = Object(s.a)(
          [
            Object(u.n)({
              selector: "app-popup",
              template:
                '<div class="popupContainer">\n    <div class="failureImage">\n        <img loading="lazy" src="assets/images/failure.svg" alt="failure">\n    </div>\n    <h2 class="popupContent">{{message}}</h2>\n    <a class="backButton" (click)="goToHome()">{{isUpdatePackage ? \' Okay, Update Plan\' : \'Okay\'}}</a>\n</div>',
              styles: [
                ".failureImage {\n  margin-top: 10px;\n  display: flex;\n  justify-content: center;\n}\n\n.popupContainer {\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.popupContent {\n  font-size: 20px;\n  color: #000000;\n  text-align: center;\n  max-width: 600px;\n  margin-top: 24px;\n}\n\n.productLink {\n  margin-left: 8px;\n}\n\n.backButton {\n  padding: 18px 60px;\n  background-color: #212121;\n  border-radius: 30px;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);\n  color: #ffffff;\n  font-size: 16px;\n  font-weight: bold;\n  text-align: center;\n  cursor: pointer;\n  text-decoration: none;\n  margin-top: 32px;\n}",
              ],
            }),
          ],
          Ce
        ));
      var Se = n("2Vo4"),
        Ee = n("xdV4"),
        ke = n("0pfW");
      let Oe = class {
        constructor(e, t, n, s, i, r, o, a, l, c) {
          (this.changeDetectorRef = e),
            (this._FormsBuilder = t),
            (this.subscribeService = n),
            (this.windowService = s),
            (this.freeTrialService = i),
            (this.router = r),
            (this.zone = o),
            (this.dialog = a),
            (this.clevertap = l),
            (this.document = c),
            (this.fromFreeTrial = !1),
            (this.showBasicform = !0),
            (this.showpaymentform = !1),
            (this.submitted = !1),
            (this.proceed = !1),
            (this.isDisabled = !0),
            (this.basicInfoData = {}),
            (this.className = ""),
            (this.selectedSubjects = ""),
            (this.selectPlanDestails = {}),
            (this.loaderBS = new Se.a({ loader: !1 })),
            (this.orderId = ""),
            (this.jwtToken = ""),
            (this.showSubmitLoader = !1),
            (this.isRenewStudent = !1),
            (this.renewStudentClass = ""),
            (this.showSelectPackage = !1),
            (this.showClassSelectionWaring = !1),
            (this.redirectPid = ""),
            (this.packageAmount = ""),
            (this.isIAgreeChked = !0),
            (this.isError = !1),
            (this.subscriptionText = ""),
            (this.isHighLightSection = !1),
            (this.whatsAppConsent = !0),
            (this.whatsappValue = "1"),
            (this.razorPayKey = ""),
            (this.subjectPIDs = [
              { subject: "Math", pid: "Mindspark", redirectPid: "MS1" },
              { subject: "English", pid: "MSE", redirectPid: "MS2" },
              { subject: "Science", pid: "MSS", redirectPid: "MS3" },
            ]),
            this.loaderBS.subscribe((e) => (this.showLoader = e));
          const u = this.document.location.hostname;
          this.razorPayKey = Object(h.c)(u);
        }
        ngOnInit() {
          this.subscribeService.onUpdatePackage.subscribe(() => {
            this.updateClassAndPackage();
          }),
            this.updateClassAndPackage();
          let e = this.subscribeService.renewStudent;
          if (e && Object.keys(e).length > 0) {
            (this.isRenewStudent = !0),
              (this.studentName = e.studentName),
              (this.parentName = e.parent),
              (this.email = e.email),
              (this.renewStudentClass = e.class);
            let t = e.username || "";
            this.subscribeService.updateBasicInfo("username", t),
              this.subscribeService.updateBasicInfo("isRenewStudent", "true");
            let n = this.subscribeService.getClassId(this.className);
            this.subscribeService.updateBasicInfo("whatsAppConsent", "true"),
              this.renewStudentClass != n &&
                (this.showClassSelectionWaring = !0);
          }
          (this.basicForm = this._FormsBuilder.group({
            studentName: new a.c("", [
              a.m.required,
              a.m.minLength(3),
              a.m.pattern(/^[a-zA-Z]+(?: [a-zA-Z]+)*$/),
            ]),
            parentName: new a.c("", [
              a.m.required,
              a.m.minLength(3),
              a.m.pattern(/^[a-zA-Z]+(?: [a-zA-Z]+)*$/),
            ]),
            email: new a.c("", [
              a.m.required,
              a.m.pattern(
                /^[a-zA-Z0-9](([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
              ),
            ]),
          })),
            this.getSubscriptionText(
              this.packageAmount,
              this.selectPlanDestails
            );
        }
        getProductName(e) {
          return "Math" == e ? "Maths" : e;
        }
        updateClassAndPackage() {
          let e = this.subscribeService.activePlan;
          e
            ? ((this.selectPlanDestails =
                this.subscribeService.getPackageDataById(e)),
              (this.packageAmount = this.selectPlanDestails.amount))
            : (this.showSelectPackage = !0),
            (this.basicInfoData = this.subscribeService.basicInfo),
            (this.className = this.subscribeService.activeClass),
            (this.selectedSubjects = this.subscribeService.activeSubject);
        }
        setLoader(e) {
          this.loaderBS.next({ loader: e });
        }
        basicInfo() {
          (this.showBasicform = !0), (this.showpaymentform = !1);
        }
        get f() {
          return this.basicForm.controls;
        }
        paymentDetail() {
          (this.showBasicform = !1), (this.showpaymentform = !0);
        }
        basicInfoSubmit() {
          this.isIAgreeChked
            ? ((this.submitted = !0),
              this.basicForm.invalid
                ? /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
                    navigator.userAgent
                  ) &&
                  setTimeout(() => {
                    window.scrollTo(0, 0);
                  }, 1e3)
                : this.showSubmitLoader ||
                  (this.whatsAppConsent
                    ? (this.whatsappValue = "1")
                    : (this.whatsappValue = "0"),
                  (this.showSubmitLoader = !0),
                  this.subscribeService.updateBasicInfo(
                    "parentName",
                    this.parentName
                  ),
                  this.subscribeService.updateBasicInfo(
                    "parentEmail",
                    this.email
                  ),
                  this.subscribeService.updateBasicInfo(
                    "studentName",
                    this.studentName
                  ),
                  this.subscribeService.updateBasicInfo(
                    "whatsAppConsent",
                    this.whatsappValue
                  ),
                  this.subscribeService.intiateRazorPay().subscribe((e) => {
                    if (((this.showSubmitLoader = !1), "success" == e.status)) {
                      let t = "";
                      (t = e.paymentData.razorPayOrderId
                        ? e.paymentData.razorPayOrderId
                        : e.paymentData.subscriptionId),
                        this.subscribeService.updateBasicInfo(
                          "userName",
                          e.paymentData.username
                        );
                      let n = this.subscribeService.getUTMParams(),
                        s = this.subscribeService.getBasicInfo(),
                        i = {
                          phoneNumber: s.contryCode + " " + s.phone,
                          studentName: this.studentName,
                          parentName: this.parentName,
                          email: this.email,
                          grade: this.subscribeService.getClassId(
                            this.className
                          ),
                          syllabus: this.subscribeService.syllabus,
                          userName: s.username,
                          mathsSubscription: this.subscribeService.activeSubject
                            .split(",")
                            .includes("Math"),
                          englishSubscription:
                            this.subscribeService.activeSubject
                              .split(",")
                              .includes("English"),
                          scienceSubscription:
                            this.subscribeService.activeSubject
                              .split(",")
                              .includes("Science"),
                          product:
                            "NL" == this.subscribeService.selectedProductType
                              ? "Non-Live"
                              : "Live",
                          package: this.subscribeService.activePlan,
                          utmparams: n,
                          whatsappValue: this.whatsAppConsent,
                        };
                      this.clevertap.setUserProfile(i), this.payNow(t);
                    } else {
                      let t = e.data.map((e) => e.product);
                      this.dialog
                        .open(Ce, {
                          data: { subject: this.selectedSubjects, products: t },
                          disableClose: !0,
                          autoFocus: !1,
                          maxHeight: "95vh",
                          maxWidth: "95vw",
                        })
                        .afterClosed()
                        .subscribe((e) => {});
                    }
                  })))
            : (this.isError = !0);
        }
        payNow(e) {
          let t = this.selectPlanDestails.package_description,
            n = this.basicInfoData.phone,
            s = this.basicInfoData.parentEmail,
            i = this.selectPlanDestails.is_autorenew;
          const r = {
            key: this.razorPayKey,
            amount: this.packageAmount,
            currency:
              "IN" == this.selectPlanDestails.country_code ? "INR" : "USD",
            name: "Mindspark",
            description: t || "",
            image: "assets/images/logo_dark.png",
            modal: { escape: !1 },
            notes: {},
            theme: { color: "#28a7df" },
            prefill: { email: s, contact: n },
          };
          if (
            ("1" == i ? (r.subscription_id = e) : (r.order_id = e),
            (r.handler = (t, n) => {
              n
                ? console.log(n)
                : this.onSuccessSubscription(t.razorpay_payment_id, e, i);
            }),
            (r.modal.ondismiss = () => {
              console.log("Transaction cancelled.");
            }),
            "0" != this.packageAmount)
          ) {
            new this.windowService.nativeWindow.Razorpay(r).open();
          } else this.onSuccessSubscription("-1", e, i);
        }
        onSuccessSubscription(e = "-1", t, n = "0") {
          this.setLoader(!0),
            this.changeDetectorRef.detectChanges(),
            (this.orderId = t),
            this.subscribeService
              .updateRazorPayResponse(e, t, n)
              .subscribe((t) => {
                let n = t.userData.username,
                  s = "",
                  i = "";
                this.selectedSubjects.split(",").forEach((e) => {
                  this.subjectPIDs.forEach((t) => {
                    t.subject == e &&
                      ("" == s && "" == i
                        ? ((s += t.pid), (i += t.redirectPid))
                        : ((s += "," + t.pid), (i += "," + t.redirectPid)));
                  });
                }),
                  (this.redirectPid = i),
                  this.subscribeService.getJwtToken(n, s).subscribe((t) => {
                    (this.jwtToken = t.redirectionData.JWT),
                      this.setLoader(!1),
                      (this.orderId = "-1" === e ? this.orderId : e),
                      this.subscribeService.updateJWT(this.jwtToken),
                      this.zone.run(() => {
                        this.router.navigate(["/subscription/thank-you"], {
                          queryParams: {
                            trial: "15",
                            pid: this.redirectPid,
                            orderId: this.orderId,
                            mode: "subscription",
                            isRazorPayPayment: "-1" !== e,
                          },
                        });
                      });
                  });
              });
        }
        changePackage() {
          1 == this.fromFreeTrial
            ? this.freeTrialService.updateState("package")
            : this.subscribeService.updateState("selectPlan");
        }
        applyPromo() {
          this.subscribeService.validatePromocode(this.promo).subscribe((e) => {
            if ("Success" == e.status) {
              let t = e.data;
              (this.failurePromoMessage = ""),
                (this.successPromoMessage = t.message),
                (this.packageAmount = t.amount_payable),
                this.subscribeService.updateBasicInfo("promocode_applied", "Y"),
                this.subscribeService.updateBasicInfo("promoCode", this.promo);
            } else
              (this.successPromoMessage = ""),
                (this.failurePromoMessage = e.data.message),
                this.subscribeService.updateBasicInfo("promocode_applied", "N");
          });
        }
        selectPackage() {
          1 == this.fromFreeTrial
            ? this.freeTrialService.updateState("package")
            : this.subscribeService.updateState("selectPlan");
        }
        getPackageMonth(e) {
          let t = e.month,
            n = t.split(",");
          if (n.length > 1) {
            return +n[0] > 1 ? n[0] + " months" : n[0] + " month";
          }
          return +t > 1 ? n[0] + " months" : n[0] + " month";
        }
        getSubscriptionText(e, t) {
          let n = this.selectPlanDestails.is_autorenew;
          if (
            ((this.subscriptionText = `We would automatically continue your subscription and charge the fee of ${
              "IN" == t.country_code ? "\u20b9" : "$"
            }${e} to your payment method every ${this.getPackageMonth(
              t
            )}. A reminder SMS will be sent to you 2 days before the next payment.<br>You may cancel anytime by visiting the student profile page in order to avoid future charges. Even after cancellation, you will be able to use Mindspark until the current subscription ends.`),
            "1" == n && this.isRenewStudent)
          ) {
            let e = this.subscribeService.renewStudent,
              t = e.mathsEndDate,
              n = e.englishEndDate,
              s = new Date(t),
              i = new Date(n),
              r = this.selectedSubjects.split(",");
            if (
              "Invalid Date" != s.toString() &&
              "Invalid Date" != i.toString()
            )
              s.toString() === i.toString()
                ? 1 == r.length &&
                  ("Math" == r[0]
                    ? this.getActiveSubscriptionText(s)
                    : this.getActiveSubscriptionText(i))
                : r.length > 1
                ? this.updatePackageForProduct("Math", 1)
                : "Math" == r[0]
                ? this.getActiveSubscriptionText(s)
                : this.getActiveSubscriptionText(i);
            else if (
              r.length > 1 &&
              ("Invalid Date" != s.toString() || "Invalid Date" != i.toString())
            ) {
              let e = "Invalid Date" != s.toString() ? "Math" : "English",
                t = r.filter(function (t) {
                  return t != e;
                });
              this.updatePackageForProduct(t[0], 2);
            } else
              "Invalid Date" != s.toString() &&
                "Math" == r[0] &&
                this.getActiveSubscriptionText(s),
                "Invalid Date" != i.toString() &&
                  "English" == r[0] &&
                  this.getActiveSubscriptionText(i);
          }
        }
        updatePackageForProduct(e, t) {
          let n = this.subscribeService.activePlan,
            s = this.subscribeService.getPackageDataById(n).month.split(",")[0];
          this.subscribeService.updateSubject(e);
          let i =
            "L" === this.subscribeService.selectedProductType
              ? this.subscribeService.liveClassesPackages[e]
              : this.subscribeService.noLiveClassesPackages[e];
          if (i.length > 0) {
            let e = i.filter(function (e) {
              return e.month == s;
            });
            e.length > 0
              ? this.subscribeService.updatePlan(e[0].id)
              : this.subscribeService.updatePlan(i[0].id);
          }
          (this.isHighLightSection = !0),
            this.subscribeService.updatePackageEmitter(),
            (this.subscriptionText =
              1 == t
                ? "You already have an active subscription for Maths and English. Your Maths and English subscription are renewing on different dates. We will renew your Maths subscription for now. You can independently renew English."
                : "Math" == e
                ? `You already have an active subscription for English. Your Math and English subscription are renewing on different dates. We will renew your ${e} subscription for now. You can independently renew English`
                : `You already have an active subscription for Maths. Your Math and English subscription are renewing on different dates. We will renew your ${e} subscription for now. You can independently renew Maths`);
        }
        getActiveSubscriptionText(e) {
          this.isHighLightSection = !1;
          if (new Date() < e) {
            let t = e.getDate(),
              n = [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December",
              ][e.getMonth()],
              s = e.getFullYear();
            this.subscriptionText = `You already have an active subscription. We will renew your subscription once your current subscription ends on ${n} ${t}th, ${s}. We will be deducting a refundable amount now from your account to verify payment details.`;
          }
        }
      };
      (Oe.ctorParameters = () => [
        { type: u.k },
        { type: a.b },
        { type: we.a },
        { type: Ee.a },
        { type: he.a },
        { type: k.b },
        { type: u.Q },
        { type: c.b },
        { type: ke.a },
        { type: Document, decorators: [{ type: u.C, args: [d.c] }] },
      ]),
        (Oe.propDecorators = {
          fromFreeTrial: [{ type: u.G, args: ["fromFreeTrial"] }],
        }),
        (Oe = Object(s.a)(
          [
            Object(u.n)({
              selector: "app-payment-page",
              template:
                '<div class="basicInfoContainer">\n    <div class="basicContainer">\n        <div *ngIf="showLoader?.loader" class="overLay">\n            <div class="loaderContainer">\n                <app-loader></app-loader>\n            </div>\n        </div>\n        <div class="infoContainer" fxLayout="row" fxLayout.xs="column" fxLayout.sm="column">\n            <div fxFlex="60" fxLayout.sm="80" class="leftSection">\n                <div *ngIf="showBasicform==true" class="basicInfoSection">\n                    <form [formGroup]="basicForm" class="basicForm" (ngSubmit)="onSubmit()">\n                        <div class="formHead">Basic Info </div>\n                        <div fxLayout="row" fxLayout.xs="column" fxLayoutGap="20px" fxLayoutGap.xs="0px"\n                            class="firstRow">\n                            <div fxFlex="50" class="inputField">\n                                <label>Student Name</label>\n                                <mat-form-field appearance="fill">\n                                    <input type="text" name="studentName" [(ngModel)]="studentName" matInput\n                                        class="form-control studentName " formControlName="studentName"\n                                        [ngClass]="{ \'is-invalid\': submitted && f.studentName.errors }"\n                                        placeholder="Full name of student" />\n                                    <div *ngIf="f.studentName.errors?.required" class="invalid-feedback">\n                                        <div *ngIf="f.studentName.errors?.required">Name is required</div>\n                                    </div>\n                                    <div *ngIf="f.studentName.errors?.pattern" class="invalid-feedback">\n                                        <div>Please enter a valid name</div>\n                                    </div>\n                                </mat-form-field>\n                            </div>\n                            <div fxFlex="50" class="inputField">\n                                <label>Parent Name</label>\n                                <mat-form-field appearance="fill">\n                                    <input type="text" name="parentName" [(ngModel)]="parentName" matInput\n                                        class="form-control studentName" formControlName="parentName"\n                                        [ngClass]="{ \'is-invalid\': submitted && f.parentName.errors }"\n                                        placeholder="Enter parent name" />\n                                    <div *ngIf="f.parentName.errors?.required" class="invalid-feedback">\n                                        <div>Parent name is required</div>\n                                    </div>\n                                    <div *ngIf="f.parentName.errors?.pattern" class="invalid-feedback">\n                                        <div>Please enter a valid name</div>\n                                    </div>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <div fxLayout="row" fxLayout.xs="column" fxLayoutGap.xs="0px" fxLayoutGap="20px"\n                            class="firstRow">\n                            <div fxFlex="50" class="inputField">\n                                <label>Email ID</label>\n                                <mat-form-field appearance="fill">\n                                    <input type="email" name="email" [(ngModel)]="email" matInput\n                                        class="form-control studentName " formControlName="email"\n                                        [ngClass]="{ \'is-invalid\': submitted && f.email.errors }"\n                                        placeholder="Enter parent email" />\n                                    <div *ngIf="f.email.errors?.required" class="invalid-feedback">\n                                        <div *ngIf="f.email.errors?.required">Email is required</div>\n                                    </div>\n                                    <div *ngIf="f.email.errors?.pattern" class="invalid-feedback">\n                                        <div>Please enter a valid email</div>\n                                    </div>\n                                </mat-form-field>\n                            </div>\n                            <div fxFlex="50" class="inputField">\n                                <label>Phone Number</label>\n                                <div class="phoneDetail" fxLayout="row">\n                                    {{basicInfoData.contryCode}}\n                                    <span class="vertical"></span> {{basicInfoData.phone}}\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <div *ngIf="showpaymentform==true" class="paymentSection">\n\n                    <span>Basic Info</span>\n                    <span class="blueInfo">Update Info</span>\n                    <mat-card class="previousCard">\n                        <p>Name</p>\n                        <p><span>sdln@gmail.com</span><span>78292929299</span></p>\n                    </mat-card>\n                    <div class="payTab">\n                        <p class="paymentHead">Payment</p>\n                        <p class="paymentInfo">All transactions are secure and encrypted.</p>\n                        <mat-accordion>\n\n                            <mat-expansion-panel (opened)="panelOpenState = true" (closed)="panelOpenState = false">\n                                <mat-expansion-panel-header>\n                                    <mat-panel-title class="footTitle" [ngStyle.xs]="{\'margin\':\'10px\'}">\n                                        <img src="assets/images/upi.svg" alt="Unified Payment Interface">\n                                    </mat-panel-title>\n\n                                </mat-expansion-panel-header>\n                                <ul>\n                                    <li>Features</li>\n                                    <li> Study Material</li>\n                                    <li> Become a Teacher</li>\n                                    <li>Blog</li>\n                                    <li>FAQs</li>\n                                </ul>\n\n                            </mat-expansion-panel>\n                            <mat-expansion-panel (opened)="panelOpenState = true" (closed)="panelOpenState = false">\n                                <mat-expansion-panel-header>\n                                    <mat-panel-title class="footTitle" [ngStyle.xs]="{\'margin\':\'10px\'}">\n                                        <p>Credit or Debit card</p>\n                                        <div class="visa"><img src="assets/images/visa1.svg" alt="Visa Master Card">\n                                            <img src="assets/images/visa2.jpg" alt="Visa">\n                                        </div>\n\n                                    </mat-panel-title>\n\n                                </mat-expansion-panel-header>\n                                <div class="cardInput">\n                                    <label class="nameCard">Name on card</label>\n                                    <input type="email" name="email" #search matInput id="search"\n                                        class="form-control cardfield " formControlName="email"\n                                        placeholder="Enter your email" />\n                                </div>\n                                <div class="cardInput">\n                                    <label class="nameCard">Card Number</label>\n                                    <input type="email" name="email" matInput id="defaultLoginFormEmail"\n                                        class="form-control cardfield " formControlName="email"\n                                        placeholder=" Enter your email" />\n                                </div>\n                                <div fxLayout="row" fxLayoutGap="20px" class="cardInput">\n                                    <div fxFlex="50">\n                                        <label class="nameCard">Name on card</label>\n                                        <input type="email" name="email" matInput id="defaultLoginFormEmail"\n                                            class="form-control cardfield " formControlName="email"\n                                            placeholder="Enter your email" />\n                                    </div>\n                                    <div fxFlex="50">\n                                        <label class="nameCard">Name on card</label>\n                                        <input type="email" name="email" matInput id="defaultLoginFormEmail"\n                                            class="form-control cardfield " formControlName="email"\n                                            placeholder="Enter your email" />\n                                    </div>\n                                </div>\n\n                            </mat-expansion-panel>\n                            <mat-expansion-panel (opened)="panelOpenState = true" (closed)="panelOpenState = false">\n                                <mat-expansion-panel-header>\n                                    <mat-panel-title class="footTitle" [ngStyle.xs]="{\'margin\':\'10px\'}">\n                                        <img src="assets/images/razorpay.svg" alt="razorpay">\n                                    </mat-panel-title>\n\n                                </mat-expansion-panel-header>\n                                <ul>\n                                    <li>About EI</li>\n                                    <li>Careers</li>\n                                    <li>Contact</li>\n                                    <li>News</li>\n                                </ul>\n\n                            </mat-expansion-panel>\n\n                        </mat-accordion>\n                    </div>\n\n                </div>\n            </div>\n            <div fxFlex="40" class="basicPay" [ngStyle.xs]="{\'margin\':\'0px\'}">\n\n                <mat-card *ngIf="!showSelectPackage" class="basicPayCard">\n                    <div class="cardHead">\n                        <span class="payHead">Selected Package</span>\n                        <span class="blueInfo" (click)="changePackage()">Change package</span>\n                    </div>\n                    <mat-card class="basicDetailCard" [ngClass]="{basicCardWarning: showClassSelectionWaring}">\n                        <div class="font16" fxLayout="column">\n                            <div fxLayout="row" fxFlex.xs="50" fxFlex="70">\n                                <ul fxFlex="60">\n                                    <li class="greyText">Selected Class</li>\n                                    <li class="fontBold">{{className}}</li>\n                                </ul>\n                                <ul fxFlex="40">\n                                    <li class="greyText">Selected Plan</li>\n                                    <li class="fontBold">{{selectPlanDestails.package_name}} subscription</li>\n                                </ul>\n\n\n                            </div>\n                            <div fxLayout="row" fxFlex.xs="50" fxFlex="30">\n                                <ul fxFlex="60">\n                                    <li class="greyText">Selected subjects</li>\n                                    <li class="fontBold">{{getProductName(selectedSubjects)}}</li>\n                                </ul>\n                                <ul fxFlex="40">\n                                    <li class="greyText">Amount</li>\n                                    <li class="fontBold">{{selectPlanDestails["country_code"] == \'IN\' ? \'\u20b9\' : \'$\'}}\n                                        {{packageAmount}}</li>\n                                </ul>\n\n                            </div>\n                        </div>\n                    </mat-card>\n                    <div *ngIf="showClassSelectionWaring" class="classSelectionWarning">\n                        <p class="warningTxt">Your subscription will change from class {{renewStudentClass}} to\n                            {{className.toLowerCase()}}</p>\n                    </div>\n                    <div class="promoCodeContainer" fxLayout="row" fxLayout.xs="column" fxLayoutGap="20px">\n                        <input type="text" name="promo" [(ngModel)]="promo" matInput class="form-control promoCode"\n                            placeholder="Promo Code" />\n                        <button mat-button (click)="applyPromo()" [disabled]="!promo" class="applyBtn btn"\n                            [ngStyle.xs]="{\'width\':\'100%\'}"><span>Apply</span> </button>\n                    </div>\n                    <p class="valid">{{successPromoMessage}}</p>\n                    <p class="invalid">{{failurePromoMessage}}</p>\n\n                    <div *ngIf="selectPlanDestails.is_autorenew == \'1\'" class="subscriptionText">\n                        <div class="subscriptionTextHead">\n                            <span class="payHead">Subscription Details</span>\n                        </div>\n                        <mat-card class="basicDetailCard" [ngClass]="{highlightDetailCard: isHighLightSection}">\n                            <p [innerHTML]="subscriptionText" class="infoText"\n                                [ngClass]="{blackColor: isHighLightSection}">\n                            </p>\n                        </mat-card>\n                    </div>\n                    \x3c!-- <mat-card class="basicDetailCard" [ngClass]="{errorBorder: !isIAgreeChked && isError}">\n                        <div class="greyText pb-2">We will be sending your Mindspark username and password to your email\n                            address and registered mobile number.</div>\n                        <mat-checkbox labelPosition="after" class="greyText" [checked]="isIAgreeChked"\n                            (change)="ChkIAgreeSelectionChanged()">I Agree\n                        </mat-checkbox><br/>\n                        <mat-checkbox labelPosition="after" class="greyText" [checked]="whatsAppConsent"\n                            (change)="whatsAppConsent = !whatsAppConsent">Get important updates on WhatsApp.\n                        </mat-checkbox>\n                       \n                    </mat-card> --\x3e\n                    \x3c!-- <hr>\n                    <div fxLayout="row">\n                        <div fxFlex="80" class="labelPrice">\n                            <div>Subtotal</div>\n                        </div>\n                        <div fxFlex="20" class="labelamount">\n                            <div class="numInfo">\u20b9{{packageAmount}}</div>\n                        </div>\n                    </div> --\x3e\n                    <hr>\n                    <div fxLayout="row">\n                        <div class="numInfo fontBold" fxFlex="80">Total</div>\n                        <div class="numInfo fontBold" fxFlex="20">\n                            {{selectPlanDestails["country_code"] == \'IN\' ? \'\u20b9\' : \'$\'}} {{packageAmount}}</div>\n                    </div>\n                    <br/>\n                    <mat-checkbox labelPosition="after" class="greyText" [checked]="whatsAppConsent"\n                            (change)="whatsAppConsent = !whatsAppConsent">Get important updates on WhatsApp.\n                    </mat-checkbox>\n                    <div class="btnContainer">\n                        <button mat-button (click)="basicInfoSubmit()" class="sendBtn freeTrial"\n                            [disabled]="showSubmitLoader">\n                            <div fxLayoutAlign="center" fxLayout="row">\n                                <div>Proceed</div>\n                                <app-loader *ngIf="showSubmitLoader"></app-loader>\n                            </div>\n                        </button>\n                    </div><br/>\n                    <div class="greyText pb-2">By proceeding you agree to our <a\n                        href="https://mindspark-ei.s3.ap-southeast-1.amazonaws.com/website/2020%20EI_Mindspark_website_TnC.pdf"\n                        target="_blank" class="blueText"><span class="one-space"></span>Terms of Use<span\n                            class="one-space"></span></a> and <a target="_blank"\n                        href="https://mindspark-ei.s3.ap-southeast-1.amazonaws.com/website/Privacy_Policy_Document_2021.pdf"\n                        class="blueText"><span class="one-space"></span>Privacy Policy<span\n                            class="one-space"></span></a></div>\n                </mat-card>\n                <div *ngIf="showSelectPackage">\n                    <mat-card class="basicPayCard">\n                        <div class="formHead">Please select a package to continue</div>\n                        <button mat-button (click)="selectPackage()" class="sendBtn freeTrial">\n                            <div fxLayout="row">\n                                <div>Select Package</div>\n                            </div>\n                        </button>\n                    </mat-card>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>',
              styles: [
                ".basicInfoContainer {\n  display: flex;\n  justify-content: center;\n}\n\n.overLay {\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  background-color: black;\n  background-color: rgba(0, 0, 0, 0.7);\n  overflow-x: hidden;\n  transition: 0.5s;\n}\n\n.infoText {\n  color: #707070;\n  font-size: 18px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.31;\n  letter-spacing: normal;\n  text-align: left;\n}\n\n.countDownTimer {\n  font-size: 16px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: center;\n  color: #46494b;\n}\n\n.sendBtn {\n  padding: 8px 57px !important;\n  border-radius: 30px;\n  font-size: 16px;\n  font-weight: bold;\n}\n\n.popup-div {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.7);\n  bottom: 0;\n  overflow: hidden;\n  overflow-y: scroll;\n  display: set;\n  z-index: 999;\n}\n\n.popup-content {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 50px 20px;\n  min-height: 100vh;\n  width: 100%;\n}\n\n.successContainer {\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: white;\n  border-radius: 20px;\n}\n\n.continueBtn {\n  margin: 20px;\n  padding: 17px 86px 17px 87px;\n  border-radius: 30px;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);\n  background-color: black;\n  font-size: 16px;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  color: #ffffff;\n  height: 56px;\n  cursor: pointer;\n}\n\n.continueBtn:hover {\n  background-color: rgba(0, 0, 0, 0.803);\n}\n\n.loaderContainer {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n}\n\n.basicContainer {\n  width: 1302px;\n}\n\n.infoContainer {\n  margin: 40px 0px;\n}\n\n.basicHeader {\n  margin: 10px 0px;\n  padding: 0px 0px 20px 0px;\n}\n\n.mindsparkLogo {\n  height: 42.5px;\n  margin-top: 40px;\n}\n\n.basicForm {\n  margin: 0px 30px 10px 0px;\n}\n\n.basicPay {\n  margin: 0px 10px 0px 115px;\n}\n\n.basicMenu {\n  font-family: Manrope;\n  font-size: 14px;\n  line-height: 1.36;\n  text-align: left;\n  color: #212121;\n}\n\n.phoneDetail {\n  border: 1px solid #ced4da;\n  padding: 12px;\n  border-radius: 1rem;\n  height: 60px;\n  margin: 10px 0px 4px 0px;\n  align-items: center;\n}\n\n.numericCode {\n  width: 13%;\n}\n\n.phoneNumber {\n  border: none !important;\n  padding: 9px 10px;\n  height: 0px;\n}\n\n.selectTab {\n  font-weight: bold;\n  color: #212121;\n}\n\n.basicTab {\n  margin: 10px 0px 20px 0px;\n}\n\n.nextTo {\n  padding: 0px 10px;\n  color: #d3d3d3;\n  font-size: 16px;\n}\n\n.formHead {\n  font-size: 32px;\n  font-weight: bold;\n  line-height: 1.38;\n  text-align: left;\n  color: #212121;\n}\n\nlabel {\n  text-align: left;\n  height: 22px;\n  font-family: Manrope;\n  font-size: 16px;\n  line-height: 1.5;\n  color: #969696;\n}\n\n.vertical {\n  border-left: solid 0.5px #707070;\n  margin: 5px;\n  color: #707070;\n  height: 80%;\n  margin: 0px 20px;\n}\n\n.topPlus {\n  padding-top: 7px;\n}\n\nmat-form-field {\n  border-radius: 0px;\n  padding: 0em;\n  background-color: #ffff;\n  width: 100%;\n}\n\n.promoCode {\n  border: none;\n}\n\n.btn {\n  color: #ffff;\n}\n\n::ng-deep.mat-form-field-appearance-fill .mat-form-field-flex {\n  background-color: #ffff;\n  padding: 2px !important;\n}\n\n::ng-deep .mat-form-field-underline {\n  display: none;\n}\n\ninput {\n  border: 1px solid #ced4da;\n  padding: 13px 10px;\n}\n\n::ng-deep.mat-form-field-wrapper {\n  padding-bottom: 0.5em;\n}\n\n.mat-form-field-appearance-fill .mat-form-field-flex {\n  border-radius: 4px 4px 0 0;\n  /* padding: .75em .75em 0 .75em; */\n}\n\n.inputField {\n  margin: 20px 0px;\n}\n\n::ng-deep.mat-form-field-appearance-fill .mat-form-field-infix {\n  padding: 0.25em 0 0.95em 0 !important;\n  border-top: 0.3em solid transparent;\n}\n\n.form-control {\n  border-radius: 1rem;\n  height: 60px;\n}\n\n.is-invalid {\n  border-color: #dc3545 !important;\n}\n\n.invalid {\n  color: #dc3545 !important;\n}\n\n.valid {\n  color: #a5d170 !important;\n}\n\n.basicPayCard {\n  background-color: #f5f5f5;\n  padding: 30px 30px 60px 30px;\n}\n\n.basicDetailCard {\n  border: solid 1px #f1f1f4;\n  background-color: #ffffff;\n  border-radius: 8px;\n  margin: 30px 0px;\n}\n\n.highlightDetailCard {\n  background-color: #fec5bb;\n}\n\n.blackColor {\n  color: black;\n}\n\n.basicCardWarning {\n  border-radius: 8px 8px 0px 0px;\n  margin-bottom: 0;\n}\n\n.payHead {\n  font-family: Manrope;\n  font-size: 16px;\n  font-weight: bold;\n  line-height: 1.38;\n  text-align: left;\n  color: #212121;\n}\n\n.previousCard {\n  border: 1px solid #d3d3d3;\n  border-radius: 12px;\n}\n\n.payTab {\n  margin: 20px 0px;\n}\n\n.paymentHead {\n  font-size: 32px;\n  font-weight: bold;\n}\n\n.paymentInfo {\n  font-size: 16px;\n  color: #969696;\n}\n\n.visa {\n  margin: auto;\n  margin-right: 0px;\n}\n\n.cardfield {\n  height: 45px;\n  border-radius: 8px;\n  border: solid 1px #f1f1f4;\n  background-color: #f5f5f5;\n}\n\n.cardInput {\n  margin: 10px 0px;\n}\n\n.nameCard {\n  font-size: 14px;\n  font-weight: 500;\n  color: #212121;\n}\n\n.mat-accordion .mat-expansion-panel {\n  margin: 30px 0px;\n  border-radius: 12px;\n  padding: 10px;\n}\n\n.blueInfo {\n  float: right;\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: bold;\n  line-height: 1.71;\n  color: #28a7df;\n  cursor: pointer;\n}\n\n.blueText {\n  font-size: 14px;\n  font-weight: 500;\n  font-stretch: normal;\n  font-style: normal;\n  color: #0000ee;\n}\n\na.blueText {\n  text-decoration: none;\n  cursor: pointer;\n}\n\n.blueText:hover,\n.blueInfo:hover {\n  text-decoration: underline;\n}\n\n.promo {\n  width: 335px;\n  background-color: #f5f5f5;\n}\n\n.applyBtn {\n  font-size: 16px;\n  font-weight: bold;\n  text-align: center;\n  color: #ffffff;\n  margin: auto;\n  padding: 4px 38px;\n  border-radius: 8px;\n  background-color: #46494b;\n  color: white;\n}\n\n.promoCodeContainer {\n  margin-bottom: 24px;\n}\n\n.promoCode {\n  height: 48px;\n  border-radius: 8px;\n  background-color: #ffffff;\n}\n\n::ng-deep.mat-button-wrapper {\n  display: flex;\n  justify-content: center;\n}\n\n.labelPrice {\n  float: left;\n}\n\n.labelamount {\n  float: right;\n}\n\n.freeTrial {\n  margin-top: 20px;\n  padding: 18px 57px;\n  width: 38%;\n}\n\n.btnContainer {\n  display: flex;\n  justify-content: center;\n}\n\nul {\n  list-style: none;\n  padding: 0px;\n}\n\ninput#search {\n  background-repeat: no-repeat;\n  text-indent: 20px;\n}\n\n.numInfo {\n  font-size: 16px;\n  color: #212121;\n}\n\n.active {\n  background-color: #46494b;\n}\n\n.mat-button.mat-button-disabled.mat-button-disabled {\n  background-color: #a5d0e3;\n  color: white;\n}\n\n.classSelectionWarning {\n  background-color: #212121;\n  padding: 8px 24px;\n  border-radius: 0px 0px 10px 10px;\n  margin-bottom: 20px;\n}\n\n.warningTxt {\n  color: white;\n  margin: 0;\n  padding: 0;\n  font-size: 14px;\n}\n\n.cardHead {\n  font-family: Manrope;\n  font-size: 20px;\n  line-height: 1.2;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n  padding: 0px 10px 0px 10px;\n}\n\n.errorMsg {\n  color: red;\n  text-align: right;\n}\n\n@media only screen and (max-width: 767px) {\n  .errorMsg {\n    font-size: 12px;\n    text-align: center;\n  }\n}\n\n.errorBorder {\n  border: 1px solid red;\n}\n\n::ng-deep mat-card .mat-checkbox-checked .mat-checkbox-background,\n.mat-checkbox-indeterminate .mat-checkbox-background {\n  background-color: #0880c5b8 !important;\n}\n\n::ng-deep mat-card .mat-checkbox:not(.mat-checkbox-disabled) .mat-checkbox-ripple .mat-ripple-element {\n  background-color: #0880c5b8 !important;\n}\n\n@media only screen and (max-width: 767px) {\n  .inputField {\n    margin: 0px;\n  }\n\n  ::ng-deep.mat-form-field-appearance-fill .mat-form-field-flex {\n    padding: 0px !important;\n  }\n\n  .basicContainer {\n    margin: 10px 11px;\n  }\n\n  .basicContainer {\n    width: 100%;\n  }\n\n  .freeTrial {\n    width: 100%;\n    justify-content: center;\n    display: flex;\n  }\n\n  .basicPayCard {\n    padding: 30px 10px 60px 10px;\n  }\n\n  .basicForm {\n    margin-right: 0px;\n  }\n}",
              ],
            }),
          ],
          Oe
        ));
      let Ie = class {
        constructor(e, t, n) {
          (this.dialog = e),
            (this.subscriptionService = t),
            (this.freeTrialSrvice = n),
            (this.fromFreeTrial = !1),
            (this.classes = [
              "Class 1",
              "Class 2",
              "Class 3",
              "Class 4",
              "Class 5",
              "Class 6",
              "Class 7",
              "Class 8",
              "Class 9",
              "Class 10",
            ]),
            (this.activeClass = ""),
            (this.activeSubject = "Math"),
            (this.activePlan = ""),
            (this.selectedProductType = ""),
            (this.syllabus = ""),
            (this.liveClassProducts = []),
            (this.noLiveClassProducts = []),
            (this.liveClassPackages = {}),
            (this.noLiveClassPackages = {}),
            (this.isAutorenew = ""),
            (this.selectedPackage = {}),
            (this.alt = ""),
            (this.CONST_NOLIVE = "NL"),
            (this.CONST_LIVE = "L"),
            (this.CONST_ENGLISH = "English"),
            (this.CONST_MATHS = "Math"),
            (this.CONST_SCIENCE = "Science"),
            (this.smallTitles = [
              {
                icon: "assets/images/reward-system.svg",
                message: "Reward System",
                iconclass: "icon-mock-test",
                messageclass: "message-mock-test",
                alt: "star",
              },
              {
                icon: "assets/images/live-question_answer.svg",
                message: "Ask Doubts",
                iconclass: "icon-ask-doubts",
                messageclass: "message-ask-doubts",
                alt: "comment",
              },
            ]),
            (this.commontitles = [
              {
                icon: "assets/images/interactive-games.svg",
                message: "Interactive games",
                iconclass: "icon-practice-worksheets",
                messageclass: "message-practice-worksheets",
                alt: "games",
              },
              ...this.smallTitles,
            ]),
            (this.noLiveClassTitles = [
              {
                icon: "assets/images/live-local_library.svg",
                message: "Adaptive Self Learning Tool (Mindspark) ",
                iconclass: "icon-adaptive-self-learning",
                messageclass: "message-adaptive-self-learning",
                alt: "library",
              },
              ...this.commontitles,
            ]),
            (this.liveClassTitles = [
              {
                icon: "assets/images/live-videocam.svg",
                message: "Interactive Live Class",
                iconclass: "icon-interactive-live-class",
                messageclass: "message-interactive-live-class",
                alt: "video",
              },
              {
                icon: "assets/images/live-assignment.svg",
                message: "In-class worksheets",
                iconclass: "icon-in-class-worksheet",
                messageclass: "message-in-class-worksheet",
                alt: "assignment",
              },
              {
                icon: "assets/images/live-task.svg",
                message: "In-class Remediation",
                iconclass: "icon-in-class-remediation",
                messageclass: "message-in-class-remediation",
                alt: "task",
              },
              {
                icon: "assets/images/live-local_library.svg",
                message: "Adaptive Self Learning Tool (Mindspark)",
                iconclass: "icon-adaptive-self-learning",
                messageclass: "message-adaptive-self-learning",
                alt: "library",
              },
              ...this.commontitles,
            ]),
            (this.showError = !1),
            (this.errorMessage = {});
        }
        ngOnInit() {
          const {
            liveClassProducts: e,
            noLiveClassProducts: t,
            liveClassesPackages: n,
            selectedProductType: s,
            noLiveClassesPackages: i,
            apiClass: r,
            activeSubject: o,
            activePlan: a,
          } = this.subscriptionService;
          (this.activeSubject = o),
            (this.selectedProductType = s),
            e &&
              e.length > 0 &&
              ((this.liveClassProducts = e),
              (this.liveClassPackages = n),
              a
                ? (this.activePlan = a)
                : "" != this.selectedProductType &&
                  this.selectedProductType == this.CONST_LIVE &&
                  ((this.activePlan =
                    this.liveClassPackages[this.activeSubject][0].id),
                  this.subscriptionService.updatePlan(this.activePlan)),
              this.isAutorenewFlagChanged(this.activePlan)),
            t &&
              t.length > 0 &&
              ((this.noLiveClassProducts = t),
              (this.noLiveClassPackages = i),
              a
                ? (this.activePlan = a)
                : "" != this.selectedProductType &&
                  this.selectedProductType == this.CONST_LIVE &&
                  ((this.activePlan =
                    this.noLiveClassPackages[this.activeSubject][0].id),
                  this.subscriptionService.updatePlan(this.activePlan)),
              this.isAutorenewFlagChanged(this.activePlan)),
            0 == this.noLiveClassProducts.length &&
              0 == this.liveClassProducts.length &&
              "" != r &&
              this.subscriptionService.getPackages(r),
            this.subscriptionService.onUpdateProduct.subscribe((e) => {
              if (
                (console.log("data", e),
                (this.liveClassProducts = e.liveClassProducts),
                (this.noLiveClassProducts = e.noLiveClassProducts),
                (this.liveClassPackages = e.liveClassPackages),
                (this.noLiveClassPackages = e.noLiveClassPackages),
                this.noLiveClassProducts.length > 0)
              ) {
                let e = this.noLiveClassProducts.join(",");
                (this.activeSubject = e),
                  this.subscriptionService.updateSubject(this.activeSubject);
              }
              if (e.noLiveClassProducts && e.noLiveClassProducts.length > 0) {
                let e = this.noLiveClassPackages[this.activeSubject];
                e && e.length > 0 && (this.activePlan = e[0].id),
                  this.subscriptionService.updatePlan(this.activePlan);
              }
            }),
            this.subscriptionService.showStudentSelection.subscribe((e) => {
              this.dialog
                .open(_e.a, {
                  data: { students: this.subscriptionService.studentsList },
                  disableClose: !0,
                  autoFocus: !1,
                  maxHeight: "95vh",
                  maxWidth: "95vw",
                })
                .afterClosed()
                .subscribe((e) => {
                  e &&
                    Object.keys(e).length > 0 &&
                    this.subscriptionService.updateActiveStudent(e),
                    this.subscriptionService.updateState("basicInfo");
                });
            }),
            (this.activeClass = this.subscriptionService.activeClass),
            (this.activeSubject = this.subscriptionService.activeSubject),
            (this.syllabus = this.subscriptionService.syllabus);
        }
        isAutorenewFlagChanged(e) {
          let t = this.subscriptionService.getPackageDataById(e);
          (this.selectedPackage = t),
            (this.isAutorenew = null == t ? void 0 : t.is_autorenew);
        }
        selectClass(e) {
          (this.showError = Object.keys(this.errorMessage).length > 0),
            delete this.errorMessage.activeClassEmpty,
            (this.activeClass = e),
            this.subscriptionService.updateClass(e),
            this.subscriptionService.getPackages(
              this.subscriptionService.getClassId(e)
            ),
            (this.activeSubject = "Math"),
            this.subscriptionService.updateSubject(this.activeSubject);
        }
        updateSubject(e, t) {
          t != this.selectedProductType &&
            ((this.selectedProductType = t),
            this.subscriptionService.updateSelectedProductType(t),
            (this.activeSubject = ""));
          let n = this.activeSubject.split(",");
          n.includes(e)
            ? n.length > 1 && (n = n.filter((t) => t != e))
            : n.push(e),
            (n = n.filter((e) => e));
          let s = "";
          if (
            (n.includes(this.CONST_MATHS) && (s += this.CONST_MATHS),
            n.includes(this.CONST_ENGLISH) &&
              (s.trim().length > 0 && (s += ","), (s += this.CONST_ENGLISH)),
            n.includes(this.CONST_SCIENCE) &&
              (s.trim().length > 0 && (s += ","), (s += this.CONST_SCIENCE)),
            (this.activeSubject = s),
            this.subscriptionService.updateSubject(s),
            this.selectedProductType === this.CONST_LIVE &&
              this.liveClassProducts &&
              this.liveClassProducts.length > 0)
          ) {
            let e = this.liveClassPackages[this.activeSubject];
            e && e.length > 0 && (this.activePlan = e[0].id);
          } else if (
            this.selectedProductType === this.CONST_NOLIVE &&
            this.noLiveClassProducts &&
            this.noLiveClassProducts.length > 0
          ) {
            let e = this.noLiveClassPackages[this.activeSubject];
            e && e.length > 0 && (this.activePlan = e[0].id);
          }
          this.subscriptionService.updatePlan(this.activePlan),
            this.isAutorenewFlagChanged(this.activePlan),
            (this.showError = Object.keys(this.errorMessage).length > 0),
            delete this.errorMessage.packageEmpty,
            delete this.errorMessage.scienceIGCSEError,
            delete this.errorMessage.liveClassIGCSEError;
        }
        isSubjectSelected(e, t) {
          let n = this.activeSubject.split(",");
          return this.selectedProductType === t && n.includes(e);
        }
        selectPlan(e) {
          (this.activePlan = e),
            this.subscriptionService.updatePlan(e),
            this.isAutorenewFlagChanged(e);
        }
        changeSyllabus(e) {
          (this.showError = Object.keys(this.errorMessage).length > 0),
            delete this.errorMessage.syllabusEmpty,
            (this.syllabus = e),
            this.subscriptionService.updateSyllabus(e);
        }
        validateFields() {
          return (
            (this.errorMessage = {}),
            "" == this.activeClass &&
              (this.errorMessage.activeClassEmpty =
                "Please select Class to continue"),
            "" == this.syllabus &&
              (this.errorMessage.syllabusEmpty =
                "Please select Syllabus to continue"),
            "" == this.selectedProductType &&
              (this.errorMessage.packageEmpty =
                "Please select a Package to continue"),
            "" != this.activeClass &&
              "" != this.syllabus &&
              "" != this.selectedProductType &&
              "IGCSE" == this.syllabus.toUpperCase() &&
              this.activeSubject.toLowerCase().split(",").includes("science") &&
              (this.errorMessage.scienceIGCSEError =
                "Science is not available for IGCSE syllabus. Please select CBSE or ICSE for Science."),
            "" != this.activeClass &&
              "" != this.syllabus &&
              "" != this.selectedProductType &&
              "IGCSE" == this.syllabus &&
              this.selectedProductType == this.CONST_LIVE &&
              (this.errorMessage.liveClassIGCSEError =
                "Selected package is not available for IGCSE syllabus. Please select CBSE or ICSE."),
            (this.showError = Object.keys(this.errorMessage).length > 0),
            !(Object.keys(this.errorMessage).length > 0)
          );
        }
        getProductName(e) {
          return "Math" == e ? "Maths" : e;
        }
        getSubjectImg(e) {
          switch (e) {
            case "English":
              return (this.alt = "A Z"), "assets/images/angreji.svg";
            case "Science":
              return (this.alt = "Science"), "assets/images/science.svg";
            default:
              return (
                (this.alt = "triangle and circle icon"),
                "assets/images/mathsIcon.svg"
              );
          }
        }
        getSelectedPackages() {
          let e = {};
          return (
            "" != this.selectedProductType &&
              (e =
                this.selectedProductType === this.CONST_LIVE
                  ? this.liveClassPackages
                  : this.noLiveClassPackages),
            e
          );
        }
        getSubscriptionMessage(e) {
          let t = "";
          if ("1" == e.is_autorenew)
            switch (e.month) {
              case "1,1":
              case "1":
                t = "per month";
                break;
              case "3,3":
              case "3":
                t = "per quarter";
                break;
              case "6,6":
              case "6":
                t = "per half year";
            }
          else t = "(One Time Purchase)";
          return t;
        }
        getLiveClassInfo(e) {
          return this.selectedProductType == this.CONST_LIVE
            ? e.split("+")[0]
            : "";
        }
        getMonthsSubscriptionText(e) {
          let t = "";
          if ("1" == e.is_autorenew)
            switch (e.month) {
              case "1,1":
              case "1":
                t = "Monthly Subscription";
                break;
              case "3,3":
              case "3":
                t = "Quarterly Subscription";
                break;
              case "6,6":
              case "6":
                t = "Half Yearly Subscription";
                break;
              default:
                t = e.month + " months";
            }
          else if ("12" === e.month || "12,12" == e.month) t = "12 months";
          else {
            t = e.month.split(",")[0] + " months";
          }
          return t;
        }
        openDialog() {
          this.validateFields()
            ? 1 == this.fromFreeTrial
              ? this.freeTrialSrvice.updateState("payment")
              : "true" == this.subscriptionService.basicInfo.isNumberVerified
              ? this.subscriptionService.updateState("basicInfo")
              : this.subscriptionService.updateState("otpVerify")
            : this.showError &&
              "" == this.syllabus &&
              setTimeout(() => {
                window.scrollTo(0, 0);
              }, 1e3);
        }
      };
      (Ie.ctorParameters = () => [
        { type: c.b },
        { type: we.a },
        { type: he.a },
      ]),
        (Ie.propDecorators = {
          fromFreeTrial: [{ type: u.G, args: ["fromFreeTrial"] }],
        }),
        (Ie = Object(s.a)(
          [
            Object(u.n)({
              selector: "app-package-select",
              template:
                '<div class="subscriptionContainer">\n    <div class="mainContainer" [ngStyle.xs]="{\'font-size\':\'18px\'}">\n        <div class="mainWrapper">\n            <div class="backgroundCard" [ngStyle.xs]="{\'padding\':\'0\'}">\n                <div class="innerContent">\n                    <div class="flex">\n                        <span>\n                            <img class="classIcon" src="assets/images/icon.png" alt="display">\n                        </span>\n                        <span class="center">\n                            <p class="loginTitle">Select Class</p>\n                        </span>\n                    </div>\n                    <div class="margin-top"\n                        [ngStyle.xs]="{\'justify-content\':\'center\',\'display\':\'none\',\'pointer\':\'cursor\'}"\n                        fxLayout="row wrap">\n                        <mat-card id="card" *ngFor="let class of classes" class="classCard zoom"\n                            (click)="selectClass(class)"\n                            [ngStyle]="activeClass === class && {\'background-color\': \'#2875df\',\'color\':\'#fff\'}"\n                            [ngStyle.xs]="{\'width\':\'132px\'}">\n                            <div>\n                                <div *ngIf="activeClass == class" class="done-icon">\n                                    <mat-icon [inline]="true">done</mat-icon>\n                                </div>\n                                <div class="center"> {{class}}</div>\n                            </div>\n                        </mat-card>\n                    </div>\n\n\n                    <div class="selectContainer" fxHide fxShow.xs>\n                        <div>\n                            <label [ngStyle.xs]="{\'font-size\':\'18px\'}" class="syllabus">Select Class</label>\n                            <span>\n                                <div>\n                                    <mat-select class="selectClass" value="{{activeClass}}" placeholder="Select"\n                                        [ngClass]="{selectError: showError && activeClass == \'\'}"\n                                        (selectionChange)="selectClass($event.value)">\n                                        <mat-option *ngFor="let class of classes" value="{{class}}">{{class}}\n                                        </mat-option>\n                                    </mat-select>\n                                </div>\n                            </span>\n                        </div>\n                        <div>\n                            <label [ngStyle.xs]="{\'font-size\':\'18px\'}" class="syllabus">Syllabus</label>\n                            <span>\n                                <div>\n                                    <mat-select value="{{syllabus}}" class="selectClass" placeholder="Select"\n                                        [ngClass]="{selectError: showError && syllabus == \'\'}"\n                                        (selectionChange)="changeSyllabus($event.value)">\n                                        <mat-option value="ICSE">ICSE</mat-option>\n                                        <mat-option value="CBSE">CBSE</mat-option>\n                                        <mat-option value="IGCSE">IGCSE</mat-option>\n                                    </mat-select>\n                                </div>\n                            </span>\n                        </div>\n                    </div>\n                    <div class="flex space-between selectSubject">\n                        <div style="display: flex;" >\n                            <div style="display: flex;" *ngIf="liveClassProducts.length > 0 || noLiveClassProducts.length > 0" >\n                                <span>\n                                    <img class="subjectIcon" src="assets/images/subject.png" alt="Subject">\n                                </span>\n                                <span>\n                                    <p class="loginTitle">Select Package</p>\n                                </span>\n                            </div>\n                        </div>\n                        <div class="space-between" [ngStyle.xs]="{\'display\':\'none\'}">\n                            <p [ngStyle.xs]="{\'font-size\':\'18px\'}" class="syllabus">Choose the Syllabus</p>\n                            <span>\n                                <div>\n                                    <mat-select value="{{syllabus}}" class="selectClass"\n                                        [ngClass]="{selectError: syllabus == \'\' && showError}" placeholder="Select"\n                                        (selectionChange)="changeSyllabus($event.value)">\n                                        <mat-option value="ICSE">ICSE</mat-option>\n                                        <mat-option value="CBSE">CBSE</mat-option>\n                                        <mat-option value="IGCSE">IGCSE</mat-option>\n                                    </mat-select>\n                                </div>\n                            </span>\n                        </div>\n                    </div>\n\n\n                    <div class="subjectSection" fxLayout="row wrap" fxLayout.xs="column nowrap" fxLayoutGap="32px"\n                        fxLayoutGap.xs="0px" fxLayoutAlign="flex-start">\n                        <mat-card *ngIf="liveClassProducts.length > 0" fxFlex="0 1 calc(50% - 16px)"\n                            fxFlex.xs="0 1 100%" class="package-selection-card"\n                            [ngClass]="{selectedCardBorder: selectedProductType == CONST_LIVE}">\n                            \x3c!--*ngIf="liveClassProducts.length--\x3e\n                            <div *ngIf="selectedProductType == CONST_LIVE" class="done-icon done-inverse-colors">\n                                <mat-icon [inline]="true">done</mat-icon>\n                            </div>\n                            <div [ngStyle.xs]="{\'display\': \'none\'}" class="center heading-font"><div [ngStyle]="{\'color\': \'#1bd697\'}">ASSISTED</div><span class="one-space"></span>+ ADAPTIVE SELF LEARNING</div>\n                            <div fxHide fxShow.xs class="center heading-font"><div [ngStyle]="{\'color\': \'#1bd697\'}">ASSISTED</div><span class="one-space"></span>+ ADAPTIVE</div>\n                            <div fxHide fxShow.xs class="center heading-font">SELF LEARNING</div>\n                            <div fxLayout="row nowrap" fxLayout.xs="column" fxLayoutGap="5px" fxLayoutGap.xs="0px"\n                                fxLayoutAlign="flex-start">\n                                <div [ngStyle.xs]="{\'display\':\'none\'}">\n                                    <div *ngFor="let item of liveClassTitles">\n                                        <div fxLayout="row nowrap" fxLayoutAlign="flex-start center">\n                                            <img src="{{item.icon}}" loading="lazy" alt={{item.alt}}\n                                                class="pr-2 {{item.iconclass}}"> <span\n                                                class="{{item.messageclass}} title-font">{{item.message}}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="" [ngStyle.xs]="{\'display\':\'none\'}">\n                                    <img src="assets/images/live-group.png" alt="live class" class="live-group-icon">\n                                </div>\n                            </div>\n\n                            <div fxHide fxShow.xs>\n                                <div *ngFor="let item of liveClassTitles;let i = index" [attr.data-index]="i">\n                                    <div *ngIf="i < liveClassTitles.length - 2" fxLayout="row nowrap"\n                                        fxLayoutAlign="flex-start center">\n                                        <img src="{{item.icon}}" loading="lazy" alt={{item.alt}} class="pr-2 {{item.iconclass}}">\n                                        <span class="{{item.messageclass}} title-font">{{item.message}}</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div fxLayout="row" fxLayoutAlign="space-between center" fxHide fxShow.xs>\n                                <div>\n                                    <div *ngFor="let item of smallTitles;">\n                                        <img src="{{item.icon}}" loading="lazy" alt={{item.alt}} class="pr-2 {{item.iconclass}}">\n                                        <span class="{{item.messageclass}} title-font">{{item.message}}</span>\n                                    </div>\n                                </div>\n                                <img src="assets/images/live-group.png" alt="live class" class="live-group-icon">\n                            </div>\n\n                            <div class="mt-auto">\n                                <div class="subject-choose-heading py-2">\n                                    {{liveClassProducts.length > 1 ? \'Choose one or more  subjects\' : \'Choose the subject\'}}\n                                </div>\n                                <div fxLayout="row nowrap" fxLayoutAlign="flex-start center"\n                                    fxLayoutAlign.xs="space-between center" fxLayoutGap="15px" fxLayoutGap.xs="16px">\n                                    <mat-card *ngFor="let product of liveClassProducts" class="classCard2 zoom"\n                                        [ngStyle]="{\'background-color\': isSubjectSelected(product,CONST_LIVE) ? \'#2875df\' :\'#ffffff\',\n                                    color: isSubjectSelected(product,CONST_LIVE) ? \'#ffffff\' : \'#212121\' }"\n                                        (click)="updateSubject(product, CONST_LIVE)" fxFlex.xs="0 1 calc(50% - 8px)" fxFlex="0 0 calc(33.33% - 10px)"\n                                        [ngStyle.xs]="{\'margin-right\':\'0\',\'background-color\': isSubjectSelected(product,CONST_LIVE) ? \'#2875df\' :\'#ffffff\',\n                                    color: isSubjectSelected(product,CONST_LIVE) ? \'#ffffff\' : \'#212121\' }">\n                                        <div>\n                                            <div *ngIf="isSubjectSelected(product,CONST_LIVE)" class="done-icon">\n                                                <mat-icon [inline]="true">done</mat-icon>\n                                            </div>\n                                            <div class="center">{{getProductName(product)}}</div>\n                                        </div>\n                                    </mat-card>\n                                </div>\n                            </div>\n\n                        </mat-card>\n\n\n\n                        <mat-card *ngIf="noLiveClassProducts.length > 0" fxFlex="0 1 calc(50% -16px)"\n                            fxFlex.xs="0 1 100%" class="package-selection-card">\n                            \x3c!--*ngIf="noLiveClassProducts.length > 0"--\x3e\n                            \x3c!-- <div *ngIf="selectedProductType == CONST_NOLIVE" class="done-icon done-inverse-colors">\n                                <mat-icon [inline]="true">done</mat-icon>\n                            </div> --\x3e\n                            \x3c!-- <div class="center heading-font">ADAPTIVE SELF LEARNING</div> --\x3e\n\n                            \x3c!-- <div fxLayout="row nowrap" fxLayout.xs="column" fxLayoutGap="5px" fxLayoutGap.xs="0px"\n                                fxLayoutAlign="flex-start center" fxLayoutAlign.xs="flex-start">\n\n                                <div [ngStyle.xs]="{\'display\':\'none\'}">\n                                    <div *ngFor="let item of noLiveClassTitles">\n                                        <div fxLayout="row nowrap" fxLayoutAlign="flex-start center">\n                                            <img src="{{item.icon}}" loading="lazy" alt=""\n                                                class="pr-2 {{item.iconclass}}"> <span\n                                                class="{{item.messageclass}} title-font">{{item.message}}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="" [ngStyle.xs]="{\'display\':\'none\'}">\n                                    <img src="assets/images/nolive-group.png" alt="" class="nolive-group-icon">\n                                </div>\n                                <div fxHide fxShow.xs>\n                                    <div *ngFor="let item of noLiveClassTitles;let i = index" [attr.data-index]="i">\n                                        <div *ngIf="i < noLiveClassTitles.length - 2" fxLayout="row nowrap"\n                                            fxLayoutAlign="flex-start center">\n                                            <img src="{{item.icon}}" loading="lazy" alt=""\n                                                class="pr-2 {{item.iconclass}}"> <span\n                                                class="{{item.messageclass}} title-font">{{item.message}}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div fxLayout="row" fxLayoutAlign="space-between center" fxHide fxShow.xs>\n                                    <div>\n                                        <div *ngFor="let item of smallTitles;">\n                                            <img src="{{item.icon}}" loading="lazy" alt=""\n                                                class="pr-2 {{item.iconclass}}"> <span\n                                                class="{{item.messageclass}} title-font">{{item.message}}</span>\n                                        </div>\n                                    </div>\n                                    <img src="assets/images/nolive-group.png" alt="" class="nolive-group-icon">\n                                </div>\n                            </div> --\x3e\n\n                            <div class="mt-auto">\n                                \x3c!-- <div class="subject-choose-heading py-2">\n                                    {{noLiveClassProducts.length > 1 ? \'Choose one or more  subjects\' : \'Choose the subject\'}}\n                                </div> --\x3e\n                                <div fxLayout="row wrap" fxLayoutAlign="flex-start center" fxLayout.xs="column"\n                                    fxLayoutAlign.xs="space-between center" fxLayoutGap="15px" fxLayoutGap.xs="16px">\n                                    <mat-card *ngFor="let product of noLiveClassProducts" class="classCard2 zoom"\n                                        [ngStyle]="{\'background-color\': isSubjectSelected(product,CONST_NOLIVE) ? \'#2875df\' :\'#ffffff\',\n                                    color: isSubjectSelected(product,CONST_NOLIVE) ? \'#ffffff\' : \'#212121\' }"\n                                        (click)="updateSubject(product, CONST_NOLIVE)" fxFlex.xs="0 1 calc(50% - 8px)" fxFlex="0 0 calc(33.33% - 10px)"\n                                        [ngStyle.xs]="{\'margin-right\':\'0\',\'background-color\': isSubjectSelected(product,CONST_NOLIVE) ? \'#2875df\' :\'#ffffff\',\n                                    color: isSubjectSelected(product,CONST_NOLIVE) ? \'#ffffff\' : \'#212121\' }">\n                                        <div>\n                                            <div *ngIf="isSubjectSelected(product,CONST_NOLIVE)" class="done-icon">\n                                                <mat-icon [inline]="true">done</mat-icon>\n                                            </div>\n                                            <div class="center">{{getProductName(product)}}</div>\n                                            <img class="center subjectImg" loading="lazy"  alt={{alt}} src={{getSubjectImg(product)}}/>\n                                        </div>\n                                    </mat-card>\n                                </div>\n                            </div>\n\n                        </mat-card>\n\n                        <div *ngIf="selectedProductType == CONST_LIVE" fxHide fxShow.xs>\n                            <div class="flex align-items-center selectPricing">\n                                <span>\n                                    <img class="pricingIcon" src="assets/images/pricing.svg" alt="pricing">\n                                </span>\n                                <span>\n                                    <p class="loginTitle">Select Pricing Plan</p>\n                                </span>\n                            </div>\n                            <div  fxLayout="column nowrap">\n                                <mat-card class="pricing-item classCard3 zoom"\n                                    *ngFor="let plan of getSelectedPackages()[activeSubject]"\n                                    (click)="selectPlan(plan.id)" [ngClass]="{activePlan: activePlan === plan.id}">\n                                    <div fxLayout="row" fxLayoutAlign="space-between center">\n                                        <div fxLayout="row" fxLayoutAlign="flex-start center">\n                                            <div *ngIf="activePlan === plan.id" class="done-icon done-inverse-colors">\n                                                <mat-icon [inline]="true">done</mat-icon>\n                                            </div>\n                                            <div *ngIf="activePlan !== plan.id" class="icon-circle">\n                                                <mat-icon [inline]="true">circle</mat-icon>\n                                            </div>\n                                            <div class="pl-1">\n                                                <div class="flex">\n                                                    <span\n                                                        class="font-amount" [ngStyle.xs]="{\'vertical-align\':\'super\'}">{{plan["country_code"] == \'IN\' ? \'\u20b9\' : \'$\'}}\n                                                        {{plan.amount}}</span>\n                                                    \x3c!--\u20b9--\x3e\n                                                    <span class="pl-2 font-actualAmount"\n                                                        *ngIf="plan.actualAmount > 0"><del\n                                                            class="font-plan" [ngStyle.xs]="{\'font-size\':\'12px\',\'vertical-align\':\'super\'}">{{plan["country_code"] == \'IN\' ? \'\u20b9\' : \'$\' }}\n                                                            {{ plan.actualAmount}}</del></span>\n                                                </div>\n                                                <div class="mobile-subscription-text">{{getSubscriptionMessage(plan)}}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class="font-plan font-weight-bold">{{getMonthsSubscriptionText(plan)}}\n                                        </div>\n                                    </div>\n\n                                </mat-card>\n                                <div class="flex" fxLayoutAlign="flex-start center">\n                                    <mat-icon [inline]="true" class="icon-done">done</mat-icon>\n                                    <p class="subscription-terms-item">\n                                        {{getLiveClassInfo(selectedPackage[\'package_description\'])}}</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div *ngIf="selectedProductType == CONST_NOLIVE && noLiveClassProducts && noLiveClassProducts.length > 0"  fxHide fxShow.xs>\n                            <div class="flex align-items-center selectPricing">\n                                <span>\n                                    <img class="pricingIcon" src="assets/images/pricing.svg" alt="pricing">\n                                </span>\n                                <span>\n                                    <p class="loginTitle">Select Pricing Plan</p>\n                                </span>\n                            </div>\n                            <div class="pb-2" fxLayout="column nowrap">\n                                <mat-card class="pricing-item classCard3 zoom"\n                                    *ngFor="let plan of getSelectedPackages()[activeSubject]"\n                                    (click)="selectPlan(plan.id)" [ngClass]="{activePlan: activePlan === plan.id}">\n                                    <div fxLayout="row" fxLayoutAlign="space-between center">\n                                        <div fxLayout="row" fxLayoutAlign="flex-start center">\n                                            <div *ngIf="activePlan === plan.id" class="done-icon done-inverse-colors">\n                                                <mat-icon [inline]="true">done</mat-icon>\n                                            </div>\n                                            <div *ngIf="activePlan !== plan.id" class="icon-circle">\n                                                <mat-icon [inline]="true">circle</mat-icon>\n                                            </div>\n                                            <div class="pl-1">\n                                                <div class="flex">\n                                                    <span\n                                                        class="font-amount" [ngStyle.xs]="{\'vertical-align\':\'super\'}">{{plan["country_code"] == \'IN\' ? \'\u20b9\' : \'$\'}}\n                                                        {{plan.amount}}</span>\n                                                    <span class="pl-2 font-actualAmount"\n                                                        *ngIf="plan.actualAmount > 0"><del\n                                                            class="font-plan" [ngStyle.xs]="{\'font-size\':\'12px\',\'vertical-align\':\'super\'}">{{plan["country_code"] == \'IN\' ? \'\u20b9\' : \'$\'}}\n                                                            {{plan.actualAmount}}</del></span>\n                                                </div>\n                                                <div class="mobile-subscription-text">{{getSubscriptionMessage(plan)}}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class="font-plan font-weight-bold">{{getMonthsSubscriptionText(plan)}}\n                                        </div>\n                                    </div>\n\n                                </mat-card>\n                            </div>\n                        </div>\n                    </div>\n\n\n\n\n                </div>\n            </div>\n            <div *ngIf="selectedProductType != \'\' && noLiveClassProducts && noLiveClassProducts.length > 0" [ngStyle.xs]="{\'display\':\'none\'}">\n                <div class="flex align-items-center selectPricing">\n                    <span>\n                        <img class="pricingIcon" src="assets/images/pricing.svg" alt="pricing">\n                    </span>\n                    <span>\n                        <p class="loginTitle">Select Pricing Plan</p>\n                    </span>\n                </div>\n                <div class="pb-2" fxLayout="column nowrap">\n                    <mat-card class="pricing-item classCard3 zoom"\n                        *ngFor="let plan of getSelectedPackages()[activeSubject]" (click)="selectPlan(plan.id)"\n                        [ngClass]="{activePlan: activePlan === plan.id}">\n                        <div fxLayout="row" fxLayoutAlign="space-between center">\n                            <div fxLayout="row" fxLayoutAlign="flex-start center">\n                                <div *ngIf="activePlan === plan.id" class="done-icon done-inverse-colors">\n                                    <mat-icon [inline]="true">done</mat-icon>\n                                </div>\n                                <div *ngIf="activePlan !== plan.id" class="icon-circle">\n                                    <mat-icon [inline]="true">circle</mat-icon>\n                                </div>\n                                <div class="pl-3" [ngClass]="{flex: plan.product_type != CONST_LIVE}"\n                                    [ngStyle.xs]="{\'display\':\'none\'}">\n                                    \x3c!--[ngStyle.xs]="{\'justify-content\':\'space-between\'}"--\x3e\n                                    <div class="flex">\n                                        <span class="font-amount">{{plan["country_code"] == \'IN\' ? \'\u20b9\' : \'$\'}}\n                                            {{plan.amount}}</span>\n                                        <span class="pl-2 font-actualAmount"\n                                            *ngIf="plan.actualAmount > 0"><del\n                                                class="font-plan">{{plan["country_code"] == \'IN\' ? \'\u20b9\' : \'$\'}}\n                                                {{plan.actualAmount}}</del></span>\n                                    </div>\n                                    <div class="font-plan font-weight-600"\n                                        [ngClass]="{\'pl-2\': plan.product_type != CONST_LIVE}">\n                                        {{getSubscriptionMessage(plan)}}</div>\n                                </div>\n                            </div>\n                            <div *ngIf="plan.product_type == CONST_LIVE" class="font-plan font-weight-bold">\n                                {{getLiveClassInfo(plan[\'package_description\'])}}</div>\n                            <div class="font-plan font-weight-bold">{{getMonthsSubscriptionText(plan)}}</div>\n                        </div>\n\n                    </mat-card>\n                </div>\n            </div>\n\n            <div class="errorContainer">\n                <div>\n                    <div *ngIf="showError && syllabus == \'\'">\n                        <p class="errorMsg">{{this.errorMessage[\'syllabusEmpty\']}}</p>\n                    </div>\n\n                    <div *ngIf="showError && activeClass == \'\'">\n                        <p class="errorMsg">{{this.errorMessage[\'activeClassEmpty\']}}</p>\n                    </div>\n\n                    <div *ngIf="showError && selectedProductType == \'\'">\n                        <p class="errorMsg">{{this.errorMessage[\'packageEmpty\']}}</p>\n                    </div>\n                    \x3c!-- <div *ngIf="showError && this.errorMessage[\'scienceIGCSEError\'] != \'\'">\n                        <p class="errorMsg">{{this.errorMessage[\'scienceIGCSEError\']}}</p>\n                    </div>\n                    <div *ngIf="showError && this.errorMessage[\'liveClassIGCSEError\'] != \'\'">\n                        <p class="errorMsg">{{this.errorMessage[\'liveClassIGCSEError\']}}</p>\n                    </div> --\x3e\n                    <div *ngIf="showError && \'scienceIGCSEError\' in this.errorMessage">\n                        <p class="errorMsg">{{this.errorMessage[\'scienceIGCSEError\']}}</p>\n                    </div>\n                    <div *ngIf="showError && \'liveClassIGCSEError\' in this.errorMessage">\n                        <p class="errorMsg">{{this.errorMessage[\'liveClassIGCSEError\']}}</p>\n                    </div>\n                </div>\n\n            </div>\n\n            <div [ngClass]="{subscriptionTermsbtnSection: isAutorenew == \'1\', btnSection: isAutorenew != \'1\'}">\n                <div class="subscription-terms" *ngIf="isAutorenew == \'1\'">\n                    <div class="flex" fxLayoutAlign="flex-start center">\n                        <mat-icon [inline]="true" class="icon-done">done</mat-icon>\n                        <p class="subscription-terms-item">Continue your subscriptions automatically</p>\n                    </div>\n                    <div class="flex" fxLayoutAlign="flex-start center">\n                        <mat-icon [inline]="true" class="icon-done">done</mat-icon>\n                        <p class="subscription-terms-item">Receive reminder before your next payment</p>\n                    </div>\n                    <div class="flex" fxLayoutAlign="flex-start center">\n                        <mat-icon [inline]="true" class="icon-done">done</mat-icon>\n                        <p class="subscription-terms-item">Cancel anytime to avoid future payments</p>\n                    </div>\n                </div>\n                <div>\n                    <div mat-button class="buyNow" (click)="openDialog()"\n                        [ngStyle.xs]="{\'align-self\':\'center\',\'width\':\'350px\'}">Buy Now\n                    </div>\n                </div>\n            </div>\n\n\n        </div>\n    </div>\n</div>',
              styles: [
                ".subscriptionContainer {\n  background-color: #f5f5f5;\n}\n\n.mainContainer {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 60px;\n}\n\n.mainWrapper {\n  width: 1302px;\n  margin-top: 40px;\n}\n\n.errorContainer {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n}\n\n::ng-deep .mat-option-text {\n  color: #46494b;\n  font-size: 16px;\n}\n\n.loginTitle {\n  text-align: start;\n  font-family: Manrope;\n  font-size: 32px;\n  font-weight: bold;\n  line-height: 1.38;\n  letter-spacing: normal;\n  color: #212121;\n  margin-left: 30px;\n}\n\n.syllabus {\n  text-align: start;\n  font-family: Manrope;\n  font-size: 16px;\n  font-weight: bold;\n  line-height: 1.38;\n  letter-spacing: normal;\n  color: #212121;\n  display: flex;\n  align-items: center;\n}\n\n.selectClass {\n  border-radius: 18px;\n  padding: 11px 26px;\n  margin-left: 18px;\n  box-shadow: 0 1px 2px 0 rgba(243, 111, 49, 0.1);\n  background-color: #ffffff;\n  font-size: 16px;\n  font-weight: bold;\n  border: none;\n  width: 170px;\n}\n\n.selectError {\n  border: 1px solid red;\n}\n\n.margin-left {\n  margin-left: 50px;\n}\n\n.margin-top {\n  margin-top: 20px;\n  justify-content: space-between;\n}\n\n.selectSubject {\n  margin-top: 90px;\n}\n\n.subjectIcon {\n  height: 54px;\n}\n\n.subjectImg {\n  margin: 5px;\n}\n\n.classCard {\n  padding: 30px 20px;\n  border-radius: 16px;\n  background-color: #fff;\n  text-align: center;\n  font-size: 16px;\n  font-weight: bold;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  border: solid 2px #f1f1f4;\n}\n\n.zoom:hover {\n  transform: scale(1.03);\n}\n\n.buyNow {\n  padding: 18px 56px;\n  border-radius: 30px;\n  background-image: linear-gradient(257deg, #ff3449, #b91e1e);\n  font-size: 16px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: center;\n  color: #ffffff;\n  display: flex;\n  justify-content: center;\n  cursor: pointer;\n}\n\n.buyNow:hover {\n  background-image: linear-gradient(257deg, #ff3449, #b91e1ec2);\n}\n\n.errorMsg {\n  color: red;\n}\n\n@media only screen and (max-width: 767px) {\n  .errorMsg {\n    font-size: 12px;\n  }\n}\n\n.classCard2 {\n  border-radius: 16px;\n  background-color: #fff;\n  text-align: center;\n  font-size: 16px;\n  font-weight: bold;\n  cursor: pointer;\n  border: solid 1.5px #2875df;\n  display: flex;\n  justify-content: center;\n  width: 150px;\n  height: 150px;\n}\n\n@media only screen and (max-width: 767px) {\n  .classCard2 {\n    padding: 12px 30px;\n    border-radius: 8px;\n    margin-bottom: 10px;\n  }\n}\n\n.subjectSection {\n  margin-top: 40px;\n}\n\n@media only screen and (max-width: 767px) {\n  .subjectSection {\n    margin-right: 0;\n  }\n}\n\n.plansSection {\n  margin-top: 60px;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  column-gap: 30px;\n}\n\nfooter {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.classCard3 {\n  border-radius: 16px;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n  background-color: #ffffff;\n  color: #212121;\n  cursor: pointer;\n  padding: 40px 20px 10px 20px;\n}\n\n.activeCard {\n  background-color: #2875df;\n  color: #ffffff;\n}\n\n.btnSection {\n  margin: 30px 0px;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.button {\n  padding: 5px 20px;\n  border-radius: 15px;\n  border: solid 1px #a5d170;\n  background-color: #a5d170;\n  margin-bottom: 20px;\n  font-size: 12px;\n  margin-top: 4px;\n  color: #fff;\n  display: flex;\n  justify-content: center;\n}\n\n.cardContent {\n  text-align: center;\n  align-items: center;\n}\n\n.mathsEnglish {\n  font-size: 23px;\n  margin-bottom: 20px;\n}\n\n.strike {\n  font-size: 16px;\n}\n\n.months {\n  font-size: 24px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 12px;\n}\n\n.done-icon {\n  width: 23px;\n  height: 23px;\n  background-color: #fff;\n  text-align: center;\n  color: #28a7df;\n  border-radius: 30px;\n  font-weight: 500;\n  font-size: 16px;\n  position: absolute;\n  top: 4px;\n  left: 4px;\n}\n\n@media only screen and (max-width: 767px) {\n  .done-icon {\n    width: 20px;\n    height: 20px;\n    border-radius: 30px;\n    font-size: 15px;\n    top: 3px;\n    left: 3px;\n  }\n}\n\n.flex {\n  display: flex;\n}\n\n.center {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.space-between {\n  display: flex;\n  justify-content: space-between;\n}\n\n.align-items-center {\n  align-items: center;\n}\n\n.selectedClass {\n  width: 178px;\n  height: 56px;\n  padding: 10px 44px 10px 12px;\n  border: solid 1px #c2e6f6;\n  background-color: #ffffff;\n  border-radius: 30px;\n}\n\n.mat-select-placeholder {\n  color: black !important;\n  font-weight: bold;\n}\n\n.serialNumber {\n  width: 32px;\n  height: 32px;\n  margin: 2px 12px 2px 0;\n  padding: 4px 7px 3px;\n  background-color: #28a7df;\n  text-align: center;\n  color: #fff;\n  border-radius: 30px;\n  font-weight: 500;\n  font-size: 16px;\n}\n\n.selectedClassHeading {\n  font-size: 11px;\n  text-align: left;\n  color: #212121;\n}\n\n.classSelected {\n  font-size: 14px;\n  color: #28a7df;\n  text-align: left;\n}\n\n.classIcon {\n  height: 58px;\n}\n\n.package-selection-card {\n  padding: 10px 28px;\n  margin: 14px 0 16.5px 0;\n  object-fit: contain;\n  border-radius: 8px;\n  background-color: inherit;\n  display: flex;\n  flex-flow: column;\n}\n\n.package-selection-card .done-inverse-colors.done-icon {\n  background-color: #2875df;\n  color: #fff;\n}\n\n@media only screen and (max-width: 767px) {\n  .package-selection-card {\n    margin: 10px 0px;\n    padding: 12.5px 12px 13px 8.5px;\n    flex: 0 1 100%;\n  }\n}\n\n.selectedCardBorder {\n  border: solid 1.5px #2875df;\n}\n\n.package-selection-card .heading-font {\n  font-size: 22px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.37;\n  letter-spacing: normal;\n  text-align: center;\n  color: #2875df;\n}\n\n@media only screen and (max-width: 767px) {\n  .package-selection-card .heading-font {\n    margin: 0 0 10px 2px;\n    font-size: 20px;\n    line-height: 1.36;\n  }\n}\n\n.title-font {\n  font-size: 16px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n}\n\n.message-interactive-live-class {\n  margin: 15.5px auto 10.5px 4px;\n}\n\n@media only screen and (max-width: 767px) {\n  .message-interactive-live-class {\n    margin: 10px 5.5px 10.5px 4px;\n  }\n}\n\n.message-in-class-worksheet {\n  margin: 10px auto 10.5px 4px;\n}\n\n@media only screen and (max-width: 767px) {\n  .message-in-class-worksheet {\n    margin: 10px 9.5px 10.5px 4px;\n  }\n}\n\n.message-in-class-remediation {\n  margin: 10.5px auto 11px 4px;\n}\n\n@media only screen and (max-width: 767px) {\n  .message-in-class-remediation {\n    margin: 10.5px 6.5px 11px 4px;\n  }\n}\n\n.message-adaptive-self-learning {\n  margin: 10.5px auto 10.5px 4px;\n}\n\n@media only screen and (max-width: 767px) {\n  .message-adaptive-self-learning {\n    margin: 10.5px 29.5px 10.5px 4px;\n  }\n}\n\n.message-practice-worksheets {\n  margin: 4px auto 10.5px 4px;\n}\n\n@media only screen and (max-width: 767px) {\n  .message-practice-worksheets {\n    margin: 11px 8px 4.5px 4px;\n  }\n}\n\n.message-mock-test {\n  margin: 10.5px auto 10.5px 4px;\n}\n\n@media only screen and (max-width: 767px) {\n  .message-mock-test {\n    margin: 10.5px 46px 10.5px 4px;\n  }\n}\n\n.message-ask-doubts {\n  margin: 10.5px auto 15.5px 3px;\n}\n\n@media only screen and (max-width: 767px) {\n  .message-ask-doubts {\n    margin: 10.5px 42.5px 12px 3px;\n  }\n}\n\n.icon-interactive-live-class {\n  margin: 18.5px 3px 12.5px 16.5px;\n}\n\n@media only screen and (max-width: 767px) {\n  .icon-interactive-live-class {\n    margin: 13px 3px 12.5px 1.5px;\n    padding: 1px 2px;\n  }\n}\n\n.icon-in-class-worksheet {\n  margin: 9.5px 1.5px 10px 15px;\n}\n\n@media only screen and (max-width: 767px) {\n  .icon-in-class-worksheet {\n    margin: 9.5px 1.5px 10px 0;\n    padding: 0.5px 1.5px 1.5px;\n  }\n}\n\n.icon-in-class-remediation {\n  margin: 10px 1.5px 10.5px 15px;\n}\n\n@media only screen and (max-width: 767px) {\n  .icon-in-class-remediation {\n    margin: 10px 1.5px 10.5px 0;\n    padding: 1px 2px;\n  }\n}\n\n.icon-adaptive-self-learning {\n  margin: 10.5px 1px 9.5px 15.5px;\n}\n\n@media only screen and (max-width: 767px) {\n  .icon-adaptive-self-learning {\n    margin: 10.5px 1px 20.5px 0.5px;\n    padding: 1px 1.5px 0.9px;\n  }\n}\n\n.icon-practice-worksheets {\n  margin: 3.5px 0.5px 10px 16px;\n}\n\n@media only screen and (max-width: 767px) {\n  .icon-practice-worksheets {\n    margin: 10.5px 0.5px 4px 1px;\n    padding: 1px;\n  }\n}\n\n.icon-mock-test {\n  margin: 10px 1.5px 10px 15px;\n}\n\n@media only screen and (max-width: 767px) {\n  .icon-mock-test {\n    margin: 10px 1.5px 10px 0;\n    padding: 1px;\n  }\n}\n\n.icon-ask-doubts {\n  margin: 10px 1.5px 15px 15px;\n}\n\n@media only screen and (max-width: 767px) {\n  .icon-ask-doubts {\n    margin: 10px 1px 11.5px 0.5px;\n    padding: 1px;\n  }\n}\n\n.live-group-icon {\n  margin: 21px 0 10.5px 15px;\n}\n\n@media only screen and (max-width: 767px) {\n  .live-group-icon {\n    margin: 0px 5px;\n    width: 80px;\n    height: 90px;\n  }\n}\n\n@media only screen and (max-width: 767px) {\n  .nolive-group-icon {\n    margin: 0px 5px;\n    width: 80px;\n    height: 90px;\n  }\n}\n\n.selectPricing {\n  margin-top: 30px;\n}\n\n.pricing-item {\n  margin: 12px 0.5px 24px 34.5px;\n  padding: 13px 21px 13px 30px;\n}\n\n@media only screen and (max-width: 767px) {\n  .pricing-item {\n    margin: 6px 0px 12px;\n    max-width: 100%;\n  }\n}\n\n.pricing-item .done-inverse-colors.done-icon {\n  background-color: #2875df;\n  color: #fff;\n  position: relative;\n}\n\n.pricing-item .icon-circle {\n  width: 23px;\n  height: 23px;\n  color: #fff;\n  border-radius: 30px;\n  border: solid 0.5px #d3d3d3;\n}\n\n@media only screen and (max-width: 767px) {\n  .pricing-item .icon-circle {\n    width: 20px;\n    height: 20px;\n    border-radius: 30px;\n    line-height: 1.2;\n  }\n}\n\n.pricing-item .font-amount {\n  font-size: 26px;\n  font-weight: 800;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.4;\n  letter-spacing: normal;\n  text-align: left;\n  color: #1bd697;\n}\n\n@media only screen and (max-width: 767px) {\n  .pricing-item .font-amount {\n    font-size: 16px;\n    font-weight: bold;\n  }\n}\n\n.pricing-item .font-actualAmount {\n  font-size: 24px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.35;\n  letter-spacing: normal;\n  text-align: left;\n  color: #707070;\n}\n\n.pricing-item .font-plan {\n  font-size: 20px;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.35;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n}\n\n@media only screen and (max-width: 767px) {\n  .pricing-item .font-plan {\n    font-size: 16px;\n    text-align: right;\n  }\n}\n\n.pricing-item .mobile-subscription-text {\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.35;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n}\n\n.activePlan {\n  border: solid 1.5px #2875df;\n}\n\n.subscription-terms {\n  margin: 0 10px 0 30px;\n}\n\n@media only screen and (max-width: 767px) {\n  .subscription-terms {\n    margin: 0px 10px 30px 0px;\n  }\n}\n\n.subject-choose-heading {\n  font-size: 12px;\n  font-weight: 200;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.36;\n  letter-spacing: normal;\n  text-align: left;\n  color: #969696;\n}\n\n.subscriptionTermsbtnSection {\n  margin: 0 0 30px 0px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n@media only screen and (max-width: 767px) {\n  .subscriptionTermsbtnSection {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n}\n\n.align-items-end {\n  align-items: flex-end;\n}\n\n.align-content-end {\n  align-content: flex-end;\n}\n\n.mt-auto {\n  margin-top: auto !important;\n}\n\n.icon-done {\n  color: #2875df;\n}\n\n.subscription-terms-item {\n  margin: 2px 5.5px 5px 5px;\n  font-family: OpenSans;\n  font-size: 15px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n}\n\n@media only screen and (max-width: 767px) {\n  .subscription-terms-item {\n    margin: 3px 4.5px 5.5px 5px;\n    font-size: 14px;\n    line-height: 1.36;\n  }\n}\n\n.pricingIcon {\n  height: 70px;\n}\n\n@media only screen and (max-width: 767px) {\n  .pricingIcon {\n    height: 50px;\n  }\n}\n\n@media only screen and (max-width: 767px) {\n  .mainWrapper {\n    width: 100%;\n    margin-top: 0px;\n  }\n\n  .errorContainer {\n    align-items: flex-start;\n    padding-left: 20px;\n  }\n\n  .plansSection {\n    grid-template-columns: 1fr;\n    row-gap: 30px;\n  }\n\n  .loginTitle {\n    font-size: 24px;\n    margin: 0px 0px 0px 12px;\n  }\n\n  .syllabus {\n    font-size: 14px;\n    color: #212121;\n    font-weight: normal;\n  }\n\n  .selectContainer {\n    margin-top: 20px;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    column-gap: 15px;\n  }\n\n  .innerContent {\n    padding: 0px 20px;\n  }\n\n  .selectClass {\n    margin-left: 0px;\n    margin-top: 8px;\n    width: 152px;\n  }\n\n  .selectSubject {\n    margin-top: 60px;\n  }\n\n  .subjectIcon {\n    height: 40px;\n  }\n\n  .btnSection {\n    width: 100%;\n    justify-content: center;\n  }\n\n  .classCard3 {\n    padding: 8.5px 10.4px 8.9px 11px;\n    border-radius: 8px;\n  }\n}",
              ],
            }),
          ],
          Ie
        ));
      var Te = n("RZTn");
      let Ae = class {
        constructor(e, t) {
          (this.route = e),
            (this.mathsService = t),
            (this.subjectText = "Maths"),
            (this.syllabusData = {}),
            (this.classes = [
              "Class 1",
              "Class 2",
              "Class 3",
              "Class 4",
              "Class 5",
              "Class 6",
              "Class 7",
              "Class 8",
              "Class 9",
              "Class 10",
            ]),
            (this.selectedClass = "Class 4"),
            (this.syllabusList = ["CBSE", "ICSE", "IGCSE"]),
            (this.selectedSyllabus = "CBSE");
        }
        onChangeClass(e) {
          (this.selectedClass = e),
            (this.currentSyllabus =
              this.syllabusData[e][this.selectedSyllabus]);
        }
        onChangeSyllabus(e) {
          (this.selectedSyllabus = e),
            (this.currentSyllabus =
              this.syllabusData[this.selectedClass][this.selectedSyllabus]);
        }
        getPagerStyle(e, t, n) {
          const s = {};
          return (
            this.selectedClass === e
              ? ((s.backgroundColor =
                  !0 === t && n === e ? "#e7e7e7" : "#ffffff"),
                (s["box-shadow"] = "0 1px 2px 0 #A01E211a"),
                (s.color = "#A01E21"))
              : ((s.backgroundColor =
                  !0 === t && n === e ? "#e7e7e7" : "transparent"),
                (s.color = "#212121"),
                (s["box-shadow"] = "0 1px 2px 0 transparent")),
            s
          );
        }
        getClassNameFromUrl(e) {
          switch (e) {
            case "class1":
              return "Class 1";
            case "class2":
              return "Class 2";
            case "class3":
              return "Class 3";
            case "class4":
              return "Class 4";
            case "class5":
              return "Class 5";
            case "class6":
              return "Class 6";
            case "class7":
              return "Class 7";
            case "class8":
              return "Class 8";
            case "class9":
              return "Class 9";
            case "class10":
              return "Class 10";
            default:
              return "Class 1";
          }
        }
        ngOnInit() {
          console.log(this.subjectText);
          let e = "class1";
          "English" == this.subjectText
            ? ((e = "class4"),
              (this.classes = [
                "Class 4",
                "Class 5",
                "Class 6",
                "Class 7",
                "Class 8",
                "Class 9",
              ]))
            : "Science" == this.subjectText &&
              ((e = "class6"),
              (this.classes = [
                "Class 6",
                "Class 7",
                "Class 8",
                "Class 9",
                "Class 10",
              ]),
              (this.syllabusList = ["CBSE", "ICSE"])),
            this.route.paramMap.subscribe((t) => {
              let n = this.route.snapshot.paramMap.get("id");
              (this.selectedClass = this.getClassNameFromUrl(n || e)),
                this.mathsService
                  .getJsonData(this.subjectText)
                  .subscribe((e) => {
                    (this.syllabusData = e),
                      (this.currentSyllabus =
                        this.syllabusData[this.selectedClass][
                          this.selectedSyllabus
                        ]);
                  });
            });
        }
      };
      (Ae.ctorParameters = () => [{ type: k.a }, { type: Te.a }]),
        (Ae.propDecorators = {
          subjectText: [{ type: u.G, args: ["subject"] }],
        }),
        (Ae = Object(s.a)(
          [
            Object(u.n)({
              selector: "app-subject-syllabus",
              template:
                '<div class="syllabusContainer">\n    <h2 class="syllabusHeading" *ngIf="subjectText == \'Maths\'">Ei Mindspark is aligned to CBSE, ICSE & IGCSE syllabus</h2>\n    <h2 class="syllabusHeading" *ngIf="subjectText == \'Science\'">Ei Mindspark is aligned to CBSE and ICSE school syllabus</h2>\n    <h2 class="syllabusHeading" *ngIf="subjectText == \'English\'">Ei Mindspark English is aligned with school syllabus</h2>\n    \x3c!-- <h3 class="syllabusSubHeading">CBSE and ICSE</h3> --\x3e\n    <div class="classPager" [ngClass]="{\'flex-start\': subjectText == \'Science\'}">\n        <div class="classPagerItem"\n        *ngFor="let class of classes"\n        (mouseover)="hover=true; hoveredItem=class"\n        (mouseleave)="hover=false; hoveredItem=class"\n        [ngStyle]="getPagerStyle(class, hover, hoveredItem)"\n        (click)="onChangeClass(class)"\n        >\n            {{ class }}\n        </div>\n    </div>\n    <div>\n        <mat-select class="selectClass" value="{{selectedClass}}" (selectionChange)="onChangeClass($event.value)">\n            <mat-option *ngFor="let class of classes" value="{{class}}">{{class}}</mat-option>\n        </mat-select>\n    </div>\n    <div class="syllabusHeader">\n        <h3 class="syllabusHeading">{{selectedClass}} Topics</h3>\n        <div class="downloadSyllabus">\n            <div class="syllabusInfo">\n                <div class="syllabusName">Syllabus</div>\n            </div>\n            <mat-select class="selectSyllabus" value="{{selectedSyllabus}}" (selectionChange)="onChangeSyllabus($event.value)">\n                <mat-option *ngFor="let syllabus of syllabusList" value="{{syllabus}}">{{syllabus}}</mat-option>\n            </mat-select>\n        </div>\n    </div>\n    <div class="separator"></div>\n    <div class="syllabusDataContainer">\n        <div *ngIf="currentSyllabus">\n            <div *ngFor="let sylabus of currentSyllabus[0]">\n                <div class="syllabusTitle">{{ sylabus.title }}</div>\n                <ul>\n                    <li *ngFor="let item of sylabus.data">\n                        <div class="syllabusItem">\n                            <div class="dotText">\u2022</div>\n                            <div>\n                                <div>{{ item.title }}</div>\n                                <div class="subText" *ngIf="item.subText !== \'\'">{{item.subText}}</div>\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <div *ngIf="currentSyllabus">\n            <div *ngFor="let syllabus of currentSyllabus[1]">\n                <div class="syllabusTitle">{{ syllabus.title }}</div>\n                <ul>\n                    <li *ngFor="let item of syllabus.data">\n                        <div class="syllabusItem">\n                            <div class="dotText">\u2022</div>\n                            <div>\n                                <div>{{ item.title }}</div>\n                                <div class="subText" *ngIf="item.subText !== \'\'">{{item.subText}}</div>\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <div *ngIf="currentSyllabus">\n            <div *ngFor="let syllabus of currentSyllabus[2]">\n            <div class="syllabusTitle">{{ syllabus.title }}</div>\n            <div class="syllabusSplit">\n                <ul>\n                    <li *ngFor="let item of syllabus.data[0]">\n                        <div class="syllabusItem">\n                            <div class="dotText">\u2022</div>\n                            <div>\n                                <div>{{ item.title }}</div>\n                                <div class="subText" *ngIf="item.subText !== \'\'">{{item.subText}}</div>\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n                <ul>\n                    <li *ngFor="let item of syllabus.data[1]">\n                        <div class="syllabusItem">\n                            <div class="dotText">\u2022</div>\n                            <div>\n                                <div>{{ item.title }}</div>\n                                <div class="subText" *ngIf="item.subText !== \'\'">{{item.subText}}</div>\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    </div>\n    <div class="separator" [ngStyle]="{marginTop: \'0px\'}"></div>\n    <div class="syllabusFooter">\n        <h3 class="footerText">Ei Mindspark reviewed by researchers at</h3>\n        <div class="footerActions">\n            <div class="reviews">\n                <img class="reviewIcon" loading="lazy" src="assets/images/harvard-logo.png" alt="Harvard Business School" />\n                <img class="reviewIcon" loading="lazy" [ngStyle.gt-md]="{\'margin-left\': \'32px\'}"  src="assets/images/mit.jpg" alt="Massachusetts Institute of Technologu"/>\n                <img class="reviewIcon" [ngStyle.gt-md]="{\'margin-left\': \'32px\'}"  loading="lazy" src="assets/images/Stanford_Logo.png" alt="Standford Social Innovation Review"/>\n            </div>\n            <a mat-button class="freeTrial" routerLink="/free-trial">Start Free Trial</a>\n        </div>\n    </div>\n</div>\n',
              styles: [
                ".syllabusContainer {\n  padding: 60px 109px;\n  border-radius: 24px;\n  background-color: #fdefe0;\n}\n\n.syllabusHeading {\n  padding: 0px;\n  margin: 0px;\n  font-family: Manrope;\n  font-size: 36px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.36;\n  letter-spacing: normal;\n  text-align: center;\n  color: #212121;\n}\n\n.syllabusSubHeading {\n  color: #46494b;\n  font-size: 18px;\n  margin-top: 8px;\n}\n\n.classPager {\n  display: flex;\n  margin-top: 40px;\n  justify-content: space-between;\n}\n\n.selectClass {\n  background-color: #ffffff;\n  font-size: 16px;\n  font-weight: bold;\n  border: none;\n  width: 100%;\n  border-radius: 18px;\n  padding: 11px 26px;\n  margin-top: 34px;\n  box-shadow: 0 1px 2px 0 rgba(243, 111, 49, 0.1);\n  display: none;\n}\n\n.selectSyllabus {\n  background-color: #ffffff;\n  font-size: 16px;\n  font-weight: bold;\n  border: none;\n  width: 100%;\n  border-radius: 18px;\n  padding: 11px 26px;\n  box-shadow: 0 1px 2px 0 rgba(243, 111, 49, 0.1);\n  width: 200px;\n}\n\n.classPagerItem {\n  border-radius: 30px;\n  background-color: #ffffff;\n  padding: 12px 24px;\n  font-family: Manrope;\n  font-size: 16px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: center;\n  color: #A01E21;\n  cursor: pointer;\n  transition-duration: 0.4s;\n}\n\n.syllabusHeader {\n  margin-top: 54px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.syllabusHeading {\n  font-size: 28px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.36;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n  text-align: center;\n}\n\n.downloadSyllabus {\n  display: flex;\n}\n\n.syllabusInfo {\n  margin-right: 28px;\n  display: flex;\n  align-items: center;\n}\n\na {\n  text-decoration: none;\n  white-space: normal;\n}\n\n.downloadButton {\n  display: flex;\n  padding: 12px 34px;\n  border: solid 1px #f36f31;\n  border-radius: 30px;\n  align-items: center;\n}\n\n.downloadText {\n  font-size: 13px;\n  font-weight: 500;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n  margin-right: 26px;\n}\n\n.syllabusName {\n  font-size: 16px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.5;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n}\n\n.syllabusSecondaryText {\n  font-size: 14px;\n  font-weight: 600;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.71;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n  opacity: 0.6;\n  margin-top: 2px;\n}\n\n.separator {\n  margin: 40px 0;\n  background-color: #f36f31;\n  height: 1px;\n  opacity: 0.2;\n}\n\n.syllabusDataContainer {\n  display: grid;\n  grid-template-columns: 1fr 1fr 2fr;\n  column-gap: 30px;\n}\n\n.syllabusSplit {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.syllabusItem {\n  display: flex;\n  align-items: baseline;\n}\n\n.subText {\n  font-size: 12px;\n  color: #868686;\n}\n\n.flex-start {\n  justify-content: flex-start;\n}\n\n.syllabusFooter {\n  margin-top: 14px;\n}\n\n.footerText {\n  font-size: 24px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n}\n\n.footerActions {\n  margin-top: 50px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.freeTrial {\n  padding: 14px 32px;\n  border-radius: 30px;\n  margin-left: 137px;\n  font-family: Manrope;\n  font-size: 16px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: center;\n  color: #ffffff;\n}\n\n.syllabusTitle {\n  font-size: 16px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n  margin-bottom: 24px;\n}\n\nul {\n  padding: 0;\n  margin: 0px 0px 60px 0px;\n}\n\nli {\n  padding: 0;\n  margin: 0px 0px 10px 0px;\n  font-size: 14px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.71;\n  letter-spacing: normal;\n  text-align: left;\n  color: #46494b;\n}\n\n.dotText {\n  color: #A01E21;\n  font-size: 18px;\n  font-weight: bold;\n  margin-right: 12px;\n}\n\n.reviewIcon {\n  max-width: 167px;\n}\n\n@media only screen and (max-width: 767px) {\n  .syllabusContainer {\n    padding: 60px 20px;\n    border-radius: 24px;\n    background-color: #fdefe0;\n  }\n\n  .syllabusHeader {\n    flex-direction: column;\n    margin-top: 40px;\n  }\n\n  .downloadSyllabus {\n    margin-top: 20px;\n  }\n\n  .selectSyllabus {\n    width: 100%;\n  }\n\n  .footerActions {\n    margin-top: 25px;\n    display: flex;\n    flex-direction: column;\n  }\n  .footerActions .reviews {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .freeTrial {\n    margin-left: 0px;\n    margin-top: 40px;\n  }\n\n  .classPager {\n    display: none;\n  }\n\n  .selectClass {\n    display: block;\n  }\n\n  .syllabusDataContainer {\n    grid-template-columns: 1fr;\n  }\n\n  .syllabusSplit {\n    grid-template-columns: 1fr;\n  }\n\n  .separator {\n    margin: 16px 0px;\n  }\n\n  ul {\n    margin-bottom: 24px;\n  }\n\n  .reviewIcon {\n    max-width: 200px;\n    margin: 10px 0;\n  }\n}",
              ],
            }),
          ],
          Ae
        ));
      var De = n("bSwM");
      let Me = class {
        constructor() {
          (this.subject = ""),
            (this.CONST_ENG = "English"),
            (this.CONST_SCI = "Science"),
            (this.CONST_MATH = "Maths"),
            (this.options = []),
            (this.selectedOption = ""),
            (this.pillarsData = {}),
            (this.englishPillarsData = {
              Listening: {
                title: "An attentive listener is a great learner.",
                content:
                  "<div><p>Ei Mindspark English has a repository of interesting audio clips to help students gain mastery over listening comprehension. The listening exercises contain curated audio clips across forms (discussions, speeches, interviews etc.) and genres (daily life, history, environment, etc).</p><p>The goal of including listening skills on Ei Mindspark English is to help students become more conversant. Many of the listening exercises are thus centered around daily life.</p><p>Ei Mindspark has also intentionally included a mixture of Indian, American and British accents within the exercises to prevent untoward biases.</p></div>",
                list: [],
              },
              Reading: {
                title: "Nothing is more empowering than reading.",
                content:
                  "<div><p>Ei Mindspark has a large bank of carefully curated reading comprehension material.</p><p>Students are exposed to a variety of genres, styles and forms, ranging from children's folk tales to insightful articles from reputed sources like National Geographic and The Smithsonian Magazine.</p><p>Each text is followed by a series of questions that gauge students' comprehension of the text. These questions focus on factual recall, analysis of characters' moods and tones etc.</p></div>",
                list: [],
              },
              Grammar: {
                title: "Grammar is the glue that pieces language together.",
                content:
                  "<div><p>Ei Mindspark approaches grammar from the perspective of conceptual clarity.</p><p>An implicit understanding of grammar and its usage is more important than memorising rules. Therefore, the majority of the grammar questions on Ei Mindspark English are worded like, \u201cComplete the sentence...\u201d and not, \u201cFill in the appropriate adverb.\u201d</p><p>The bank of questions on Ei Mindspark is periodically updated based on identified gaps in concepts and international ELA standards such as Common Core.</p></div>",
                list: [],
              },
              Vocabulary: {
                title:
                  "Because \u2018wondrous\u2019 is better than \u2018great\u2019.",
                content:
                  "<div><p>Vocabulary involves both depth (knowing the nuances of a word\u2019s meaning) as well as breadth (knowing several words). Ei Mindspark aims to cover both aspects.</p><p>Ei Mindspark English helps students understand the context in which words are used. In the process, students get to explore word roots, synonyms, antonyms, homonyms and much more.</p></div>",
                list: [],
              },
            }),
            (this.sciencePillarsData = {
              Physics: {
                title: "",
                content:
                  "<div><p>Physics is a branch of science that describes how the universe works. Concepts in physics are often counter-intuitive and need to be painstakingly built by carefully examining one's misconceptions. In Ei Mindspark Science, this process is made easier and more enjoyable through a series of graded and interactive questions that form a scaffolding towards a robust understanding of physical concepts.</p></div>",
                list: [],
              },
              Chemistry: {
                title: "",
                content:
                  "<div><p>Observing fascinating reactions between substances is probably the most exciting part of learning chemistry. The next best thing is Ei Mindspark Science! This tool introduces to you the concepts of chemistry in a visual and engaging manner. Students will spend time understanding the key concepts and connections by answering questions, while internalising facts and equations as a part of their learning journey.</p></div>",
                list: [],
              },
              Biology: {
                title: "",
                content:
                  "<div><p>The science of life is truly magical. School-level biology often fails to convey this beauty, however, and many students experience it as a set of dry facts about plants and animals to be memorised. Ei Mindspark Science brings to life the remarkable conceptual connections in biology while hand-holding the student in mastering the relevant knowledge at their own pace. A series of graded questions ensures that the students learn with understanding at each step.</p></div>",
                list: [],
              },
            }),
            (this.mathsPillersData = {
              Numbers: {
                title: "",
                content:
                  "<div class='d-flex justify-content-between align-items-center flex-sm-row  flex-column' >\n          <img src='assets/images/piller-numbers.svg' height='' width=''>\n            <p class='pillerDescText text-justify text-sm-left p-sm-3 p-1 m-sm-0 mt-2'> One of the most beautiful aspects of mathematics is the patterns and logic woven into the\n                decimal number system that we all use today.Helping children discover and play with numbers is crucial to them\n                appreciating and enjoying mathematics from a young age.From the basics of counting through visually engaging\n                questions and activities to learning the need and reasoning behind decimals, from interacting with the area\n                model of fractions to applying the concept of percentages to real life problems, Ei Mindspark Maths ensures that\n                each child develops a strong foundation that emphasises both conceptual understanding and fluency in the four\n                fundamental operations.</p>\n      </div>",
                list: [],
              },
              Geometry: {
                title: "",
                content:
                  "<div class='d-flex flex-column align-items-center'>\n            <img src='assets/images/piller-geometry.svg' height='' width='70%' class='mb-sm-3 m-0'>\n                <div>\n                    <p class='pillerDescText text-justify text-sm-left m-sm-0 mt-2 p-1 p-sm-0'>Geometry is a branch of mathematics that is intimately connected with the arts. In\n                        fact, many prominent European artists of the renaissance used geometrical principles to bring form and\n                        symmetry to their work. Geometry is essential in helping children understand spatial relationships and their\n                        place in the world. It teaches them how to visually estimate quantities like length and volume while also\n                        building their problem solving and higher-order thinking skills. Ei Mindspark Maths enhances children's\n                        understanding of spatial relationships, basic shapes and symmetry before challenging and engaging them with\n                        content on angles, polygons, similarity, mensuration and trigonometry using interactive questions and games\n                        that bring these topics to life.</p>\n                </div>\n            </div>",
                list: [],
              },
              Algebra: {
                title: "",
                content:
                  "<div class='d-flex justify-content-between align-items-center flex-sm-row  flex-column'>\n              <img src='assets/images/piller-algebra.svg' height='' width='' class=''>\n              <p class='pillerDescText text-justify text-sm-left p-sm-3 p-1 mr-sm-3 mt-2'>\"Learning algebra isn't about acquiring a specific tool; it's about building up a mental\n                  muscle that will come in handy elsewhere. You don't go to the gym because you're interested in learning how to\n                  operate a StairMaster; you go to the gym because operating a StairMaster does something laudable to your body,\n                  the benefits of which you enjoy during the many hours of the week when you're not on a StairMaster.\" -- Steven\n                  Johnson, \"Everything Bad Is Good For You\"</p>\n            </div>\n            <div>\n              <p class='pillerDescText text-justify text-sm-left m-sm-0 mt-2 p-1 p-sm-0'>Algebra is an abstract branch of mathematics that pushes our brains to think laterally.\n                  This rigorous thinking process causes our brains to exercise similar to how our muscles exercise when we do\n                  physical activity. In Ei Mindspark Maths, the focus is on seeing algebra in action by first conceptually\n                  understanding the need for variables and how to manipulate them before proceeding towards higher level topics\n                  like expansions, quadratic equations and linear equations in two variables. The connection between geometry and\n                  algebra is also brought out through well-designed questions and activities so that children can appreciate how\n                  interrelated the different branches of mathematics are.</p>\n            </div>",
                list: [],
              },
              Statistics: {
                title: "",
                content:
                  "<div class='d-flex justify-content-between align-items-center flex-sm-row  flex-column'>\n                  <img src='assets/images/piller-statistics.svg' height='' width='' class=''>\n                  <p class='pillerDescText text-justify text-sm-left p-sm-3 p-1 m-sm-0 mt-2'>We live in a world where we are inundated with information and data. Knowing how to sift\n                      through all the material that we are exposed to - be it on social media, television news and programmes,\n                      newspaper articles, movies or books - so that we can analyse data, identify patterns, pick up on trends and make\n                      sensible inferences are essential life skills these days. In Ei Mindspark Maths, children are exposed to a large\n                      variety of data sets using representations that range from two-way tables and tally marks to pictographs and bar\n                      graphs, from pie charts and line graphs to dot plots and histograms. The emphasis is on reading, interpreting\n                      and drawing practical inferences from the data to build analytical skills in students.</p>\n                </div>",
                list: [],
              },
            });
        }
        ngOnInit() {
          (this.pillarsData = this.getPillerData(this.subject)),
            (this.options = this.getOptions(this.subject)),
            (this.selectedOption =
              this.subject == this.CONST_ENG
                ? "Listening"
                : this.subject == this.CONST_SCI
                ? "Physics"
                : "Numbers");
        }
        getPillerData(e) {
          switch (((this.pillarsData = {}), e)) {
            case this.CONST_ENG:
              this.pillarsData = this.englishPillarsData;
              break;
            case this.CONST_MATH:
              this.pillarsData = this.mathsPillersData;
              break;
            case this.CONST_SCI:
              this.pillarsData = this.sciencePillarsData;
          }
          return this.pillarsData;
        }
        getOptions(e) {
          switch (((this.options = []), e)) {
            case this.CONST_ENG:
              this.options = ["Listening", "Reading", "Grammar", "Vocabulary"];
              break;
            case this.CONST_MATH:
              this.options = ["Numbers", "Geometry", "Algebra", "Statistics"];
              break;
            case this.CONST_SCI:
              this.options = ["Physics", "Chemistry", "Biology"];
          }
          return this.options;
        }
        changeOption(e) {
          this.selectedOption = e;
        }
        onChangeOption(e) {
          this.selectedOption = e;
        }
      };
      (Me.ctorParameters = () => []),
        (Me.propDecorators = { subject: [{ type: u.G, args: ["subject"] }] }),
        (Me = Object(s.a)(
          [
            Object(u.n)({
              selector: "app-subject-pillers",
              template:
                '<div class="pillarsWrapper">\n    \x3c!-- <h3 class="h3_text">Ei Mindspark\u2013Learn Maths Concepts</h3> --\x3e\n    <div class="tabsContainer">\n        <div fxHide.xs="true" class="tabs">\n            <div *ngFor="let item of options" class="tabItem" (click)="changeOption(item)" [ngClass]="{\'tabInactive\': item != selectedOption}">\n                {{item}}\n            </div>\n        </div>\n        <mat-select fxHide fxShow.xs class="selectOption" value="{{selectedOption}}" (selectionChange)="onChangeOption($event.value)">\n            <mat-option *ngFor="let item of options" value="{{item}}">{{item}}</mat-option>\n        </mat-select>\n    </div>\n    <div class="pillars">\n        <div class="pillarsDetails" [ngClass]="{pillarsDetails: subject != CONST_MATH, mathsPillarsDetails: subject == CONST_MATH}">\n            <h3 class="titleHeading">{{pillarsData[selectedOption].title}}</h3>\n\n            <div [innerHTML]="pillarsData[selectedOption].content">\n            </div>\n            <li *ngFor="let listItem of pillarsData[selectedOption].list">\n                {{listItem}}\n            </li>\n        </div>\n    </div>\n</div>',
              styles: [
                ".pillarsWrapper {\n  margin: 0px 0px 80px 0px;\n}\n\n.roleSelection {\n  margin-bottom: 80px;\n}\n\n.headerTitle {\n  display: flex;\n  justify-content: center;\n}\n\n.titleHeading {\n  font-size: 32px;\n  font-weight: bold;\n  line-height: 1.35;\n  text-align: left;\n  color: #212121;\n  margin-bottom: 18px;\n}\n\nli {\n  margin-bottom: 20px;\n}\n\n.pillars {\n  display: flex;\n  justify-content: center;\n}\n\n.pillarsDetails {\n  width: 60%;\n}\n\n.mathsPillarsDetails {\n  width: 80%;\n}\n\n.tabsContainer {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 62px;\n}\n\n.tabs {\n  border-radius: 30px;\n  background-color: #e8e8e8;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.pillerDescText {\n  line-height: 1.5;\n  text-align: left;\n  color: #46494b;\n}\n\n.tabItem {\n  padding: 12px 48px;\n  font-size: 24px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: center;\n  border-radius: 30px;\n  border: solid 2px #a01e21;\n  color: #a01e21;\n  background-color: #ffffff;\n  cursor: pointer;\n}\n\n.tabInactive {\n  background-color: transparent;\n  color: #212121;\n  font-weight: 500;\n  border: 0px;\n}\n\n.tabItem:hover {\n  opacity: 0.7;\n}\n\n.selectOption {\n  background-color: #e8e8e8;\n  font-size: 16px;\n  font-weight: bold;\n  border: none;\n  width: 100%;\n  border-radius: 18px;\n  padding: 16px 26px;\n  margin-top: 34px;\n  box-shadow: 0 1px 2px 0 rgba(243, 111, 49, 0.1);\n}\n\n@media only screen and (max-width: 767px) {\n  .pillarsWrapper {\n    margin: 30px 0px;\n  }\n\n  .mathsPillarsDetails, .pillarsDetails {\n    width: 100%;\n  }\n\n  .pillerDescText {\n    line-height: 1.5;\n    text-align: justify;\n    color: #46494b;\n  }\n\n  .tabsContainer {\n    margin-bottom: 20px;\n  }\n}\n\n.h3_text {\n  margin: 10px 10px;\n  font-size: 36px;\n  font-weight: bold;\n  line-height: 1.36;\n  text-align: center;\n  color: #212121;\n  margin-bottom: 5%;\n}",
              ],
            }),
          ],
          Me
        ));
      var Pe;
      !(function (e) {
        (e.Scale = "scale"),
          (e.Fade = "fade"),
          (e.Flip = "flip"),
          (e.JackInTheBox = "jackInTheBox");
      })(Pe || (Pe = {}));
      const Re = Object(z.g)([
          Object(z.l)({ opacity: 0, transform: "scale(0.5)" }),
          Object(z.e)(
            "{{time}} cubic-bezier(0.785, 0.135, 0.15, 0.86)",
            Object(z.l)({ opacity: 1, transform: "scale(1)" })
          ),
        ]),
        je = Object(z.g)([
          Object(z.e)(
            "{{time}} cubic-bezier(0.785, 0.135, 0.15, 0.86)",
            Object(z.l)({ opacity: 0, transform: "scale(0.5)" })
          ),
        ]),
        Ne = Object(z.g)([
          Object(z.l)({ opacity: 0 }),
          Object(z.e)(
            "{{time}} cubic-bezier(0.785, 0.135, 0.15, 0.86)",
            Object(z.l)({ opacity: 1 })
          ),
        ]),
        Fe = Object(z.g)([
          Object(z.e)(
            "{{time}} cubic-bezier(0.785, 0.135, 0.15, 0.86)",
            Object(z.l)({ opacity: 0 })
          ),
        ]),
        Le = Object(z.g)([
          Object(z.e)(
            "{{time}} cubic-bezier(0.785, 0.135, 0.15, 0.86)",
            Object(z.h)([
              Object(z.l)({
                opacity: 1,
                transform: "perspective(400px) rotate3d(1, 0, 0, 90deg)",
                offset: 0,
              }),
              Object(z.l)({ transform: "perspective(400px)", offset: 1 }),
            ])
          ),
        ]),
        Ve = Object(z.g)([]),
        Be = Object(z.g)([
          Object(z.e)(
            "{{time}} ease-in",
            Object(z.h)([
              Object(z.l)({
                animationFillMode: "forwards",
                transform: "scale(0.1) rotate(30deg)",
                transformOrigin: "center bottom",
                offset: 0,
              }),
              Object(z.l)({ transform: "rotate(-10deg)", offset: 0.5 }),
              Object(z.l)({ transform: "rotate(3deg)", offset: 0.7 }),
              Object(z.l)({ transform: "perspective(400px)", offset: 1 }),
            ])
          ),
        ]),
        ze = Object(z.g)([]);
      let He = class {
        constructor() {
          (this.subject = ""),
            (this.withMargin = !1),
            (this.showVideo = -1),
            (this.reviewData = []),
            (this.reviewData_mobile = []),
            (this.review = [
              [
                [
                  {
                    contentText:
                      "Hi, I am Ibrahim. The interactive learning games are just the best! It is fun and I also get to learn with it.",
                    color: "green",
                    video: !1,
                    student: "Ibrahim Chaudhary",
                    calssName: "Class 2",
                    school: "Fazlani L'Academie Globale",
                  },
                  {
                    contentText:
                      "Mindspark is so fun to use and easy to understand, even for those who found subjects tough earlier.",
                    color: "blue",
                    video: !1,
                    student: "Maria Eapen",
                    calssName: "Class 3",
                    school: "Greenwood High (An International School)",
                  },
                ],
                [
                  {
                    contentText:
                      "Mindspark is the best and the most interesting application for learning that I have used.",
                    color: "pink",
                    video: !1,
                    student: "Rudra Tilva",
                    calssName: "Class 2",
                    school: "S N Kansagra School",
                  },
                  {
                    contentText:
                      "I really enjoy learning through Mindspark's interactive games like Animal Rescue Operation. This game is really good. Nice game, Mindspark team.",
                    color: "green",
                    video: !1,
                    student: "Ayush Mishra",
                    calssName: "Class 6",
                    school: "Greenwood High (An International School)",
                  },
                ],
                [
                  {
                    contentText:
                      "MINDSPARK is a great platform to learn with. It is a useful tool for studies. I would love to continue using Mindspark for learning! Thank you for making this amazing platform.",
                    color: "green",
                    video: !1,
                    student: "Nemin Parmar",
                    calssName: "Class 4",
                    school: "Fazlani L'Academie Globale",
                  },
                  {
                    contentText:
                      "Hi! I love using Mindspark since it is such a fun platform and fun to learn with too.",
                    color: "blue",
                    video: !1,
                    student: "Vibha Reddy",
                    calssName: "Class 5",
                    school: "Silver Oaks International School",
                  },
                ],
              ],
              [
                [
                  {
                    contentText:
                      "It's so nice to use. The units really make me think about the topics.",
                    color: "blue",
                    video: !1,
                    student: "Siddhant Singh",
                    calssName: "Class 4",
                    school: "Inventure Academy",
                  },
                  {
                    contentText:
                      "I am Aditya, and I want to say that Mindspark is very cool for us to use to learn our subjects.",
                    color: "green",
                    video: !1,
                    student: "Aditya Singh",
                    calssName: "Class 3",
                    school: "Harvest International School",
                  },
                ],
                [
                  {
                    contentText:
                      "Hey, what's up? I enjoy using Mindspark to learn new things.",
                    color: "pink",
                    video: !1,
                    student: "Sameehaumar",
                    calssName: "Class 6",
                    school: "Sudarshan Vidya Mandir ICSE Academy",
                  },
                  {
                    contentText: "Mindspark has helped me so much in Maths!",
                    color: "blue",
                    video: !1,
                    student: "Vismaya Singel",
                    calssName: "Class 4",
                    school: "Oakridge International School",
                  },
                ],
                [
                  {
                    contentText: "Wow! The questions seem so smartly put.",
                    color: "green",
                    video: !1,
                    student: "Dev Karan",
                    calssName: "Class 3",
                    school: "Oakridge International School",
                  },
                  {
                    contentText:
                      "I am very happy using Mindspark in my studies.",
                    color: "pink",
                    video: !1,
                    student: "Suraj Yadav",
                    calssName: "Class 5",
                    school: "St. George's School",
                  },
                ],
              ],
            ]),
            (this.review_english = [
              [
                [
                  {
                    contentText:
                      "Dear team, Really love your platform. As a parent, I am also learning along with my child.",
                    color: "green",
                    video: !1,
                    student: "Lovleen",
                    calssName: "Parent",
                    school: "Silver oaks International school",
                  },
                  {
                    contentText:
                      "Hi Mindspark team, I am really enjoying Mindspark English and it is really helping me enhance my vocabulary. Thank you so much for the same, and every passage and audio you provide is always intriguing. Thank you once again",
                    color: "blue",
                    video: !1,
                    student: "Nirmayee Shirsa",
                    calssName: "Class 5",
                    school: "Wisdom high International school",
                  },
                ],
                [
                  {
                    contentText:
                      "Today is my first day on Mindspark. I thought it was going to be hard, but it was easy. And guess what? I got 9 sparkies today! Tomorrow or this evening, I am going to try Maths.",
                    color: "pink",
                    video: !1,
                    student: "Aditi Arun",
                    calssName: "Class 5",
                    school: "GEMS united indian school",
                  },
                  {
                    contentText:
                      "Dear Mindspark Team, Thank you for encouraging me and making me believe that I can get stronger in my subjects. Now I find questions quite easy to answer. Thanks for motivating me.",
                    color: "green",
                    video: !1,
                    student: "Rathish",
                    calssName: "Class 7",
                    school: "Vidya mandir estancia",
                  },
                ],
                [
                  {
                    contentText:
                      "Mindspark English has greatly helped us as a tremendous teaching aid for classroom teaching. It has helped students master their language skills - listening, writing, reading, grammar and vocabulary. It provides a platform to go beyond the classroom. Learners get to explore and enhance their language skills, and gain proficiency in English. Learning English through Mindspark is a fascinating and fun aspect for our young learners. They look forward to these sessions and thoroughly enjoy themselves.",
                    color: "green",
                    video: !1,
                    student: "Teena Sandhu",
                    calssName: "Teacher",
                    school: "DLF Public School",
                  },
                  {},
                ],
              ],
            ]),
            (this.review_science = [
              [
                [
                  {
                    contentText:
                      "Hi Mindspark team! It is amazing to learn here. I am enjoying learning new things.",
                    color: "green",
                    video: !1,
                    student: "Aastha Khakra",
                    calssName: "Class 6",
                    school: "Sanskriti The Guruku",
                  },
                  {
                    contentText: "I love doing science with Mindspark!",
                    color: "blue",
                    video: !1,
                    student: "Md Ehtesham",
                    calssName: "Class 6",
                    school: "Mahadevi Birla World Academy",
                  },
                ],
                [
                  {
                    contentText:
                      "Mindspark is awesome! If there is a rating, I will give it 5 stars.",
                    color: "blue",
                    video: !1,
                    student: "Niranjan Sv",
                    calssName: "Class 7",
                    school: "Chinmaya Vidyalaya P.A.C.R. Mat. H.S. School",
                  },
                  {
                    contentText:
                      "I really enjoy through Mindspark\u2019s interactive games like Anima Rescue Operation. This game is really good. Nice game, Mindspark team.",
                    color: "pink",
                    video: !1,
                    student: "Ayush Mishra",
                    calssName: "Class 6",
                    school: "Greenwood (An international school)",
                  },
                ],
                [
                  {
                    contentText:
                      "Today I completed a full topic at one go! Mindspark is GREAT! \ud83d\udca1",
                    color: "green",
                    video: !1,
                    student: "Sharanyaa Kakati",
                    calssName: "Class 8",
                    school: "Sanskriti The Gurukul",
                  },
                  {
                    contentText:
                      "Hey, what\u2019s up? I enjoy using Mindspark to learn new things.",
                    color: "blue",
                    video: !1,
                    student: "Sameehaumar",
                    calssName: "Class 6",
                    school: "Sudarshan Vidya mandir ICSE Academy ",
                  },
                ],
              ],
            ]),
            (this.review_mobile = [
              [
                {
                  contentText:
                    "Hi, I am Ibrahim. The interactive learning games are just the best! It is fun and I also get to learn with it.",
                  color: "green",
                  video: !1,
                  student: "Ibrahim Chaudhary",
                  calssName: "Class 2",
                  school: "Fazlani L'Academie Globale",
                },
                {
                  contentText:
                    "Mindspark is so fun to use and easy to understand, even for those who found subjects tough earlier.",
                  color: "blue",
                  video: !1,
                  student: "Maria Eapen",
                  calssName: "Class 3",
                  school: "Greenwood High (An International School)",
                },
              ],
              [
                {
                  contentText:
                    "Mindspark is the best and the most interesting application for learning that I have used.",
                  color: "pink",
                  video: !1,
                  student: "Rudra Tilva",
                  calssName: "Class 2",
                  school: "S N Kansagra School",
                },
                {
                  contentText:
                    "I really enjoy learning through Mindspark's interactive games like Animal Rescue Operation. This game is really good. Nice game, Mindspark team.",
                  color: "green",
                  video: !1,
                  student: "Ayush Mishra",
                  calssName: "Class 6",
                  school: "Greenwood High (An International School)",
                },
              ],
              [
                {
                  contentText:
                    "MINDSPARK is a great platform to learn with. It is a useful tool for studies. I would love to continue using Mindspark for learning! Thank you for making this amazing platform.",
                  color: "green",
                  video: !1,
                  student: "Nemin Parmar",
                  calssName: "Class 4",
                  school: "Fazlani L'Academie Globale",
                },
                {
                  contentText:
                    "Hi! I love using Mindspark since it is such a fun platform and fun to learn with too.",
                  color: "blue",
                  video: !1,
                  student: "Vibha Reddy",
                  calssName: "Class 5",
                  school: "Silver Oaks International School",
                },
              ],
              [
                {
                  contentText:
                    "It's so nice to use. The units really make me think about the topics.",
                  color: "blue",
                  video: !1,
                  student: "Siddhant Singh",
                  calssName: "Class 4",
                  school: "Inventure Academy",
                },
                {
                  contentText:
                    "I am Aditya, and I want to say that Mindspark is very cool for us to use to learn our subjects.",
                  color: "green",
                  video: !1,
                  student: "Aditya Singh",
                  calssName: "Class 3",
                  school: "Harvest International School",
                },
              ],
              [
                {
                  contentText:
                    "Hey, what's up? I enjoy using Mindspark to learn new things.",
                  color: "pink",
                  video: !1,
                  student: "Sameehaumar",
                  calssName: "Class 6",
                  school: "Sudarshan Vidya Mandir ICSE Academy",
                },
                {
                  contentText: "Mindspark has helped me so much in Maths!",
                  color: "blue",
                  video: !1,
                  student: "Vismaya Singel",
                  calssName: "Class 4",
                  school: "Oakridge International School",
                },
              ],
              [
                {
                  contentText: "Wow! The questions seem so smartly put.",
                  color: "green",
                  video: !1,
                  student: "Dev Karan",
                  calssName: "Class 3",
                  school: "Oakridge International School",
                },
                {
                  contentText: "I am very happy using Mindspark in my studies.",
                  color: "pink",
                  video: !1,
                  student: "Suraj Yadav",
                  calssName: "Class 5",
                  school: "St. George's School",
                },
              ],
            ]),
            (this.review_mobile_english = [
              [
                {
                  contentText:
                    "Dear team, Really love your platform. As a parent, I am also learning along with my child.",
                  color: "green",
                  video: !1,
                  student: "Lovleen",
                  calssName: "Parent",
                  school: "Silver oaks International school",
                },
                {
                  contentText:
                    "Hi Mindspark team, I am really enjoying Mindspark English and it is really helping me enhance my vocabulary. Thank you so much for the same, and every passage and audio you provide is always intriguing. Thank you once again",
                  color: "blue",
                  video: !1,
                  student: "Nirmayee Shirsa",
                  calssName: "Class 5",
                  school: "Wisdom high International school",
                },
              ],
              [
                {
                  contentText:
                    "Today is my first day on Mindspark. I thought it was going to be hard, but it was easy. And guess what? I got 9 sparkies today! Tomorrow or this evening, I am going to try Maths.",
                  color: "pink",
                  video: !1,
                  student: "Aditi Arun",
                  calssName: "Class 5",
                  school: "GEMS united indian school",
                },
                {
                  contentText:
                    "Dear Mindspark Team, Thank you for encouraging me and making me believe that I can get stronger in my subjects. Now I find questions quite easy to answer. Thanks for motivating me.",
                  color: "green",
                  video: !1,
                  student: "Rathish",
                  calssName: "Class 7",
                  school: "Vidya mandir estancia",
                },
              ],
              [
                {
                  contentText:
                    "Mindspark English has greatly helped us as a tremendous teaching aid for classroom teaching. It has helped students master their language skills - listening, writing, reading, grammar and vocabulary. It provides a platform to go beyond the classroom. Learners get to explore and enhance their language skills, and gain proficiency in English. Learning English through Mindspark is a fascinating and fun aspect for our young learners. They look forward to these sessions and thoroughly enjoy themselves.",
                  color: "green",
                  video: !1,
                  student: "Teena Sandhu",
                  calssName: "Teacher",
                  school: "DLF Public School",
                },
                {},
              ],
            ]),
            (this.review_mobile_science = [
              [
                {
                  contentText:
                    "Hi Mindspark team! It is amazing to learn here. I am enjoying learning new things",
                  color: "green",
                  video: !1,
                  student: "Aastha Khakra",
                  calssName: "Class 6",
                  school: "Sanskriti The Gurukul",
                },
                {
                  contentText:
                    "Mindspark is awesome! If there is a rating, I will give it 5 stars.",
                  color: "blue",
                  video: !1,
                  student: "Niranjan Sv",
                  calssName: "Class 7",
                  school: "Chinmaya Vidyalaya P.A.C.R. Mat. H.S. School",
                },
              ],
              [
                {
                  contentText:
                    "Today I completed a full topic at one go! Mindspark is GREAT! \ud83d\udca1",
                  color: "pink",
                  video: !1,
                  student: "Sharanyaa Kakati",
                  calssName: "Class 8",
                  school: "Sanskriti The Gurukul",
                },
                {
                  contentText: "I love doing science with Mindspark!",
                  color: "green",
                  video: !1,
                  student: "Md Ehtesham",
                  calssName: "Class 6",
                  school: "Mahadevi Birla World Academy",
                },
              ],
              [
                {
                  contentText:
                    "I really enjoy through Mindspark\u2019s interactive games like Anima Rescue Operation. This game is really good. Nice game, Mindspark team.",
                  color: "pink",
                  video: !1,
                  student: "Ayush Mishra",
                  calssName: "Class 6",
                  school: "Greenwood (An international school)",
                },
                {
                  contentText:
                    "Hey, what\u2019s up? I enjoy using Mindspark to learn new things.",
                  color: "blue",
                  video: !1,
                  student: "Sameehaumar",
                  calssName: "Class 6",
                  school: "Sudarshan Vidya mandir ICSE Academy ",
                },
              ],
            ]),
            (this.animationType = Pe.Fade);
        }
        ngOnInit() {
          this.reviewData = this.getSlideData(this.subject);
        }
        getSlideData(e) {
          switch (((this.reviewData = []), console.log("Review::" + e), e)) {
            case "Home":
              (this.reviewData = this.review),
                (this.reviewData_mobile = this.review_mobile);
              break;
            case "English":
              (this.reviewData = this.review_english),
                (this.reviewData_mobile = this.review_mobile_english);
              break;
            case "Science":
              (this.reviewData = this.review_science),
                (this.reviewData_mobile = this.review_mobile_science);
          }
          return this.reviewData;
        }
      };
      (He.ctorParameters = () => []),
        (He.propDecorators = {
          subject: [{ type: u.G }],
          withMargin: [{ type: u.G, args: ["withMargin"] }],
        }),
        (He = Object(s.a)(
          [
            Object(u.n)({
              selector: "app-review",
              template:
                '<div class="reviewContainer">\n    <div class="reviewWrapper" [ngStyle.xs]="{\'margin\':\'10px 0px\'}" [ngClass]="{reviewWrapperMargin: withMargin}">\n        <h3>\n            <div class="reviewTitle" [ngStyle.xs]="{\'font-size\':\'22px\'}">\n                Why students love learning with Ei Mindspark\n            </div>\n        </h3>\n        <div class="reviewSlides">\n            <app-review-carousel fxHide.xs="true" [slides]="reviewData" [isMobile]="false" [animationType]="animationType"></app-review-carousel>\n            <app-review-carousel [showArrow]="true" [hideDot]="true" fxHide fxShow.xs [slides]="reviewData_mobile" [isMobile]="true" [animationType]="animationType"></app-review-carousel>\n        </div>\n    </div>\n</div>',
              styles: [
                ".reviewContainer {\n  display: flex;\n  justify-content: center;\n}\n\n.reviewWrapper {\n  margin: 0px 0px 0px 0px;\n  width: 1302px;\n}\n\n.reviewWrapperMargin {\n  margin: 143px 0px 0px 0px !important;\n}\n\n.reviewCard {\n  width: 381px;\n  margin: 13px 16px;\n  border-radius: 24px;\n  overflow: hidden;\n  background-color: #c2e6f6;\n}\n\n.reviewTitle {\n  width: auto;\n  height: 98px;\n  margin: auto;\n  font-family: Manrope;\n  font-size: 36px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.36;\n  letter-spacing: normal;\n  text-align: center;\n  color: #212121;\n}\n\n.reviewText {\n  padding: 64px 39px 20px 39px;\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.71;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n}\n\n.name {\n  font-size: 14px;\n  font-weight: 600;\n  margin: 0px;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.71;\n  letter-spacing: normal;\n  text-align: right;\n  color: #212121;\n}\n\n.role {\n  opacity: 0.5;\n  font-family: Manrope;\n  margin: 0px;\n  font-size: 14px;\n  font-weight: 600;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.71;\n  letter-spacing: normal;\n  text-align: right;\n  color: #212121;\n}\n\n.roleDetail {\n  opacity: 0.8;\n  font-family: Manrope;\n  font-size: 12px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.5;\n  letter-spacing: normal;\n  text-align: right;\n  color: #212121;\n  margin: 0px;\n}\n\n.reviewImage {\n  object-fit: cover;\n  width: 100%;\n}\n\n.reviewImage img {\n  width: 100%;\n  height: 50%;\n  border-top-left-radius: 25px;\n  border-top-right-radius: 25px;\n}\n\nmat-card {\n  padding: 0px;\n}\n\n.nameDetail {\n  padding: 17px 45px;\n}\n\n.pinkCard {\n  background-color: #fff4c7 !important;\n}\n\n.greenCard {\n  background-color: rgba(165, 209, 112, 0.4);\n}\n\n.blueCard {\n  background-color: #c2e6f6;\n}\n\n.cardHead {\n  font-family: Manrope;\n  font-size: 20px;\n  line-height: 1.2;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n  padding: 0px 10px 0px 10px;\n}\n\n.slick-initialized .slick-slide {\n  outline: none !important;\n}\n\niframe {\n  height: 200px;\n}\n\n@media only screen and (max-width: 767px) {\n  .reviewWrapper {\n    width: 100%;\n  }\n\n  .reviewTitle {\n    width: 93%;\n    margin: 10px 0px;\n    padding: 36px 20px;\n  }\n\n  .slick-dotted.slick-slider {\n    margin-bottom: 134px;\n  }\n\n  iframe {\n    height: 100%;\n  }\n}",
              ],
            }),
          ],
          He
        ));
      let Ge = class {
        constructor() {
          (this.animationType = Pe.Scale),
            (this.slides = []),
            (this.isMobile = !1),
            (this.showArrow = !1),
            (this.hideDot = !1),
            (this.isTwoColumns = !1),
            (this.currentSlide = 0);
        }
        ngOnInit() {
          if (!this.isMobile && this.slides.length > 0) {
            let e = this.slides[0];
            this.isTwoColumns = 2 == e.length;
          }
        }
        onPreviousClick() {
          const e = this.currentSlide - 1;
          (this.currentSlide = e < 0 ? this.slides.length - 1 : e),
            console.log(
              "previous clicked, new current slide is: ",
              this.currentSlide
            );
        }
        onNextClick() {
          const e = this.currentSlide + 1;
          (this.currentSlide = e === this.slides.length ? 0 : e),
            console.log(
              "next clicked, new current slide is: ",
              this.currentSlide
            );
        }
      };
      (Ge.ctorParameters = () => []),
        (Ge.propDecorators = {
          animationType: [{ type: u.G }],
          slides: [{ type: u.G }],
          isMobile: [{ type: u.G, args: ["isMobile"] }],
          showArrow: [{ type: u.G, args: ["showArrow"] }],
          hideDot: [{ type: u.G, args: ["hideDot"] }],
        }),
        (Ge = Object(s.a)(
          [
            Object(u.n)({
              selector: "app-review-carousel",
              template:
                '<div class="carousel">\n    <ng-container *ngFor="let slide of slides; let i = index">\n        <div *ngIf="i === currentSlide" class="slide" [@slideAnimation]="animationType" [ngClass]=\'{scienceSlide: isTwoColumns == true}\'>\n            <div *ngIf="!isMobile" class="slideContainer" [ngClass]=\'{scienceContainer: isTwoColumns == true}\'>\n                <div class="cardContainer" *ngFor="let card of slide">\n                    <mat-card class="reviewCard" [ngClass]="{\n                        \'pinkCard\':card[0].color === \'pink\',\n                        \'blueCard\':card[0].color === \'blue\',\n                        \'greenCard\':card[0].color === \'green\'\n                      }" *ngIf="card[0].contentText">\n                        <div *ngIf="card[0].video==false" class="reviewText" [innerHTML]="card[0].contentText">\n\n                        </div>\n                        <div class="nameDetail">\n                            <p class="name">{{card[0].student}}</p>\n                            <p class="role">{{card[0].calssName}}</p>\n                            <p class="roleDetail">{{card[0].school}}</p>\n                        </div>\n                    </mat-card>\n                    <mat-card class="reviewCard" [ngClass]="{\n                        \'pinkCard\':card[1].color === \'pink\',\n                        \'blueCard\':card[1].color === \'blue\',\n                        \'greenCard\':card[1].color === \'green\'\n                      }" *ngIf="card[1].contentText">\n                        <div *ngIf="card[1].video==false" class="reviewText" [innerHTML]="card[1].contentText">\n\n                        </div>\n                        <div class="nameDetail">\n                            <p class="name">{{card[1].student}}</p>\n                            <p class="role">{{card[1].calssName}}</p>\n                            <p class="roleDetail">{{card[1].school}}</p>\n                        </div>\n                    </mat-card>\n                </div>\n            </div>\n\n            <div *ngIf="isMobile" class="cardContainer">\n                <mat-card class="reviewCard" [ngClass]="{\n                    \'pinkCard\':slide[0].color === \'pink\',\n                    \'blueCard\':slide[0].color === \'blue\',\n                    \'greenCard\':slide[0].color === \'green\'\n                  }">\n                    <div *ngIf="slide[0].video==false" class="reviewText" [innerHTML]="slide[0].contentText">\n\n                    </div>\n                    <div class="nameDetail">\n                        <p class="name">{{slide[0].student}}</p>\n                        <p class="role">{{slide[0].calssName}}</p>\n                        <p class="roleDetail">{{slide[0].school}}</p>\n                    </div>\n                </mat-card>\n                <mat-card class="reviewCard" [ngClass]="{\n                    \'pinkCard\':slide[1].color === \'pink\',\n                    \'blueCard\':slide[1].color === \'blue\',\n                    \'greenCard\':slide[1].color === \'green\'\n                  }" *ngIf="slide[1].contentText">\n                    <div *ngIf="slide[1].video==false" class="reviewText" [innerHTML]="slide[1].contentText">\n\n                    </div>\n                    <div class="nameDetail">\n                        <p class="name">{{slide[1].student}}</p>\n                        <p class="role">{{slide[1].calssName}}</p>\n                        <p class="roleDetail">{{slide[1].school}}</p>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n    </ng-container>\n</div>\n<div *ngIf=\'!hideDot\' class="carousel_nav">\n    <div *ngIf="slides.length>1">\n        <button (click)="onPreviousClick()" class="carousel_indicator" [ngClass]="{current_slide: currentSlide === 0}">\n        </button>\n        <button (click)="onNextClick()" class="carousel_indicator" [ngClass]="{current_slide: currentSlide === 1}">\n        </button>\n    </div>\n</div>\n\n<div *ngIf="showArrow" class="carousel_xs_nav">\n    <div class="xs_nav_item" (click)="onPreviousClick()" >\n        <img class="arrow_icon" loading="lazy" alt="left arrow mark" src="assets/images/prev.svg"/>\n    </div>\n    <div class="xs_nav_item" (click)="onNextClick()">\n        <img  class="arrow_icon" loading="lazy" alt="right arrow mark" src="assets/images/next.svg"/>\n    </div>\n</div>',
              animations: [
                Object(z.n)("slideAnimation", [
                  Object(z.m)("void => scale", [
                    Object(z.o)(Re, { params: { time: "500ms" } }),
                  ]),
                  Object(z.m)("scale => void", [
                    Object(z.o)(je, { params: { time: "500ms" } }),
                  ]),
                  Object(z.m)("void => fade", [
                    Object(z.o)(Ne, { params: { time: "0ms" } }),
                  ]),
                  Object(z.m)("fade => void", [
                    Object(z.o)(Fe, { params: { time: "0ms" } }),
                  ]),
                  Object(z.m)("void => flip", [
                    Object(z.o)(Le, { params: { time: "500ms" } }),
                  ]),
                  Object(z.m)("flip => void", [
                    Object(z.o)(Ve, { params: { time: "500ms" } }),
                  ]),
                  Object(z.m)("void => jackInTheBox", [
                    Object(z.o)(Be, { params: { time: "700ms" } }),
                  ]),
                  Object(z.m)("jackInTheBox => void", [
                    Object(z.o)(ze, { params: { time: "700ms" } }),
                  ]),
                ]),
              ],
              styles: [
                ":host {\n  flex: 1;\n}\n\n.carousel {\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  border-radius: 0.5em;\n}\n\n.slide {\n  width: 100%;\n  height: 100%;\n  border-radius: 0.5em;\n}\n\n.scienceSlide {\n  display: flex;\n  justify-content: center;\n  margin-top: 40px;\n}\n\n.scienceContainer {\n  grid-template-columns: 1fr 1fr !important;\n  column-gap: 50px !important;\n}\n\n.slideContainer {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  column-gap: 10px;\n}\n\n.carousel_indicator {\n  border: 0;\n  border-radius: 50%;\n  width: 15px;\n  height: 15px;\n  background: rgba(0, 0, 0, 0.3);\n  margin: 0 12px;\n}\n\n.carousel_nav {\n  display: flex;\n  justify-content: center;\n  z-index: 999;\n  margin-top: 12px;\n}\n\n.current_slide {\n  background: black;\n}\n\n.carousel_xs_nav {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n.arrow_icon {\n  height: 34px;\n  padding: 8px 12px;\n}\n\n.xs_nav_item {\n  cursor: pointer;\n}\n\n.control {\n  border: none;\n  background-color: transparent;\n  outline: 0;\n  position: absolute;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 0.5em;\n  color: white;\n  font-weight: bold;\n  font-size: 3em;\n  -webkit-user-select: none;\n          user-select: none;\n  height: 100%;\n  opacity: 80%;\n  transition: opacity 150ms cubic-bezier(0.25, 0.46, 0.45, 0.84);\n  /* Position the buttons */\n}\n\n.control:hover, .control:focus {\n  opacity: 1;\n}\n\n.control.next {\n  right: 0;\n}\n\n.control.prev {\n  left: 0;\n}\n\n/* style the arrows */\n\n.arrow {\n  display: block;\n  border-left: 0.1em solid white;\n  border-bottom: 0.1em solid white;\n  width: 0.5em;\n  height: 0.5em;\n}\n\n.arrow.left {\n  transform: rotate(45deg);\n}\n\n.arrow.right {\n  transform: rotate(225deg);\n}\n\n.reviewCard {\n  width: 381px;\n  margin: 13px 0px;\n  border-radius: 24px;\n  overflow: hidden;\n  background-color: #c2e6f6;\n}\n\n.reviewText {\n  padding: 64px 39px 20px 39px;\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.71;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n}\n\n.name {\n  font-size: 14px;\n  font-weight: 600;\n  margin: 0px;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.71;\n  letter-spacing: normal;\n  text-align: right;\n  color: #212121;\n}\n\n.role {\n  opacity: 0.5;\n  font-family: Manrope;\n  margin: 0px;\n  font-size: 14px;\n  font-weight: 600;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.71;\n  letter-spacing: normal;\n  text-align: right;\n  color: #212121;\n}\n\n.roleDetail {\n  opacity: 0.8;\n  font-family: Manrope;\n  font-size: 12px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.5;\n  letter-spacing: normal;\n  text-align: right;\n  color: #212121;\n  margin: 0px;\n}\n\nmat-card {\n  padding: 0px;\n}\n\n.nameDetail {\n  padding: 17px 45px;\n}\n\n.pinkCard {\n  background-color: #fff4c7 !important;\n}\n\n.greenCard {\n  background-color: rgba(165, 209, 112, 0.4);\n}\n\n.blueCard {\n  background-color: #c2e6f6;\n}\n\n.whiteCard {\n  background-color: #ffffff;\n}",
              ],
            }),
          ],
          Ge
        ));
      let Ue = class {};
      Ue = Object(s.a)(
        [
          Object(u.L)({
            imports: [d.b, x.a, k.c, l.a, a.f, a.l, o.d, r.a, i.a, De.a],
            declarations: [
              p,
              _,
              w,
              C,
              S,
              E,
              fe,
              ge,
              ve,
              be,
              xe,
              _e.a,
              Oe,
              Ie,
              Ae,
              Ce,
              Me,
              He,
              Ge,
            ],
            exports: [
              w,
              fe,
              E,
              S,
              p,
              C,
              b.a,
              m.a,
              f.a,
              g.a,
              y.a,
              v.a,
              de,
              ve,
              be,
              xe,
              _e.a,
              Oe,
              Ie,
              Ae,
              Ce,
              Me,
              He,
            ],
            providers: [c.b],
          }),
        ],
        Ue
      );
    },
    FtGj: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return f;
      }),
        n.d(t, "b", function () {
          return h;
        }),
        n.d(t, "c", function () {
          return a;
        }),
        n.d(t, "d", function () {
          return i;
        }),
        n.d(t, "e", function () {
          return r;
        }),
        n.d(t, "f", function () {
          return l;
        }),
        n.d(t, "g", function () {
          return c;
        }),
        n.d(t, "h", function () {
          return m;
        }),
        n.d(t, "i", function () {
          return d;
        }),
        n.d(t, "j", function () {
          return o;
        }),
        n.d(t, "k", function () {
          return s;
        }),
        n.d(t, "l", function () {
          return u;
        }),
        n.d(t, "m", function () {
          return g;
        }),
        n.d(t, "n", function () {
          return p;
        }),
        n.d(t, "o", function () {
          return y;
        });
      const s = 9,
        i = 13,
        r = 27,
        o = 32,
        a = 35,
        l = 36,
        c = 37,
        u = 38,
        d = 39,
        h = 40,
        p = 48,
        m = 57,
        f = 65,
        g = 90;
      function y(e, ...t) {
        return t.length
          ? t.some((t) => e[t])
          : e.altKey || e.shiftKey || e.ctrlKey || e.metaKey;
      }
    },
    GU7r: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return u;
      }),
        n.d(t, "b", function () {
          return c;
        }),
        n.d(t, "c", function () {
          return d;
        });
      var s = n("8LU1"),
        i = n("fXoL"),
        r = n("HDdC"),
        o = n("XNiG"),
        a = n("Kj3r");
      class l {
        create(e) {
          return "undefined" == typeof MutationObserver
            ? null
            : new MutationObserver(e);
        }
      }
      (l.ɵfac = function (e) {
        return new (e || l)();
      }),
        (l.ɵprov = Object(i.Ic)({
          factory: function () {
            return new l();
          },
          token: l,
          providedIn: "root",
        }));
      class c {
        constructor(e) {
          (this._mutationObserverFactory = e),
            (this._observedElements = new Map());
        }
        ngOnDestroy() {
          this._observedElements.forEach((e, t) => this._cleanupObserver(t));
        }
        observe(e) {
          const t = Object(s.d)(e);
          return new r.a((e) => {
            const n = this._observeElement(t).subscribe(e);
            return () => {
              n.unsubscribe(), this._unobserveElement(t);
            };
          });
        }
        _observeElement(e) {
          if (this._observedElements.has(e))
            this._observedElements.get(e).count++;
          else {
            const t = new o.a(),
              n = this._mutationObserverFactory.create((e) => t.next(e));
            n &&
              n.observe(e, { characterData: !0, childList: !0, subtree: !0 }),
              this._observedElements.set(e, {
                observer: n,
                stream: t,
                count: 1,
              });
          }
          return this._observedElements.get(e).stream;
        }
        _unobserveElement(e) {
          this._observedElements.has(e) &&
            (this._observedElements.get(e).count--,
            this._observedElements.get(e).count || this._cleanupObserver(e));
        }
        _cleanupObserver(e) {
          if (this._observedElements.has(e)) {
            const { observer: t, stream: n } = this._observedElements.get(e);
            t && t.disconnect(), n.complete(), this._observedElements.delete(e);
          }
        }
      }
      (c.ɵfac = function (e) {
        return new (e || c)(i.Yc(l));
      }),
        (c.ɵprov = Object(i.Ic)({
          factory: function () {
            return new c(Object(i.Yc)(l));
          },
          token: c,
          providedIn: "root",
        })),
        (c.ctorParameters = () => [{ type: l }]);
      class u {
        constructor(e, t, n) {
          (this._contentObserver = e),
            (this._elementRef = t),
            (this._ngZone = n),
            (this.event = new i.x()),
            (this._disabled = !1),
            (this._currentSubscription = null);
        }
        get disabled() {
          return this._disabled;
        }
        set disabled(e) {
          (this._disabled = Object(s.b)(e)),
            this._disabled ? this._unsubscribe() : this._subscribe();
        }
        get debounce() {
          return this._debounce;
        }
        set debounce(e) {
          (this._debounce = Object(s.e)(e)), this._subscribe();
        }
        ngAfterContentInit() {
          this._currentSubscription || this.disabled || this._subscribe();
        }
        ngOnDestroy() {
          this._unsubscribe();
        }
        _subscribe() {
          this._unsubscribe();
          const e = this._contentObserver.observe(this._elementRef);
          this._ngZone.runOutsideAngular(() => {
            this._currentSubscription = (
              this.debounce ? e.pipe(Object(a.a)(this.debounce)) : e
            ).subscribe(this.event);
          });
        }
        _unsubscribe() {
          this._currentSubscription && this._currentSubscription.unsubscribe();
        }
      }
      (u.ɵfac = function (e) {
        return new (e || u)(i.Mc(c), i.Mc(i.v), i.Mc(i.Q));
      }),
        (u.ɵdir = i.Hc({
          type: u,
          selectors: [["", "cdkObserveContent", ""]],
          inputs: {
            disabled: ["cdkObserveContentDisabled", "disabled"],
            debounce: "debounce",
          },
          outputs: { event: "cdkObserveContent" },
          exportAs: ["cdkObserveContent"],
        })),
        (u.ctorParameters = () => [{ type: c }, { type: i.v }, { type: i.Q }]),
        (u.propDecorators = {
          event: [{ type: i.S, args: ["cdkObserveContent"] }],
          disabled: [{ type: i.G, args: ["cdkObserveContentDisabled"] }],
          debounce: [{ type: i.G }],
        });
      class d {}
      (d.ɵmod = i.Kc({ type: d })),
        (d.ɵinj = i.Jc({
          factory: function (e) {
            return new (e || d)();
          },
          providers: [l],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          i.wd(d, { declarations: [u], exports: [u] });
    },
    GyhO: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var s = n("LRne"),
        i = n("0EUg");
      function r(...e) {
        return Object(i.a)()(Object(s.a)(...e));
      }
    },
    HDdC: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return u;
      });
      var s = n("7o/Q");
      var i = n("2QA8"),
        r = n("gRHU");
      var o = n("kJWO"),
        a = n("SpAZ");
      function l(e) {
        return 0 === e.length
          ? a.a
          : 1 === e.length
          ? e[0]
          : function (t) {
              return e.reduce((e, t) => t(e), t);
            };
      }
      var c = n("2fFW");
      class u {
        constructor(e) {
          (this._isScalar = !1), e && (this._subscribe = e);
        }
        lift(e) {
          const t = new u();
          return (t.source = this), (t.operator = e), t;
        }
        subscribe(e, t, n) {
          const { operator: o } = this,
            a = (function (e, t, n) {
              if (e) {
                if (e instanceof s.a) return e;
                if (e[i.a]) return e[i.a]();
              }
              return e || t || n ? new s.a(e, t, n) : new s.a(r.a);
            })(e, t, n);
          if (
            (o
              ? a.add(o.call(a, this.source))
              : a.add(
                  this.source ||
                    (c.a.useDeprecatedSynchronousErrorHandling &&
                      !a.syncErrorThrowable)
                    ? this._subscribe(a)
                    : this._trySubscribe(a)
                ),
            c.a.useDeprecatedSynchronousErrorHandling &&
              a.syncErrorThrowable &&
              ((a.syncErrorThrowable = !1), a.syncErrorThrown))
          )
            throw a.syncErrorValue;
          return a;
        }
        _trySubscribe(e) {
          try {
            return this._subscribe(e);
          } catch (t) {
            c.a.useDeprecatedSynchronousErrorHandling &&
              ((e.syncErrorThrown = !0), (e.syncErrorValue = t)),
              !(function (e) {
                for (; e; ) {
                  const { closed: t, destination: n, isStopped: i } = e;
                  if (t || i) return !1;
                  e = n && n instanceof s.a ? n : null;
                }
                return !0;
              })(e)
                ? console.warn(t)
                : e.error(t);
          }
        }
        forEach(e, t) {
          return new (t = d(t))((t, n) => {
            let s;
            s = this.subscribe(
              (t) => {
                try {
                  e(t);
                } catch (i) {
                  n(i), s && s.unsubscribe();
                }
              },
              n,
              t
            );
          });
        }
        _subscribe(e) {
          const { source: t } = this;
          return t && t.subscribe(e);
        }
        [o.a]() {
          return this;
        }
        pipe(...e) {
          return 0 === e.length ? this : l(e)(this);
        }
        toPromise(e) {
          return new (e = d(e))((e, t) => {
            let n;
            this.subscribe(
              (e) => (n = e),
              (e) => t(e),
              () => e(n)
            );
          });
        }
      }
      function d(e) {
        if ((e || (e = c.a.Promise || Promise), !e))
          throw new Error("no Promise impl found");
        return e;
      }
      u.create = (e) => new u(e);
    },
    I55L: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      const s = (e) =>
        e && "number" == typeof e.length && "function" != typeof e;
    },
    IjjT: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      class s {
        constructor(e, t = s.now) {
          (this.SchedulerAction = e), (this.now = t);
        }
        schedule(e, t = 0, n) {
          return new this.SchedulerAction(this, e).schedule(n, t);
        }
      }
      s.now = () => Date.now();
      class i extends s {
        constructor(e, t = s.now) {
          super(e, () =>
            i.delegate && i.delegate !== this ? i.delegate.now() : t()
          ),
            (this.actions = []),
            (this.active = !1),
            (this.scheduled = void 0);
        }
        schedule(e, t = 0, n) {
          return i.delegate && i.delegate !== this
            ? i.delegate.schedule(e, t, n)
            : super.schedule(e, t, n);
        }
        flush(e) {
          const { actions: t } = this;
          if (this.active) return void t.push(e);
          let n;
          this.active = !0;
          do {
            if ((n = e.execute(e.state, e.delay))) break;
          } while ((e = t.shift()));
          if (((this.active = !1), n)) {
            for (; (e = t.shift()); ) e.unsubscribe();
            throw n;
          }
        }
      }
    },
    IzEk: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var s = n("7o/Q"),
        i = n("4I5i"),
        r = n("EY2u");
      function o(e) {
        return (t) => (0 === e ? Object(r.b)() : t.lift(new a(e)));
      }
      class a {
        constructor(e) {
          if (((this.total = e), this.total < 0)) throw new i.a();
        }
        call(e, t) {
          return t.subscribe(new l(e, this.total));
        }
      }
      class l extends s.a {
        constructor(e, t) {
          super(e), (this.total = t), (this.count = 0);
        }
        _next(e) {
          const t = this.total,
            n = ++this.count;
          n <= t &&
            (this.destination.next(e),
            n === t && (this.destination.complete(), this.unsubscribe()));
        }
      }
    },
    JIr8: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      var s = n("zx2A");
      function i(e) {
        return function (t) {
          const n = new r(e),
            s = t.lift(n);
          return (n.caught = s);
        };
      }
      class r {
        constructor(e) {
          this.selector = e;
        }
        call(e, t) {
          return t.subscribe(new o(e, this.selector, this.caught));
        }
      }
      class o extends s.b {
        constructor(e, t, n) {
          super(e), (this.selector = t), (this.caught = n);
        }
        error(e) {
          if (!this.isStopped) {
            let n;
            try {
              n = this.selector(e, this.caught);
            } catch (t) {
              return void super.error(t);
            }
            this._unsubscribeAndRecycle();
            const i = new s.a(this);
            this.add(i);
            const r = Object(s.c)(n, i);
            r !== i && this.add(r);
          }
        }
      }
    },
    JLX5: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var s = n("mrSG"),
        i = n("fXoL");
      let r = class {
        constructor() {}
        ngOnInit() {}
        gotoHome() {
          window.scrollTo({ top: 0, behavior: "smooth" });
        }
      };
      (r.ctorParameters = () => []),
        (r = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-campaign-page",
              template:
                '<app-header></app-header>\n<div>\n    <app-home></app-home>\n    <app-feature (gotoHome)="gotoHome()"></app-feature>\n    <app-subject-details (gotoHome)="gotoHome()"></app-subject-details>\n    <app-learnings (gotoHome)="gotoHome()"></app-learnings>\n    <app-rewards></app-rewards>\n    <app-trusted-clients></app-trusted-clients>\n    <app-subjects></app-subjects>\n    <app-users (gotoHome)="gotoHome()"></app-users>\n    <app-about-us></app-about-us>\n    <app-faq (gotoHome)="gotoHome()"></app-faq>\n    <app-contact-us></app-contact-us>\n</div>\n<app-footer></app-footer>',
              styles: [""],
            }),
          ],
          r
        ));
    },
    JX91: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var s = n("GyhO"),
        i = n("z+Ro");
      function r(...e) {
        const t = e[e.length - 1];
        return Object(i.a)(t)
          ? (e.pop(), (n) => Object(s.a)(e, n, t))
          : (t) => Object(s.a)(e, t);
      }
    },
    Kj3r: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var s = n("7o/Q"),
        i = n("D0XW");
      function r(e, t = i.a) {
        return (n) => n.lift(new o(e, t));
      }
      class o {
        constructor(e, t) {
          (this.dueTime = e), (this.scheduler = t);
        }
        call(e, t) {
          return t.subscribe(new a(e, this.dueTime, this.scheduler));
        }
      }
      class a extends s.a {
        constructor(e, t, n) {
          super(e),
            (this.dueTime = t),
            (this.scheduler = n),
            (this.debouncedSubscription = null),
            (this.lastValue = null),
            (this.hasValue = !1);
        }
        _next(e) {
          this.clearDebounce(),
            (this.lastValue = e),
            (this.hasValue = !0),
            this.add(
              (this.debouncedSubscription = this.scheduler.schedule(
                l,
                this.dueTime,
                this
              ))
            );
        }
        _complete() {
          this.debouncedNext(), this.destination.complete();
        }
        debouncedNext() {
          if ((this.clearDebounce(), this.hasValue)) {
            const { lastValue: e } = this;
            (this.lastValue = null),
              (this.hasValue = !1),
              this.destination.next(e);
          }
        }
        clearDebounce() {
          const e = this.debouncedSubscription;
          null !== e &&
            (this.remove(e),
            e.unsubscribe(),
            (this.debouncedSubscription = null));
        }
      }
      function l(e) {
        e.debouncedNext();
      }
    },
    KqfI: function (e, t, n) {
      "use strict";
      function s() {}
      n.d(t, "a", function () {
        return s;
      });
    },
    LLTW: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var s = n("mrSG"),
        i = n("fXoL"),
        r = n("2Vo4");
      let o = class {
        constructor() {
          this.isLoading = new r.a(!1);
        }
      };
      (o.ctorParameters = () => []),
        (o = Object(s.a)([Object(i.D)({ providedIn: "root" })], o));
    },
    LRne: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var s = n("z+Ro"),
        i = n("yCtX"),
        r = n("jZKg");
      function o(...e) {
        let t = e[e.length - 1];
        return Object(s.a)(t) ? (e.pop(), Object(r.a)(e, t)) : Object(i.a)(e);
      }
    },
    Lhse: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      const s =
        "function" == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : "@@iterator";
    },
    NFeN: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return M;
      });
      var s = n("fXoL"),
        i = n("FKr1"),
        r = n("8LU1"),
        o = n("ofXK"),
        a = n("LRne"),
        l = n("z6cu"),
        c = n("cp0P"),
        u = n("quSY"),
        d = n("vkgz"),
        h = n("lJxs"),
        p = n("JIr8"),
        m = n("nYR2"),
        f = n("w1tV"),
        g = n("IzEk"),
        y = n("tk/3"),
        v = n("jhN1");
      function b(e) {
        return Error(`Unable to find icon with the name "${e}"`);
      }
      function x(e) {
        return Error(
          `The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was "${e}".`
        );
      }
      function _(e) {
        return Error(
          `The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was "${e}".`
        );
      }
      class w {
        constructor(e, t, n) {
          (this.url = e), (this.svgText = t), (this.options = n);
        }
      }
      class C {
        constructor(e, t, n, s) {
          (this._httpClient = e),
            (this._sanitizer = t),
            (this._errorHandler = s),
            (this._svgIconConfigs = new Map()),
            (this._iconSetConfigs = new Map()),
            (this._cachedIconsByUrl = new Map()),
            (this._inProgressUrlFetches = new Map()),
            (this._fontCssClassesByAlias = new Map()),
            (this._defaultFontSetClass = "material-icons"),
            (this._document = n);
        }
        addSvgIcon(e, t, n) {
          return this.addSvgIconInNamespace("", e, t, n);
        }
        addSvgIconLiteral(e, t, n) {
          return this.addSvgIconLiteralInNamespace("", e, t, n);
        }
        addSvgIconInNamespace(e, t, n, s) {
          return this._addSvgIconConfig(e, t, new w(n, null, s));
        }
        addSvgIconLiteralInNamespace(e, t, n, i) {
          const r = this._sanitizer.sanitize(s.cb.HTML, n);
          if (!r) throw _(n);
          return this._addSvgIconConfig(e, t, new w("", r, i));
        }
        addSvgIconSet(e, t) {
          return this.addSvgIconSetInNamespace("", e, t);
        }
        addSvgIconSetLiteral(e, t) {
          return this.addSvgIconSetLiteralInNamespace("", e, t);
        }
        addSvgIconSetInNamespace(e, t, n) {
          return this._addSvgIconSetConfig(e, new w(t, null, n));
        }
        addSvgIconSetLiteralInNamespace(e, t, n) {
          const i = this._sanitizer.sanitize(s.cb.HTML, t);
          if (!i) throw _(t);
          return this._addSvgIconSetConfig(e, new w("", i, n));
        }
        registerFontClassAlias(e, t = e) {
          return this._fontCssClassesByAlias.set(e, t), this;
        }
        classNameForFontAlias(e) {
          return this._fontCssClassesByAlias.get(e) || e;
        }
        setDefaultFontSetClass(e) {
          return (this._defaultFontSetClass = e), this;
        }
        getDefaultFontSetClass() {
          return this._defaultFontSetClass;
        }
        getSvgIconFromUrl(e) {
          const t = this._sanitizer.sanitize(s.cb.RESOURCE_URL, e);
          if (!t) throw x(e);
          const n = this._cachedIconsByUrl.get(t);
          return n
            ? Object(a.a)(S(n))
            : this._loadSvgIconFromConfig(new w(e, null)).pipe(
                Object(d.a)((e) => this._cachedIconsByUrl.set(t, e)),
                Object(h.a)((e) => S(e))
              );
        }
        getNamedSvgIcon(e, t = "") {
          const n = E(t, e),
            s = this._svgIconConfigs.get(n);
          if (s) return this._getSvgFromConfig(s);
          const i = this._iconSetConfigs.get(t);
          return i ? this._getSvgFromIconSetConfigs(e, i) : Object(l.a)(b(n));
        }
        ngOnDestroy() {
          this._svgIconConfigs.clear(),
            this._iconSetConfigs.clear(),
            this._cachedIconsByUrl.clear();
        }
        _getSvgFromConfig(e) {
          return e.svgText
            ? Object(a.a)(S(this._svgElementFromConfig(e)))
            : this._loadSvgIconFromConfig(e).pipe(Object(h.a)((e) => S(e)));
        }
        _getSvgFromIconSetConfigs(e, t) {
          const n = this._extractIconWithNameFromAnySet(e, t);
          if (n) return Object(a.a)(n);
          const i = t
            .filter((e) => !e.svgText)
            .map((e) =>
              this._loadSvgIconSetFromConfig(e).pipe(
                Object(p.a)((t) => {
                  const n = `Loading icon set URL: ${this._sanitizer.sanitize(
                    s.cb.RESOURCE_URL,
                    e.url
                  )} failed: ${t.message}`;
                  return (
                    this._errorHandler.handleError(new Error(n)),
                    Object(a.a)(null)
                  );
                })
              )
            );
          return Object(c.a)(i).pipe(
            Object(h.a)(() => {
              const n = this._extractIconWithNameFromAnySet(e, t);
              if (!n) throw b(e);
              return n;
            })
          );
        }
        _extractIconWithNameFromAnySet(e, t) {
          for (let n = t.length - 1; n >= 0; n--) {
            const s = t[n];
            if (s.svgText && s.svgText.indexOf(e) > -1) {
              const t = this._svgElementFromConfig(s),
                n = this._extractSvgIconFromSet(t, e, s.options);
              if (n) return n;
            }
          }
          return null;
        }
        _loadSvgIconFromConfig(e) {
          return this._fetchIcon(e).pipe(
            Object(d.a)((t) => (e.svgText = t)),
            Object(h.a)(() => this._svgElementFromConfig(e))
          );
        }
        _loadSvgIconSetFromConfig(e) {
          return e.svgText
            ? Object(a.a)(null)
            : this._fetchIcon(e).pipe(Object(d.a)((t) => (e.svgText = t)));
        }
        _extractSvgIconFromSet(e, t, n) {
          const s = e.querySelector(`[id="${t}"]`);
          if (!s) return null;
          const i = s.cloneNode(!0);
          if ((i.removeAttribute("id"), "svg" === i.nodeName.toLowerCase()))
            return this._setSvgAttributes(i, n);
          if ("symbol" === i.nodeName.toLowerCase())
            return this._setSvgAttributes(this._toSvgElement(i), n);
          const r = this._svgElementFromString("<svg></svg>");
          return r.appendChild(i), this._setSvgAttributes(r, n);
        }
        _svgElementFromString(e) {
          const t = this._document.createElement("DIV");
          t.innerHTML = e;
          const n = t.querySelector("svg");
          if (!n) throw Error("<svg> tag not found");
          return n;
        }
        _toSvgElement(e) {
          const t = this._svgElementFromString("<svg></svg>"),
            n = e.attributes;
          for (let s = 0; s < n.length; s++) {
            const { name: e, value: i } = n[s];
            "id" !== e && t.setAttribute(e, i);
          }
          for (let s = 0; s < e.childNodes.length; s++)
            e.childNodes[s].nodeType === this._document.ELEMENT_NODE &&
              t.appendChild(e.childNodes[s].cloneNode(!0));
          return t;
        }
        _setSvgAttributes(e, t) {
          return (
            e.setAttribute("fit", ""),
            e.setAttribute("height", "100%"),
            e.setAttribute("width", "100%"),
            e.setAttribute("preserveAspectRatio", "xMidYMid meet"),
            e.setAttribute("focusable", "false"),
            t && t.viewBox && e.setAttribute("viewBox", t.viewBox),
            e
          );
        }
        _fetchIcon(e) {
          var t;
          const { url: n, options: i } = e,
            r =
              null !== (t = null == i ? void 0 : i.withCredentials) &&
              void 0 !== t &&
              t;
          if (!this._httpClient)
            throw Error(
              "Could not find HttpClient provider for use with Angular Material icons. Please include the HttpClientModule from @angular/common/http in your app imports."
            );
          if (null == n) throw Error(`Cannot fetch icon from URL "${n}".`);
          const o = this._sanitizer.sanitize(s.cb.RESOURCE_URL, n);
          if (!o) throw x(n);
          const a = this._inProgressUrlFetches.get(o);
          if (a) return a;
          const l = this._httpClient
            .get(o, { responseType: "text", withCredentials: r })
            .pipe(
              Object(m.a)(() => this._inProgressUrlFetches.delete(o)),
              Object(f.a)()
            );
          return this._inProgressUrlFetches.set(o, l), l;
        }
        _addSvgIconConfig(e, t, n) {
          return this._svgIconConfigs.set(E(e, t), n), this;
        }
        _addSvgIconSetConfig(e, t) {
          const n = this._iconSetConfigs.get(e);
          return n ? n.push(t) : this._iconSetConfigs.set(e, [t]), this;
        }
        _svgElementFromConfig(e) {
          if (!e.svgElement) {
            const t = this._svgElementFromString(e.svgText);
            this._setSvgAttributes(t, e.options), (e.svgElement = t);
          }
          return e.svgElement;
        }
      }
      (C.ɵfac = function (e) {
        return new (e || C)(s.Yc(y.b, 8), s.Yc(v.b), s.Yc(o.c, 8), s.Yc(s.w));
      }),
        (C.ɵprov = Object(s.Ic)({
          factory: function () {
            return new C(
              Object(s.Yc)(y.b, 8),
              Object(s.Yc)(v.b),
              Object(s.Yc)(o.c, 8),
              Object(s.Yc)(s.w)
            );
          },
          token: C,
          providedIn: "root",
        })),
        (C.ctorParameters = () => [
          { type: y.b, decorators: [{ type: s.R }] },
          { type: v.b },
          {
            type: void 0,
            decorators: [{ type: s.R }, { type: s.C, args: [o.c] }],
          },
          { type: s.w },
        ]);
      new s.R(), new s.eb(), new s.R(), y.b, v.b, s.w, new s.R(), o.c;
      function S(e) {
        return e.cloneNode(!0);
      }
      function E(e, t) {
        return e + ":" + t;
      }
      const k = Object(i.k)(
          class {
            constructor(e) {
              this._elementRef = e;
            }
          }
        ),
        O = new s.E("mat-icon-location", {
          providedIn: "root",
          factory: function () {
            const e = Object(s.tb)(o.c),
              t = e ? e.location : null;
            return { getPathname: () => (t ? t.pathname + t.search : "") };
          },
        });
      const I = [
          "clip-path",
          "color-profile",
          "src",
          "cursor",
          "fill",
          "filter",
          "marker",
          "marker-start",
          "marker-mid",
          "marker-end",
          "mask",
          "stroke",
        ],
        T = I.map((e) => `[${e}]`).join(", "),
        A = /^url\(['"]?#(.*?)['"]?\)$/;
      class D extends k {
        constructor(e, t, n, s, i) {
          super(e),
            (this._iconRegistry = t),
            (this._location = s),
            (this._errorHandler = i),
            (this._inline = !1),
            (this._currentIconFetch = u.a.EMPTY),
            n || e.nativeElement.setAttribute("aria-hidden", "true");
        }
        get inline() {
          return this._inline;
        }
        set inline(e) {
          this._inline = Object(r.b)(e);
        }
        get svgIcon() {
          return this._svgIcon;
        }
        set svgIcon(e) {
          e !== this._svgIcon &&
            (e
              ? this._updateSvgIcon(e)
              : this._svgIcon && this._clearSvgElement(),
            (this._svgIcon = e));
        }
        get fontSet() {
          return this._fontSet;
        }
        set fontSet(e) {
          const t = this._cleanupFontValue(e);
          t !== this._fontSet &&
            ((this._fontSet = t), this._updateFontIconClasses());
        }
        get fontIcon() {
          return this._fontIcon;
        }
        set fontIcon(e) {
          const t = this._cleanupFontValue(e);
          t !== this._fontIcon &&
            ((this._fontIcon = t), this._updateFontIconClasses());
        }
        _splitIconName(e) {
          if (!e) return ["", ""];
          const t = e.split(":");
          switch (t.length) {
            case 1:
              return ["", t[0]];
            case 2:
              return t;
            default:
              throw Error(`Invalid icon name: "${e}"`);
          }
        }
        ngOnInit() {
          this._updateFontIconClasses();
        }
        ngAfterViewChecked() {
          const e = this._elementsWithExternalReferences;
          if (e && e.size) {
            const e = this._location.getPathname();
            e !== this._previousPath &&
              ((this._previousPath = e), this._prependPathToReferences(e));
          }
        }
        ngOnDestroy() {
          this._currentIconFetch.unsubscribe(),
            this._elementsWithExternalReferences &&
              this._elementsWithExternalReferences.clear();
        }
        _usingFontIcon() {
          return !this.svgIcon;
        }
        _setSvgElement(e) {
          this._clearSvgElement();
          const t = e.querySelectorAll("style");
          for (let s = 0; s < t.length; s++) t[s].textContent += " ";
          const n = this._location.getPathname();
          (this._previousPath = n),
            this._cacheChildrenWithExternalReferences(e),
            this._prependPathToReferences(n),
            this._elementRef.nativeElement.appendChild(e);
        }
        _clearSvgElement() {
          const e = this._elementRef.nativeElement;
          let t = e.childNodes.length;
          for (
            this._elementsWithExternalReferences &&
            this._elementsWithExternalReferences.clear();
            t--;

          ) {
            const n = e.childNodes[t];
            (1 === n.nodeType && "svg" !== n.nodeName.toLowerCase()) ||
              e.removeChild(n);
          }
        }
        _updateFontIconClasses() {
          if (!this._usingFontIcon()) return;
          const e = this._elementRef.nativeElement,
            t = this.fontSet
              ? this._iconRegistry.classNameForFontAlias(this.fontSet)
              : this._iconRegistry.getDefaultFontSetClass();
          t != this._previousFontSetClass &&
            (this._previousFontSetClass &&
              e.classList.remove(this._previousFontSetClass),
            t && e.classList.add(t),
            (this._previousFontSetClass = t)),
            this.fontIcon != this._previousFontIconClass &&
              (this._previousFontIconClass &&
                e.classList.remove(this._previousFontIconClass),
              this.fontIcon && e.classList.add(this.fontIcon),
              (this._previousFontIconClass = this.fontIcon));
        }
        _cleanupFontValue(e) {
          return "string" == typeof e ? e.trim().split(" ")[0] : e;
        }
        _prependPathToReferences(e) {
          const t = this._elementsWithExternalReferences;
          t &&
            t.forEach((t, n) => {
              t.forEach((t) => {
                n.setAttribute(t.name, `url('${e}#${t.value}')`);
              });
            });
        }
        _cacheChildrenWithExternalReferences(e) {
          const t = e.querySelectorAll(T),
            n = (this._elementsWithExternalReferences =
              this._elementsWithExternalReferences || new Map());
          for (let s = 0; s < t.length; s++)
            I.forEach((e) => {
              const i = t[s],
                r = i.getAttribute(e),
                o = r ? r.match(A) : null;
              if (o) {
                let t = n.get(i);
                t || ((t = []), n.set(i, t)), t.push({ name: e, value: o[1] });
              }
            });
        }
        _updateSvgIcon(e) {
          if (
            ((this._svgNamespace = null),
            (this._svgName = null),
            this._currentIconFetch.unsubscribe(),
            e)
          ) {
            const [t, n] = this._splitIconName(e);
            t && (this._svgNamespace = t),
              n && (this._svgName = n),
              (this._currentIconFetch = this._iconRegistry
                .getNamedSvgIcon(n, t)
                .pipe(Object(g.a)(1))
                .subscribe(
                  (e) => this._setSvgElement(e),
                  (e) => {
                    const s = `Error retrieving icon ${t}:${n}! ${e.message}`;
                    this._errorHandler.handleError(new Error(s));
                  }
                ));
          }
        }
      }
      (D.ɵfac = function (e) {
        return new (e || D)(
          s.Mc(s.v),
          s.Mc(C),
          s.Zc("aria-hidden"),
          s.Mc(O),
          s.Mc(s.w)
        );
      }),
        (D.ɵcmp = s.Gc({
          type: D,
          selectors: [["mat-icon"]],
          hostAttrs: ["role", "img", 1, "mat-icon", "notranslate"],
          hostVars: 7,
          hostBindings: function (e, t) {
            2 & e &&
              (s.Ac("data-mat-icon-type", t._usingFontIcon() ? "font" : "svg")(
                "data-mat-icon-name",
                t._svgName || t.fontIcon
              )("data-mat-icon-namespace", t._svgNamespace || t.fontSet),
              s.Ec("mat-icon-inline", t.inline)(
                "mat-icon-no-color",
                "primary" !== t.color &&
                  "accent" !== t.color &&
                  "warn" !== t.color
              ));
          },
          inputs: {
            color: "color",
            inline: "inline",
            svgIcon: "svgIcon",
            fontSet: "fontSet",
            fontIcon: "fontIcon",
          },
          exportAs: ["matIcon"],
          features: [s.wc],
          ngContentSelectors: ["*"],
          decls: 1,
          vars: 0,
          template: function (e, t) {
            1 & e && (s.kd(), s.jd(0));
          },
          styles: [
            ".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\n",
          ],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (D.ctorParameters = () => [
          { type: s.v },
          { type: C },
          { type: String, decorators: [{ type: s.h, args: ["aria-hidden"] }] },
          { type: void 0, decorators: [{ type: s.C, args: [O] }] },
          { type: s.w },
        ]),
        (D.propDecorators = {
          inline: [{ type: s.G }],
          svgIcon: [{ type: s.G }],
          fontSet: [{ type: s.G }],
          fontIcon: [{ type: s.G }],
        });
      class M {}
      (M.ɵmod = s.Kc({ type: M })),
        (M.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || M)();
          },
          imports: [[i.d], i.d],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(M, {
            declarations: function () {
              return [D];
            },
            imports: function () {
              return [i.d];
            },
            exports: function () {
              return [D, i.d];
            },
          });
    },
    NJ4a: function (e, t, n) {
      "use strict";
      function s(e) {
        setTimeout(() => {
          throw e;
        }, 0);
      }
      n.d(t, "a", function () {
        return s;
      });
    },
    NXyV: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var s = n("HDdC"),
        i = n("Cfvw"),
        r = n("EY2u");
      function o(e) {
        return new s.a((t) => {
          let n;
          try {
            n = e();
          } catch (s) {
            return void t.error(s);
          }
          return (n ? Object(i.a)(n) : Object(r.b)()).subscribe(t);
        });
      }
    },
    PqYM: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return l;
      });
      var s = n("HDdC"),
        i = n("D0XW"),
        r = n("DH7j");
      function o(e) {
        return !Object(r.a)(e) && e - parseFloat(e) + 1 >= 0;
      }
      var a = n("z+Ro");
      function l(e = 0, t, n) {
        let r = -1;
        return (
          o(t)
            ? (r = Number(t) < 1 ? 1 : Number(t))
            : Object(a.a)(t) && (n = t),
          Object(a.a)(n) || (n = i.a),
          new s.a((t) => {
            const s = o(e) ? e : +e - n.now();
            return n.schedule(c, s, { index: 0, period: r, subscriber: t });
          })
        );
      }
      function c(e) {
        const { index: t, period: n, subscriber: s } = e;
        if ((s.next(t), !s.closed)) {
          if (-1 === n) return s.complete();
          (e.index = t + 1), this.schedule(e, n);
        }
      }
    },
    R0Ic: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      }),
        n.d(t, "b", function () {
          return s;
        }),
        n.d(t, "c", function () {
          return i;
        }),
        n.d(t, "d", function () {
          return v;
        }),
        n.d(t, "e", function () {
          return a;
        }),
        n.d(t, "f", function () {
          return m;
        }),
        n.d(t, "g", function () {
          return p;
        }),
        n.d(t, "h", function () {
          return d;
        }),
        n.d(t, "i", function () {
          return g;
        }),
        n.d(t, "j", function () {
          return l;
        }),
        n.d(t, "k", function () {
          return u;
        }),
        n.d(t, "l", function () {
          return c;
        }),
        n.d(t, "m", function () {
          return h;
        }),
        n.d(t, "n", function () {
          return o;
        }),
        n.d(t, "o", function () {
          return f;
        }),
        n.d(t, "p", function () {
          return b;
        }),
        n.d(t, "q", function () {
          return x;
        });
      class s {}
      class i {}
      const r = "*";
      function o(e, t) {
        return { type: 7, name: e, definitions: t, options: {} };
      }
      function a(e, t = null) {
        return { type: 4, styles: t, timings: e };
      }
      function l(e, t = null) {
        return { type: 2, steps: e, options: t };
      }
      function c(e) {
        return { type: 6, styles: e, offset: null };
      }
      function u(e, t, n) {
        return { type: 0, name: e, styles: t, options: n };
      }
      function d(e) {
        return { type: 5, steps: e };
      }
      function h(e, t, n = null) {
        return { type: 1, expr: e, animation: t, options: n };
      }
      function p(e, t = null) {
        return { type: 8, animation: e, options: t };
      }
      function m(e = null) {
        return { type: 9, options: e };
      }
      function f(e, t = null) {
        return { type: 10, animation: e, options: t };
      }
      function g(e, t, n = null) {
        return { type: 11, selector: e, animation: t, options: n };
      }
      function y(e) {
        Promise.resolve(null).then(e);
      }
      class v {
        constructor(e = 0, t = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this.parentPlayer = null),
            (this.totalTime = e + t);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((e) => e()),
            (this._onDoneFns = []));
        }
        onStart(e) {
          this._onStartFns.push(e);
        }
        onDone(e) {
          this._onDoneFns.push(e);
        }
        onDestroy(e) {
          this._onDestroyFns.push(e);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
            (this._started = !0);
        }
        triggerMicrotask() {
          y(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach((e) => e()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach((e) => e()),
            (this._onDestroyFns = []));
        }
        reset() {}
        setPosition(e) {}
        getPosition() {
          return 0;
        }
        triggerCallback(e) {
          const t = "start" == e ? this._onStartFns : this._onDoneFns;
          t.forEach((e) => e()), (t.length = 0);
        }
      }
      class b {
        constructor(e) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = e);
          let t = 0,
            n = 0,
            s = 0;
          const i = this.players.length;
          0 == i
            ? y(() => this._onFinish())
            : this.players.forEach((e) => {
                e.onDone(() => {
                  ++t == i && this._onFinish();
                }),
                  e.onDestroy(() => {
                    ++n == i && this._onDestroy();
                  }),
                  e.onStart(() => {
                    ++s == i && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce(
              (e, t) => Math.max(e, t.totalTime),
              0
            ));
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((e) => e()),
            (this._onDoneFns = []));
        }
        init() {
          this.players.forEach((e) => e.init());
        }
        onStart(e) {
          this._onStartFns.push(e);
        }
        _onStart() {
          this.hasStarted() ||
            ((this._started = !0),
            this._onStartFns.forEach((e) => e()),
            (this._onStartFns = []));
        }
        onDone(e) {
          this._onDoneFns.push(e);
        }
        onDestroy(e) {
          this._onDestroyFns.push(e);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(),
            this._onStart(),
            this.players.forEach((e) => e.play());
        }
        pause() {
          this.players.forEach((e) => e.pause());
        }
        restart() {
          this.players.forEach((e) => e.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach((e) => e.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach((e) => e.destroy()),
            this._onDestroyFns.forEach((e) => e()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach((e) => e.reset()),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        setPosition(e) {
          const t = e * this.totalTime;
          this.players.forEach((e) => {
            const n = e.totalTime ? Math.min(1, t / e.totalTime) : 1;
            e.setPosition(n);
          });
        }
        getPosition() {
          let e = 0;
          return (
            this.players.forEach((t) => {
              const n = t.getPosition();
              e = Math.min(n, e);
            }),
            e
          );
        }
        beforeDestroy() {
          this.players.forEach((e) => {
            e.beforeDestroy && e.beforeDestroy();
          });
        }
        triggerCallback(e) {
          const t = "start" == e ? this._onStartFns : this._onDoneFns;
          t.forEach((e) => e()), (t.length = 0);
        }
      }
      const x = "!";
    },
    R1ws: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return Mt;
      }),
        n.d(t, "b", function () {
          return Nt;
        });
      var s = n("fXoL"),
        i = n("jhN1"),
        r = n("R0Ic");
      function o() {
        return (
          "undefined" != typeof process &&
          "[object process]" === {}.toString.call(process)
        );
      }
      function a(e) {
        switch (e.length) {
          case 0:
            return new r.d();
          case 1:
            return e[0];
          default:
            return new r.p(e);
        }
      }
      function l(e, t, n, s, i = {}, o = {}) {
        const a = [],
          l = [];
        let c = -1,
          u = null;
        if (
          (s.forEach((e) => {
            const n = e.offset,
              s = n == c,
              d = (s && u) || {};
            Object.keys(e).forEach((n) => {
              let s = n,
                l = e[n];
              if ("offset" !== n)
                switch (((s = t.normalizePropertyName(s, a)), l)) {
                  case r.q:
                    l = i[n];
                    break;
                  case r.a:
                    l = o[n];
                    break;
                  default:
                    l = t.normalizeStyleValue(n, s, l, a);
                }
              d[s] = l;
            }),
              s || l.push(d),
              (u = d),
              (c = n);
          }),
          a.length)
        ) {
          const e = "\n - ";
          throw new Error(
            `Unable to animate due to the following errors:${e}${a.join(e)}`
          );
        }
        return l;
      }
      function c(e, t, n, s) {
        switch (t) {
          case "start":
            e.onStart(() => s(n && u(n, "start", e)));
            break;
          case "done":
            e.onDone(() => s(n && u(n, "done", e)));
            break;
          case "destroy":
            e.onDestroy(() => s(n && u(n, "destroy", e)));
        }
      }
      function u(e, t, n) {
        const s = n.totalTime,
          i = !!n.disabled,
          r = d(
            e.element,
            e.triggerName,
            e.fromState,
            e.toState,
            t || e.phaseName,
            null == s ? e.totalTime : s,
            i
          ),
          o = e._data;
        return null != o && (r._data = o), r;
      }
      function d(e, t, n, s, i = "", r = 0, o) {
        return {
          element: e,
          triggerName: t,
          fromState: n,
          toState: s,
          phaseName: i,
          totalTime: r,
          disabled: !!o,
        };
      }
      function h(e, t, n) {
        let s;
        return (
          e instanceof Map
            ? ((s = e.get(t)), s || e.set(t, (s = n)))
            : ((s = e[t]), s || (s = e[t] = n)),
          s
        );
      }
      function p(e) {
        const t = e.indexOf(":");
        return [e.substring(1, t), e.substr(t + 1)];
      }
      let m = (e, t) => !1;
      let f = (e, t) => !1;
      let g = (e, t, n) => [];
      const y = o();
      (y || "undefined" != typeof Element) &&
        ((m = (e, t) => e.contains(t)),
        (f = (() => {
          if (y || Element.prototype.matches) return (e, t) => e.matches(t);
          {
            const e = Element.prototype,
              t =
                e.matchesSelector ||
                e.mozMatchesSelector ||
                e.msMatchesSelector ||
                e.oMatchesSelector ||
                e.webkitMatchesSelector;
            return t ? (e, n) => t.apply(e, [n]) : f;
          }
        })()),
        (g = (e, t, n) => {
          let s = [];
          if (n) s.push(...e.querySelectorAll(t));
          else {
            const n = e.querySelector(t);
            n && s.push(n);
          }
          return s;
        }));
      let v = null,
        b = !1;
      function x(e) {
        v ||
          ((v =
            (function () {
              if ("undefined" != typeof document) return document.body;
              return null;
            })() || {}),
          (b = !!v.style && "WebkitAppearance" in v.style));
        let t = !0;
        if (
          v.style &&
          !(function (e) {
            return "ebkit" == e.substring(1, 6);
          })(e) &&
          ((t = e in v.style), !t && b)
        ) {
          t = "Webkit" + e.charAt(0).toUpperCase() + e.substr(1) in v.style;
        }
        return t;
      }
      const _ = f,
        w = m,
        C = g;
      function S(e) {
        const t = {};
        return (
          Object.keys(e).forEach((n) => {
            const s = n.replace(/([a-z])([A-Z])/g, "$1-$2");
            t[s] = e[n];
          }),
          t
        );
      }
      class E {
        validateStyleProperty(e) {
          return x(e);
        }
        matchesElement(e, t) {
          return _(e, t);
        }
        containsElement(e, t) {
          return w(e, t);
        }
        query(e, t, n) {
          return C(e, t, n);
        }
        computeStyle(e, t, n) {
          return n || "";
        }
        animate(e, t, n, s, i, o = [], a) {
          return new r.d(n, s);
        }
      }
      (E.ɵfac = function (e) {
        return new (e || E)();
      }),
        (E.ɵprov = s.Ic({ token: E, factory: E.ɵfac }));
      class k {}
      k.NOOP = new E();
      const O = "ng-enter",
        I = "ng-leave",
        T = "ng-trigger",
        A = ".ng-trigger",
        D = "ng-animating",
        M = ".ng-animating";
      function P(e) {
        if ("number" == typeof e) return e;
        const t = e.match(/^(-?[\.\d]+)(m?s)/);
        return !t || t.length < 2 ? 0 : R(parseFloat(t[1]), t[2]);
      }
      function R(e, t) {
        switch (t) {
          case "s":
            return 1e3 * e;
          default:
            return e;
        }
      }
      function j(e, t, n) {
        return e.hasOwnProperty("duration")
          ? e
          : (function (e, t, n) {
              const s =
                /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i;
              let i,
                r = 0,
                o = "";
              if ("string" == typeof e) {
                const n = e.match(s);
                if (null === n)
                  return (
                    t.push(`The provided timing value "${e}" is invalid.`),
                    { duration: 0, delay: 0, easing: "" }
                  );
                i = R(parseFloat(n[1]), n[2]);
                const a = n[3];
                null != a && (r = R(parseFloat(a), n[4]));
                const l = n[5];
                l && (o = l);
              } else i = e;
              if (!n) {
                let n = !1,
                  s = t.length;
                i < 0 &&
                  (t.push(
                    "Duration values below 0 are not allowed for this animation step."
                  ),
                  (n = !0)),
                  r < 0 &&
                    (t.push(
                      "Delay values below 0 are not allowed for this animation step."
                    ),
                    (n = !0)),
                  n &&
                    t.splice(
                      s,
                      0,
                      `The provided timing value "${e}" is invalid.`
                    );
              }
              return { duration: i, delay: r, easing: o };
            })(e, t, n);
      }
      function N(e, t = {}) {
        return (
          Object.keys(e).forEach((n) => {
            t[n] = e[n];
          }),
          t
        );
      }
      function F(e, t, n = {}) {
        if (t) for (let s in e) n[s] = e[s];
        else N(e, n);
        return n;
      }
      function L(e, t, n) {
        return n ? t + ":" + n + ";" : "";
      }
      function V(e) {
        let t = "";
        for (let n = 0; n < e.style.length; n++) {
          const s = e.style.item(n);
          t += L(0, s, e.style.getPropertyValue(s));
        }
        for (const n in e.style) {
          if (!e.style.hasOwnProperty(n) || n.startsWith("_")) continue;
          t += L(
            0,
            n.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase(),
            e.style[n]
          );
        }
        e.setAttribute("style", t);
      }
      function B(e, t, n) {
        e.style &&
          (Object.keys(t).forEach((s) => {
            const i = Y(s);
            n && !n.hasOwnProperty(s) && (n[s] = e.style[i]),
              (e.style[i] = t[s]);
          }),
          o() && V(e));
      }
      function z(e, t) {
        e.style &&
          (Object.keys(t).forEach((t) => {
            const n = Y(t);
            e.style[n] = "";
          }),
          o() && V(e));
      }
      function H(e) {
        return Array.isArray(e) ? (1 == e.length ? e[0] : Object(r.j)(e)) : e;
      }
      const G = new RegExp("{{\\s*(.+?)\\s*}}", "g");
      function U(e) {
        let t = [];
        if ("string" == typeof e) {
          let n;
          for (; (n = G.exec(e)); ) t.push(n[1]);
          G.lastIndex = 0;
        }
        return t;
      }
      function $(e, t, n) {
        const s = e.toString(),
          i = s.replace(G, (e, s) => {
            let i = t[s];
            return (
              t.hasOwnProperty(s) ||
                (n.push("Please provide a value for the animation param " + s),
                (i = "")),
              i.toString()
            );
          });
        return i == s ? e : i;
      }
      function q(e) {
        const t = [];
        let n = e.next();
        for (; !n.done; ) t.push(n.value), (n = e.next());
        return t;
      }
      const W = /-+([a-z0-9])/g;
      function Y(e) {
        return e.replace(W, (...e) => e[1].toUpperCase());
      }
      function Q(e, t) {
        return 0 === e || 0 === t;
      }
      function K(e, t, n) {
        const s = Object.keys(n);
        if (s.length && t.length) {
          let r = t[0],
            o = [];
          if (
            (s.forEach((e) => {
              r.hasOwnProperty(e) || o.push(e), (r[e] = n[e]);
            }),
            o.length)
          )
            for (var i = 1; i < t.length; i++) {
              let n = t[i];
              o.forEach(function (t) {
                n[t] = X(e, t);
              });
            }
        }
        return t;
      }
      function J(e, t, n) {
        switch (t.type) {
          case 7:
            return e.visitTrigger(t, n);
          case 0:
            return e.visitState(t, n);
          case 1:
            return e.visitTransition(t, n);
          case 2:
            return e.visitSequence(t, n);
          case 3:
            return e.visitGroup(t, n);
          case 4:
            return e.visitAnimate(t, n);
          case 5:
            return e.visitKeyframes(t, n);
          case 6:
            return e.visitStyle(t, n);
          case 8:
            return e.visitReference(t, n);
          case 9:
            return e.visitAnimateChild(t, n);
          case 10:
            return e.visitAnimateRef(t, n);
          case 11:
            return e.visitQuery(t, n);
          case 12:
            return e.visitStagger(t, n);
          default:
            throw new Error(
              "Unable to resolve animation metadata node #" + t.type
            );
        }
      }
      function X(e, t) {
        return window.getComputedStyle(e)[t];
      }
      const Z = "*";
      function ee(e, t) {
        const n = [];
        return (
          "string" == typeof e
            ? e.split(/\s*,\s*/).forEach((e) =>
                (function (e, t, n) {
                  if (":" == e[0]) {
                    const s = (function (e, t) {
                      switch (e) {
                        case ":enter":
                          return "void => *";
                        case ":leave":
                          return "* => void";
                        case ":increment":
                          return (e, t) => parseFloat(t) > parseFloat(e);
                        case ":decrement":
                          return (e, t) => parseFloat(t) < parseFloat(e);
                        default:
                          return (
                            t.push(
                              `The transition alias value "${e}" is not supported`
                            ),
                            "* => *"
                          );
                      }
                    })(e, n);
                    if ("function" == typeof s) return void t.push(s);
                    e = s;
                  }
                  const s = e.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == s || s.length < 4)
                    return (
                      n.push(
                        `The provided transition expression "${e}" is not supported`
                      ),
                      t
                    );
                  const i = s[1],
                    r = s[2],
                    o = s[3];
                  t.push(se(i, o));
                  const a = i == Z && o == Z;
                  "<" != r[0] || a || t.push(se(o, i));
                })(e, n, t)
              )
            : n.push(e),
          n
        );
      }
      const te = new Set(["true", "1"]),
        ne = new Set(["false", "0"]);
      function se(e, t) {
        const n = te.has(e) || ne.has(e),
          s = te.has(t) || ne.has(t);
        return (i, r) => {
          let o = e == Z || e == i,
            a = t == Z || t == r;
          return (
            !o && n && "boolean" == typeof i && (o = i ? te.has(e) : ne.has(e)),
            !a && s && "boolean" == typeof r && (a = r ? te.has(t) : ne.has(t)),
            o && a
          );
        };
      }
      const ie = ":self",
        re = new RegExp("s*:selfs*,?", "g");
      function oe(e, t, n) {
        return new ae(e).build(t, n);
      }
      class ae {
        constructor(e) {
          this._driver = e;
        }
        build(e, t) {
          const n = new le(t);
          return this._resetContextStyleTimingState(n), J(this, H(e), n);
        }
        _resetContextStyleTimingState(e) {
          (e.currentQuerySelector = ""),
            (e.collectedStyles = {}),
            (e.collectedStyles[""] = {}),
            (e.currentTime = 0);
        }
        visitTrigger(e, t) {
          let n = (t.queryCount = 0),
            s = (t.depCount = 0);
          const i = [],
            r = [];
          return (
            "@" == e.name.charAt(0) &&
              t.errors.push(
                "animation triggers cannot be prefixed with an `@` sign (e.g. trigger('@foo', [...]))"
              ),
            e.definitions.forEach((e) => {
              if ((this._resetContextStyleTimingState(t), 0 == e.type)) {
                const n = e,
                  s = n.name;
                s
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach((e) => {
                    (n.name = e), i.push(this.visitState(n, t));
                  }),
                  (n.name = s);
              } else if (1 == e.type) {
                const i = this.visitTransition(e, t);
                (n += i.queryCount), (s += i.depCount), r.push(i);
              } else
                t.errors.push(
                  "only state() and transition() definitions can sit inside of a trigger()"
                );
            }),
            {
              type: 7,
              name: e.name,
              states: i,
              transitions: r,
              queryCount: n,
              depCount: s,
              options: null,
            }
          );
        }
        visitState(e, t) {
          const n = this.visitStyle(e.styles, t),
            s = (e.options && e.options.params) || null;
          if (n.containsDynamicStyles) {
            const i = new Set(),
              r = s || {};
            if (
              (n.styles.forEach((e) => {
                if (ce(e)) {
                  const t = e;
                  Object.keys(t).forEach((e) => {
                    U(t[e]).forEach((e) => {
                      r.hasOwnProperty(e) || i.add(e);
                    });
                  });
                }
              }),
              i.size)
            ) {
              const n = q(i.values());
              t.errors.push(
                `state("${
                  e.name
                }", ...) must define default values for all the following style substitutions: ${n.join(
                  ", "
                )}`
              );
            }
          }
          return {
            type: 0,
            name: e.name,
            style: n,
            options: s ? { params: s } : null,
          };
        }
        visitTransition(e, t) {
          (t.queryCount = 0), (t.depCount = 0);
          const n = J(this, H(e.animation), t);
          return {
            type: 1,
            matchers: ee(e.expr, t.errors),
            animation: n,
            queryCount: t.queryCount,
            depCount: t.depCount,
            options: ue(e.options),
          };
        }
        visitSequence(e, t) {
          return {
            type: 2,
            steps: e.steps.map((e) => J(this, e, t)),
            options: ue(e.options),
          };
        }
        visitGroup(e, t) {
          const n = t.currentTime;
          let s = 0;
          const i = e.steps.map((e) => {
            t.currentTime = n;
            const i = J(this, e, t);
            return (s = Math.max(s, t.currentTime)), i;
          });
          return (
            (t.currentTime = s), { type: 3, steps: i, options: ue(e.options) }
          );
        }
        visitAnimate(e, t) {
          const n = (function (e, t) {
            let n = null;
            if (e.hasOwnProperty("duration")) n = e;
            else if ("number" == typeof e) {
              return de(j(e, t).duration, 0, "");
            }
            const s = e;
            if (
              s
                .split(/\s+/)
                .some((e) => "{" == e.charAt(0) && "{" == e.charAt(1))
            ) {
              const e = de(0, 0, "");
              return (e.dynamic = !0), (e.strValue = s), e;
            }
            return (n = n || j(s, t)), de(n.duration, n.delay, n.easing);
          })(e.timings, t.errors);
          let s;
          t.currentAnimateTimings = n;
          let i = e.styles ? e.styles : Object(r.l)({});
          if (5 == i.type) s = this.visitKeyframes(i, t);
          else {
            let i = e.styles,
              o = !1;
            if (!i) {
              o = !0;
              const e = {};
              n.easing && (e.easing = n.easing), (i = Object(r.l)(e));
            }
            t.currentTime += n.duration + n.delay;
            const a = this.visitStyle(i, t);
            (a.isEmptyStep = o), (s = a);
          }
          return (
            (t.currentAnimateTimings = null),
            { type: 4, timings: n, style: s, options: null }
          );
        }
        visitStyle(e, t) {
          const n = this._makeStyleAst(e, t);
          return this._validateStyleAst(n, t), n;
        }
        _makeStyleAst(e, t) {
          const n = [];
          Array.isArray(e.styles)
            ? e.styles.forEach((e) => {
                "string" == typeof e
                  ? e == r.a
                    ? n.push(e)
                    : t.errors.push(
                        `The provided style string value ${e} is not allowed.`
                      )
                  : n.push(e);
              })
            : n.push(e.styles);
          let s = !1,
            i = null;
          return (
            n.forEach((e) => {
              if (ce(e)) {
                const t = e,
                  n = t.easing;
                if ((n && ((i = n), delete t.easing), !s))
                  for (let e in t) {
                    if (t[e].toString().indexOf("{{") >= 0) {
                      s = !0;
                      break;
                    }
                  }
              }
            }),
            {
              type: 6,
              styles: n,
              easing: i,
              offset: e.offset,
              containsDynamicStyles: s,
              options: null,
            }
          );
        }
        _validateStyleAst(e, t) {
          const n = t.currentAnimateTimings;
          let s = t.currentTime,
            i = t.currentTime;
          n && i > 0 && (i -= n.duration + n.delay),
            e.styles.forEach((e) => {
              "string" != typeof e &&
                Object.keys(e).forEach((n) => {
                  if (!this._driver.validateStyleProperty(n))
                    return void t.errors.push(
                      `The provided animation property "${n}" is not a supported CSS property for animations`
                    );
                  const r = t.collectedStyles[t.currentQuerySelector],
                    o = r[n];
                  let a = !0;
                  o &&
                    (i != s &&
                      i >= o.startTime &&
                      s <= o.endTime &&
                      (t.errors.push(
                        `The CSS property "${n}" that exists between the times of "${o.startTime}ms" and "${o.endTime}ms" is also being animated in a parallel animation between the times of "${i}ms" and "${s}ms"`
                      ),
                      (a = !1)),
                    (i = o.startTime)),
                    a && (r[n] = { startTime: i, endTime: s }),
                    t.options &&
                      (function (e, t, n) {
                        const s = t.params || {},
                          i = U(e);
                        i.length &&
                          i.forEach((e) => {
                            s.hasOwnProperty(e) ||
                              n.push(
                                `Unable to resolve the local animation param ${e} in the given list of values`
                              );
                          });
                      })(e[n], t.options, t.errors);
                });
            });
        }
        visitKeyframes(e, t) {
          const n = { type: 5, styles: [], options: null };
          if (!t.currentAnimateTimings)
            return (
              t.errors.push(
                "keyframes() must be placed inside of a call to animate()"
              ),
              n
            );
          let s = 0;
          const i = [];
          let r = !1,
            o = !1,
            a = 0;
          const l = e.steps.map((e) => {
            const n = this._makeStyleAst(e, t);
            let l =
                null != n.offset
                  ? n.offset
                  : (function (e) {
                      if ("string" == typeof e) return null;
                      let t = null;
                      if (Array.isArray(e))
                        e.forEach((e) => {
                          if (ce(e) && e.hasOwnProperty("offset")) {
                            const n = e;
                            (t = parseFloat(n.offset)), delete n.offset;
                          }
                        });
                      else if (ce(e) && e.hasOwnProperty("offset")) {
                        const n = e;
                        (t = parseFloat(n.offset)), delete n.offset;
                      }
                      return t;
                    })(n.styles),
              c = 0;
            return (
              null != l && (s++, (c = n.offset = l)),
              (o = o || c < 0 || c > 1),
              (r = r || c < a),
              (a = c),
              i.push(c),
              n
            );
          });
          o &&
            t.errors.push(
              "Please ensure that all keyframe offsets are between 0 and 1"
            ),
            r &&
              t.errors.push(
                "Please ensure that all keyframe offsets are in order"
              );
          const c = e.steps.length;
          let u = 0;
          s > 0 && s < c
            ? t.errors.push(
                "Not all style() steps within the declared keyframes() contain offsets"
              )
            : 0 == s && (u = 1 / (c - 1));
          const d = c - 1,
            h = t.currentTime,
            p = t.currentAnimateTimings,
            m = p.duration;
          return (
            l.forEach((e, s) => {
              const r = u > 0 ? (s == d ? 1 : u * s) : i[s],
                o = r * m;
              (t.currentTime = h + p.delay + o),
                (p.duration = o),
                this._validateStyleAst(e, t),
                (e.offset = r),
                n.styles.push(e);
            }),
            n
          );
        }
        visitReference(e, t) {
          return {
            type: 8,
            animation: J(this, H(e.animation), t),
            options: ue(e.options),
          };
        }
        visitAnimateChild(e, t) {
          return t.depCount++, { type: 9, options: ue(e.options) };
        }
        visitAnimateRef(e, t) {
          return {
            type: 10,
            animation: this.visitReference(e.animation, t),
            options: ue(e.options),
          };
        }
        visitQuery(e, t) {
          const n = t.currentQuerySelector,
            s = e.options || {};
          t.queryCount++, (t.currentQuery = e);
          const [i, r] = (function (e) {
            const t = !!e.split(/\s*,\s*/).find((e) => e == ie);
            t && (e = e.replace(re, ""));
            return [
              (e = e
                .replace(/@\*/g, A)
                .replace(/@\w+/g, (e) => ".ng-trigger-" + e.substr(1))
                .replace(/:animating/g, M)),
              t,
            ];
          })(e.selector);
          (t.currentQuerySelector = n.length ? n + " " + i : i),
            h(t.collectedStyles, t.currentQuerySelector, {});
          const o = J(this, H(e.animation), t);
          return (
            (t.currentQuery = null),
            (t.currentQuerySelector = n),
            {
              type: 11,
              selector: i,
              limit: s.limit || 0,
              optional: !!s.optional,
              includeSelf: r,
              animation: o,
              originalSelector: e.selector,
              options: ue(e.options),
            }
          );
        }
        visitStagger(e, t) {
          t.currentQuery ||
            t.errors.push("stagger() can only be used inside of query()");
          const n =
            "full" === e.timings
              ? { duration: 0, delay: 0, easing: "full" }
              : j(e.timings, t.errors, !0);
          return {
            type: 12,
            animation: J(this, H(e.animation), t),
            timings: n,
            options: null,
          };
        }
      }
      class le {
        constructor(e) {
          (this.errors = e),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = {}),
            (this.options = null);
        }
      }
      function ce(e) {
        return !Array.isArray(e) && "object" == typeof e;
      }
      function ue(e) {
        var t;
        return (
          e
            ? (e = N(e)).params && (e.params = (t = e.params) ? N(t) : null)
            : (e = {}),
          e
        );
      }
      function de(e, t, n) {
        return { duration: e, delay: t, easing: n };
      }
      function he(e, t, n, s, i, r, o = null, a = !1) {
        return {
          type: 1,
          element: e,
          keyframes: t,
          preStyleProps: n,
          postStyleProps: s,
          duration: i,
          delay: r,
          totalTime: i + r,
          easing: o,
          subTimeline: a,
        };
      }
      class pe {
        constructor() {
          this._map = new Map();
        }
        consume(e) {
          let t = this._map.get(e);
          return t ? this._map.delete(e) : (t = []), t;
        }
        append(e, t) {
          let n = this._map.get(e);
          n || this._map.set(e, (n = [])), n.push(...t);
        }
        has(e) {
          return this._map.has(e);
        }
        clear() {
          this._map.clear();
        }
      }
      const me = new RegExp(":enter", "g"),
        fe = new RegExp(":leave", "g");
      function ge(e, t, n, s, i, r = {}, o = {}, a, l, c = []) {
        return new ye().buildKeyframes(e, t, n, s, i, r, o, a, l, c);
      }
      class ye {
        buildKeyframes(e, t, n, s, i, r, o, a, l, c = []) {
          l = l || new pe();
          const u = new be(e, t, l, s, i, c, []);
          (u.options = a),
            u.currentTimeline.setStyles([r], null, u.errors, a),
            J(this, n, u);
          const d = u.timelines.filter((e) => e.containsAnimation());
          if (d.length && Object.keys(o).length) {
            const e = d[d.length - 1];
            e.allowOnlyTimelineStyles() || e.setStyles([o], null, u.errors, a);
          }
          return d.length
            ? d.map((e) => e.buildKeyframes())
            : [he(t, [], [], [], 0, 0, "", !1)];
        }
        visitTrigger(e, t) {}
        visitState(e, t) {}
        visitTransition(e, t) {}
        visitAnimateChild(e, t) {
          const n = t.subInstructions.consume(t.element);
          if (n) {
            const s = t.createSubContext(e.options),
              i = t.currentTimeline.currentTime,
              r = this._visitSubInstructions(n, s, s.options);
            i != r && t.transformIntoNewTimeline(r);
          }
          t.previousNode = e;
        }
        visitAnimateRef(e, t) {
          const n = t.createSubContext(e.options);
          n.transformIntoNewTimeline(),
            this.visitReference(e.animation, n),
            t.transformIntoNewTimeline(n.currentTimeline.currentTime),
            (t.previousNode = e);
        }
        _visitSubInstructions(e, t, n) {
          let s = t.currentTimeline.currentTime;
          const i = null != n.duration ? P(n.duration) : null,
            r = null != n.delay ? P(n.delay) : null;
          return (
            0 !== i &&
              e.forEach((e) => {
                const n = t.appendInstructionToTimeline(e, i, r);
                s = Math.max(s, n.duration + n.delay);
              }),
            s
          );
        }
        visitReference(e, t) {
          t.updateOptions(e.options, !0),
            J(this, e.animation, t),
            (t.previousNode = e);
        }
        visitSequence(e, t) {
          const n = t.subContextCount;
          let s = t;
          const i = e.options;
          if (
            i &&
            (i.params || i.delay) &&
            ((s = t.createSubContext(i)),
            s.transformIntoNewTimeline(),
            null != i.delay)
          ) {
            6 == s.previousNode.type &&
              (s.currentTimeline.snapshotCurrentStyles(),
              (s.previousNode = ve));
            const e = P(i.delay);
            s.delayNextStep(e);
          }
          e.steps.length &&
            (e.steps.forEach((e) => J(this, e, s)),
            s.currentTimeline.applyStylesToKeyframe(),
            s.subContextCount > n && s.transformIntoNewTimeline()),
            (t.previousNode = e);
        }
        visitGroup(e, t) {
          const n = [];
          let s = t.currentTimeline.currentTime;
          const i = e.options && e.options.delay ? P(e.options.delay) : 0;
          e.steps.forEach((r) => {
            const o = t.createSubContext(e.options);
            i && o.delayNextStep(i),
              J(this, r, o),
              (s = Math.max(s, o.currentTimeline.currentTime)),
              n.push(o.currentTimeline);
          }),
            n.forEach((e) => t.currentTimeline.mergeTimelineCollectedStyles(e)),
            t.transformIntoNewTimeline(s),
            (t.previousNode = e);
        }
        _visitTiming(e, t) {
          if (e.dynamic) {
            const n = e.strValue;
            return j(t.params ? $(n, t.params, t.errors) : n, t.errors);
          }
          return { duration: e.duration, delay: e.delay, easing: e.easing };
        }
        visitAnimate(e, t) {
          const n = (t.currentAnimateTimings = this._visitTiming(e.timings, t)),
            s = t.currentTimeline;
          n.delay && (t.incrementTime(n.delay), s.snapshotCurrentStyles());
          const i = e.style;
          5 == i.type
            ? this.visitKeyframes(i, t)
            : (t.incrementTime(n.duration),
              this.visitStyle(i, t),
              s.applyStylesToKeyframe()),
            (t.currentAnimateTimings = null),
            (t.previousNode = e);
        }
        visitStyle(e, t) {
          const n = t.currentTimeline,
            s = t.currentAnimateTimings;
          !s && n.getCurrentStyleProperties().length && n.forwardFrame();
          const i = (s && s.easing) || e.easing;
          e.isEmptyStep
            ? n.applyEmptyStep(i)
            : n.setStyles(e.styles, i, t.errors, t.options),
            (t.previousNode = e);
        }
        visitKeyframes(e, t) {
          const n = t.currentAnimateTimings,
            s = t.currentTimeline.duration,
            i = n.duration,
            r = t.createSubContext().currentTimeline;
          (r.easing = n.easing),
            e.styles.forEach((e) => {
              const n = e.offset || 0;
              r.forwardTime(n * i),
                r.setStyles(e.styles, e.easing, t.errors, t.options),
                r.applyStylesToKeyframe();
            }),
            t.currentTimeline.mergeTimelineCollectedStyles(r),
            t.transformIntoNewTimeline(s + i),
            (t.previousNode = e);
        }
        visitQuery(e, t) {
          const n = t.currentTimeline.currentTime,
            s = e.options || {},
            i = s.delay ? P(s.delay) : 0;
          i &&
            (6 === t.previousNode.type ||
              (0 == n &&
                t.currentTimeline.getCurrentStyleProperties().length)) &&
            (t.currentTimeline.snapshotCurrentStyles(), (t.previousNode = ve));
          let r = n;
          const o = t.invokeQuery(
            e.selector,
            e.originalSelector,
            e.limit,
            e.includeSelf,
            !!s.optional,
            t.errors
          );
          t.currentQueryTotal = o.length;
          let a = null;
          o.forEach((n, s) => {
            t.currentQueryIndex = s;
            const o = t.createSubContext(e.options, n);
            i && o.delayNextStep(i),
              n === t.element && (a = o.currentTimeline),
              J(this, e.animation, o),
              o.currentTimeline.applyStylesToKeyframe();
            const l = o.currentTimeline.currentTime;
            r = Math.max(r, l);
          }),
            (t.currentQueryIndex = 0),
            (t.currentQueryTotal = 0),
            t.transformIntoNewTimeline(r),
            a &&
              (t.currentTimeline.mergeTimelineCollectedStyles(a),
              t.currentTimeline.snapshotCurrentStyles()),
            (t.previousNode = e);
        }
        visitStagger(e, t) {
          const n = t.parentContext,
            s = t.currentTimeline,
            i = e.timings,
            r = Math.abs(i.duration),
            o = r * (t.currentQueryTotal - 1);
          let a = r * t.currentQueryIndex;
          switch (i.duration < 0 ? "reverse" : i.easing) {
            case "reverse":
              a = o - a;
              break;
            case "full":
              a = n.currentStaggerTime;
          }
          const l = t.currentTimeline;
          a && l.delayNextStep(a);
          const c = l.currentTime;
          J(this, e.animation, t),
            (t.previousNode = e),
            (n.currentStaggerTime =
              s.currentTime - c + (s.startTime - n.currentTimeline.startTime));
        }
      }
      const ve = {};
      class be {
        constructor(e, t, n, s, i, r, o, a) {
          (this._driver = e),
            (this.element = t),
            (this.subInstructions = n),
            (this._enterClassName = s),
            (this._leaveClassName = i),
            (this.errors = r),
            (this.timelines = o),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = ve),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = a || new xe(this._driver, t, 0)),
            o.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(e, t) {
          if (!e) return;
          const n = e;
          let s = this.options;
          null != n.duration && (s.duration = P(n.duration)),
            null != n.delay && (s.delay = P(n.delay));
          const i = n.params;
          if (i) {
            let e = s.params;
            e || (e = this.options.params = {}),
              Object.keys(i).forEach((n) => {
                (t && e.hasOwnProperty(n)) || (e[n] = $(i[n], e, this.errors));
              });
          }
        }
        _copyOptions() {
          const e = {};
          if (this.options) {
            const t = this.options.params;
            if (t) {
              const n = (e.params = {});
              Object.keys(t).forEach((e) => {
                n[e] = t[e];
              });
            }
          }
          return e;
        }
        createSubContext(e = null, t, n) {
          const s = t || this.element,
            i = new be(
              this._driver,
              s,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(s, n || 0)
            );
          return (
            (i.previousNode = this.previousNode),
            (i.currentAnimateTimings = this.currentAnimateTimings),
            (i.options = this._copyOptions()),
            i.updateOptions(e),
            (i.currentQueryIndex = this.currentQueryIndex),
            (i.currentQueryTotal = this.currentQueryTotal),
            (i.parentContext = this),
            this.subContextCount++,
            i
          );
        }
        transformIntoNewTimeline(e) {
          return (
            (this.previousNode = ve),
            (this.currentTimeline = this.currentTimeline.fork(this.element, e)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(e, t, n) {
          const s = {
              duration: null != t ? t : e.duration,
              delay:
                this.currentTimeline.currentTime +
                (null != n ? n : 0) +
                e.delay,
              easing: "",
            },
            i = new _e(
              this._driver,
              e.element,
              e.keyframes,
              e.preStyleProps,
              e.postStyleProps,
              s,
              e.stretchStartingKeyframe
            );
          return this.timelines.push(i), s;
        }
        incrementTime(e) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + e);
        }
        delayNextStep(e) {
          e > 0 && this.currentTimeline.delayNextStep(e);
        }
        invokeQuery(e, t, n, s, i, r) {
          let o = [];
          if ((s && o.push(this.element), e.length > 0)) {
            e = (e = e.replace(me, "." + this._enterClassName)).replace(
              fe,
              "." + this._leaveClassName
            );
            const t = 1 != n;
            let s = this._driver.query(this.element, e, t);
            0 !== n &&
              (s = n < 0 ? s.slice(s.length + n, s.length) : s.slice(0, n)),
              o.push(...s);
          }
          return (
            i ||
              0 != o.length ||
              r.push(
                `\`query("${t}")\` returned zero elements. (Use \`query("${t}", { optional: true })\` if you wish to allow this.)`
              ),
            o
          );
        }
      }
      class xe {
        constructor(e, t, n, s) {
          (this._driver = e),
            (this.element = t),
            (this.startTime = n),
            (this._elementTimelineStylesLookup = s),
            (this.duration = 0),
            (this._previousKeyframe = {}),
            (this._currentKeyframe = {}),
            (this._keyframes = new Map()),
            (this._styleSummary = {}),
            (this._pendingStyles = {}),
            (this._backFill = {}),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup ||
              (this._elementTimelineStylesLookup = new Map()),
            (this._localTimelineStyles = Object.create(this._backFill, {})),
            (this._globalTimelineStyles =
              this._elementTimelineStylesLookup.get(t)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(
                t,
                this._localTimelineStyles
              )),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.getCurrentStyleProperties().length > 0;
            default:
              return !0;
          }
        }
        getCurrentStyleProperties() {
          return Object.keys(this._currentKeyframe);
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(e) {
          const t =
            1 == this._keyframes.size &&
            Object.keys(this._pendingStyles).length;
          this.duration || t
            ? (this.forwardTime(this.currentTime + e),
              t && this.snapshotCurrentStyles())
            : (this.startTime += e);
        }
        fork(e, t) {
          return (
            this.applyStylesToKeyframe(),
            new xe(
              this._driver,
              e,
              t || this.currentTime,
              this._elementTimelineStylesLookup
            )
          );
        }
        _loadKeyframe() {
          this._currentKeyframe &&
            (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = Object.create(this._backFill, {})),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(e) {
          this.applyStylesToKeyframe(),
            (this.duration = e),
            this._loadKeyframe();
        }
        _updateStyle(e, t) {
          (this._localTimelineStyles[e] = t),
            (this._globalTimelineStyles[e] = t),
            (this._styleSummary[e] = { time: this.currentTime, value: t });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(e) {
          e && (this._previousKeyframe.easing = e),
            Object.keys(this._globalTimelineStyles).forEach((e) => {
              (this._backFill[e] = this._globalTimelineStyles[e] || r.a),
                (this._currentKeyframe[e] = r.a);
            }),
            (this._currentEmptyStepKeyframe = this._currentKeyframe);
        }
        setStyles(e, t, n, s) {
          t && (this._previousKeyframe.easing = t);
          const i = (s && s.params) || {},
            o = (function (e, t) {
              const n = {};
              let s;
              return (
                e.forEach((e) => {
                  "*" === e
                    ? ((s = s || Object.keys(t)),
                      s.forEach((e) => {
                        n[e] = r.a;
                      }))
                    : F(e, !1, n);
                }),
                n
              );
            })(e, this._globalTimelineStyles);
          Object.keys(o).forEach((e) => {
            const t = $(o[e], i, n);
            (this._pendingStyles[e] = t),
              this._localTimelineStyles.hasOwnProperty(e) ||
                (this._backFill[e] = this._globalTimelineStyles.hasOwnProperty(
                  e
                )
                  ? this._globalTimelineStyles[e]
                  : r.a),
              this._updateStyle(e, t);
          });
        }
        applyStylesToKeyframe() {
          const e = this._pendingStyles,
            t = Object.keys(e);
          0 != t.length &&
            ((this._pendingStyles = {}),
            t.forEach((t) => {
              const n = e[t];
              this._currentKeyframe[t] = n;
            }),
            Object.keys(this._localTimelineStyles).forEach((e) => {
              this._currentKeyframe.hasOwnProperty(e) ||
                (this._currentKeyframe[e] = this._localTimelineStyles[e]);
            }));
        }
        snapshotCurrentStyles() {
          Object.keys(this._localTimelineStyles).forEach((e) => {
            const t = this._localTimelineStyles[e];
            (this._pendingStyles[e] = t), this._updateStyle(e, t);
          });
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const e = [];
          for (let t in this._currentKeyframe) e.push(t);
          return e;
        }
        mergeTimelineCollectedStyles(e) {
          Object.keys(e._styleSummary).forEach((t) => {
            const n = this._styleSummary[t],
              s = e._styleSummary[t];
            (!n || s.time > n.time) && this._updateStyle(t, s.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const e = new Set(),
            t = new Set(),
            n = 1 === this._keyframes.size && 0 === this.duration;
          let s = [];
          this._keyframes.forEach((i, o) => {
            const a = F(i, !0);
            Object.keys(a).forEach((n) => {
              const s = a[n];
              s == r.q ? e.add(n) : s == r.a && t.add(n);
            }),
              n || (a.offset = o / this.duration),
              s.push(a);
          });
          const i = e.size ? q(e.values()) : [],
            o = t.size ? q(t.values()) : [];
          if (n) {
            const e = s[0],
              t = N(e);
            (e.offset = 0), (t.offset = 1), (s = [e, t]);
          }
          return he(
            this.element,
            s,
            i,
            o,
            this.duration,
            this.startTime,
            this.easing,
            !1
          );
        }
      }
      class _e extends xe {
        constructor(e, t, n, s, i, r, o = !1) {
          super(e, t, r.delay),
            (this.element = t),
            (this.keyframes = n),
            (this.preStyleProps = s),
            (this.postStyleProps = i),
            (this._stretchStartingKeyframe = o),
            (this.timings = {
              duration: r.duration,
              delay: r.delay,
              easing: r.easing,
            });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let e = this.keyframes,
            { delay: t, duration: n, easing: s } = this.timings;
          if (this._stretchStartingKeyframe && t) {
            const i = [],
              r = n + t,
              o = t / r,
              a = F(e[0], !1);
            (a.offset = 0), i.push(a);
            const l = F(e[0], !1);
            (l.offset = we(o)), i.push(l);
            const c = e.length - 1;
            for (let s = 1; s <= c; s++) {
              let o = F(e[s], !1);
              const a = t + o.offset * n;
              (o.offset = we(a / r)), i.push(o);
            }
            (n = r), (t = 0), (s = ""), (e = i);
          }
          return he(
            this.element,
            e,
            this.preStyleProps,
            this.postStyleProps,
            n,
            t,
            s,
            !0
          );
        }
      }
      function we(e, t = 3) {
        const n = Math.pow(10, t - 1);
        return Math.round(e * n) / n;
      }
      class Ce {}
      class Se extends Ce {
        normalizePropertyName(e, t) {
          return Y(e);
        }
        normalizeStyleValue(e, t, n, s) {
          let i = "";
          const r = n.toString().trim();
          if (Ee[t] && 0 !== n && "0" !== n)
            if ("number" == typeof n) i = "px";
            else {
              const t = n.match(/^[+-]?[\d\.]+([a-z]*)$/);
              t &&
                0 == t[1].length &&
                s.push(`Please provide a CSS unit value for ${e}:${n}`);
            }
          return r + i;
        }
      }
      const Ee = (function (e) {
        const t = {};
        return e.forEach((e) => (t[e] = !0)), t;
      })(
        "width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective".split(
          ","
        )
      );
      function ke(e, t, n, s, i, r, o, a, l, c, u, d, h) {
        return {
          type: 0,
          element: e,
          triggerName: t,
          isRemovalTransition: i,
          fromState: n,
          fromStyles: r,
          toState: s,
          toStyles: o,
          timelines: a,
          queriedElements: l,
          preStyleProps: c,
          postStyleProps: u,
          totalTime: d,
          errors: h,
        };
      }
      const Oe = {};
      class Ie {
        constructor(e, t, n) {
          (this._triggerName = e), (this.ast = t), (this._stateStyles = n);
        }
        match(e, t, n, s) {
          return (function (e, t, n, s, i) {
            return e.some((e) => e(t, n, s, i));
          })(this.ast.matchers, e, t, n, s);
        }
        buildStyles(e, t, n) {
          const s = this._stateStyles["*"],
            i = this._stateStyles[e],
            r = s ? s.buildStyles(t, n) : {};
          return i ? i.buildStyles(t, n) : r;
        }
        build(e, t, n, s, i, r, o, a, l, c) {
          const u = [],
            d = (this.ast.options && this.ast.options.params) || Oe,
            p = (o && o.params) || Oe,
            m = this.buildStyles(n, p, u),
            f = (a && a.params) || Oe,
            g = this.buildStyles(s, f, u),
            y = new Set(),
            v = new Map(),
            b = new Map(),
            x = "void" === s,
            _ = { params: Object.assign(Object.assign({}, d), f) },
            w = c ? [] : ge(e, t, this.ast.animation, i, r, m, g, _, l, u);
          let C = 0;
          if (
            (w.forEach((e) => {
              C = Math.max(e.duration + e.delay, C);
            }),
            u.length)
          )
            return ke(t, this._triggerName, n, s, x, m, g, [], [], v, b, C, u);
          w.forEach((e) => {
            const n = e.element,
              s = h(v, n, {});
            e.preStyleProps.forEach((e) => (s[e] = !0));
            const i = h(b, n, {});
            e.postStyleProps.forEach((e) => (i[e] = !0)), n !== t && y.add(n);
          });
          const S = q(y.values());
          return ke(t, this._triggerName, n, s, x, m, g, w, S, v, b, C);
        }
      }
      class Te {
        constructor(e, t) {
          (this.styles = e), (this.defaultParams = t);
        }
        buildStyles(e, t) {
          const n = {},
            s = N(this.defaultParams);
          return (
            Object.keys(e).forEach((t) => {
              const n = e[t];
              null != n && (s[t] = n);
            }),
            this.styles.styles.forEach((e) => {
              if ("string" != typeof e) {
                const i = e;
                Object.keys(i).forEach((e) => {
                  let r = i[e];
                  r.length > 1 && (r = $(r, s, t)), (n[e] = r);
                });
              }
            }),
            n
          );
        }
      }
      class Ae {
        constructor(e, t) {
          var n, s;
          (this.name = e),
            (this.ast = t),
            (this.transitionFactories = []),
            (this.states = {}),
            t.states.forEach((e) => {
              const t = (e.options && e.options.params) || {};
              this.states[e.name] = new Te(e.style, t);
            }),
            De(this.states, "true", "1"),
            De(this.states, "false", "0"),
            t.transitions.forEach((t) => {
              this.transitionFactories.push(new Ie(e, t, this.states));
            }),
            (this.fallbackTransition =
              ((n = e),
              (s = this.states),
              new Ie(
                n,
                {
                  type: 1,
                  animation: { type: 2, steps: [], options: null },
                  matchers: [(e, t) => !0],
                  options: null,
                  queryCount: 0,
                  depCount: 0,
                },
                s
              )));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(e, t, n, s) {
          return (
            this.transitionFactories.find((i) => i.match(e, t, n, s)) || null
          );
        }
        matchStyles(e, t, n) {
          return this.fallbackTransition.buildStyles(e, t, n);
        }
      }
      function De(e, t, n) {
        e.hasOwnProperty(t)
          ? e.hasOwnProperty(n) || (e[n] = e[t])
          : e.hasOwnProperty(n) && (e[t] = e[n]);
      }
      const Me = new pe();
      class Pe {
        constructor(e, t, n) {
          (this.bodyNode = e),
            (this._driver = t),
            (this._normalizer = n),
            (this._animations = {}),
            (this._playersById = {}),
            (this.players = []);
        }
        register(e, t) {
          const n = [],
            s = oe(this._driver, t, n);
          if (n.length)
            throw new Error(
              "Unable to build the animation due to the following errors: " +
                n.join("\n")
            );
          this._animations[e] = s;
        }
        _buildPlayer(e, t, n) {
          const s = e.element,
            i = l(this._driver, this._normalizer, 0, e.keyframes, t, n);
          return this._driver.animate(
            s,
            i,
            e.duration,
            e.delay,
            e.easing,
            [],
            !0
          );
        }
        create(e, t, n = {}) {
          const s = [],
            i = this._animations[e];
          let o;
          const l = new Map();
          if (
            (i
              ? ((o = ge(this._driver, t, i, O, I, {}, {}, n, Me, s)),
                o.forEach((e) => {
                  const t = h(l, e.element, {});
                  e.postStyleProps.forEach((e) => (t[e] = null));
                }))
              : (s.push(
                  "The requested animation doesn't exist or has already been destroyed"
                ),
                (o = [])),
            s.length)
          )
            throw new Error(
              "Unable to create the animation due to the following errors: " +
                s.join("\n")
            );
          l.forEach((e, t) => {
            Object.keys(e).forEach((n) => {
              e[n] = this._driver.computeStyle(t, n, r.a);
            });
          });
          const c = a(
            o.map((e) => {
              const t = l.get(e.element);
              return this._buildPlayer(e, {}, t);
            })
          );
          return (
            (this._playersById[e] = c),
            c.onDestroy(() => this.destroy(e)),
            this.players.push(c),
            c
          );
        }
        destroy(e) {
          const t = this._getPlayer(e);
          t.destroy(), delete this._playersById[e];
          const n = this.players.indexOf(t);
          n >= 0 && this.players.splice(n, 1);
        }
        _getPlayer(e) {
          const t = this._playersById[e];
          if (!t)
            throw new Error(
              "Unable to find the timeline player referenced by " + e
            );
          return t;
        }
        listen(e, t, n, s) {
          const i = d(t, "", "", "");
          return c(this._getPlayer(e), n, i, s), () => {};
        }
        command(e, t, n, s) {
          if ("register" == n) return void this.register(e, s[0]);
          if ("create" == n) {
            const n = s[0] || {};
            return void this.create(e, t, n);
          }
          const i = this._getPlayer(e);
          switch (n) {
            case "play":
              i.play();
              break;
            case "pause":
              i.pause();
              break;
            case "reset":
              i.reset();
              break;
            case "restart":
              i.restart();
              break;
            case "finish":
              i.finish();
              break;
            case "init":
              i.init();
              break;
            case "setPosition":
              i.setPosition(parseFloat(s[0]));
              break;
            case "destroy":
              this.destroy(e);
          }
        }
      }
      const Re = "ng-animate-queued",
        je = "ng-animate-disabled",
        Ne = ".ng-animate-disabled",
        Fe = [],
        Le = {
          namespaceId: "",
          setForRemoval: !1,
          setForMove: !1,
          hasAnimation: !1,
          removedBeforeQueried: !1,
        },
        Ve = {
          namespaceId: "",
          setForMove: !1,
          setForRemoval: !1,
          hasAnimation: !1,
          removedBeforeQueried: !0,
        };
      class Be {
        constructor(e, t = "") {
          this.namespaceId = t;
          const n = e && e.hasOwnProperty("value"),
            s = n ? e.value : e;
          if (
            ((this.value = (function (e) {
              return null != e ? e : null;
            })(s)),
            n)
          ) {
            const t = N(e);
            delete t.value, (this.options = t);
          } else this.options = {};
          this.options.params || (this.options.params = {});
        }
        get params() {
          return this.options.params;
        }
        absorbOptions(e) {
          const t = e.params;
          if (t) {
            const e = this.options.params;
            Object.keys(t).forEach((n) => {
              null == e[n] && (e[n] = t[n]);
            });
          }
        }
      }
      const ze = "void",
        He = new Be(ze);
      class Ge {
        constructor(e, t, n) {
          (this.id = e),
            (this.hostElement = t),
            (this._engine = n),
            (this.players = []),
            (this._triggers = {}),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = "ng-tns-" + e),
            Ke(t, this._hostClassName);
        }
        listen(e, t, n, s) {
          if (!this._triggers.hasOwnProperty(t))
            throw new Error(
              `Unable to listen on the animation trigger event "${n}" because the animation trigger "${t}" doesn't exist!`
            );
          if (null == n || 0 == n.length)
            throw new Error(
              `Unable to listen on the animation trigger "${t}" because the provided event is undefined!`
            );
          if ("start" != (i = n) && "done" != i)
            throw new Error(
              `The provided animation trigger event "${n}" for the animation trigger "${t}" is not supported!`
            );
          var i;
          const r = h(this._elementListeners, e, []),
            o = { name: t, phase: n, callback: s };
          r.push(o);
          const a = h(this._engine.statesByElement, e, {});
          return (
            a.hasOwnProperty(t) ||
              (Ke(e, T), Ke(e, "ng-trigger-" + t), (a[t] = He)),
            () => {
              this._engine.afterFlush(() => {
                const e = r.indexOf(o);
                e >= 0 && r.splice(e, 1), this._triggers[t] || delete a[t];
              });
            }
          );
        }
        register(e, t) {
          return !this._triggers[e] && ((this._triggers[e] = t), !0);
        }
        _getTrigger(e) {
          const t = this._triggers[e];
          if (!t)
            throw new Error(
              `The provided animation trigger "${e}" has not been registered!`
            );
          return t;
        }
        trigger(e, t, n, s = !0) {
          const i = this._getTrigger(t),
            r = new $e(this.id, t, e);
          let o = this._engine.statesByElement.get(e);
          o ||
            (Ke(e, T),
            Ke(e, "ng-trigger-" + t),
            this._engine.statesByElement.set(e, (o = {})));
          let a = o[t];
          const l = new Be(n, this.id);
          !(n && n.hasOwnProperty("value")) && a && l.absorbOptions(a.options),
            (o[t] = l),
            a || (a = He);
          if (!(l.value === ze) && a.value === l.value) {
            if (
              !(function (e, t) {
                const n = Object.keys(e),
                  s = Object.keys(t);
                if (n.length != s.length) return !1;
                for (let i = 0; i < n.length; i++) {
                  const s = n[i];
                  if (!t.hasOwnProperty(s) || e[s] !== t[s]) return !1;
                }
                return !0;
              })(a.params, l.params)
            ) {
              const t = [],
                n = i.matchStyles(a.value, a.params, t),
                s = i.matchStyles(l.value, l.params, t);
              t.length
                ? this._engine.reportError(t)
                : this._engine.afterFlush(() => {
                    z(e, n), B(e, s);
                  });
            }
            return;
          }
          const c = h(this._engine.playersByElement, e, []);
          c.forEach((e) => {
            e.namespaceId == this.id &&
              e.triggerName == t &&
              e.queued &&
              e.destroy();
          });
          let u = i.matchTransition(a.value, l.value, e, l.params),
            d = !1;
          if (!u) {
            if (!s) return;
            (u = i.fallbackTransition), (d = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: e,
              triggerName: t,
              transition: u,
              fromState: a,
              toState: l,
              player: r,
              isFallbackTransition: d,
            }),
            d ||
              (Ke(e, Re),
              r.onStart(() => {
                Je(e, Re);
              })),
            r.onDone(() => {
              let t = this.players.indexOf(r);
              t >= 0 && this.players.splice(t, 1);
              const n = this._engine.playersByElement.get(e);
              if (n) {
                let e = n.indexOf(r);
                e >= 0 && n.splice(e, 1);
              }
            }),
            this.players.push(r),
            c.push(r),
            r
          );
        }
        deregister(e) {
          delete this._triggers[e],
            this._engine.statesByElement.forEach((t, n) => {
              delete t[e];
            }),
            this._elementListeners.forEach((t, n) => {
              this._elementListeners.set(
                n,
                t.filter((t) => t.name != e)
              );
            });
        }
        clearElementCache(e) {
          this._engine.statesByElement.delete(e),
            this._elementListeners.delete(e);
          const t = this._engine.playersByElement.get(e);
          t &&
            (t.forEach((e) => e.destroy()),
            this._engine.playersByElement.delete(e));
        }
        _signalRemovalForInnerTriggers(e, t) {
          const n = this._engine.driver.query(e, A, !0);
          n.forEach((e) => {
            if (e.__ng_removed) return;
            const n = this._engine.fetchNamespacesByElement(e);
            n.size
              ? n.forEach((n) => n.triggerLeaveAnimation(e, t, !1, !0))
              : this.clearElementCache(e);
          }),
            this._engine.afterFlushAnimationsDone(() =>
              n.forEach((e) => this.clearElementCache(e))
            );
        }
        triggerLeaveAnimation(e, t, n, s) {
          const i = this._engine.statesByElement.get(e);
          if (i) {
            const r = [];
            if (
              (Object.keys(i).forEach((t) => {
                if (this._triggers[t]) {
                  const n = this.trigger(e, t, ze, s);
                  n && r.push(n);
                }
              }),
              r.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, e, !0, t),
                n && a(r).onDone(() => this._engine.processLeaveNode(e)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(e) {
          const t = this._elementListeners.get(e);
          if (t) {
            const n = new Set();
            t.forEach((t) => {
              const s = t.name;
              if (n.has(s)) return;
              n.add(s);
              const i = this._triggers[s].fallbackTransition,
                r = this._engine.statesByElement.get(e)[s] || He,
                o = new Be(ze),
                a = new $e(this.id, s, e);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: e,
                  triggerName: s,
                  transition: i,
                  fromState: r,
                  toState: o,
                  player: a,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(e, t) {
          const n = this._engine;
          if (
            (e.childElementCount && this._signalRemovalForInnerTriggers(e, t),
            this.triggerLeaveAnimation(e, t, !0))
          )
            return;
          let s = !1;
          if (n.totalAnimations) {
            const t = n.players.length ? n.playersByQueriedElement.get(e) : [];
            if (t && t.length) s = !0;
            else {
              let t = e;
              for (; (t = t.parentNode); ) {
                if (n.statesByElement.get(t)) {
                  s = !0;
                  break;
                }
              }
            }
          }
          if ((this.prepareLeaveAnimationListeners(e), s))
            n.markElementAsRemoved(this.id, e, !1, t);
          else {
            const s = e.__ng_removed;
            (s && s !== Le) ||
              (n.afterFlush(() => this.clearElementCache(e)),
              n.destroyInnerAnimations(e),
              n._onRemovalComplete(e, t));
          }
        }
        insertNode(e, t) {
          Ke(e, this._hostClassName);
        }
        drainQueuedTransitions(e) {
          const t = [];
          return (
            this._queue.forEach((n) => {
              const s = n.player;
              if (s.destroyed) return;
              const i = n.element,
                r = this._elementListeners.get(i);
              r &&
                r.forEach((t) => {
                  if (t.name == n.triggerName) {
                    const s = d(
                      i,
                      n.triggerName,
                      n.fromState.value,
                      n.toState.value
                    );
                    (s._data = e), c(n.player, t.phase, s, t.callback);
                  }
                }),
                s.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      s.destroy();
                    })
                  : t.push(n);
            }),
            (this._queue = []),
            t.sort((e, t) => {
              const n = e.transition.ast.depCount,
                s = t.transition.ast.depCount;
              return 0 == n || 0 == s
                ? n - s
                : this._engine.driver.containsElement(e.element, t.element)
                ? 1
                : -1;
            })
          );
        }
        destroy(e) {
          this.players.forEach((e) => e.destroy()),
            this._signalRemovalForInnerTriggers(this.hostElement, e);
        }
        elementContainsData(e) {
          let t = !1;
          return (
            this._elementListeners.has(e) && (t = !0),
            (t = !!this._queue.find((t) => t.element === e) || t),
            t
          );
        }
      }
      class Ue {
        constructor(e, t, n) {
          (this.bodyNode = e),
            (this.driver = t),
            (this._normalizer = n),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (e, t) => {});
        }
        _onRemovalComplete(e, t) {
          this.onRemovalComplete(e, t);
        }
        get queuedPlayers() {
          const e = [];
          return (
            this._namespaceList.forEach((t) => {
              t.players.forEach((t) => {
                t.queued && e.push(t);
              });
            }),
            e
          );
        }
        createNamespace(e, t) {
          const n = new Ge(e, t, this);
          return (
            t.parentNode
              ? this._balanceNamespaceList(n, t)
              : (this.newHostElements.set(t, n), this.collectEnterElement(t)),
            (this._namespaceLookup[e] = n)
          );
        }
        _balanceNamespaceList(e, t) {
          const n = this._namespaceList.length - 1;
          if (n >= 0) {
            let s = !1;
            for (let i = n; i >= 0; i--) {
              const n = this._namespaceList[i];
              if (this.driver.containsElement(n.hostElement, t)) {
                this._namespaceList.splice(i + 1, 0, e), (s = !0);
                break;
              }
            }
            s || this._namespaceList.splice(0, 0, e);
          } else this._namespaceList.push(e);
          return this.namespacesByHostElement.set(t, e), e;
        }
        register(e, t) {
          let n = this._namespaceLookup[e];
          return n || (n = this.createNamespace(e, t)), n;
        }
        registerTrigger(e, t, n) {
          let s = this._namespaceLookup[e];
          s && s.register(t, n) && this.totalAnimations++;
        }
        destroy(e, t) {
          if (!e) return;
          const n = this._fetchNamespace(e);
          this.afterFlush(() => {
            this.namespacesByHostElement.delete(n.hostElement),
              delete this._namespaceLookup[e];
            const t = this._namespaceList.indexOf(n);
            t >= 0 && this._namespaceList.splice(t, 1);
          }),
            this.afterFlushAnimationsDone(() => n.destroy(t));
        }
        _fetchNamespace(e) {
          return this._namespaceLookup[e];
        }
        fetchNamespacesByElement(e) {
          const t = new Set(),
            n = this.statesByElement.get(e);
          if (n) {
            const e = Object.keys(n);
            for (let s = 0; s < e.length; s++) {
              const i = n[e[s]].namespaceId;
              if (i) {
                const e = this._fetchNamespace(i);
                e && t.add(e);
              }
            }
          }
          return t;
        }
        trigger(e, t, n, s) {
          if (qe(t)) {
            const i = this._fetchNamespace(e);
            if (i) return i.trigger(t, n, s), !0;
          }
          return !1;
        }
        insertNode(e, t, n, s) {
          if (!qe(t)) return;
          const i = t.__ng_removed;
          if (i && i.setForRemoval) {
            (i.setForRemoval = !1), (i.setForMove = !0);
            const e = this.collectedLeaveElements.indexOf(t);
            e >= 0 && this.collectedLeaveElements.splice(e, 1);
          }
          if (e) {
            const s = this._fetchNamespace(e);
            s && s.insertNode(t, n);
          }
          s && this.collectEnterElement(t);
        }
        collectEnterElement(e) {
          this.collectedEnterElements.push(e);
        }
        markElementAsDisabled(e, t) {
          t
            ? this.disabledNodes.has(e) ||
              (this.disabledNodes.add(e), Ke(e, je))
            : this.disabledNodes.has(e) &&
              (this.disabledNodes.delete(e), Je(e, je));
        }
        removeNode(e, t, n, s) {
          if (qe(t)) {
            const i = e ? this._fetchNamespace(e) : null;
            if (
              (i ? i.removeNode(t, s) : this.markElementAsRemoved(e, t, !1, s),
              n)
            ) {
              const n = this.namespacesByHostElement.get(t);
              n && n.id !== e && n.removeNode(t, s);
            }
          } else this._onRemovalComplete(t, s);
        }
        markElementAsRemoved(e, t, n, s) {
          this.collectedLeaveElements.push(t),
            (t.__ng_removed = {
              namespaceId: e,
              setForRemoval: s,
              hasAnimation: n,
              removedBeforeQueried: !1,
            });
        }
        listen(e, t, n, s, i) {
          return qe(t) ? this._fetchNamespace(e).listen(t, n, s, i) : () => {};
        }
        _buildInstruction(e, t, n, s, i) {
          return e.transition.build(
            this.driver,
            e.element,
            e.fromState.value,
            e.toState.value,
            n,
            s,
            e.fromState.options,
            e.toState.options,
            t,
            i
          );
        }
        destroyInnerAnimations(e) {
          let t = this.driver.query(e, A, !0);
          t.forEach((e) => this.destroyActiveAnimationsForElement(e)),
            0 != this.playersByQueriedElement.size &&
              ((t = this.driver.query(e, M, !0)),
              t.forEach((e) => this.finishActiveQueriedAnimationOnElement(e)));
        }
        destroyActiveAnimationsForElement(e) {
          const t = this.playersByElement.get(e);
          t &&
            t.forEach((e) => {
              e.queued ? (e.markedForDestroy = !0) : e.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(e) {
          const t = this.playersByQueriedElement.get(e);
          t && t.forEach((e) => e.finish());
        }
        whenRenderingDone() {
          return new Promise((e) => {
            if (this.players.length) return a(this.players).onDone(() => e());
            e();
          });
        }
        processLeaveNode(e) {
          const t = e.__ng_removed;
          if (t && t.setForRemoval) {
            if (((e.__ng_removed = Le), t.namespaceId)) {
              this.destroyInnerAnimations(e);
              const n = this._fetchNamespace(t.namespaceId);
              n && n.clearElementCache(e);
            }
            this._onRemovalComplete(e, t.setForRemoval);
          }
          this.driver.matchesElement(e, Ne) &&
            this.markElementAsDisabled(e, !1),
            this.driver.query(e, Ne, !0).forEach((e) => {
              this.markElementAsDisabled(e, !1);
            });
        }
        flush(e = -1) {
          let t = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((e, t) =>
                this._balanceNamespaceList(e, t)
              ),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let n = 0; n < this.collectedEnterElements.length; n++) {
              Ke(this.collectedEnterElements[n], "ng-star-inserted");
            }
          if (
            this._namespaceList.length &&
            (this.totalQueuedPlayers || this.collectedLeaveElements.length)
          ) {
            const n = [];
            try {
              t = this._flushAnimations(n, e);
            } finally {
              for (let e = 0; e < n.length; e++) n[e]();
            }
          } else
            for (let n = 0; n < this.collectedLeaveElements.length; n++) {
              const e = this.collectedLeaveElements[n];
              this.processLeaveNode(e);
            }
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach((e) => e()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const e = this._whenQuietFns;
            (this._whenQuietFns = []),
              t.length
                ? a(t).onDone(() => {
                    e.forEach((e) => e());
                  })
                : e.forEach((e) => e());
          }
        }
        reportError(e) {
          throw new Error(
            "Unable to process animations due to the following failed trigger transitions\n " +
              e.join("\n")
          );
        }
        _flushAnimations(e, t) {
          const n = new pe(),
            s = [],
            i = new Map(),
            o = [],
            l = new Map(),
            c = new Map(),
            u = new Map(),
            d = new Set();
          this.disabledNodes.forEach((e) => {
            d.add(e);
            const t = this.driver.query(e, ".ng-animate-queued", !0);
            for (let n = 0; n < t.length; n++) d.add(t[n]);
          });
          const p = this.bodyNode,
            m = Array.from(this.statesByElement.keys()),
            f = Qe(m, this.collectedEnterElements),
            g = new Map();
          let y = 0;
          f.forEach((e, t) => {
            const n = O + y++;
            g.set(t, n), e.forEach((e) => Ke(e, n));
          });
          const v = [],
            b = new Set(),
            x = new Set();
          for (let r = 0; r < this.collectedLeaveElements.length; r++) {
            const e = this.collectedLeaveElements[r],
              t = e.__ng_removed;
            t &&
              t.setForRemoval &&
              (v.push(e),
              b.add(e),
              t.hasAnimation
                ? this.driver
                    .query(e, ".ng-star-inserted", !0)
                    .forEach((e) => b.add(e))
                : x.add(e));
          }
          const _ = new Map(),
            w = Qe(m, Array.from(b));
          w.forEach((e, t) => {
            const n = I + y++;
            _.set(t, n), e.forEach((e) => Ke(e, n));
          }),
            e.push(() => {
              f.forEach((e, t) => {
                const n = g.get(t);
                e.forEach((e) => Je(e, n));
              }),
                w.forEach((e, t) => {
                  const n = _.get(t);
                  e.forEach((e) => Je(e, n));
                }),
                v.forEach((e) => {
                  this.processLeaveNode(e);
                });
            });
          const C = [],
            S = [];
          for (let r = this._namespaceList.length - 1; r >= 0; r--) {
            this._namespaceList[r].drainQueuedTransitions(t).forEach((e) => {
              const t = e.player,
                i = e.element;
              if ((C.push(t), this.collectedEnterElements.length)) {
                const e = i.__ng_removed;
                if (e && e.setForMove) return void t.destroy();
              }
              const r = !p || !this.driver.containsElement(p, i),
                a = _.get(i),
                d = g.get(i),
                m = this._buildInstruction(e, n, d, a, r);
              if (m.errors && m.errors.length) return void S.push(m);
              if (r)
                return (
                  t.onStart(() => z(i, m.fromStyles)),
                  t.onDestroy(() => B(i, m.toStyles)),
                  void s.push(t)
                );
              if (e.isFallbackTransition)
                return (
                  t.onStart(() => z(i, m.fromStyles)),
                  t.onDestroy(() => B(i, m.toStyles)),
                  void s.push(t)
                );
              m.timelines.forEach((e) => (e.stretchStartingKeyframe = !0)),
                n.append(i, m.timelines);
              const f = { instruction: m, player: t, element: i };
              o.push(f),
                m.queriedElements.forEach((e) => h(l, e, []).push(t)),
                m.preStyleProps.forEach((e, t) => {
                  const n = Object.keys(e);
                  if (n.length) {
                    let e = c.get(t);
                    e || c.set(t, (e = new Set())), n.forEach((t) => e.add(t));
                  }
                }),
                m.postStyleProps.forEach((e, t) => {
                  const n = Object.keys(e);
                  let s = u.get(t);
                  s || u.set(t, (s = new Set())), n.forEach((e) => s.add(e));
                });
            });
          }
          if (S.length) {
            const e = [];
            S.forEach((t) => {
              e.push(`@${t.triggerName} has failed due to:\n`),
                t.errors.forEach((t) => e.push(`- ${t}\n`));
            }),
              C.forEach((e) => e.destroy()),
              this.reportError(e);
          }
          const E = new Map(),
            k = new Map();
          o.forEach((e) => {
            const t = e.element;
            n.has(t) &&
              (k.set(t, t),
              this._beforeAnimationBuild(
                e.player.namespaceId,
                e.instruction,
                E
              ));
          }),
            s.forEach((e) => {
              const t = e.element;
              this._getPreviousPlayers(
                t,
                !1,
                e.namespaceId,
                e.triggerName,
                null
              ).forEach((e) => {
                h(E, t, []).push(e), e.destroy();
              });
            });
          const T = v.filter((e) => et(e, c, u)),
            A = new Map();
          Ye(A, this.driver, x, u, r.a).forEach((e) => {
            et(e, c, u) && T.push(e);
          });
          const D = new Map();
          f.forEach((e, t) => {
            Ye(D, this.driver, new Set(e), c, r.q);
          }),
            T.forEach((e) => {
              const t = A.get(e),
                n = D.get(e);
              A.set(e, Object.assign(Object.assign({}, t), n));
            });
          const P = [],
            R = [],
            j = {};
          o.forEach((e) => {
            const { element: t, player: r, instruction: o } = e;
            if (n.has(t)) {
              if (d.has(t))
                return (
                  r.onDestroy(() => B(t, o.toStyles)),
                  (r.disabled = !0),
                  r.overrideTotalTime(o.totalTime),
                  void s.push(r)
                );
              let e = j;
              if (k.size > 1) {
                let n = t;
                const s = [];
                for (; (n = n.parentNode); ) {
                  const t = k.get(n);
                  if (t) {
                    e = t;
                    break;
                  }
                  s.push(n);
                }
                s.forEach((t) => k.set(t, e));
              }
              const n = this._buildAnimation(r.namespaceId, o, E, i, D, A);
              if ((r.setRealPlayer(n), e === j)) P.push(r);
              else {
                const t = this.playersByElement.get(e);
                t && t.length && (r.parentPlayer = a(t)), s.push(r);
              }
            } else
              z(t, o.fromStyles),
                r.onDestroy(() => B(t, o.toStyles)),
                R.push(r),
                d.has(t) && s.push(r);
          }),
            R.forEach((e) => {
              const t = i.get(e.element);
              if (t && t.length) {
                const n = a(t);
                e.setRealPlayer(n);
              }
            }),
            s.forEach((e) => {
              e.parentPlayer ? e.syncPlayerEvents(e.parentPlayer) : e.destroy();
            });
          for (let r = 0; r < v.length; r++) {
            const e = v[r],
              t = e.__ng_removed;
            if ((Je(e, I), t && t.hasAnimation)) continue;
            let n = [];
            if (l.size) {
              let t = l.get(e);
              t && t.length && n.push(...t);
              let s = this.driver.query(e, M, !0);
              for (let e = 0; e < s.length; e++) {
                let t = l.get(s[e]);
                t && t.length && n.push(...t);
              }
            }
            const s = n.filter((e) => !e.destroyed);
            s.length ? Xe(this, e, s) : this.processLeaveNode(e);
          }
          return (
            (v.length = 0),
            P.forEach((e) => {
              this.players.push(e),
                e.onDone(() => {
                  e.destroy();
                  const t = this.players.indexOf(e);
                  this.players.splice(t, 1);
                }),
                e.play();
            }),
            P
          );
        }
        elementContainsData(e, t) {
          let n = !1;
          const s = t.__ng_removed;
          return (
            s && s.setForRemoval && (n = !0),
            this.playersByElement.has(t) && (n = !0),
            this.playersByQueriedElement.has(t) && (n = !0),
            this.statesByElement.has(t) && (n = !0),
            this._fetchNamespace(e).elementContainsData(t) || n
          );
        }
        afterFlush(e) {
          this._flushFns.push(e);
        }
        afterFlushAnimationsDone(e) {
          this._whenQuietFns.push(e);
        }
        _getPreviousPlayers(e, t, n, s, i) {
          let r = [];
          if (t) {
            const t = this.playersByQueriedElement.get(e);
            t && (r = t);
          } else {
            const t = this.playersByElement.get(e);
            if (t) {
              const e = !i || i == ze;
              t.forEach((t) => {
                t.queued || ((e || t.triggerName == s) && r.push(t));
              });
            }
          }
          return (
            (n || s) &&
              (r = r.filter(
                (e) => (!n || n == e.namespaceId) && (!s || s == e.triggerName)
              )),
            r
          );
        }
        _beforeAnimationBuild(e, t, n) {
          const s = t.triggerName,
            i = t.element,
            r = t.isRemovalTransition ? void 0 : e,
            o = t.isRemovalTransition ? void 0 : s;
          for (const a of t.timelines) {
            const e = a.element,
              s = e !== i,
              l = h(n, e, []);
            this._getPreviousPlayers(e, s, r, o, t.toState).forEach((e) => {
              const t = e.getRealPlayer();
              t.beforeDestroy && t.beforeDestroy(), e.destroy(), l.push(e);
            });
          }
          z(i, t.fromStyles);
        }
        _buildAnimation(e, t, n, s, i, o) {
          const c = t.triggerName,
            u = t.element,
            d = [],
            p = new Set(),
            m = new Set(),
            f = t.timelines.map((t) => {
              const a = t.element;
              p.add(a);
              const h = a.__ng_removed;
              if (h && h.removedBeforeQueried)
                return new r.d(t.duration, t.delay);
              const f = a !== u,
                g = (function (e) {
                  const t = [];
                  return Ze(e, t), t;
                })((n.get(a) || Fe).map((e) => e.getRealPlayer())).filter(
                  (e) => {
                    const t = e;
                    return !!t.element && t.element === a;
                  }
                ),
                y = i.get(a),
                v = o.get(a),
                b = l(this.driver, this._normalizer, 0, t.keyframes, y, v),
                x = this._buildPlayer(t, b, g);
              if ((t.subTimeline && s && m.add(a), f)) {
                const t = new $e(e, c, a);
                t.setRealPlayer(x), d.push(t);
              }
              return x;
            });
          d.forEach((e) => {
            h(this.playersByQueriedElement, e.element, []).push(e),
              e.onDone(() =>
                (function (e, t, n) {
                  let s;
                  if (e instanceof Map) {
                    if (((s = e.get(t)), s)) {
                      if (s.length) {
                        const e = s.indexOf(n);
                        s.splice(e, 1);
                      }
                      0 == s.length && e.delete(t);
                    }
                  } else if (((s = e[t]), s)) {
                    if (s.length) {
                      const e = s.indexOf(n);
                      s.splice(e, 1);
                    }
                    0 == s.length && delete e[t];
                  }
                  return s;
                })(this.playersByQueriedElement, e.element, e)
              );
          }),
            p.forEach((e) => Ke(e, D));
          const g = a(f);
          return (
            g.onDestroy(() => {
              p.forEach((e) => Je(e, D)), B(u, t.toStyles);
            }),
            m.forEach((e) => {
              h(s, e, []).push(g);
            }),
            g
          );
        }
        _buildPlayer(e, t, n) {
          return t.length > 0
            ? this.driver.animate(
                e.element,
                t,
                e.duration,
                e.delay,
                e.easing,
                n
              )
            : new r.d(e.duration, e.delay);
        }
      }
      class $e {
        constructor(e, t, n) {
          (this.namespaceId = e),
            (this.triggerName = t),
            (this.element = n),
            (this._player = new r.d()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = {}),
            (this.destroyed = !1),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(e) {
          this._containsRealPlayer ||
            ((this._player = e),
            Object.keys(this._queuedCallbacks).forEach((t) => {
              this._queuedCallbacks[t].forEach((n) => c(e, t, void 0, n));
            }),
            (this._queuedCallbacks = {}),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(e.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(e) {
          this.totalTime = e;
        }
        syncPlayerEvents(e) {
          const t = this._player;
          t.triggerCallback && e.onStart(() => t.triggerCallback("start")),
            e.onDone(() => this.finish()),
            e.onDestroy(() => this.destroy());
        }
        _queueEvent(e, t) {
          h(this._queuedCallbacks, e, []).push(t);
        }
        onDone(e) {
          this.queued && this._queueEvent("done", e), this._player.onDone(e);
        }
        onStart(e) {
          this.queued && this._queueEvent("start", e), this._player.onStart(e);
        }
        onDestroy(e) {
          this.queued && this._queueEvent("destroy", e),
            this._player.onDestroy(e);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(e) {
          this.queued || this._player.setPosition(e);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(e) {
          const t = this._player;
          t.triggerCallback && t.triggerCallback(e);
        }
      }
      function qe(e) {
        return e && 1 === e.nodeType;
      }
      function We(e, t) {
        const n = e.style.display;
        return (e.style.display = null != t ? t : "none"), n;
      }
      function Ye(e, t, n, s, i) {
        const r = [];
        n.forEach((e) => r.push(We(e)));
        const o = [];
        s.forEach((n, s) => {
          const r = {};
          n.forEach((e) => {
            const n = (r[e] = t.computeStyle(s, e, i));
            (n && 0 != n.length) || ((s.__ng_removed = Ve), o.push(s));
          }),
            e.set(s, r);
        });
        let a = 0;
        return n.forEach((e) => We(e, r[a++])), o;
      }
      function Qe(e, t) {
        const n = new Map();
        if ((e.forEach((e) => n.set(e, [])), 0 == t.length)) return n;
        const s = new Set(t),
          i = new Map();
        function r(e) {
          if (!e) return 1;
          let t = i.get(e);
          if (t) return t;
          const o = e.parentNode;
          return (t = n.has(o) ? o : s.has(o) ? 1 : r(o)), i.set(e, t), t;
        }
        return (
          t.forEach((e) => {
            const t = r(e);
            1 !== t && n.get(t).push(e);
          }),
          n
        );
      }
      function Ke(e, t) {
        if (e.classList) e.classList.add(t);
        else {
          let n = e.$$classes;
          n || (n = e.$$classes = {}), (n[t] = !0);
        }
      }
      function Je(e, t) {
        if (e.classList) e.classList.remove(t);
        else {
          let n = e.$$classes;
          n && delete n[t];
        }
      }
      function Xe(e, t, n) {
        a(n).onDone(() => e.processLeaveNode(t));
      }
      function Ze(e, t) {
        for (let n = 0; n < e.length; n++) {
          const s = e[n];
          s instanceof r.p ? Ze(s.players, t) : t.push(s);
        }
      }
      function et(e, t, n) {
        const s = n.get(e);
        if (!s) return !1;
        let i = t.get(e);
        return i ? s.forEach((e) => i.add(e)) : t.set(e, s), n.delete(e), !0;
      }
      class tt {
        constructor(e, t, n) {
          (this.bodyNode = e),
            (this._driver = t),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (e, t) => {}),
            (this._transitionEngine = new Ue(e, t, n)),
            (this._timelineEngine = new Pe(e, t, n)),
            (this._transitionEngine.onRemovalComplete = (e, t) =>
              this.onRemovalComplete(e, t));
        }
        registerTrigger(e, t, n, s, i) {
          const r = e + "-" + s;
          let o = this._triggerCache[r];
          if (!o) {
            const e = [],
              t = oe(this._driver, i, e);
            if (e.length)
              throw new Error(
                `The animation trigger "${s}" has failed to build due to the following errors:\n - ${e.join(
                  "\n - "
                )}`
              );
            (o = (function (e, t) {
              return new Ae(e, t);
            })(s, t)),
              (this._triggerCache[r] = o);
          }
          this._transitionEngine.registerTrigger(t, s, o);
        }
        register(e, t) {
          this._transitionEngine.register(e, t);
        }
        destroy(e, t) {
          this._transitionEngine.destroy(e, t);
        }
        onInsert(e, t, n, s) {
          this._transitionEngine.insertNode(e, t, n, s);
        }
        onRemove(e, t, n, s) {
          this._transitionEngine.removeNode(e, t, s || !1, n);
        }
        disableAnimations(e, t) {
          this._transitionEngine.markElementAsDisabled(e, t);
        }
        process(e, t, n, s) {
          if ("@" == n.charAt(0)) {
            const [e, i] = p(n),
              r = s;
            this._timelineEngine.command(e, t, i, r);
          } else this._transitionEngine.trigger(e, t, n, s);
        }
        listen(e, t, n, s, i) {
          if ("@" == n.charAt(0)) {
            const [e, s] = p(n);
            return this._timelineEngine.listen(e, t, s, i);
          }
          return this._transitionEngine.listen(e, t, n, s, i);
        }
        flush(e = -1) {
          this._transitionEngine.flush(e);
        }
        get players() {
          return this._transitionEngine.players.concat(
            this._timelineEngine.players
          );
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
      }
      function nt(e, t) {
        let n = null,
          s = null;
        return (
          Array.isArray(t) && t.length
            ? ((n = it(t[0])), t.length > 1 && (s = it(t[t.length - 1])))
            : t && (n = it(t)),
          n || s ? new st(e, n, s) : null
        );
      }
      class st {
        constructor(e, t, n) {
          (this._element = e),
            (this._startStyles = t),
            (this._endStyles = n),
            (this._state = 0);
          let s = st.initialStylesByElement.get(e);
          s || st.initialStylesByElement.set(e, (s = {})),
            (this._initialStyles = s);
        }
        start() {
          this._state < 1 &&
            (this._startStyles &&
              B(this._element, this._startStyles, this._initialStyles),
            (this._state = 1));
        }
        finish() {
          this.start(),
            this._state < 2 &&
              (B(this._element, this._initialStyles),
              this._endStyles &&
                (B(this._element, this._endStyles), (this._endStyles = null)),
              (this._state = 1));
        }
        destroy() {
          this.finish(),
            this._state < 3 &&
              (st.initialStylesByElement.delete(this._element),
              this._startStyles &&
                (z(this._element, this._startStyles), (this._endStyles = null)),
              this._endStyles &&
                (z(this._element, this._endStyles), (this._endStyles = null)),
              B(this._element, this._initialStyles),
              (this._state = 3));
        }
      }
      function it(e) {
        let t = null;
        const n = Object.keys(e);
        for (let s = 0; s < n.length; s++) {
          const i = n[s];
          rt(i) && ((t = t || {}), (t[i] = e[i]));
        }
        return t;
      }
      function rt(e) {
        return "display" === e || "position" === e;
      }
      st.initialStylesByElement = new WeakMap();
      const ot = "animation",
        at = "animationend";
      class lt {
        constructor(e, t, n, s, i, r, o) {
          (this._element = e),
            (this._name = t),
            (this._duration = n),
            (this._delay = s),
            (this._easing = i),
            (this._fillMode = r),
            (this._onDoneFn = o),
            (this._finished = !1),
            (this._destroyed = !1),
            (this._startTime = 0),
            (this._position = 0),
            (this._eventFn = (e) => this._handleCallback(e));
        }
        apply() {
          !(function (e, t) {
            const n = mt(e, "").trim();
            let s = 0;
            n.length &&
              ((s =
                (function (e, t) {
                  let n = 0;
                  for (let s = 0; s < e.length; s++) {
                    e.charAt(s) === t && n++;
                  }
                  return n;
                })(n, ",") + 1),
              (t = `${n}, ${t}`));
            pt(e, "", t);
          })(
            this._element,
            `${this._duration}ms ${this._easing} ${this._delay}ms 1 normal ${this._fillMode} ${this._name}`
          ),
            ht(this._element, this._eventFn, !1),
            (this._startTime = Date.now());
        }
        pause() {
          ct(this._element, this._name, "paused");
        }
        resume() {
          ct(this._element, this._name, "running");
        }
        setPosition(e) {
          const t = ut(this._element, this._name);
          (this._position = e * this._duration),
            pt(this._element, "Delay", `-${this._position}ms`, t);
        }
        getPosition() {
          return this._position;
        }
        _handleCallback(e) {
          const t = e._ngTestManualTimestamp || Date.now(),
            n = 1e3 * parseFloat(e.elapsedTime.toFixed(3));
          e.animationName == this._name &&
            Math.max(t - this._startTime, 0) >= this._delay &&
            n >= this._duration &&
            this.finish();
        }
        finish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFn(),
            ht(this._element, this._eventFn, !0));
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.finish(),
            (function (e, t) {
              const n = mt(e, "").split(","),
                s = dt(n, t);
              if (s >= 0) {
                n.splice(s, 1);
                pt(e, "", n.join(","));
              }
            })(this._element, this._name));
        }
      }
      function ct(e, t, n) {
        pt(e, "PlayState", n, ut(e, t));
      }
      function ut(e, t) {
        const n = mt(e, "");
        if (n.indexOf(",") > 0) {
          return dt(n.split(","), t);
        }
        return dt([n], t);
      }
      function dt(e, t) {
        for (let n = 0; n < e.length; n++) if (e[n].indexOf(t) >= 0) return n;
        return -1;
      }
      function ht(e, t, n) {
        n ? e.removeEventListener(at, t) : e.addEventListener(at, t);
      }
      function pt(e, t, n, s) {
        const i = ot + t;
        if (null != s) {
          const t = e.style[i];
          if (t.length) {
            const e = t.split(",");
            (e[s] = n), (n = e.join(","));
          }
        }
        e.style[i] = n;
      }
      function mt(e, t) {
        return e.style[ot + t];
      }
      class ft {
        constructor(e, t, n, s, i, r, o, a) {
          (this.element = e),
            (this.keyframes = t),
            (this.animationName = n),
            (this._duration = s),
            (this._delay = i),
            (this._finalStyles = o),
            (this._specialStyles = a),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._started = !1),
            (this.currentSnapshot = {}),
            (this._state = 0),
            (this.easing = r || "linear"),
            (this.totalTime = s + i),
            this._buildStyler();
        }
        onStart(e) {
          this._onStartFns.push(e);
        }
        onDone(e) {
          this._onDoneFns.push(e);
        }
        onDestroy(e) {
          this._onDestroyFns.push(e);
        }
        destroy() {
          this.init(),
            this._state >= 4 ||
              ((this._state = 4),
              this._styler.destroy(),
              this._flushStartFns(),
              this._flushDoneFns(),
              this._specialStyles && this._specialStyles.destroy(),
              this._onDestroyFns.forEach((e) => e()),
              (this._onDestroyFns = []));
        }
        _flushDoneFns() {
          this._onDoneFns.forEach((e) => e()), (this._onDoneFns = []);
        }
        _flushStartFns() {
          this._onStartFns.forEach((e) => e()), (this._onStartFns = []);
        }
        finish() {
          this.init(),
            this._state >= 3 ||
              ((this._state = 3),
              this._styler.finish(),
              this._flushStartFns(),
              this._specialStyles && this._specialStyles.finish(),
              this._flushDoneFns());
        }
        setPosition(e) {
          this._styler.setPosition(e);
        }
        getPosition() {
          return this._styler.getPosition();
        }
        hasStarted() {
          return this._state >= 2;
        }
        init() {
          if (this._state >= 1) return;
          this._state = 1;
          this.element;
          this._styler.apply(), this._delay && this._styler.pause();
        }
        play() {
          this.init(),
            this.hasStarted() ||
              (this._flushStartFns(),
              (this._state = 2),
              this._specialStyles && this._specialStyles.start()),
            this._styler.resume();
        }
        pause() {
          this.init(), this._styler.pause();
        }
        restart() {
          this.reset(), this.play();
        }
        reset() {
          this._styler.destroy(), this._buildStyler(), this._styler.apply();
        }
        _buildStyler() {
          this._styler = new lt(
            this.element,
            this.animationName,
            this._duration,
            this._delay,
            this.easing,
            "forwards",
            () => this.finish()
          );
        }
        triggerCallback(e) {
          const t = "start" == e ? this._onStartFns : this._onDoneFns;
          t.forEach((e) => e()), (t.length = 0);
        }
        beforeDestroy() {
          this.init();
          const e = {};
          if (this.hasStarted()) {
            const t = this._state >= 3;
            Object.keys(this._finalStyles).forEach((n) => {
              "offset" != n &&
                (e[n] = t ? this._finalStyles[n] : X(this.element, n));
            });
          }
          this.currentSnapshot = e;
        }
      }
      class gt extends r.d {
        constructor(e, t) {
          super(),
            (this.element = e),
            (this._startingStyles = {}),
            (this.__initialized = !1),
            (this._styles = S(t));
        }
        init() {
          !this.__initialized &&
            this._startingStyles &&
            ((this.__initialized = !0),
            Object.keys(this._styles).forEach((e) => {
              this._startingStyles[e] = this.element.style[e];
            }),
            super.init());
        }
        play() {
          this._startingStyles &&
            (this.init(),
            Object.keys(this._styles).forEach((e) =>
              this.element.style.setProperty(e, this._styles[e])
            ),
            super.play());
        }
        destroy() {
          this._startingStyles &&
            (Object.keys(this._startingStyles).forEach((e) => {
              const t = this._startingStyles[e];
              t
                ? this.element.style.setProperty(e, t)
                : this.element.style.removeProperty(e);
            }),
            (this._startingStyles = null),
            super.destroy());
        }
      }
      class yt {
        constructor() {
          (this._count = 0),
            (this._head = document.querySelector("head")),
            (this._warningIssued = !1);
        }
        validateStyleProperty(e) {
          return x(e);
        }
        matchesElement(e, t) {
          return _(e, t);
        }
        containsElement(e, t) {
          return w(e, t);
        }
        query(e, t, n) {
          return C(e, t, n);
        }
        computeStyle(e, t, n) {
          return window.getComputedStyle(e)[t];
        }
        buildKeyframeElement(e, t, n) {
          n = n.map((e) => S(e));
          let s = `@keyframes ${t} {\n`,
            i = "";
          n.forEach((e) => {
            i = " ";
            const t = parseFloat(e.offset);
            (s += `${i}${100 * t}% {\n`),
              (i += " "),
              Object.keys(e).forEach((t) => {
                const n = e[t];
                switch (t) {
                  case "offset":
                    return;
                  case "easing":
                    return void (
                      n && (s += `${i}animation-timing-function: ${n};\n`)
                    );
                  default:
                    return void (s += `${i}${t}: ${n};\n`);
                }
              }),
              (s += i + "}\n");
          }),
            (s += "}\n");
          const r = document.createElement("style");
          return (r.textContent = s), r;
        }
        animate(e, t, n, s, i, r = [], o) {
          o && this._notifyFaultyScrubber();
          const a = r.filter((e) => e instanceof ft),
            l = {};
          Q(n, s) &&
            a.forEach((e) => {
              let t = e.currentSnapshot;
              Object.keys(t).forEach((e) => (l[e] = t[e]));
            });
          const c = (function (e) {
            let t = {};
            if (e) {
              (Array.isArray(e) ? e : [e]).forEach((e) => {
                Object.keys(e).forEach((n) => {
                  "offset" != n && "easing" != n && (t[n] = e[n]);
                });
              });
            }
            return t;
          })((t = K(e, t, l)));
          if (0 == n) return new gt(e, c);
          const u = "gen_css_kf_" + this._count++,
            d = this.buildKeyframeElement(e, u, t);
          document.querySelector("head").appendChild(d);
          const h = nt(e, t),
            p = new ft(e, t, u, n, s, i, c, h);
          return (
            p.onDestroy(() => {
              var e;
              (e = d).parentNode.removeChild(e);
            }),
            p
          );
        }
        _notifyFaultyScrubber() {
          this._warningIssued ||
            (console.warn(
              "@angular/animations: please load the web-animations.js polyfill to allow programmatic access...\n",
              "  visit http://bit.ly/IWukam to learn more about using the web-animation-js polyfill."
            ),
            (this._warningIssued = !0));
        }
      }
      class vt {
        constructor(e, t, n, s) {
          (this.element = e),
            (this.keyframes = t),
            (this.options = n),
            (this._specialStyles = s),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = {}),
            (this._duration = n.duration),
            (this._delay = n.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((e) => e()),
            (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const e = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(
            this.element,
            e,
            this.options
          )),
            (this._finalKeyframe = e.length ? e[e.length - 1] : {}),
            this.domPlayer.addEventListener("finish", () => this._onFinish());
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _triggerWebAnimation(e, t, n) {
          return e.animate(t, n);
        }
        onStart(e) {
          this._onStartFns.push(e);
        }
        onDone(e) {
          this._onDoneFns.push(e);
        }
        onDestroy(e) {
          this._onDestroyFns.push(e);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach((e) => e()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(),
            this._specialStyles && this._specialStyles.finish(),
            this._onFinish(),
            this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach((e) => e()),
            (this._onDestroyFns = []));
        }
        setPosition(e) {
          this.domPlayer.currentTime = e * this.time;
        }
        getPosition() {
          return this.domPlayer.currentTime / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const e = {};
          this.hasStarted() &&
            Object.keys(this._finalKeyframe).forEach((t) => {
              "offset" != t &&
                (e[t] = this._finished
                  ? this._finalKeyframe[t]
                  : X(this.element, t));
            }),
            (this.currentSnapshot = e);
        }
        triggerCallback(e) {
          const t = "start" == e ? this._onStartFns : this._onDoneFns;
          t.forEach((e) => e()), (t.length = 0);
        }
      }
      class bt {
        constructor() {
          (this._isNativeImpl = /\{\s*\[native\s+code\]\s*\}/.test(
            xt().toString()
          )),
            (this._cssKeyframesDriver = new yt());
        }
        validateStyleProperty(e) {
          return x(e);
        }
        matchesElement(e, t) {
          return _(e, t);
        }
        containsElement(e, t) {
          return w(e, t);
        }
        query(e, t, n) {
          return C(e, t, n);
        }
        computeStyle(e, t, n) {
          return window.getComputedStyle(e)[t];
        }
        overrideWebAnimationsSupport(e) {
          this._isNativeImpl = e;
        }
        animate(e, t, n, s, i, r = [], o) {
          if (!o && !this._isNativeImpl)
            return this._cssKeyframesDriver.animate(e, t, n, s, i, r);
          const a = {
            duration: n,
            delay: s,
            fill: 0 == s ? "both" : "forwards",
          };
          i && (a.easing = i);
          const l = {},
            c = r.filter((e) => e instanceof vt);
          Q(n, s) &&
            c.forEach((e) => {
              let t = e.currentSnapshot;
              Object.keys(t).forEach((e) => (l[e] = t[e]));
            });
          const u = nt(e, (t = K(e, (t = t.map((e) => F(e, !1))), l)));
          return new vt(e, t, a, u);
        }
      }
      function xt() {
        return (
          ("undefined" != typeof window &&
            void 0 !== window.document &&
            Element.prototype.animate) ||
          {}
        );
      }
      var _t = n("ofXK");
      class wt extends r.b {
        constructor(e, t) {
          super(), (this._nextAnimationId = 0);
          const n = {
            id: "0",
            encapsulation: s.pb.None,
            styles: [],
            data: { animation: [] },
          };
          this._renderer = e.createRenderer(t.body, n);
        }
        build(e) {
          const t = this._nextAnimationId.toString();
          this._nextAnimationId++;
          const n = Array.isArray(e) ? Object(r.j)(e) : e;
          return (
            Et(this._renderer, null, t, "register", [n]),
            new Ct(t, this._renderer)
          );
        }
      }
      (wt.ɵfac = function (e) {
        return new (e || wt)(s.Yc(s.Z), s.Yc(_t.c));
      }),
        (wt.ɵprov = s.Ic({ token: wt, factory: wt.ɵfac })),
        (wt.ctorParameters = () => [
          { type: s.Z },
          { type: void 0, decorators: [{ type: s.C, args: [_t.c] }] },
        ]);
      class Ct extends r.c {
        constructor(e, t) {
          super(), (this._id = e), (this._renderer = t);
        }
        create(e, t) {
          return new St(this._id, e, t || {}, this._renderer);
        }
      }
      class St {
        constructor(e, t, n, s) {
          (this.id = e),
            (this.element = t),
            (this._renderer = s),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command("create", n);
        }
        _listen(e, t) {
          return this._renderer.listen(this.element, `@@${this.id}:${e}`, t);
        }
        _command(e, ...t) {
          return Et(this._renderer, this.element, this.id, e, t);
        }
        onDone(e) {
          this._listen("done", e);
        }
        onStart(e) {
          this._listen("start", e);
        }
        onDestroy(e) {
          this._listen("destroy", e);
        }
        init() {
          this._command("init");
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command("play"), (this._started = !0);
        }
        pause() {
          this._command("pause");
        }
        restart() {
          this._command("restart");
        }
        finish() {
          this._command("finish");
        }
        destroy() {
          this._command("destroy");
        }
        reset() {
          this._command("reset");
        }
        setPosition(e) {
          this._command("setPosition", e);
        }
        getPosition() {
          return 0;
        }
      }
      function Et(e, t, n, s, i) {
        return e.setProperty(t, `@@${n}:${s}`, i);
      }
      const kt = "@",
        Ot = "@.disabled";
      class It {
        constructor(e, t, n) {
          (this.delegate = e),
            (this.engine = t),
            (this._zone = n),
            (this._currentId = 0),
            (this._microtaskId = 1),
            (this._animationCallbacksBuffer = []),
            (this._rendererCache = new Map()),
            (this._cdRecurDepth = 0),
            (this.promise = Promise.resolve(0)),
            (t.onRemovalComplete = (e, t) => {
              t && t.parentNode(e) && t.removeChild(e.parentNode, e);
            });
        }
        createRenderer(e, t) {
          const n = this.delegate.createRenderer(e, t);
          if (!(e && t && t.data && t.data.animation)) {
            let e = this._rendererCache.get(n);
            return (
              e ||
                ((e = new Tt("", n, this.engine)),
                this._rendererCache.set(n, e)),
              e
            );
          }
          const s = t.id,
            i = t.id + "-" + this._currentId;
          this._currentId++, this.engine.register(i, e);
          const r = (t) => {
            Array.isArray(t)
              ? t.forEach(r)
              : this.engine.registerTrigger(s, i, e, t.name, t);
          };
          return t.data.animation.forEach(r), new At(this, i, n, this.engine);
        }
        begin() {
          this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
        }
        _scheduleCountTask() {
          this.promise.then(() => {
            this._microtaskId++;
          });
        }
        scheduleListenerCallback(e, t, n) {
          e >= 0 && e < this._microtaskId
            ? this._zone.run(() => t(n))
            : (0 == this._animationCallbacksBuffer.length &&
                Promise.resolve(null).then(() => {
                  this._zone.run(() => {
                    this._animationCallbacksBuffer.forEach((e) => {
                      const [t, n] = e;
                      t(n);
                    }),
                      (this._animationCallbacksBuffer = []);
                  });
                }),
              this._animationCallbacksBuffer.push([t, n]));
        }
        end() {
          this._cdRecurDepth--,
            0 == this._cdRecurDepth &&
              this._zone.runOutsideAngular(() => {
                this._scheduleCountTask(), this.engine.flush(this._microtaskId);
              }),
            this.delegate.end && this.delegate.end();
        }
        whenRenderingDone() {
          return this.engine.whenRenderingDone();
        }
      }
      (It.ɵfac = function (e) {
        return new (e || It)(s.Yc(s.Z), s.Yc(tt), s.Yc(s.Q));
      }),
        (It.ɵprov = s.Ic({ token: It, factory: It.ɵfac })),
        (It.ctorParameters = () => [
          { type: s.Z },
          { type: tt },
          { type: s.Q },
        ]);
      class Tt {
        constructor(e, t, n) {
          (this.namespaceId = e),
            (this.delegate = t),
            (this.engine = n),
            (this.destroyNode = this.delegate.destroyNode
              ? (e) => t.destroyNode(e)
              : null);
        }
        get data() {
          return this.delegate.data;
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate),
            this.delegate.destroy();
        }
        createElement(e, t) {
          return this.delegate.createElement(e, t);
        }
        createComment(e) {
          return this.delegate.createComment(e);
        }
        createText(e) {
          return this.delegate.createText(e);
        }
        appendChild(e, t) {
          this.delegate.appendChild(e, t),
            this.engine.onInsert(this.namespaceId, t, e, !1);
        }
        insertBefore(e, t, n, s = !0) {
          this.delegate.insertBefore(e, t, n),
            this.engine.onInsert(this.namespaceId, t, e, s);
        }
        removeChild(e, t, n) {
          this.engine.onRemove(this.namespaceId, t, this.delegate, n);
        }
        selectRootElement(e, t) {
          return this.delegate.selectRootElement(e, t);
        }
        parentNode(e) {
          return this.delegate.parentNode(e);
        }
        nextSibling(e) {
          return this.delegate.nextSibling(e);
        }
        setAttribute(e, t, n, s) {
          this.delegate.setAttribute(e, t, n, s);
        }
        removeAttribute(e, t, n) {
          this.delegate.removeAttribute(e, t, n);
        }
        addClass(e, t) {
          this.delegate.addClass(e, t);
        }
        removeClass(e, t) {
          this.delegate.removeClass(e, t);
        }
        setStyle(e, t, n, s) {
          this.delegate.setStyle(e, t, n, s);
        }
        removeStyle(e, t, n) {
          this.delegate.removeStyle(e, t, n);
        }
        setProperty(e, t, n) {
          t.charAt(0) == kt && t == Ot
            ? this.disableAnimations(e, !!n)
            : this.delegate.setProperty(e, t, n);
        }
        setValue(e, t) {
          this.delegate.setValue(e, t);
        }
        listen(e, t, n) {
          return this.delegate.listen(e, t, n);
        }
        disableAnimations(e, t) {
          this.engine.disableAnimations(e, t);
        }
      }
      class At extends Tt {
        constructor(e, t, n, s) {
          super(t, n, s), (this.factory = e), (this.namespaceId = t);
        }
        setProperty(e, t, n) {
          t.charAt(0) == kt
            ? "." == t.charAt(1) && t == Ot
              ? ((n = void 0 === n || !!n), this.disableAnimations(e, n))
              : this.engine.process(this.namespaceId, e, t.substr(1), n)
            : this.delegate.setProperty(e, t, n);
        }
        listen(e, t, n) {
          if (t.charAt(0) == kt) {
            const s = (function (e) {
              switch (e) {
                case "body":
                  return document.body;
                case "document":
                  return document;
                case "window":
                  return window;
                default:
                  return e;
              }
            })(e);
            let i = t.substr(1),
              r = "";
            return (
              i.charAt(0) != kt &&
                ([i, r] = (function (e) {
                  const t = e.indexOf("."),
                    n = e.substring(0, t),
                    s = e.substr(t + 1);
                  return [n, s];
                })(i)),
              this.engine.listen(this.namespaceId, s, i, r, (e) => {
                const t = e._data || -1;
                this.factory.scheduleListenerCallback(t, n, e);
              })
            );
          }
          return this.delegate.listen(e, t, n);
        }
      }
      class Dt extends tt {
        constructor(e, t, n) {
          super(e.body, t, n);
        }
      }
      (Dt.ɵfac = function (e) {
        return new (e || Dt)(s.Yc(_t.c), s.Yc(k), s.Yc(Ce));
      }),
        (Dt.ɵprov = s.Ic({ token: Dt, factory: Dt.ɵfac })),
        (Dt.ctorParameters = () => [
          { type: void 0, decorators: [{ type: s.C, args: [_t.c] }] },
          { type: k },
          { type: Ce },
        ]);
      const Mt = new s.E("AnimationModuleType"),
        Pt = [
          { provide: r.b, useClass: wt },
          {
            provide: Ce,
            useFactory: function () {
              return new Se();
            },
          },
          { provide: tt, useClass: Dt },
          {
            provide: s.Z,
            useFactory: function (e, t, n) {
              return new It(e, t, n);
            },
            deps: [i.c, tt, s.Q],
          },
        ],
        Rt = [
          {
            provide: k,
            useFactory: function () {
              return "function" == typeof xt() ? new bt() : new yt();
            },
          },
          { provide: Mt, useValue: "BrowserAnimations" },
          ...Pt,
        ],
        jt = [
          { provide: k, useClass: E },
          { provide: Mt, useValue: "NoopAnimations" },
          ...Pt,
        ];
      class Nt {}
      (Nt.ɵmod = s.Kc({ type: Nt })),
        (Nt.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || Nt)();
          },
          providers: Rt,
          imports: [i.a],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(Nt, {
            exports: function () {
              return [i.a];
            },
          });
      class Ft {}
      (Ft.ɵmod = s.Kc({ type: Ft })),
        (Ft.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || Ft)();
          },
          providers: jt,
          imports: [i.a],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(Ft, {
            exports: function () {
              return [i.a];
            },
          });
    },
    RZTn: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var s = n("mrSG"),
        i = n("tk/3"),
        r = n("fXoL");
      let o = class {
        constructor(e) {
          this.httpClient = e;
        }
        getJsonData(e) {
          let t = "assets/jsonList/englishSyllabus.json";
          return (
            "Maths" == e
              ? (t = "assets/jsonList/syllabus.json")
              : "Science" == e && (t = "assets/jsonList/scienceSyllabus.json"),
            this.httpClient.get(t)
          );
        }
      };
      (o.ctorParameters = () => [{ type: i.b }]),
        (o = Object(s.a)([Object(r.D)({ providedIn: "root" })], o));
    },
    SeVD: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return u;
      });
      var s = n("ngJS"),
        i = n("NJ4a");
      var r = n("Lhse");
      var o = n("kJWO");
      var a = n("I55L"),
        l = n("c2HN"),
        c = n("XoHu");
      const u = (e) => {
        if (e && "function" == typeof e[o.a])
          return (
            (u = e),
            (e) => {
              const t = u[o.a]();
              if ("function" != typeof t.subscribe)
                throw new TypeError(
                  "Provided object does not correctly implement Symbol.observable"
                );
              return t.subscribe(e);
            }
          );
        if (Object(a.a)(e)) return Object(s.a)(e);
        if (Object(l.a)(e))
          return (
            (n = e),
            (e) => (
              n
                .then(
                  (t) => {
                    e.closed || (e.next(t), e.complete());
                  },
                  (t) => e.error(t)
                )
                .then(null, i.a),
              e
            )
          );
        if (e && "function" == typeof e[r.a])
          return (
            (t = e),
            (e) => {
              const n = t[r.a]();
              for (;;) {
                let t;
                try {
                  t = n.next();
                } catch (s) {
                  return e.error(s), e;
                }
                if (t.done) {
                  e.complete();
                  break;
                }
                if ((e.next(t.value), e.closed)) break;
              }
              return (
                "function" == typeof n.return &&
                  e.add(() => {
                    n.return && n.return();
                  }),
                e
              );
            }
          );
        {
          const t = Object(c.a)(e) ? "an invalid object" : `'${e}'`;
          throw new TypeError(
            `You provided ${t} where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.`
          );
        }
        var t, n, u;
      };
    },
    SpAZ: function (e, t, n) {
      "use strict";
      function s(e) {
        return e;
      }
      n.d(t, "a", function () {
        return s;
      });
    },
    TuID: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var s = n("mrSG"),
        i = n("fXoL");
      let r = class {
        constructor() {}
        ngOnInit() {}
      };
      (r.ctorParameters = () => []),
        (r = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-live-classes",
              template:
                '<app-header></app-header>\n<div class="liveClassesContainer">\n  <div class="wrapper">\n    <app-live-classes-intro></app-live-classes-intro>\n    <app-free-trial-callout fromLiveClasses="true"></app-free-trial-callout>\n    <app-footer></app-footer>\n  </div>\n</div>\n',
              styles: [
                ".liveClassesContainer {\n  display: flex;\n  justify-content: center;\n  margin-top: 120px;\n}\n@media only screen and (max-width: 767px) {\n  .liveClassesContainer {\n    margin-top: 40px;\n  }\n}\n.wrapper {\n  width: 1302px;\n}\n@media only screen and (max-width: 1302px) {\n  .wrapper {\n    width: 100%;\n  }\n\n  .livaClassesContainer {\n    margin: 80px 24px 0px 24px;\n  }\n}\n@media only screen and (max-width: 767px) {\n  .wrapper {\n    width: 100%;\n  }\n\n  .livaClassesContainer {\n    margin: 40px 20px 0px 20px;\n  }\n}",
              ],
            }),
          ],
          r
        ));
    },
    TxPR: function (e, t, n) {
      "use strict";
      n.d(t, "b", function () {
        return s;
      }),
        n.d(t, "a", function () {
          return i;
        }),
        n.d(t, "c", function () {
          return r;
        });
      const s = (e) => {
          let t = "";
          switch (e) {
            case "website1.mindspark.in":
            case "www.website1.mindspark.in":
            case "localhost":
              t = "https://edicinep4.mindspark.in/";
              break;
            case "stgwebsite.mindspark.in":
            case "www.stgwebsite.mindspark.in":
              t = "https://stglearn.mindspark.in/";
              break;
            case "mindspark.in":
            case "www.mindspark.in":
            default:
              t = "https://learn.mindspark.in/";
          }
          return t;
        },
        i = (e) => {
          let t = "";
          switch (e) {
            case "website1.mindspark.in":
            case "www.website1.mindspark.in":
            case "localhost":
              t =
                "https://edicinep4.mindspark.in/Student/onboard/auto-login?setSession=";
              break;
            case "stgwebsite.mindspark.in":
            case "www.stgwebsite.mindspark.in":
              t =
                "https://stglearn.mindspark.in/Student/onboard/auto-login?setSession=";
              break;
            case "mindspark.in":
            case "www.mindspark.in":
            default:
              t =
                "https://learn.mindspark.in/Student/onboard/auto-login?setSession=";
          }
          return t;
        },
        r = (e) => {
          let t = "";
          switch (e) {
            case "website1.mindspark.in":
            case "www.website1.mindspark.in":
            case "localhost":
              t = "rzp_test_BffC6rsfysqlPz";
              break;
            case "stgwebsite.mindspark.in":
            case "www.stgwebsite.mindspark.in":
              t = "rzp_live_THOedUgw9qHjcz";
              break;
            case "mindspark.in":
            case "www.mindspark.in":
            default:
              t = "rzp_live_THOedUgw9qHjcz";
          }
          return t;
        };
    },
    VRyK: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return a;
      });
      var s = n("HDdC"),
        i = n("z+Ro"),
        r = n("bHdf"),
        o = n("yCtX");
      function a(...e) {
        let t = Number.POSITIVE_INFINITY,
          n = null,
          a = e[e.length - 1];
        return (
          Object(i.a)(a)
            ? ((n = e.pop()),
              e.length > 1 &&
                "number" == typeof e[e.length - 1] &&
                (t = e.pop()))
            : "number" == typeof a && (t = e.pop()),
          null === n && 1 === e.length && e[0] instanceof s.a
            ? e[0]
            : Object(r.a)(t)(Object(o.a)(e, n))
        );
      }
    },
    WMd4: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return a;
      });
      var s,
        i = n("EY2u"),
        r = n("LRne"),
        o = n("z6cu");
      !(function (e) {
        (e.NEXT = "N"), (e.ERROR = "E"), (e.COMPLETE = "C");
      })(s || (s = {}));
      class a {
        constructor(e, t, n) {
          (this.kind = e),
            (this.value = t),
            (this.error = n),
            (this.hasValue = "N" === e);
        }
        observe(e) {
          switch (this.kind) {
            case "N":
              return e.next && e.next(this.value);
            case "E":
              return e.error && e.error(this.error);
            case "C":
              return e.complete && e.complete();
          }
        }
        do(e, t, n) {
          switch (this.kind) {
            case "N":
              return e && e(this.value);
            case "E":
              return t && t(this.error);
            case "C":
              return n && n();
          }
        }
        accept(e, t, n) {
          return e && "function" == typeof e.next
            ? this.observe(e)
            : this.do(e, t, n);
        }
        toObservable() {
          switch (this.kind) {
            case "N":
              return Object(r.a)(this.value);
            case "E":
              return Object(o.a)(this.error);
            case "C":
              return Object(i.b)();
          }
          throw new Error("unexpected notification kind value");
        }
        static createNext(e) {
          return void 0 !== e ? new a("N", e) : a.undefinedValueNotification;
        }
        static createError(e) {
          return new a("E", void 0, e);
        }
        static createComplete() {
          return a.completeNotification;
        }
      }
      (a.completeNotification = new a("C")),
        (a.undefinedValueNotification = new a("N", void 0));
    },
    Wp6s: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return C;
      });
      var s = n("fXoL"),
        i = n("R1ws"),
        r = n("FKr1");
      const o = ["*", [["mat-card-footer"]]],
        a = [
          [
            ["", "mat-card-avatar", ""],
            ["", "matCardAvatar", ""],
          ],
          [
            ["mat-card-title"],
            ["mat-card-subtitle"],
            ["", "mat-card-title", ""],
            ["", "mat-card-subtitle", ""],
            ["", "matCardTitle", ""],
            ["", "matCardSubtitle", ""],
          ],
          "*",
        ],
        l = [
          [
            ["mat-card-title"],
            ["mat-card-subtitle"],
            ["", "mat-card-title", ""],
            ["", "mat-card-subtitle", ""],
            ["", "matCardTitle", ""],
            ["", "matCardSubtitle", ""],
          ],
          [["img"]],
          "*",
        ];
      class c {}
      (c.ɵfac = function (e) {
        return new (e || c)();
      }),
        (c.ɵdir = s.Hc({
          type: c,
          selectors: [
            ["mat-card-content"],
            ["", "mat-card-content", ""],
            ["", "matCardContent", ""],
          ],
          hostAttrs: [1, "mat-card-content"],
        }));
      class u {}
      (u.ɵfac = function (e) {
        return new (e || u)();
      }),
        (u.ɵdir = s.Hc({
          type: u,
          selectors: [
            ["mat-card-title"],
            ["", "mat-card-title", ""],
            ["", "matCardTitle", ""],
          ],
          hostAttrs: [1, "mat-card-title"],
        }));
      class d {}
      (d.ɵfac = function (e) {
        return new (e || d)();
      }),
        (d.ɵdir = s.Hc({
          type: d,
          selectors: [
            ["mat-card-subtitle"],
            ["", "mat-card-subtitle", ""],
            ["", "matCardSubtitle", ""],
          ],
          hostAttrs: [1, "mat-card-subtitle"],
        }));
      class h {
        constructor() {
          this.align = "start";
        }
      }
      (h.ɵfac = function (e) {
        return new (e || h)();
      }),
        (h.ɵdir = s.Hc({
          type: h,
          selectors: [["mat-card-actions"]],
          hostAttrs: [1, "mat-card-actions"],
          hostVars: 2,
          hostBindings: function (e, t) {
            2 & e && s.Ec("mat-card-actions-align-end", "end" === t.align);
          },
          inputs: { align: "align" },
          exportAs: ["matCardActions"],
        })),
        (h.propDecorators = { align: [{ type: s.G }] });
      class p {}
      (p.ɵfac = function (e) {
        return new (e || p)();
      }),
        (p.ɵdir = s.Hc({
          type: p,
          selectors: [["mat-card-footer"]],
          hostAttrs: [1, "mat-card-footer"],
        }));
      class m {}
      (m.ɵfac = function (e) {
        return new (e || m)();
      }),
        (m.ɵdir = s.Hc({
          type: m,
          selectors: [
            ["", "mat-card-image", ""],
            ["", "matCardImage", ""],
          ],
          hostAttrs: [1, "mat-card-image"],
        }));
      class f {}
      (f.ɵfac = function (e) {
        return new (e || f)();
      }),
        (f.ɵdir = s.Hc({
          type: f,
          selectors: [
            ["", "mat-card-sm-image", ""],
            ["", "matCardImageSmall", ""],
          ],
          hostAttrs: [1, "mat-card-sm-image"],
        }));
      class g {}
      (g.ɵfac = function (e) {
        return new (e || g)();
      }),
        (g.ɵdir = s.Hc({
          type: g,
          selectors: [
            ["", "mat-card-md-image", ""],
            ["", "matCardImageMedium", ""],
          ],
          hostAttrs: [1, "mat-card-md-image"],
        }));
      class y {}
      (y.ɵfac = function (e) {
        return new (e || y)();
      }),
        (y.ɵdir = s.Hc({
          type: y,
          selectors: [
            ["", "mat-card-lg-image", ""],
            ["", "matCardImageLarge", ""],
          ],
          hostAttrs: [1, "mat-card-lg-image"],
        }));
      class v {}
      (v.ɵfac = function (e) {
        return new (e || v)();
      }),
        (v.ɵdir = s.Hc({
          type: v,
          selectors: [
            ["", "mat-card-xl-image", ""],
            ["", "matCardImageXLarge", ""],
          ],
          hostAttrs: [1, "mat-card-xl-image"],
        }));
      class b {}
      (b.ɵfac = function (e) {
        return new (e || b)();
      }),
        (b.ɵdir = s.Hc({
          type: b,
          selectors: [
            ["", "mat-card-avatar", ""],
            ["", "matCardAvatar", ""],
          ],
          hostAttrs: [1, "mat-card-avatar"],
        }));
      class x {
        constructor(e) {
          this._animationMode = e;
        }
      }
      (x.ɵfac = function (e) {
        return new (e || x)(s.Mc(i.a, 8));
      }),
        (x.ɵcmp = s.Gc({
          type: x,
          selectors: [["mat-card"]],
          hostAttrs: [1, "mat-card", "mat-focus-indicator"],
          hostVars: 2,
          hostBindings: function (e, t) {
            2 & e &&
              s.Ec(
                "_mat-animation-noopable",
                "NoopAnimations" === t._animationMode
              );
          },
          exportAs: ["matCard"],
          ngContentSelectors: ["*", "mat-card-footer"],
          decls: 2,
          vars: 0,
          template: function (e, t) {
            1 & e && (s.kd(o), s.jd(0), s.jd(1, 1));
          },
          styles: [
            ".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\n",
          ],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (x.ctorParameters = () => [
          {
            type: String,
            decorators: [{ type: s.R }, { type: s.C, args: [i.a] }],
          },
        ]);
      class _ {}
      (_.ɵfac = function (e) {
        return new (e || _)();
      }),
        (_.ɵcmp = s.Gc({
          type: _,
          selectors: [["mat-card-header"]],
          hostAttrs: [1, "mat-card-header"],
          ngContentSelectors: [
            "[mat-card-avatar], [matCardAvatar]",
            "mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]",
            "*",
          ],
          decls: 4,
          vars: 0,
          consts: [[1, "mat-card-header-text"]],
          template: function (e, t) {
            1 & e &&
              (s.kd(a),
              s.jd(0),
              s.Rc(1, "div", 0),
              s.jd(2, 1),
              s.Qc(),
              s.jd(3, 2));
          },
          encapsulation: 2,
          changeDetection: 0,
        }));
      class w {}
      (w.ɵfac = function (e) {
        return new (e || w)();
      }),
        (w.ɵcmp = s.Gc({
          type: w,
          selectors: [["mat-card-title-group"]],
          hostAttrs: [1, "mat-card-title-group"],
          ngContentSelectors: [
            "mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]",
            "img",
            "*",
          ],
          decls: 4,
          vars: 0,
          template: function (e, t) {
            1 & e &&
              (s.kd(l),
              s.Rc(0, "div"),
              s.jd(1),
              s.Qc(),
              s.jd(2, 1),
              s.jd(3, 2));
          },
          encapsulation: 2,
          changeDetection: 0,
        }));
      class C {}
      (C.ɵmod = s.Kc({ type: C })),
        (C.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || C)();
          },
          imports: [[r.d], r.d],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(C, {
            declarations: function () {
              return [x, _, w, c, u, d, h, p, f, g, y, m, v, b];
            },
            imports: function () {
              return [r.d];
            },
            exports: function () {
              return [x, _, w, c, u, d, h, p, f, g, y, m, v, b, r.d];
            },
          });
    },
    XNiG: function (e, t, n) {
      "use strict";
      n.d(t, "b", function () {
        return c;
      }),
        n.d(t, "a", function () {
          return u;
        });
      var s = n("HDdC"),
        i = n("7o/Q"),
        r = n("quSY"),
        o = n("9ppp"),
        a = n("Ylt2"),
        l = n("2QA8");
      class c extends i.a {
        constructor(e) {
          super(e), (this.destination = e);
        }
      }
      class u extends s.a {
        constructor() {
          super(),
            (this.observers = []),
            (this.closed = !1),
            (this.isStopped = !1),
            (this.hasError = !1),
            (this.thrownError = null);
        }
        [l.a]() {
          return new c(this);
        }
        lift(e) {
          const t = new d(this, this);
          return (t.operator = e), t;
        }
        next(e) {
          if (this.closed) throw new o.a();
          if (!this.isStopped) {
            const { observers: t } = this,
              n = t.length,
              s = t.slice();
            for (let i = 0; i < n; i++) s[i].next(e);
          }
        }
        error(e) {
          if (this.closed) throw new o.a();
          (this.hasError = !0), (this.thrownError = e), (this.isStopped = !0);
          const { observers: t } = this,
            n = t.length,
            s = t.slice();
          for (let i = 0; i < n; i++) s[i].error(e);
          this.observers.length = 0;
        }
        complete() {
          if (this.closed) throw new o.a();
          this.isStopped = !0;
          const { observers: e } = this,
            t = e.length,
            n = e.slice();
          for (let s = 0; s < t; s++) n[s].complete();
          this.observers.length = 0;
        }
        unsubscribe() {
          (this.isStopped = !0), (this.closed = !0), (this.observers = null);
        }
        _trySubscribe(e) {
          if (this.closed) throw new o.a();
          return super._trySubscribe(e);
        }
        _subscribe(e) {
          if (this.closed) throw new o.a();
          return this.hasError
            ? (e.error(this.thrownError), r.a.EMPTY)
            : this.isStopped
            ? (e.complete(), r.a.EMPTY)
            : (this.observers.push(e), new a.a(this, e));
        }
        asObservable() {
          const e = new s.a();
          return (e.source = this), e;
        }
      }
      u.create = (e, t) => new d(e, t);
      class d extends u {
        constructor(e, t) {
          super(), (this.destination = e), (this.source = t);
        }
        next(e) {
          const { destination: t } = this;
          t && t.next && t.next(e);
        }
        error(e) {
          const { destination: t } = this;
          t && t.error && this.destination.error(e);
        }
        complete() {
          const { destination: e } = this;
          e && e.complete && this.destination.complete();
        }
        _subscribe(e) {
          const { source: t } = this;
          return t ? this.source.subscribe(e) : r.a.EMPTY;
        }
      }
    },
    XhcP: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return W;
      });
      var s = n("nLfN"),
        i = n("vxfF"),
        r = n("ofXK"),
        o = n("fXoL"),
        a = n("FKr1"),
        l = n("u47x"),
        c = n("cH1L"),
        u = n("8LU1"),
        d = n("FtGj"),
        h = n("XNiG"),
        p = n("xgIS"),
        m = n("VRyK"),
        f = n("pLZG"),
        g = n("lJxs"),
        y = n("7o/Q");
      function v(e) {
        return (t) => t.lift(new b(e));
      }
      class b {
        constructor(e) {
          this.value = e;
        }
        call(e, t) {
          return t.subscribe(new x(e, this.value));
        }
      }
      class x extends y.a {
        constructor(e, t) {
          super(e), (this.value = t);
        }
        _next(e) {
          this.destination.next(this.value);
        }
      }
      var _ = n("1G5W"),
        w = n("/uUt"),
        C = n("IzEk"),
        S = n("JX91"),
        E = n("Kj3r"),
        k = n("R0Ic"),
        O = n("R1ws");
      const I = ["*"];
      function T(e, t) {
        if (1 & e) {
          const e = o.Sc();
          o.Rc(0, "div", 2),
            o.cd("click", function () {
              o.ud(e);
              return o.gd()._onBackdropClicked();
            }),
            o.Qc();
        }
        if (2 & e) {
          const e = o.gd();
          o.Ec("mat-drawer-shown", e._isShowingBackdrop());
        }
      }
      function A(e, t) {
        1 & e && (o.Rc(0, "mat-drawer-content"), o.jd(1, 2), o.Qc());
      }
      const D = [[["mat-drawer"]], [["mat-drawer-content"]], "*"];
      function M(e, t) {
        if (1 & e) {
          const e = o.Sc();
          o.Rc(0, "div", 2),
            o.cd("click", function () {
              o.ud(e);
              return o.gd()._onBackdropClicked();
            }),
            o.Qc();
        }
        if (2 & e) {
          const e = o.gd();
          o.Ec("mat-drawer-shown", e._isShowingBackdrop());
        }
      }
      function P(e, t) {
        1 & e && (o.Rc(0, "mat-sidenav-content", 3), o.jd(1, 2), o.Qc());
      }
      const R = [[["mat-sidenav"]], [["mat-sidenav-content"]], "*"],
        j =
          ".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\n",
        N = {
          transformDrawer: Object(k.n)("transform", [
            Object(k.k)(
              "open, open-instant",
              Object(k.l)({ transform: "none", visibility: "visible" })
            ),
            Object(k.k)(
              "void",
              Object(k.l)({ "box-shadow": "none", visibility: "hidden" })
            ),
            Object(k.m)("void => open-instant", Object(k.e)("0ms")),
            Object(k.m)(
              "void <=> open, open-instant => void",
              Object(k.e)("400ms cubic-bezier(0.25, 0.8, 0.25, 1)")
            ),
          ]),
        };
      const F = new o.E("MAT_DRAWER_DEFAULT_AUTOSIZE", {
          providedIn: "root",
          factory: function () {
            return !1;
          },
        }),
        L = new o.E("MAT_DRAWER_CONTAINER");
      class V extends i.a {
        constructor(e, t, n, s, i) {
          super(n, s, i), (this._changeDetectorRef = e), (this._container = t);
        }
        ngAfterContentInit() {
          this._container._contentMarginChanges.subscribe(() => {
            this._changeDetectorRef.markForCheck();
          });
        }
      }
      (V.ɵfac = function (e) {
        return new (e || V)(
          o.Mc(o.k),
          o.Mc(Object(o.sb)(() => z)),
          o.Mc(o.v),
          o.Mc(i.c),
          o.Mc(o.Q)
        );
      }),
        (V.ɵcmp = o.Gc({
          type: V,
          selectors: [["mat-drawer-content"]],
          hostAttrs: [1, "mat-drawer-content"],
          hostVars: 4,
          hostBindings: function (e, t) {
            2 & e &&
              o.zd("margin-left", t._container._contentMargins.left, "px")(
                "margin-right",
                t._container._contentMargins.right,
                "px"
              );
          },
          features: [o.wc],
          ngContentSelectors: I,
          decls: 1,
          vars: 0,
          template: function (e, t) {
            1 & e && (o.kd(), o.jd(0));
          },
          encapsulation: 2,
          changeDetection: 0,
        })),
        (V.ctorParameters = () => [
          { type: o.k },
          {
            type: z,
            decorators: [{ type: o.C, args: [Object(o.sb)(() => z)] }],
          },
          { type: o.v },
          { type: i.c },
          { type: o.Q },
        ]);
      class B {
        constructor(e, t, n, s, i, r, a) {
          (this._elementRef = e),
            (this._focusTrapFactory = t),
            (this._focusMonitor = n),
            (this._platform = s),
            (this._ngZone = i),
            (this._doc = r),
            (this._container = a),
            (this._elementFocusedBeforeDrawerWasOpened = null),
            (this._enableAnimations = !1),
            (this._position = "start"),
            (this._mode = "over"),
            (this._disableClose = !1),
            (this._opened = !1),
            (this._animationStarted = new h.a()),
            (this._animationEnd = new h.a()),
            (this._animationState = "void"),
            (this.openedChange = new o.x(!0)),
            (this._openedStream = this.openedChange.pipe(
              Object(f.a)((e) => e),
              Object(g.a)(() => {})
            )),
            (this.openedStart = this._animationStarted.pipe(
              Object(f.a)(
                (e) =>
                  e.fromState !== e.toState && 0 === e.toState.indexOf("open")
              ),
              v(void 0)
            )),
            (this._closedStream = this.openedChange.pipe(
              Object(f.a)((e) => !e),
              Object(g.a)(() => {})
            )),
            (this.closedStart = this._animationStarted.pipe(
              Object(f.a)(
                (e) => e.fromState !== e.toState && "void" === e.toState
              ),
              v(void 0)
            )),
            (this._destroyed = new h.a()),
            (this.onPositionChanged = new o.x()),
            (this._modeChanged = new h.a()),
            this.openedChange.subscribe((e) => {
              e
                ? (this._doc &&
                    (this._elementFocusedBeforeDrawerWasOpened =
                      this._doc.activeElement),
                  this._takeFocus())
                : this._isFocusWithinDrawer() && this._restoreFocus();
            }),
            this._ngZone.runOutsideAngular(() => {
              Object(p.a)(this._elementRef.nativeElement, "keydown")
                .pipe(
                  Object(f.a)(
                    (e) =>
                      e.keyCode === d.e && !this.disableClose && !Object(d.o)(e)
                  ),
                  Object(_.a)(this._destroyed)
                )
                .subscribe((e) =>
                  this._ngZone.run(() => {
                    this.close(), e.stopPropagation(), e.preventDefault();
                  })
                );
            }),
            this._animationEnd
              .pipe(
                Object(w.a)(
                  (e, t) =>
                    e.fromState === t.fromState && e.toState === t.toState
                )
              )
              .subscribe((e) => {
                const { fromState: t, toState: n } = e;
                ((0 === n.indexOf("open") && "void" === t) ||
                  ("void" === n && 0 === t.indexOf("open"))) &&
                  this.openedChange.emit(this._opened);
              });
        }
        get position() {
          return this._position;
        }
        set position(e) {
          (e = "end" === e ? "end" : "start") != this._position &&
            ((this._position = e), this.onPositionChanged.emit());
        }
        get mode() {
          return this._mode;
        }
        set mode(e) {
          (this._mode = e),
            this._updateFocusTrapState(),
            this._modeChanged.next();
        }
        get disableClose() {
          return this._disableClose;
        }
        set disableClose(e) {
          this._disableClose = Object(u.b)(e);
        }
        get autoFocus() {
          const e = this._autoFocus;
          return null == e ? "side" !== this.mode : e;
        }
        set autoFocus(e) {
          this._autoFocus = Object(u.b)(e);
        }
        get opened() {
          return this._opened;
        }
        set opened(e) {
          this.toggle(Object(u.b)(e));
        }
        _takeFocus() {
          this.autoFocus &&
            this._focusTrap &&
            this._focusTrap.focusInitialElementWhenReady().then((e) => {
              e ||
                "function" != typeof this._elementRef.nativeElement.focus ||
                this._elementRef.nativeElement.focus();
            });
        }
        _restoreFocus() {
          this.autoFocus &&
            (this._elementFocusedBeforeDrawerWasOpened
              ? this._focusMonitor.focusVia(
                  this._elementFocusedBeforeDrawerWasOpened,
                  this._openedVia
                )
              : this._elementRef.nativeElement.blur(),
            (this._elementFocusedBeforeDrawerWasOpened = null),
            (this._openedVia = null));
        }
        _isFocusWithinDrawer() {
          var e;
          const t =
            null === (e = this._doc) || void 0 === e ? void 0 : e.activeElement;
          return !!t && this._elementRef.nativeElement.contains(t);
        }
        ngAfterContentInit() {
          (this._focusTrap = this._focusTrapFactory.create(
            this._elementRef.nativeElement
          )),
            this._updateFocusTrapState();
        }
        ngAfterContentChecked() {
          this._platform.isBrowser && (this._enableAnimations = !0);
        }
        ngOnDestroy() {
          this._focusTrap && this._focusTrap.destroy(),
            this._animationStarted.complete(),
            this._animationEnd.complete(),
            this._modeChanged.complete(),
            this._destroyed.next(),
            this._destroyed.complete();
        }
        open(e) {
          return this.toggle(!0, e);
        }
        close() {
          return this.toggle(!1);
        }
        _closeViaBackdropClick() {
          return this._setOpen(!1, !0);
        }
        toggle(e = !this.opened, t) {
          return this._setOpen(e, !e && this._isFocusWithinDrawer(), t);
        }
        _setOpen(e, t, n = "program") {
          return (
            (this._opened = e),
            e
              ? ((this._animationState = this._enableAnimations
                  ? "open"
                  : "open-instant"),
                (this._openedVia = n))
              : ((this._animationState = "void"), t && this._restoreFocus()),
            this._updateFocusTrapState(),
            new Promise((e) => {
              this.openedChange
                .pipe(Object(C.a)(1))
                .subscribe((t) => e(t ? "open" : "close"));
            })
          );
        }
        _getWidth() {
          return (
            (this._elementRef.nativeElement &&
              this._elementRef.nativeElement.offsetWidth) ||
            0
          );
        }
        _updateFocusTrapState() {
          this._focusTrap &&
            (this._focusTrap.enabled = this.opened && "side" !== this.mode);
        }
        _animationStartListener(e) {
          this._animationStarted.next(e);
        }
        _animationDoneListener(e) {
          this._animationEnd.next(e);
        }
      }
      (B.ɵfac = function (e) {
        return new (e || B)(
          o.Mc(o.v),
          o.Mc(l.d),
          o.Mc(l.c),
          o.Mc(s.a),
          o.Mc(o.Q),
          o.Mc(r.c, 8),
          o.Mc(L, 8)
        );
      }),
        (B.ɵcmp = o.Gc({
          type: B,
          selectors: [["mat-drawer"]],
          hostAttrs: ["tabIndex", "-1", 1, "mat-drawer"],
          hostVars: 12,
          hostBindings: function (e, t) {
            1 & e &&
              o.Ad("@transform.start", function (e) {
                return t._animationStartListener(e);
              })("@transform.done", function (e) {
                return t._animationDoneListener(e);
              }),
              2 & e &&
                (o.Ac("align", null),
                o.Bd("@transform", t._animationState),
                o.Ec("mat-drawer-end", "end" === t.position)(
                  "mat-drawer-over",
                  "over" === t.mode
                )("mat-drawer-push", "push" === t.mode)(
                  "mat-drawer-side",
                  "side" === t.mode
                )("mat-drawer-opened", t.opened));
          },
          inputs: {
            position: "position",
            mode: "mode",
            disableClose: "disableClose",
            autoFocus: "autoFocus",
            opened: "opened",
          },
          outputs: {
            openedChange: "openedChange",
            _openedStream: "opened",
            openedStart: "openedStart",
            _closedStream: "closed",
            closedStart: "closedStart",
            onPositionChanged: "positionChanged",
          },
          exportAs: ["matDrawer"],
          ngContentSelectors: I,
          decls: 2,
          vars: 0,
          consts: [[1, "mat-drawer-inner-container"]],
          template: function (e, t) {
            1 & e && (o.kd(), o.Rc(0, "div", 0), o.jd(1), o.Qc());
          },
          encapsulation: 2,
          data: { animation: [N.transformDrawer] },
          changeDetection: 0,
        })),
        (B.ctorParameters = () => [
          { type: o.v },
          { type: l.d },
          { type: l.c },
          { type: s.a },
          { type: o.Q },
          {
            type: void 0,
            decorators: [{ type: o.R }, { type: o.C, args: [r.c] }],
          },
          { type: z, decorators: [{ type: o.R }, { type: o.C, args: [L] }] },
        ]),
        (B.propDecorators = {
          position: [{ type: o.G }],
          mode: [{ type: o.G }],
          disableClose: [{ type: o.G }],
          autoFocus: [{ type: o.G }],
          opened: [{ type: o.G }],
          _animationState: [{ type: o.z, args: ["@transform"] }],
          openedChange: [{ type: o.S }],
          _openedStream: [{ type: o.S, args: ["opened"] }],
          openedStart: [{ type: o.S }],
          _closedStream: [{ type: o.S, args: ["closed"] }],
          closedStart: [{ type: o.S }],
          onPositionChanged: [{ type: o.S, args: ["positionChanged"] }],
          _animationStartListener: [
            { type: o.A, args: ["@transform.start", ["$event"]] },
          ],
          _animationDoneListener: [
            { type: o.A, args: ["@transform.done", ["$event"]] },
          ],
        });
      class z {
        constructor(e, t, n, s, i, r = !1, a) {
          (this._dir = e),
            (this._element = t),
            (this._ngZone = n),
            (this._changeDetectorRef = s),
            (this._animationMode = a),
            (this._drawers = new o.X()),
            (this.backdropClick = new o.x()),
            (this._destroyed = new h.a()),
            (this._doCheckSubject = new h.a()),
            (this._contentMargins = { left: null, right: null }),
            (this._contentMarginChanges = new h.a()),
            e &&
              e.change.pipe(Object(_.a)(this._destroyed)).subscribe(() => {
                this._validateDrawers(), this.updateContentMargins();
              }),
            i
              .change()
              .pipe(Object(_.a)(this._destroyed))
              .subscribe(() => this.updateContentMargins()),
            (this._autosize = r);
        }
        get start() {
          return this._start;
        }
        get end() {
          return this._end;
        }
        get autosize() {
          return this._autosize;
        }
        set autosize(e) {
          this._autosize = Object(u.b)(e);
        }
        get hasBackdrop() {
          return null == this._backdropOverride
            ? !this._start ||
                "side" !== this._start.mode ||
                !this._end ||
                "side" !== this._end.mode
            : this._backdropOverride;
        }
        set hasBackdrop(e) {
          this._backdropOverride = null == e ? null : Object(u.b)(e);
        }
        get scrollable() {
          return this._userContent || this._content;
        }
        ngAfterContentInit() {
          this._allDrawers.changes
            .pipe(Object(S.a)(this._allDrawers), Object(_.a)(this._destroyed))
            .subscribe((e) => {
              this._drawers.reset(
                e.filter((e) => !e._container || e._container === this)
              ),
                this._drawers.notifyOnChanges();
            }),
            this._drawers.changes.pipe(Object(S.a)(null)).subscribe(() => {
              this._validateDrawers(),
                this._drawers.forEach((e) => {
                  this._watchDrawerToggle(e),
                    this._watchDrawerPosition(e),
                    this._watchDrawerMode(e);
                }),
                (!this._drawers.length ||
                  this._isDrawerOpen(this._start) ||
                  this._isDrawerOpen(this._end)) &&
                  this.updateContentMargins(),
                this._changeDetectorRef.markForCheck();
            }),
            this._ngZone.runOutsideAngular(() => {
              this._doCheckSubject
                .pipe(Object(E.a)(10), Object(_.a)(this._destroyed))
                .subscribe(() => this.updateContentMargins());
            });
        }
        ngOnDestroy() {
          this._contentMarginChanges.complete(),
            this._doCheckSubject.complete(),
            this._drawers.destroy(),
            this._destroyed.next(),
            this._destroyed.complete();
        }
        open() {
          this._drawers.forEach((e) => e.open());
        }
        close() {
          this._drawers.forEach((e) => e.close());
        }
        updateContentMargins() {
          let e = 0,
            t = 0;
          if (this._left && this._left.opened)
            if ("side" == this._left.mode) e += this._left._getWidth();
            else if ("push" == this._left.mode) {
              const n = this._left._getWidth();
              (e += n), (t -= n);
            }
          if (this._right && this._right.opened)
            if ("side" == this._right.mode) t += this._right._getWidth();
            else if ("push" == this._right.mode) {
              const n = this._right._getWidth();
              (t += n), (e -= n);
            }
          (e = e || null),
            (t = t || null),
            (e === this._contentMargins.left &&
              t === this._contentMargins.right) ||
              ((this._contentMargins = { left: e, right: t }),
              this._ngZone.run(() =>
                this._contentMarginChanges.next(this._contentMargins)
              ));
        }
        ngDoCheck() {
          this._autosize &&
            this._isPushed() &&
            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());
        }
        _watchDrawerToggle(e) {
          e._animationStarted
            .pipe(
              Object(f.a)((e) => e.fromState !== e.toState),
              Object(_.a)(this._drawers.changes)
            )
            .subscribe((e) => {
              "open-instant" !== e.toState &&
                "NoopAnimations" !== this._animationMode &&
                this._element.nativeElement.classList.add(
                  "mat-drawer-transition"
                ),
                this.updateContentMargins(),
                this._changeDetectorRef.markForCheck();
            }),
            "side" !== e.mode &&
              e.openedChange
                .pipe(Object(_.a)(this._drawers.changes))
                .subscribe(() => this._setContainerClass(e.opened));
        }
        _watchDrawerPosition(e) {
          e &&
            e.onPositionChanged
              .pipe(Object(_.a)(this._drawers.changes))
              .subscribe(() => {
                this._ngZone.onMicrotaskEmpty
                  .pipe(Object(C.a)(1))
                  .subscribe(() => {
                    this._validateDrawers();
                  });
              });
        }
        _watchDrawerMode(e) {
          e &&
            e._modeChanged
              .pipe(
                Object(_.a)(Object(m.a)(this._drawers.changes, this._destroyed))
              )
              .subscribe(() => {
                this.updateContentMargins(),
                  this._changeDetectorRef.markForCheck();
              });
        }
        _setContainerClass(e) {
          const t = this._element.nativeElement.classList,
            n = "mat-drawer-container-has-open";
          e ? t.add(n) : t.remove(n);
        }
        _validateDrawers() {
          (this._start = this._end = null),
            this._drawers.forEach((e) => {
              "end" == e.position
                ? (this._end, (this._end = e))
                : (this._start, (this._start = e));
            }),
            (this._right = this._left = null),
            this._dir && "rtl" === this._dir.value
              ? ((this._left = this._end), (this._right = this._start))
              : ((this._left = this._start), (this._right = this._end));
        }
        _isPushed() {
          return (
            (this._isDrawerOpen(this._start) && "over" != this._start.mode) ||
            (this._isDrawerOpen(this._end) && "over" != this._end.mode)
          );
        }
        _onBackdropClicked() {
          this.backdropClick.emit(), this._closeModalDrawersViaBackdrop();
        }
        _closeModalDrawersViaBackdrop() {
          [this._start, this._end]
            .filter((e) => e && !e.disableClose && this._canHaveBackdrop(e))
            .forEach((e) => e._closeViaBackdropClick());
        }
        _isShowingBackdrop() {
          return (
            (this._isDrawerOpen(this._start) &&
              this._canHaveBackdrop(this._start)) ||
            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end))
          );
        }
        _canHaveBackdrop(e) {
          return "side" !== e.mode || !!this._backdropOverride;
        }
        _isDrawerOpen(e) {
          return null != e && e.opened;
        }
      }
      (z.ɵfac = function (e) {
        return new (e || z)(
          o.Mc(c.b, 8),
          o.Mc(o.v),
          o.Mc(o.Q),
          o.Mc(o.k),
          o.Mc(i.e),
          o.Mc(F),
          o.Mc(O.a, 8)
        );
      }),
        (z.ɵcmp = o.Gc({
          type: z,
          selectors: [["mat-drawer-container"]],
          contentQueries: function (e, t, n) {
            if ((1 & e && (o.Fc(n, V, !0), o.Fc(n, B, !0)), 2 & e)) {
              let e;
              o.sd((e = o.dd())) && (t._content = e.first),
                o.sd((e = o.dd())) && (t._allDrawers = e);
            }
          },
          viewQuery: function (e, t) {
            if ((1 & e && o.Id(V, !0), 2 & e)) {
              let e;
              o.sd((e = o.dd())) && (t._userContent = e.first);
            }
          },
          hostAttrs: [1, "mat-drawer-container"],
          hostVars: 2,
          hostBindings: function (e, t) {
            2 & e &&
              o.Ec(
                "mat-drawer-container-explicit-backdrop",
                t._backdropOverride
              );
          },
          inputs: { autosize: "autosize", hasBackdrop: "hasBackdrop" },
          outputs: { backdropClick: "backdropClick" },
          exportAs: ["matDrawerContainer"],
          features: [o.yc([{ provide: L, useExisting: z }])],
          ngContentSelectors: ["mat-drawer", "mat-drawer-content", "*"],
          decls: 4,
          vars: 2,
          consts: [
            [
              "class",
              "mat-drawer-backdrop",
              3,
              "mat-drawer-shown",
              "click",
              4,
              "ngIf",
            ],
            [4, "ngIf"],
            [1, "mat-drawer-backdrop", 3, "click"],
          ],
          template: function (e, t) {
            1 & e &&
              (o.kd(D),
              o.Cd(0, T, 1, 2, "div", 0),
              o.jd(1),
              o.jd(2, 1),
              o.Cd(3, A, 2, 0, "mat-drawer-content", 1)),
              2 & e &&
                (o.ld("ngIf", t.hasBackdrop),
                o.zc(3),
                o.ld("ngIf", !t._content));
          },
          directives: [r.k, V],
          styles: [j],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (z.ctorParameters = () => [
          { type: c.b, decorators: [{ type: o.R }] },
          { type: o.v },
          { type: o.Q },
          { type: o.k },
          { type: i.e },
          { type: void 0, decorators: [{ type: o.C, args: [F] }] },
          {
            type: String,
            decorators: [{ type: o.R }, { type: o.C, args: [O.a] }],
          },
        ]),
        (z.propDecorators = {
          _allDrawers: [{ type: o.s, args: [B, { descendants: !0 }] }],
          _content: [{ type: o.r, args: [V] }],
          _userContent: [{ type: o.mb, args: [V] }],
          autosize: [{ type: o.G }],
          hasBackdrop: [{ type: o.G }],
          backdropClick: [{ type: o.S }],
        });
      class H extends V {
        constructor(e, t, n, s, i) {
          super(e, t, n, s, i);
        }
      }
      (H.ɵfac = function (e) {
        return new (e || H)(
          o.Mc(o.k),
          o.Mc(Object(o.sb)(() => $)),
          o.Mc(o.v),
          o.Mc(i.c),
          o.Mc(o.Q)
        );
      }),
        (H.ɵcmp = o.Gc({
          type: H,
          selectors: [["mat-sidenav-content"]],
          hostAttrs: [1, "mat-drawer-content", "mat-sidenav-content"],
          hostVars: 4,
          hostBindings: function (e, t) {
            2 & e &&
              o.zd("margin-left", t._container._contentMargins.left, "px")(
                "margin-right",
                t._container._contentMargins.right,
                "px"
              );
          },
          features: [o.wc],
          ngContentSelectors: I,
          decls: 1,
          vars: 0,
          template: function (e, t) {
            1 & e && (o.kd(), o.jd(0));
          },
          encapsulation: 2,
          changeDetection: 0,
        })),
        (H.ctorParameters = () => [
          { type: o.k },
          {
            type: $,
            decorators: [{ type: o.C, args: [Object(o.sb)(() => $)] }],
          },
          { type: o.v },
          { type: i.c },
          { type: o.Q },
        ]);
      class G extends B {
        constructor() {
          super(...arguments),
            (this._fixedInViewport = !1),
            (this._fixedTopGap = 0),
            (this._fixedBottomGap = 0);
        }
        get fixedInViewport() {
          return this._fixedInViewport;
        }
        set fixedInViewport(e) {
          this._fixedInViewport = Object(u.b)(e);
        }
        get fixedTopGap() {
          return this._fixedTopGap;
        }
        set fixedTopGap(e) {
          this._fixedTopGap = Object(u.e)(e);
        }
        get fixedBottomGap() {
          return this._fixedBottomGap;
        }
        set fixedBottomGap(e) {
          this._fixedBottomGap = Object(u.e)(e);
        }
      }
      (G.ɵfac = function (e) {
        return U(e || G);
      }),
        (G.ɵcmp = o.Gc({
          type: G,
          selectors: [["mat-sidenav"]],
          hostAttrs: ["tabIndex", "-1", 1, "mat-drawer", "mat-sidenav"],
          hostVars: 17,
          hostBindings: function (e, t) {
            2 & e &&
              (o.Ac("align", null),
              o.zd("top", t.fixedInViewport ? t.fixedTopGap : null, "px")(
                "bottom",
                t.fixedInViewport ? t.fixedBottomGap : null,
                "px"
              ),
              o.Ec("mat-drawer-end", "end" === t.position)(
                "mat-drawer-over",
                "over" === t.mode
              )("mat-drawer-push", "push" === t.mode)(
                "mat-drawer-side",
                "side" === t.mode
              )("mat-drawer-opened", t.opened)(
                "mat-sidenav-fixed",
                t.fixedInViewport
              ));
          },
          inputs: {
            fixedInViewport: "fixedInViewport",
            fixedTopGap: "fixedTopGap",
            fixedBottomGap: "fixedBottomGap",
          },
          exportAs: ["matSidenav"],
          features: [o.wc],
          ngContentSelectors: I,
          decls: 2,
          vars: 0,
          consts: [[1, "mat-drawer-inner-container"]],
          template: function (e, t) {
            1 & e && (o.kd(), o.Rc(0, "div", 0), o.jd(1), o.Qc());
          },
          encapsulation: 2,
          data: { animation: [N.transformDrawer] },
          changeDetection: 0,
        })),
        (G.propDecorators = {
          fixedInViewport: [{ type: o.G }],
          fixedTopGap: [{ type: o.G }],
          fixedBottomGap: [{ type: o.G }],
        });
      const U = o.Tc(G);
      class $ extends z {}
      ($.ɵfac = function (e) {
        return q(e || $);
      }),
        ($.ɵcmp = o.Gc({
          type: $,
          selectors: [["mat-sidenav-container"]],
          contentQueries: function (e, t, n) {
            if ((1 & e && (o.Fc(n, H, !0), o.Fc(n, G, !0)), 2 & e)) {
              let e;
              o.sd((e = o.dd())) && (t._content = e.first),
                o.sd((e = o.dd())) && (t._allDrawers = e);
            }
          },
          hostAttrs: [1, "mat-drawer-container", "mat-sidenav-container"],
          hostVars: 2,
          hostBindings: function (e, t) {
            2 & e &&
              o.Ec(
                "mat-drawer-container-explicit-backdrop",
                t._backdropOverride
              );
          },
          exportAs: ["matSidenavContainer"],
          features: [o.yc([{ provide: L, useExisting: $ }]), o.wc],
          ngContentSelectors: ["mat-sidenav", "mat-sidenav-content", "*"],
          decls: 4,
          vars: 2,
          consts: [
            [
              "class",
              "mat-drawer-backdrop",
              3,
              "mat-drawer-shown",
              "click",
              4,
              "ngIf",
            ],
            ["cdkScrollable", "", 4, "ngIf"],
            [1, "mat-drawer-backdrop", 3, "click"],
            ["cdkScrollable", ""],
          ],
          template: function (e, t) {
            1 & e &&
              (o.kd(R),
              o.Cd(0, M, 1, 2, "div", 0),
              o.jd(1),
              o.jd(2, 1),
              o.Cd(3, P, 2, 0, "mat-sidenav-content", 1)),
              2 & e &&
                (o.ld("ngIf", t.hasBackdrop),
                o.zc(3),
                o.ld("ngIf", !t._content));
          },
          directives: [r.k, H, i.a],
          styles: [j],
          encapsulation: 2,
          changeDetection: 0,
        })),
        ($.propDecorators = {
          _allDrawers: [{ type: o.s, args: [G, { descendants: !0 }] }],
          _content: [{ type: o.r, args: [H] }],
        });
      const q = o.Tc($);
      class W {}
      (W.ɵmod = o.Kc({ type: W })),
        (W.ɵinj = o.Jc({
          factory: function (e) {
            return new (e || W)();
          },
          imports: [[r.b, a.d, s.b, i.b], i.b, a.d],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          o.wd(W, {
            declarations: function () {
              return [B, z, V, G, $, H];
            },
            imports: function () {
              return [r.b, a.d, s.b, i.b];
            },
            exports: function () {
              return [i.b, a.d, B, z, V, G, $, H];
            },
          });
    },
    XoHu: function (e, t, n) {
      "use strict";
      function s(e) {
        return null !== e && "object" == typeof e;
      }
      n.d(t, "a", function () {
        return s;
      });
    },
    YUcS: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return ei;
      });
      var s = n("fXoL"),
        i = n("ofXK"),
        r = n("XNiG"),
        o = n("2Vo4"),
        a = n("HDdC"),
        l = n("VRyK"),
        c = n("7Hc7"),
        u = n("LRne"),
        d = n("xgIS"),
        h = n("pLZG"),
        p = n("lJxs"),
        m = n("Kj3r"),
        f = n("eIep"),
        g = n("1G5W"),
        y = n("IzEk"),
        v = n("vkgz");
      const b = {
          provide: s.b,
          useFactory: function (e, t) {
            return () => {
              if (Object(i.z)(t)) {
                const t = Array.from(e.querySelectorAll(`[class*=${x}]`)),
                  n = /\bflex-layout-.+?\b/g;
                t.forEach((e) => {
                  e.classList.contains(x + "ssr") && e.parentNode
                    ? e.parentNode.removeChild(e)
                    : e.className.replace(n, "");
                });
              }
            };
          },
          deps: [i.c, s.U],
          multi: !0,
        },
        x = "flex-layout-";
      class _ {}
      (_.ɵmod = s.Kc({ type: _ })),
        (_.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || _)();
          },
          providers: [b],
        }));
      class w {
        constructor(e = !1, t = "all", n = "", s = "", i = 0) {
          (this.matches = e),
            (this.mediaQuery = t),
            (this.mqAlias = n),
            (this.suffix = s),
            (this.priority = i),
            (this.property = "");
        }
        clone() {
          return new w(
            this.matches,
            this.mediaQuery,
            this.mqAlias,
            this.suffix
          );
        }
      }
      class C {
        constructor() {
          this.stylesheet = new Map();
        }
        addStyleToElement(e, t, n) {
          const s = this.stylesheet.get(e);
          s ? s.set(t, n) : this.stylesheet.set(e, new Map([[t, n]]));
        }
        clearStyles() {
          this.stylesheet.clear();
        }
        getStyleForElement(e, t) {
          const n = this.stylesheet.get(e);
          let s = "";
          if (n) {
            const e = n.get(t);
            ("number" != typeof e && "string" != typeof e) || (s = e + "");
          }
          return s;
        }
      }
      (C.ɵfac = function (e) {
        return new (e || C)();
      }),
        (C.ɵprov = Object(s.Ic)({
          factory: function () {
            return new C();
          },
          token: C,
          providedIn: "root",
        }));
      const S = {
          addFlexToParent: !0,
          addOrientationBps: !1,
          disableDefaultBps: !1,
          disableVendorPrefixes: !1,
          serverLoaded: !1,
          useColumnBasisZero: !0,
          printWithBreakpoints: [],
          mediaTriggerAutoRestore: !0,
          ssrObserveBreakpoints: [],
        },
        E = new s.E("Flex Layout token, config options for the library", {
          providedIn: "root",
          factory: () => S,
        }),
        k = new s.E("FlexLayoutServerLoaded", {
          providedIn: "root",
          factory: () => !1,
        }),
        O = new s.E(
          "Flex Layout token, collect all breakpoints into one provider",
          { providedIn: "root", factory: () => null }
        );
      function I(e, t) {
        return (
          (e = e ? e.clone() : new w()),
          t &&
            ((e.mqAlias = t.alias),
            (e.mediaQuery = t.mediaQuery),
            (e.suffix = t.suffix),
            (e.priority = t.priority)),
          e
        );
      }
      const T = "inline",
        A = ["row", "column", "row-reverse", "column-reverse"];
      function D(e) {
        let [t, n, s] = (function (e) {
          e = e ? e.toLowerCase() : "";
          let [t, n, s] = e.split(" ");
          A.find((e) => e === t) || (t = A[0]);
          n === T && ((n = s !== T ? s : ""), (s = T));
          return [t, M(n), !!s];
        })(e);
        return (function (e, t = null, n = !1) {
          return {
            display: n ? "inline-flex" : "flex",
            "box-sizing": "border-box",
            "flex-direction": e,
            "flex-wrap": t || null,
          };
        })(t, n, s);
      }
      function M(e) {
        if (e)
          switch (e.toLowerCase()) {
            case "reverse":
            case "wrap-reverse":
            case "reverse-wrap":
              e = "wrap-reverse";
              break;
            case "no":
            case "none":
            case "nowrap":
              e = "nowrap";
              break;
            default:
              e = "wrap";
          }
        return e;
      }
      class P {
        constructor(e, t, n, s) {
          (this.elementRef = e),
            (this.styleBuilder = t),
            (this.styler = n),
            (this.marshal = s),
            (this.DIRECTIVE_KEY = ""),
            (this.inputs = []),
            (this.mru = {}),
            (this.destroySubject = new r.a()),
            (this.styleCache = new Map());
        }
        get parentElement() {
          return this.elementRef.nativeElement.parentElement;
        }
        get nativeElement() {
          return this.elementRef.nativeElement;
        }
        get activatedValue() {
          return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);
        }
        set activatedValue(e) {
          this.marshal.setValue(
            this.nativeElement,
            this.DIRECTIVE_KEY,
            e,
            this.marshal.activatedAlias
          );
        }
        ngOnChanges(e) {
          Object.keys(e).forEach((t) => {
            if (-1 !== this.inputs.indexOf(t)) {
              const n = t.split(".").slice(1).join("."),
                s = e[t].currentValue;
              this.setValue(s, n);
            }
          });
        }
        ngOnDestroy() {
          this.destroySubject.next(),
            this.destroySubject.complete(),
            this.marshal.releaseElement(this.nativeElement);
        }
        init(e = []) {
          this.marshal.init(
            this.elementRef.nativeElement,
            this.DIRECTIVE_KEY,
            this.updateWithValue.bind(this),
            this.clearStyles.bind(this),
            e
          );
        }
        addStyles(e, t) {
          const n = this.styleBuilder,
            s = n.shouldCache;
          let i = this.styleCache.get(e);
          (i && s) ||
            ((i = n.buildStyles(e, t)), s && this.styleCache.set(e, i)),
            (this.mru = Object.assign({}, i)),
            this.applyStyleToElement(i),
            n.sideEffect(e, i, t);
        }
        clearStyles() {
          Object.keys(this.mru).forEach((e) => {
            this.mru[e] = "";
          }),
            this.applyStyleToElement(this.mru),
            (this.mru = {});
        }
        triggerUpdate() {
          this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);
        }
        getFlexFlowDirection(e, t = !1) {
          if (e) {
            const [n, s] = this.styler.getFlowDirection(e);
            if (!s && t) {
              const t = D(n),
                s = [e];
              this.styler.applyStyleToElements(t, s);
            }
            return n.trim();
          }
          return "row";
        }
        hasWrap(e) {
          return this.styler.hasWrap(e);
        }
        applyStyleToElement(e, t, n = this.nativeElement) {
          this.styler.applyStyleToElement(n, e, t);
        }
        setValue(e, t) {
          this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, e, t);
        }
        updateWithValue(e) {
          this.currentValue !== e &&
            (this.addStyles(e), (this.currentValue = e));
        }
      }
      (P.ɵfac = function (e) {
        s.bd();
      }),
        (P.ɵdir = s.Hc({ type: P, features: [s.xc] }));
      const R = [
          {
            alias: "xs",
            mediaQuery: "screen and (min-width: 0px) and (max-width: 599.98px)",
            priority: 1e3,
          },
          {
            alias: "sm",
            mediaQuery:
              "screen and (min-width: 600px) and (max-width: 959.98px)",
            priority: 900,
          },
          {
            alias: "md",
            mediaQuery:
              "screen and (min-width: 960px) and (max-width: 1279.98px)",
            priority: 800,
          },
          {
            alias: "lg",
            mediaQuery:
              "screen and (min-width: 1280px) and (max-width: 1919.98px)",
            priority: 700,
          },
          {
            alias: "xl",
            mediaQuery:
              "screen and (min-width: 1920px) and (max-width: 4999.98px)",
            priority: 600,
          },
          {
            alias: "lt-sm",
            overlapping: !0,
            mediaQuery: "screen and (max-width: 599.98px)",
            priority: 950,
          },
          {
            alias: "lt-md",
            overlapping: !0,
            mediaQuery: "screen and (max-width: 959.98px)",
            priority: 850,
          },
          {
            alias: "lt-lg",
            overlapping: !0,
            mediaQuery: "screen and (max-width: 1279.98px)",
            priority: 750,
          },
          {
            alias: "lt-xl",
            overlapping: !0,
            priority: 650,
            mediaQuery: "screen and (max-width: 1919.98px)",
          },
          {
            alias: "gt-xs",
            overlapping: !0,
            mediaQuery: "screen and (min-width: 600px)",
            priority: -950,
          },
          {
            alias: "gt-sm",
            overlapping: !0,
            mediaQuery: "screen and (min-width: 960px)",
            priority: -850,
          },
          {
            alias: "gt-md",
            overlapping: !0,
            mediaQuery: "screen and (min-width: 1280px)",
            priority: -750,
          },
          {
            alias: "gt-lg",
            overlapping: !0,
            mediaQuery: "screen and (min-width: 1920px)",
            priority: -650,
          },
        ],
        j = "(orientation: portrait) and (max-width: 599.98px)",
        N = "(orientation: landscape) and (max-width: 959.98px)",
        F =
          "(orientation: portrait) and (min-width: 600px) and (max-width: 839.98px)",
        L =
          "(orientation: landscape) and (min-width: 960px) and (max-width: 1279.98px)",
        V = "(orientation: portrait) and (min-width: 840px)",
        B = "(orientation: landscape) and (min-width: 1280px)",
        z = {
          HANDSET: `${j}, ${N}`,
          TABLET: `${F} , ${L}`,
          WEB: `${V}, ${B} `,
          HANDSET_PORTRAIT: "" + j,
          TABLET_PORTRAIT: F + " ",
          WEB_PORTRAIT: "" + V,
          HANDSET_LANDSCAPE: "" + N,
          TABLET_LANDSCAPE: "" + L,
          WEB_LANDSCAPE: "" + B,
        },
        H = [
          { alias: "handset", priority: 2e3, mediaQuery: z.HANDSET },
          {
            alias: "handset.landscape",
            priority: 2e3,
            mediaQuery: z.HANDSET_LANDSCAPE,
          },
          {
            alias: "handset.portrait",
            priority: 2e3,
            mediaQuery: z.HANDSET_PORTRAIT,
          },
          { alias: "tablet", priority: 2100, mediaQuery: z.TABLET },
          {
            alias: "tablet.landscape",
            priority: 2100,
            mediaQuery: z.TABLET_LANDSCAPE,
          },
          {
            alias: "tablet.portrait",
            priority: 2100,
            mediaQuery: z.TABLET_PORTRAIT,
          },
          { alias: "web", priority: 2200, mediaQuery: z.WEB, overlapping: !0 },
          {
            alias: "web.landscape",
            priority: 2200,
            mediaQuery: z.WEB_LANDSCAPE,
            overlapping: !0,
          },
          {
            alias: "web.portrait",
            priority: 2200,
            mediaQuery: z.WEB_PORTRAIT,
            overlapping: !0,
          },
        ];
      const G = /(\.|-|_)/g;
      function U(e) {
        let t = e.length > 0 ? e.charAt(0) : "",
          n = e.length > 1 ? e.slice(1) : "";
        return t.toUpperCase() + n;
      }
      function $(e) {
        return (
          e.forEach((e) => {
            e.suffix ||
              ((e.suffix = e.alias.replace(G, "|").split("|").map(U).join("")),
              (e.overlapping = !!e.overlapping));
          }),
          e
        );
      }
      function q(e, t = []) {
        const n = {};
        return (
          e.forEach((e) => {
            n[e.alias] = e;
          }),
          t.forEach((e) => {
            n[e.alias]
              ? (function (e, ...t) {
                  if (null == e)
                    throw TypeError(
                      "Cannot convert undefined or null to object"
                    );
                  for (let n of t)
                    if (null != n)
                      for (let t in n) n.hasOwnProperty(t) && (e[t] = n[t]);
                })(n[e.alias], e)
              : (n[e.alias] = e);
          }),
          $(Object.keys(n).map((e) => n[e]))
        );
      }
      const W = new s.E("Token (@angular/flex-layout) Breakpoints", {
        providedIn: "root",
        factory: () => {
          const e = Object(s.tb)(O),
            t = Object(s.tb)(E),
            n = [].concat.apply(
              [],
              (e || []).map((e) => (Array.isArray(e) ? e : [e]))
            );
          return q(
            (t.disableDefaultBps ? [] : R).concat(t.addOrientationBps ? H : []),
            n
          );
        },
      });
      function Y(e, t) {
        const n = (e && e.priority) || 0;
        return ((t && t.priority) || 0) - n;
      }
      function Q(e, t) {
        return (e.priority || 0) - (t.priority || 0);
      }
      class K {
        constructor(e) {
          (this.findByMap = new Map()), (this.items = [...e].sort(Q));
        }
        findByAlias(e) {
          return e ? this.findWithPredicate(e, (t) => t.alias == e) : null;
        }
        findByQuery(e) {
          return this.findWithPredicate(e, (t) => t.mediaQuery == e);
        }
        get overlappings() {
          return this.items.filter((e) => 1 == e.overlapping);
        }
        get aliases() {
          return this.items.map((e) => e.alias);
        }
        get suffixes() {
          return this.items.map((e) => (e.suffix ? e.suffix : ""));
        }
        findWithPredicate(e, t) {
          let n = this.findByMap.get(e);
          return (
            n || ((n = this.items.find(t) || null), this.findByMap.set(e, n)),
            n || null
          );
        }
      }
      (K.ɵfac = function (e) {
        return new (e || K)(s.Yc(W));
      }),
        (K.ɵprov = Object(s.Ic)({
          factory: function () {
            return new K(Object(s.Yc)(W));
          },
          token: K,
          providedIn: "root",
        })),
        (K.ctorParameters = () => [
          { type: Array, decorators: [{ type: s.C, args: [W] }] },
        ]);
      class J {
        constructor(e, t, n) {
          (this._zone = e),
            (this._platformId = t),
            (this._document = n),
            (this.source = new o.a(new w(!0))),
            (this.registry = new Map()),
            (this.pendingRemoveListenerFns = []),
            (this._observable$ = this.source.asObservable());
        }
        get activations() {
          const e = [];
          return (
            this.registry.forEach((t, n) => {
              t.matches && e.push(n);
            }),
            e
          );
        }
        isActive(e) {
          const t = this.registry.get(e);
          return t ? t.matches : this.registerQuery(e).some((e) => e.matches);
        }
        observe(e, t = !1) {
          if (e && e.length) {
            const n = this._observable$.pipe(
                Object(h.a)((n) => !t || e.indexOf(n.mediaQuery) > -1)
              ),
              s = new a.a((t) => {
                const n = this.registerQuery(e);
                if (n.length) {
                  const e = n.pop();
                  n.forEach((e) => {
                    t.next(e);
                  }),
                    this.source.next(e);
                }
                t.complete();
              });
            return Object(l.a)(s, n);
          }
          return this._observable$;
        }
        registerQuery(e) {
          const t = Array.isArray(e) ? e : [e],
            n = [];
          return (
            (function (e, t) {
              const n = e.filter((e) => !X[e]);
              if (n.length > 0) {
                const e = n.join(", ");
                try {
                  const s = t.createElement("style");
                  if ((s.setAttribute("type", "text/css"), !s.styleSheet)) {
                    const n = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${e} {.fx-query-test{ }}\n`;
                    s.appendChild(t.createTextNode(n));
                  }
                  t.head.appendChild(s), n.forEach((e) => (X[e] = s));
                } catch (s) {
                  console.error(s);
                }
              }
            })(t, this._document),
            t.forEach((e) => {
              const t = (t) => {
                this._zone.run(() => this.source.next(new w(t.matches, e)));
              };
              let s = this.registry.get(e);
              s ||
                ((s = this.buildMQL(e)),
                s.addListener(t),
                this.pendingRemoveListenerFns.push(() => s.removeListener(t)),
                this.registry.set(e, s)),
                s.matches && n.push(new w(!0, e));
            }),
            n
          );
        }
        ngOnDestroy() {
          let e;
          for (; (e = this.pendingRemoveListenerFns.pop()); ) e();
        }
        buildMQL(e) {
          return (function (e, t) {
            return t && window.matchMedia("all").addListener
              ? window.matchMedia(e)
              : {
                  matches: "all" === e || "" === e,
                  media: e,
                  addListener: () => {},
                  removeListener: () => {},
                  onchange: null,
                  addEventListener() {},
                  removeEventListener() {},
                  dispatchEvent: () => !1,
                };
          })(e, Object(i.z)(this._platformId));
        }
      }
      (J.ɵfac = function (e) {
        return new (e || J)(s.Yc(s.Q), s.Yc(s.U), s.Yc(i.c));
      }),
        (J.ɵprov = Object(s.Ic)({
          factory: function () {
            return new J(
              Object(s.Yc)(s.Q),
              Object(s.Yc)(s.U),
              Object(s.Yc)(i.c)
            );
          },
          token: J,
          providedIn: "root",
        })),
        (J.ctorParameters = () => [
          { type: s.Q },
          { type: Object, decorators: [{ type: s.C, args: [s.U] }] },
          { type: void 0, decorators: [{ type: s.C, args: [i.c] }] },
        ]);
      const X = {};
      class Z extends J {
        constructor(e, t, n, s) {
          super(e, t, n),
            (this._breakpoints = s),
            (this.autoRegisterQueries = !0),
            (this.useOverlaps = !1);
        }
        clearAll() {
          this.registry.forEach((e) => {
            e.destroy();
          }),
            this.registry.clear(),
            (this.useOverlaps = !1);
        }
        activate(e, t = !1) {
          return (
            (t = t || this.useOverlaps),
            (e = this._validateQuery(e)),
            (!t && this.isActive(e)) ||
              (this._deactivateAll(),
              this._registerMediaQuery(e),
              this._activateWithOverlaps(e, t)),
            this.hasActivated
          );
        }
        _validateQuery(e) {
          const t = this._breakpoints.findByAlias(e);
          return (t && t.mediaQuery) || e;
        }
        _activateWithOverlaps(e, t) {
          if (t) {
            const t = this._breakpoints.findByQuery(e),
              n = t ? t.alias : "unknown";
            switch (n) {
              case "lg":
                this._activateByAlias(["lt-xl"]);
                break;
              case "md":
                this._activateByAlias(["lt-xl", "lt-lg"]);
                break;
              case "sm":
                this._activateByAlias(["lt-xl", "lt-lg", "lt-md"]);
                break;
              case "xs":
                this._activateByAlias(["lt-xl", "lt-lg", "lt-md", "lt-sm"]);
            }
            switch (n) {
              case "xl":
                this._activateByAlias(["gt-lg", "gt-md", "gt-sm", "gt-xs"]);
                break;
              case "lg":
                this._activateByAlias(["gt-md", "gt-sm", "gt-xs"]);
                break;
              case "md":
                this._activateByAlias(["gt-sm", "gt-xs"]);
                break;
              case "sm":
                this._activateByAlias(["gt-xs"]);
            }
          }
          return this._activateByQuery(e);
        }
        _activateByAlias(e) {
          e.forEach((e) => {
            const t = this._breakpoints.findByAlias(e);
            this._activateByQuery(t ? t.mediaQuery : e);
          });
        }
        _activateByQuery(e) {
          !this.registry.has(e) &&
            this.autoRegisterQueries &&
            this._registerMediaQuery(e);
          const t = this.registry.get(e);
          return (
            t && !this.isActive(e) && this.registry.set(e, t.activate()),
            this.hasActivated
          );
        }
        _deactivateAll() {
          return (
            this.registry.forEach((e) => {
              e.deactivate();
            }),
            this
          );
        }
        _registerMediaQuery(e) {
          !this.registry.has(e) &&
            this.autoRegisterQueries &&
            this.registerQuery(e);
        }
        buildMQL(e) {
          return new ee(e);
        }
        get hasActivated() {
          return this.activations.length > 0;
        }
      }
      (Z.ɵfac = function (e) {
        return new (e || Z)(s.Yc(s.Q), s.Yc(s.U), s.Yc(i.c), s.Yc(K));
      }),
        (Z.ɵprov = s.Ic({ token: Z, factory: Z.ɵfac })),
        (Z.ctorParameters = () => [
          { type: s.Q },
          { type: Object, decorators: [{ type: s.C, args: [s.U] }] },
          { type: void 0, decorators: [{ type: s.C, args: [i.c] }] },
          { type: K },
        ]);
      class ee {
        constructor(e) {
          (this._mediaQuery = e),
            (this._isActive = !1),
            (this._listeners = []),
            (this.onchange = null);
        }
        get matches() {
          return this._isActive;
        }
        get media() {
          return this._mediaQuery;
        }
        destroy() {
          this.deactivate(), (this._listeners = []);
        }
        activate() {
          return (
            this._isActive ||
              ((this._isActive = !0),
              this._listeners.forEach((e) => {
                e.call(this, { matches: this.matches, media: this.media });
              })),
            this
          );
        }
        deactivate() {
          return (
            this._isActive &&
              ((this._isActive = !1),
              this._listeners.forEach((e) => {
                e.call(this, { matches: this.matches, media: this.media });
              })),
            this
          );
        }
        addListener(e) {
          if (
            (-1 === this._listeners.indexOf(e) && this._listeners.push(e),
            this._isActive)
          ) {
            e.call(this, { matches: this.matches, media: this.media });
          }
        }
        removeListener(e) {}
        addEventListener(e, t, n) {}
        removeEventListener(e, t, n) {}
        dispatchEvent(e) {
          return !1;
        }
      }
      const te = "print",
        ne = { alias: te, mediaQuery: te, priority: 1e3 };
      class se {
        constructor(e, t, n) {
          (this.breakpoints = e),
            (this.layoutConfig = t),
            (this._document = n),
            (this.registeredBeforeAfterPrintHooks = !1),
            (this.isPrintingBeforeAfterEvent = !1),
            (this.beforePrintEventListeners = []),
            (this.afterPrintEventListeners = []),
            (this.isPrinting = !1),
            (this.queue = new ie()),
            (this.deactivations = []);
        }
        withPrintQuery(e) {
          return [...e, te];
        }
        isPrintEvent(e) {
          return e.mediaQuery.startsWith(te);
        }
        get printAlias() {
          return this.layoutConfig.printWithBreakpoints || [];
        }
        get printBreakPoints() {
          return this.printAlias
            .map((e) => this.breakpoints.findByAlias(e))
            .filter((e) => null !== e);
        }
        getEventBreakpoints({ mediaQuery: e }) {
          const t = this.breakpoints.findByQuery(e);
          return (
            t ? [...this.printBreakPoints, t] : this.printBreakPoints
          ).sort(Y);
        }
        updateEvent(e) {
          let t = this.breakpoints.findByQuery(e.mediaQuery);
          return (
            this.isPrintEvent(e) &&
              ((t = this.getEventBreakpoints(e)[0]),
              (e.mediaQuery = t ? t.mediaQuery : "")),
            I(e, t)
          );
        }
        registerBeforeAfterPrintHooks(e) {
          if (
            !this._document.defaultView ||
            this.registeredBeforeAfterPrintHooks
          )
            return;
          this.registeredBeforeAfterPrintHooks = !0;
          const t = () => {
              this.isPrinting ||
                ((this.isPrintingBeforeAfterEvent = !0),
                this.startPrinting(e, this.getEventBreakpoints(new w(!0, te))),
                e.updateStyles());
            },
            n = () => {
              (this.isPrintingBeforeAfterEvent = !1),
                this.isPrinting && (this.stopPrinting(e), e.updateStyles());
            };
          this._document.defaultView.addEventListener("beforeprint", t),
            this._document.defaultView.addEventListener("afterprint", n),
            this.beforePrintEventListeners.push(t),
            this.afterPrintEventListeners.push(n);
        }
        interceptEvents(e) {
          return (
            this.registerBeforeAfterPrintHooks(e),
            (t) => {
              this.isPrintEvent(t)
                ? t.matches && !this.isPrinting
                  ? (this.startPrinting(e, this.getEventBreakpoints(t)),
                    e.updateStyles())
                  : t.matches ||
                    !this.isPrinting ||
                    this.isPrintingBeforeAfterEvent ||
                    (this.stopPrinting(e), e.updateStyles())
                : this.collectActivations(t);
            }
          );
        }
        blockPropagation() {
          return (e) => !(this.isPrinting || this.isPrintEvent(e));
        }
        startPrinting(e, t) {
          (this.isPrinting = !0),
            (e.activatedBreakpoints = this.queue.addPrintBreakpoints(t));
        }
        stopPrinting(e) {
          (e.activatedBreakpoints = this.deactivations),
            (this.deactivations = []),
            this.queue.clear(),
            (this.isPrinting = !1);
        }
        collectActivations(e) {
          if (!this.isPrinting || this.isPrintingBeforeAfterEvent)
            if (e.matches)
              this.isPrintingBeforeAfterEvent || (this.deactivations = []);
            else {
              const t = this.breakpoints.findByQuery(e.mediaQuery);
              t && (this.deactivations.push(t), this.deactivations.sort(Y));
            }
        }
        ngOnDestroy() {
          this.beforePrintEventListeners.forEach((e) =>
            this._document.defaultView.removeEventListener("beforeprint", e)
          ),
            this.afterPrintEventListeners.forEach((e) =>
              this._document.defaultView.removeEventListener("afterprint", e)
            );
        }
      }
      (se.ɵfac = function (e) {
        return new (e || se)(s.Yc(K), s.Yc(E), s.Yc(i.c));
      }),
        (se.ɵprov = Object(s.Ic)({
          factory: function () {
            return new se(Object(s.Yc)(K), Object(s.Yc)(E), Object(s.Yc)(i.c));
          },
          token: se,
          providedIn: "root",
        })),
        (se.ctorParameters = () => [
          { type: K },
          { type: void 0, decorators: [{ type: s.C, args: [E] }] },
          { type: void 0, decorators: [{ type: s.C, args: [i.c] }] },
        ]);
      class ie {
        constructor() {
          this.printBreakpoints = [];
        }
        addPrintBreakpoints(e) {
          return (
            e.push(ne),
            e.sort(Y),
            e.forEach((e) => this.addBreakpoint(e)),
            this.printBreakpoints
          );
        }
        addBreakpoint(e) {
          if (e) {
            void 0 ===
              this.printBreakpoints.find(
                (t) => t.mediaQuery === e.mediaQuery
              ) &&
              (this.printBreakpoints = (function (e) {
                return !!e && e.mediaQuery.startsWith(te);
              })(e)
                ? [e, ...this.printBreakpoints]
                : [...this.printBreakpoints, e]);
          }
        }
        clear() {
          this.printBreakpoints = [];
        }
      }
      class re {
        constructor(e, t, n) {
          (this.breakpoints = e),
            (this.matchMedia = t),
            (this.hook = n),
            (this.filterOverlaps = !1),
            (this.destroyed$ = new r.a()),
            (this._media$ = this.watchActivations()),
            (this.media$ = this._media$.pipe(
              Object(h.a)((e) => e.length > 0),
              Object(p.a)((e) => e[0])
            ));
        }
        ngOnDestroy() {
          this.destroyed$.next(), this.destroyed$.complete();
        }
        asObservable() {
          return this._media$;
        }
        isActive(e) {
          return (function (e) {
            return Array.isArray(e) ? e : [e];
          })(e)
            .map((e) => e.split(","))
            .reduce((e, t) => e.concat(t))
            .map((e) => e.trim())
            .some((e) => {
              const t = (function (e, t) {
                const n = t.findByAlias(e) || t.findByQuery(e);
                return n ? n.mediaQuery : null;
              })(e, this.breakpoints);
              return null !== t && this.matchMedia.isActive(t);
            });
        }
        watchActivations() {
          const e = this.breakpoints.items.map((e) => e.mediaQuery);
          return this.buildObservable(e);
        }
        buildObservable(e) {
          return this.matchMedia.observe(this.hook.withPrintQuery(e)).pipe(
            Object(h.a)((e) => e.matches),
            Object(m.a)(0, c.a),
            Object(f.a)((e) => Object(u.a)(this.findAllActivations())),
            Object(p.a)((e) =>
              this.filterOverlaps
                ? e.filter((e) => {
                    const t = this.breakpoints.findByQuery(e.mediaQuery);
                    return !t || !t.overlapping;
                  })
                : e
            ),
            Object(h.a)(
              (e) => e.filter((e) => e.mediaQuery.length > 0).length > 0
            ),
            Object(g.a)(this.destroyed$)
          );
        }
        findAllActivations() {
          return this.matchMedia.activations
            .map((e) => new w(!0, e))
            .map((e) =>
              this.hook.isPrintEvent(e) ? this.hook.updateEvent(e) : e
            )
            .map((e) => I(e, this.breakpoints.findByQuery(e.mediaQuery)))
            .sort(Y);
        }
      }
      (re.ɵfac = function (e) {
        return new (e || re)(s.Yc(K), s.Yc(J), s.Yc(se));
      }),
        (re.ɵprov = Object(s.Ic)({
          factory: function () {
            return new re(Object(s.Yc)(K), Object(s.Yc)(J), Object(s.Yc)(se));
          },
          token: re,
          providedIn: "root",
        })),
        (re.ctorParameters = () => [{ type: K }, { type: J }, { type: se }]);
      class oe {
        constructor(e, t, n, s, i) {
          (this.breakpoints = e),
            (this.matchMedia = t),
            (this.layoutConfig = n),
            (this._platformId = s),
            (this._document = i),
            (this.hasCachedRegistryMatches = !1),
            (this.originalActivations = []),
            (this.originalRegistry = new Map());
        }
        activate(e) {
          (e = e.map((e) => e.trim())),
            this.saveActivations(),
            this.deactivateAll(),
            this.setActivations(e),
            this.prepareAutoRestore();
        }
        restore() {
          if (this.hasCachedRegistryMatches) {
            const e = (e) => e.mediaQuery,
              t = this.originalActivations.map(e);
            try {
              this.deactivateAll(),
                this.restoreRegistryMatches(),
                this.setActivations(t);
            } finally {
              (this.originalActivations = []),
                this.resizeSubscription &&
                  this.resizeSubscription.unsubscribe();
            }
          }
        }
        prepareAutoRestore() {
          if (
            Object(i.z)(this._platformId) &&
            this._document &&
            this.layoutConfig.mediaTriggerAutoRestore
          ) {
            const e = Object(d.a)(window, "resize").pipe(Object(y.a)(1));
            this.resizeSubscription = e.subscribe(this.restore.bind(this));
          }
        }
        deactivateAll() {
          const e = this.currentActivations;
          this.forceRegistryMatches(e, !1), this.simulateMediaChanges(e, !1);
        }
        saveActivations() {
          if (!this.hasCachedRegistryMatches) {
            const e = (e) => new w(!0, e),
              t = (e) => I(e, this.breakpoints.findByQuery(e.mediaQuery));
            (this.originalActivations = this.currentActivations
              .map(e)
              .map(t)
              .sort(Y)),
              this.cacheRegistryMatches();
          }
        }
        setActivations(e) {
          this.originalRegistry && this.forceRegistryMatches(e, !0),
            this.simulateMediaChanges(e);
        }
        simulateMediaChanges(e, t = !0) {
          e.map((e) => {
            const t = this.breakpoints,
              n = t.findByAlias(e) || t.findByQuery(e);
            return n ? n.mediaQuery : e;
          }).forEach((e) => this.emitChangeEvent(t, e));
        }
        forceRegistryMatches(e, t) {
          const n = new Map();
          e.forEach((e) => {
            n.set(e, { matches: t });
          }),
            (this.matchMedia.registry = n);
        }
        cacheRegistryMatches() {
          const e = this.originalRegistry;
          e.clear(),
            this.matchMedia.registry.forEach((t, n) => {
              e.set(n, t);
            }),
            (this.hasCachedRegistryMatches = !0);
        }
        restoreRegistryMatches() {
          const e = this.matchMedia.registry;
          e.clear(),
            this.originalRegistry.forEach((t, n) => {
              e.set(n, t);
            }),
            this.originalRegistry.clear(),
            (this.hasCachedRegistryMatches = !1);
        }
        emitChangeEvent(e, t) {
          this.matchMedia.source.next(new w(e, t));
        }
        get currentActivations() {
          return this.matchMedia.activations;
        }
      }
      function ae(e) {
        for (let t in e) {
          let n = e[t] || "";
          switch (t) {
            case "display":
              e.display =
                "flex" === n
                  ? ["-webkit-flex", "flex"]
                  : "inline-flex" === n
                  ? ["-webkit-inline-flex", "inline-flex"]
                  : n;
              break;
            case "align-items":
            case "align-self":
            case "align-content":
            case "flex":
            case "flex-basis":
            case "flex-flow":
            case "flex-grow":
            case "flex-shrink":
            case "flex-wrap":
            case "justify-content":
              e["-webkit-" + t] = n;
              break;
            case "flex-direction":
              (n = n || "row"),
                (e["-webkit-flex-direction"] = n),
                (e["flex-direction"] = n);
              break;
            case "order":
              e.order = e["-webkit-" + t] = isNaN(+n) ? "0" : n;
          }
        }
        return e;
      }
      (oe.ɵfac = function (e) {
        return new (e || oe)(s.Yc(K), s.Yc(J), s.Yc(E), s.Yc(s.U), s.Yc(i.c));
      }),
        (oe.ɵprov = Object(s.Ic)({
          factory: function () {
            return new oe(
              Object(s.Yc)(K),
              Object(s.Yc)(J),
              Object(s.Yc)(E),
              Object(s.Yc)(s.U),
              Object(s.Yc)(i.c)
            );
          },
          token: oe,
          providedIn: "root",
        })),
        (oe.ctorParameters = () => [
          { type: K },
          { type: J },
          { type: void 0, decorators: [{ type: s.C, args: [E] }] },
          { type: Object, decorators: [{ type: s.C, args: [s.U] }] },
          { type: void 0, decorators: [{ type: s.C, args: [i.c] }] },
        ]);
      class le {
        constructor(e, t, n, s) {
          (this._serverStylesheet = e),
            (this._serverModuleLoaded = t),
            (this._platformId = n),
            (this.layoutConfig = s);
        }
        applyStyleToElement(e, t, n = null) {
          let s = {};
          "string" == typeof t && ((s[t] = n), (t = s)),
            (s = this.layoutConfig.disableVendorPrefixes ? t : ae(t)),
            this._applyMultiValueStyleToElement(s, e);
        }
        applyStyleToElements(e, t = []) {
          const n = this.layoutConfig.disableVendorPrefixes ? e : ae(e);
          t.forEach((e) => {
            this._applyMultiValueStyleToElement(n, e);
          });
        }
        getFlowDirection(e) {
          const t = "flex-direction";
          let n = this.lookupStyle(e, t);
          return [
            n || "row",
            this.lookupInlineStyle(e, t) ||
            (Object(i.A)(this._platformId) && this._serverModuleLoaded)
              ? n
              : "",
          ];
        }
        hasWrap(e) {
          return "wrap" === this.lookupStyle(e, "flex-wrap");
        }
        lookupAttributeValue(e, t) {
          return e.getAttribute(t) || "";
        }
        lookupInlineStyle(e, t) {
          return Object(i.z)(this._platformId)
            ? e.style.getPropertyValue(t)
            : this._getServerStyle(e, t);
        }
        lookupStyle(e, t, n = !1) {
          let s = "";
          if (e) {
            (s = this.lookupInlineStyle(e, t)) ||
              (Object(i.z)(this._platformId)
                ? n || (s = getComputedStyle(e).getPropertyValue(t))
                : this._serverModuleLoaded &&
                  (s = this._serverStylesheet.getStyleForElement(e, t)));
          }
          return s ? s.trim() : "";
        }
        _applyMultiValueStyleToElement(e, t) {
          Object.keys(e)
            .sort()
            .forEach((n) => {
              const s = e[n],
                r = Array.isArray(s) ? s : [s];
              r.sort();
              for (let e of r)
                (e = e ? e + "" : ""),
                  Object(i.z)(this._platformId) || !this._serverModuleLoaded
                    ? Object(i.z)(this._platformId)
                      ? t.style.setProperty(n, e)
                      : this._setServerStyle(t, n, e)
                    : this._serverStylesheet.addStyleToElement(t, n, e);
            });
        }
        _setServerStyle(e, t, n) {
          t = t.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
          const s = this._readStyleAttribute(e);
          (s[t] = n || ""), this._writeStyleAttribute(e, s);
        }
        _getServerStyle(e, t) {
          return this._readStyleAttribute(e)[t] || "";
        }
        _readStyleAttribute(e) {
          const t = {},
            n = e.getAttribute("style");
          if (n) {
            const e = n.split(/;+/g);
            for (let n = 0; n < e.length; n++) {
              const s = e[n].trim();
              if (s.length > 0) {
                const e = s.indexOf(":");
                if (-1 === e) throw new Error("Invalid CSS style: " + s);
                t[s.substr(0, e).trim()] = s.substr(e + 1).trim();
              }
            }
          }
          return t;
        }
        _writeStyleAttribute(e, t) {
          let n = "";
          for (const s in t) {
            t[s] && (n += s + ":" + t[s] + ";");
          }
          e.setAttribute("style", n);
        }
      }
      (le.ɵfac = function (e) {
        return new (e || le)(s.Yc(C), s.Yc(k), s.Yc(s.U), s.Yc(E));
      }),
        (le.ɵprov = Object(s.Ic)({
          factory: function () {
            return new le(
              Object(s.Yc)(C),
              Object(s.Yc)(k),
              Object(s.Yc)(s.U),
              Object(s.Yc)(E)
            );
          },
          token: le,
          providedIn: "root",
        })),
        (le.ctorParameters = () => [
          { type: C },
          { type: Boolean, decorators: [{ type: s.C, args: [k] }] },
          { type: Object, decorators: [{ type: s.C, args: [s.U] }] },
          { type: void 0, decorators: [{ type: s.C, args: [E] }] },
        ]);
      class ce {
        constructor() {
          this.shouldCache = !0;
        }
        sideEffect(e, t, n) {}
      }
      function ue(e, t = "1", n = "1") {
        let s = [t, n, e],
          i = e.indexOf("calc");
        if (i > 0) {
          s[2] = de(e.substring(i).trim());
          let t = e.substr(0, i).trim().split(" ");
          2 == t.length && ((s[0] = t[0]), (s[1] = t[1]));
        } else if (0 == i) s[2] = de(e.trim());
        else {
          let i = e.split(" ");
          s = 3 === i.length ? i : [t, n, e];
        }
        return s;
      }
      function de(e) {
        return e.replace(/[\s]/g, "").replace(/[\/\*\+\-]/g, " $& ");
      }
      class he {
        constructor(e, t, n) {
          (this.matchMedia = e),
            (this.breakpoints = t),
            (this.hook = n),
            (this.activatedBreakpoints = []),
            (this.elementMap = new Map()),
            (this.elementKeyMap = new WeakMap()),
            (this.watcherMap = new WeakMap()),
            (this.updateMap = new WeakMap()),
            (this.clearMap = new WeakMap()),
            (this.subject = new r.a()),
            this.observeActivations();
        }
        get activatedAlias() {
          return this.activatedBreakpoints[0]
            ? this.activatedBreakpoints[0].alias
            : "";
        }
        onMediaChange(e) {
          const t = this.findByQuery(e.mediaQuery);
          t &&
            ((e = I(e, t)).matches &&
            -1 === this.activatedBreakpoints.indexOf(t)
              ? (this.activatedBreakpoints.push(t),
                this.activatedBreakpoints.sort(Y),
                this.updateStyles())
              : e.matches ||
                -1 === this.activatedBreakpoints.indexOf(t) ||
                (this.activatedBreakpoints.splice(
                  this.activatedBreakpoints.indexOf(t),
                  1
                ),
                this.activatedBreakpoints.sort(Y),
                this.updateStyles()));
        }
        init(e, t, n, s, i = []) {
          pe(this.updateMap, e, t, n),
            pe(this.clearMap, e, t, s),
            this.buildElementKeyMap(e, t),
            this.watchExtraTriggers(e, t, i);
        }
        getValue(e, t, n) {
          const s = this.elementMap.get(e);
          if (s) {
            const e = void 0 !== n ? s.get(n) : this.getActivatedValues(s, t);
            if (e) return e.get(t);
          }
        }
        hasValue(e, t) {
          const n = this.elementMap.get(e);
          if (n) {
            const e = this.getActivatedValues(n, t);
            if (e) return void 0 !== e.get(t) || !1;
          }
          return !1;
        }
        setValue(e, t, n, s) {
          let i = this.elementMap.get(e);
          if (i) {
            const r = (i.get(s) || new Map()).set(t, n);
            i.set(s, r), this.elementMap.set(e, i);
          } else
            (i = new Map().set(s, new Map().set(t, n))),
              this.elementMap.set(e, i);
          const r = this.getValue(e, t);
          void 0 !== r && this.updateElement(e, t, r);
        }
        trackValue(e, t) {
          return this.subject
            .asObservable()
            .pipe(Object(h.a)((n) => n.element === e && n.key === t));
        }
        updateStyles() {
          this.elementMap.forEach((e, t) => {
            const n = new Set(this.elementKeyMap.get(t));
            let s = this.getActivatedValues(e);
            s &&
              s.forEach((e, s) => {
                this.updateElement(t, s, e), n.delete(s);
              }),
              n.forEach((n) => {
                if (((s = this.getActivatedValues(e, n)), s)) {
                  const e = s.get(n);
                  this.updateElement(t, n, e);
                } else this.clearElement(t, n);
              });
          });
        }
        clearElement(e, t) {
          const n = this.clearMap.get(e);
          if (n) {
            const s = n.get(t);
            s && (s(), this.subject.next({ element: e, key: t, value: "" }));
          }
        }
        updateElement(e, t, n) {
          const s = this.updateMap.get(e);
          if (s) {
            const i = s.get(t);
            i && (i(n), this.subject.next({ element: e, key: t, value: n }));
          }
        }
        releaseElement(e) {
          const t = this.watcherMap.get(e);
          t && (t.forEach((e) => e.unsubscribe()), this.watcherMap.delete(e));
          const n = this.elementMap.get(e);
          n && (n.forEach((e, t) => n.delete(t)), this.elementMap.delete(e));
        }
        triggerUpdate(e, t) {
          const n = this.elementMap.get(e);
          if (n) {
            const s = this.getActivatedValues(n, t);
            s &&
              (t
                ? this.updateElement(e, t, s.get(t))
                : s.forEach((t, n) => this.updateElement(e, n, t)));
          }
        }
        buildElementKeyMap(e, t) {
          let n = this.elementKeyMap.get(e);
          n || ((n = new Set()), this.elementKeyMap.set(e, n)), n.add(t);
        }
        watchExtraTriggers(e, t, n) {
          if (n && n.length) {
            let s = this.watcherMap.get(e);
            s || ((s = new Map()), this.watcherMap.set(e, s));
            if (!s.get(t)) {
              const i = Object(l.a)(...n).subscribe(() => {
                const n = this.getValue(e, t);
                this.updateElement(e, t, n);
              });
              s.set(t, i);
            }
          }
        }
        findByQuery(e) {
          return this.breakpoints.findByQuery(e);
        }
        getActivatedValues(e, t) {
          for (let s = 0; s < this.activatedBreakpoints.length; s++) {
            const n = this.activatedBreakpoints[s],
              i = e.get(n.alias);
            if (i && (void 0 === t || (i.has(t) && null != i.get(t)))) return i;
          }
          const n = e.get("");
          return void 0 === t || (n && n.has(t)) ? n : void 0;
        }
        observeActivations() {
          const e = this.breakpoints.items.map((e) => e.mediaQuery);
          this.matchMedia
            .observe(this.hook.withPrintQuery(e))
            .pipe(
              Object(v.a)(this.hook.interceptEvents(this)),
              Object(h.a)(this.hook.blockPropagation())
            )
            .subscribe(this.onMediaChange.bind(this));
        }
      }
      function pe(e, t, n, s) {
        if (void 0 !== s) {
          let i = e.get(t);
          i || ((i = new Map()), e.set(t, i)), i.set(n, s);
        }
      }
      (he.ɵfac = function (e) {
        return new (e || he)(s.Yc(J), s.Yc(K), s.Yc(se));
      }),
        (he.ɵprov = Object(s.Ic)({
          factory: function () {
            return new he(Object(s.Yc)(J), Object(s.Yc)(K), Object(s.Yc)(se));
          },
          token: he,
          providedIn: "root",
        })),
        (he.ctorParameters = () => [{ type: J }, { type: K }, { type: se }]);
      var me = n("8LU1"),
        fe = n("jhN1");
      class ge extends ce {
        buildStyles(e) {
          return { content: e ? `url(${e})` : "" };
        }
      }
      (ge.ɵfac = function (e) {
        return ye(e || ge);
      }),
        (ge.ɵprov = Object(s.Ic)({
          factory: function () {
            return new ge();
          },
          token: ge,
          providedIn: "root",
        }));
      const ye = s.Tc(ge);
      class ve extends P {
        constructor(e, t, n, s, r, o) {
          super(e, t, n, s),
            (this.platformId = r),
            (this.serverModuleLoaded = o),
            (this.DIRECTIVE_KEY = "img-src"),
            (this.defaultSrc = ""),
            (this.styleCache = be),
            this.init(),
            this.setValue(this.nativeElement.getAttribute("src") || "", ""),
            Object(i.A)(this.platformId) &&
              this.serverModuleLoaded &&
              this.nativeElement.setAttribute("src", "");
        }
        set src(e) {
          (this.defaultSrc = e), this.setValue(this.defaultSrc, "");
        }
        updateWithValue(e) {
          const t = e || this.defaultSrc;
          Object(i.A)(this.platformId) && this.serverModuleLoaded
            ? this.addStyles(t)
            : this.nativeElement.setAttribute("src", t);
        }
      }
      (ve.ɵfac = function (e) {
        return new (e || ve)(
          s.Mc(s.v),
          s.Mc(ge),
          s.Mc(le),
          s.Mc(he),
          s.Mc(s.U),
          s.Mc(k)
        );
      }),
        (ve.ɵdir = s.Hc({
          type: ve,
          inputs: { src: "src" },
          features: [s.wc],
        })),
        (ve.ctorParameters = () => [
          { type: s.v },
          { type: ge },
          { type: le },
          { type: he },
          { type: Object, decorators: [{ type: s.C, args: [s.U] }] },
          { type: Boolean, decorators: [{ type: s.C, args: [k] }] },
        ]),
        (ve.propDecorators = { src: [{ type: s.G, args: ["src"] }] });
      const be = new Map(),
        xe = [
          "src.xs",
          "src.sm",
          "src.md",
          "src.lg",
          "src.xl",
          "src.lt-sm",
          "src.lt-md",
          "src.lt-lg",
          "src.lt-xl",
          "src.gt-xs",
          "src.gt-sm",
          "src.gt-md",
          "src.gt-lg",
        ];
      class _e extends ve {
        constructor() {
          super(...arguments), (this.inputs = xe);
        }
      }
      (_e.ɵfac = function (e) {
        return we(e || _e);
      }),
        (_e.ɵdir = s.Hc({
          type: _e,
          selectors: [
            ["img", "src.xs", ""],
            ["img", "src.sm", ""],
            ["img", "src.md", ""],
            ["img", "src.lg", ""],
            ["img", "src.xl", ""],
            ["img", "src.lt-sm", ""],
            ["img", "src.lt-md", ""],
            ["img", "src.lt-lg", ""],
            ["img", "src.lt-xl", ""],
            ["img", "src.gt-xs", ""],
            ["img", "src.gt-sm", ""],
            ["img", "src.gt-md", ""],
            ["img", "src.gt-lg", ""],
          ],
          inputs: {
            "src.xs": "src.xs",
            "src.sm": "src.sm",
            "src.md": "src.md",
            "src.lg": "src.lg",
            "src.xl": "src.xl",
            "src.lt-sm": "src.lt-sm",
            "src.lt-md": "src.lt-md",
            "src.lt-lg": "src.lt-lg",
            "src.lt-xl": "src.lt-xl",
            "src.gt-xs": "src.gt-xs",
            "src.gt-sm": "src.gt-sm",
            "src.gt-md": "src.gt-md",
            "src.gt-lg": "src.gt-lg",
          },
          features: [s.wc],
        }));
      const we = s.Tc(_e);
      class Ce extends P {
        constructor(e, t, n, s, r, o, a) {
          super(e, null, t, n),
            (this.ngClassInstance = a),
            (this.DIRECTIVE_KEY = "ngClass"),
            this.ngClassInstance ||
              (this.ngClassInstance = new i.i(s, r, e, o)),
            this.init(),
            this.setValue("", "");
        }
        set klass(e) {
          (this.ngClassInstance.klass = e), this.setValue(e, "");
        }
        updateWithValue(e) {
          (this.ngClassInstance.ngClass = e), this.ngClassInstance.ngDoCheck();
        }
        ngDoCheck() {
          this.ngClassInstance.ngDoCheck();
        }
      }
      (Ce.ɵfac = function (e) {
        return new (e || Ce)(
          s.Mc(s.v),
          s.Mc(le),
          s.Mc(he),
          s.Mc(s.H),
          s.Mc(s.I),
          s.Mc(s.Y),
          s.Mc(i.i, 10)
        );
      }),
        (Ce.ɵdir = s.Hc({
          type: Ce,
          inputs: { klass: ["class", "klass"] },
          features: [s.wc],
        })),
        (Ce.ctorParameters = () => [
          { type: s.v },
          { type: le },
          { type: he },
          { type: s.H },
          { type: s.I },
          { type: s.Y },
          { type: i.i, decorators: [{ type: s.R }, { type: s.db }] },
        ]),
        (Ce.propDecorators = { klass: [{ type: s.G, args: ["class"] }] });
      const Se = [
        "ngClass",
        "ngClass.xs",
        "ngClass.sm",
        "ngClass.md",
        "ngClass.lg",
        "ngClass.xl",
        "ngClass.lt-sm",
        "ngClass.lt-md",
        "ngClass.lt-lg",
        "ngClass.lt-xl",
        "ngClass.gt-xs",
        "ngClass.gt-sm",
        "ngClass.gt-md",
        "ngClass.gt-lg",
      ];
      class Ee extends Ce {
        constructor() {
          super(...arguments), (this.inputs = Se);
        }
      }
      (Ee.ɵfac = function (e) {
        return ke(e || Ee);
      }),
        (Ee.ɵdir = s.Hc({
          type: Ee,
          selectors: [
            ["", "ngClass", ""],
            ["", "ngClass.xs", ""],
            ["", "ngClass.sm", ""],
            ["", "ngClass.md", ""],
            ["", "ngClass.lg", ""],
            ["", "ngClass.xl", ""],
            ["", "ngClass.lt-sm", ""],
            ["", "ngClass.lt-md", ""],
            ["", "ngClass.lt-lg", ""],
            ["", "ngClass.lt-xl", ""],
            ["", "ngClass.gt-xs", ""],
            ["", "ngClass.gt-sm", ""],
            ["", "ngClass.gt-md", ""],
            ["", "ngClass.gt-lg", ""],
          ],
          inputs: {
            ngClass: "ngClass",
            "ngClass.xs": "ngClass.xs",
            "ngClass.sm": "ngClass.sm",
            "ngClass.md": "ngClass.md",
            "ngClass.lg": "ngClass.lg",
            "ngClass.xl": "ngClass.xl",
            "ngClass.lt-sm": "ngClass.lt-sm",
            "ngClass.lt-md": "ngClass.lt-md",
            "ngClass.lt-lg": "ngClass.lt-lg",
            "ngClass.lt-xl": "ngClass.lt-xl",
            "ngClass.gt-xs": "ngClass.gt-xs",
            "ngClass.gt-sm": "ngClass.gt-sm",
            "ngClass.gt-md": "ngClass.gt-md",
            "ngClass.gt-lg": "ngClass.gt-lg",
          },
          features: [s.wc],
        }));
      const ke = s.Tc(Ee);
      class Oe extends ce {
        buildStyles(e, t) {
          return {
            display:
              "true" === e
                ? t.display || (t.isServer ? "initial" : "")
                : "none",
          };
        }
      }
      (Oe.ɵfac = function (e) {
        return Ie(e || Oe);
      }),
        (Oe.ɵprov = Object(s.Ic)({
          factory: function () {
            return new Oe();
          },
          token: Oe,
          providedIn: "root",
        }));
      const Ie = s.Tc(Oe);
      class Te extends P {
        constructor(e, t, n, s, i, r, o) {
          super(e, t, n, s),
            (this.layoutConfig = i),
            (this.platformId = r),
            (this.serverModuleLoaded = o),
            (this.DIRECTIVE_KEY = "show-hide"),
            (this.display = ""),
            (this.hasLayout = !1),
            (this.hasFlexChild = !1);
        }
        ngAfterViewInit() {
          this.trackExtraTriggers();
          const e = Array.from(this.nativeElement.children);
          for (let n = 0; n < e.length; n++)
            if (this.marshal.hasValue(e[n], "flex")) {
              this.hasFlexChild = !0;
              break;
            }
          Ae.has(this.nativeElement)
            ? (this.display = Ae.get(this.nativeElement))
            : ((this.display = this.getDisplayStyle()),
              Ae.set(this.nativeElement, this.display)),
            this.init();
          const t = this.marshal.getValue(
            this.nativeElement,
            this.DIRECTIVE_KEY,
            ""
          );
          void 0 === t || "" === t
            ? this.setValue(!0, "")
            : this.triggerUpdate();
        }
        ngOnChanges(e) {
          Object.keys(e).forEach((t) => {
            if (-1 !== this.inputs.indexOf(t)) {
              const n = t.split("."),
                s = n.slice(1).join("."),
                i = e[t].currentValue;
              let r = "" === i || (0 !== i && Object(me.b)(i));
              "fxHide" === n[0] && (r = !r), this.setValue(r, s);
            }
          });
        }
        trackExtraTriggers() {
          (this.hasLayout = this.marshal.hasValue(
            this.nativeElement,
            "layout"
          )),
            ["layout", "layout-align"].forEach((e) => {
              this.marshal
                .trackValue(this.nativeElement, e)
                .pipe(Object(g.a)(this.destroySubject))
                .subscribe(this.triggerUpdate.bind(this));
            });
        }
        getDisplayStyle() {
          return this.hasLayout ||
            (this.hasFlexChild && this.layoutConfig.addFlexToParent)
            ? "flex"
            : this.styler.lookupStyle(this.nativeElement, "display", !0);
        }
        updateWithValue(e = !0) {
          if ("" === e) return;
          const t = Object(i.A)(this.platformId);
          this.addStyles(e ? "true" : "false", {
            display: this.display,
            isServer: t,
          }),
            t &&
              this.serverModuleLoaded &&
              this.nativeElement.style.setProperty("display", ""),
            this.marshal.triggerUpdate(this.parentElement, "layout-gap");
        }
      }
      (Te.ɵfac = function (e) {
        return new (e || Te)(
          s.Mc(s.v),
          s.Mc(Oe),
          s.Mc(le),
          s.Mc(he),
          s.Mc(E),
          s.Mc(s.U),
          s.Mc(k)
        );
      }),
        (Te.ɵdir = s.Hc({ type: Te, features: [s.wc, s.xc] })),
        (Te.ctorParameters = () => [
          { type: s.v },
          { type: Oe },
          { type: le },
          { type: he },
          { type: void 0, decorators: [{ type: s.C, args: [E] }] },
          { type: Object, decorators: [{ type: s.C, args: [s.U] }] },
          { type: Boolean, decorators: [{ type: s.C, args: [k] }] },
        ]);
      const Ae = new WeakMap(),
        De = [
          "fxShow",
          "fxShow.print",
          "fxShow.xs",
          "fxShow.sm",
          "fxShow.md",
          "fxShow.lg",
          "fxShow.xl",
          "fxShow.lt-sm",
          "fxShow.lt-md",
          "fxShow.lt-lg",
          "fxShow.lt-xl",
          "fxShow.gt-xs",
          "fxShow.gt-sm",
          "fxShow.gt-md",
          "fxShow.gt-lg",
          "fxHide",
          "fxHide.print",
          "fxHide.xs",
          "fxHide.sm",
          "fxHide.md",
          "fxHide.lg",
          "fxHide.xl",
          "fxHide.lt-sm",
          "fxHide.lt-md",
          "fxHide.lt-lg",
          "fxHide.lt-xl",
          "fxHide.gt-xs",
          "fxHide.gt-sm",
          "fxHide.gt-md",
          "fxHide.gt-lg",
        ];
      class Me extends Te {
        constructor() {
          super(...arguments), (this.inputs = De);
        }
      }
      (Me.ɵfac = function (e) {
        return Pe(e || Me);
      }),
        (Me.ɵdir = s.Hc({
          type: Me,
          selectors: [
            ["", "fxShow", ""],
            ["", "fxShow.print", ""],
            ["", "fxShow.xs", ""],
            ["", "fxShow.sm", ""],
            ["", "fxShow.md", ""],
            ["", "fxShow.lg", ""],
            ["", "fxShow.xl", ""],
            ["", "fxShow.lt-sm", ""],
            ["", "fxShow.lt-md", ""],
            ["", "fxShow.lt-lg", ""],
            ["", "fxShow.lt-xl", ""],
            ["", "fxShow.gt-xs", ""],
            ["", "fxShow.gt-sm", ""],
            ["", "fxShow.gt-md", ""],
            ["", "fxShow.gt-lg", ""],
            ["", "fxHide", ""],
            ["", "fxHide.print", ""],
            ["", "fxHide.xs", ""],
            ["", "fxHide.sm", ""],
            ["", "fxHide.md", ""],
            ["", "fxHide.lg", ""],
            ["", "fxHide.xl", ""],
            ["", "fxHide.lt-sm", ""],
            ["", "fxHide.lt-md", ""],
            ["", "fxHide.lt-lg", ""],
            ["", "fxHide.lt-xl", ""],
            ["", "fxHide.gt-xs", ""],
            ["", "fxHide.gt-sm", ""],
            ["", "fxHide.gt-md", ""],
            ["", "fxHide.gt-lg", ""],
          ],
          inputs: {
            fxShow: "fxShow",
            "fxShow.print": "fxShow.print",
            "fxShow.xs": "fxShow.xs",
            "fxShow.sm": "fxShow.sm",
            "fxShow.md": "fxShow.md",
            "fxShow.lg": "fxShow.lg",
            "fxShow.xl": "fxShow.xl",
            "fxShow.lt-sm": "fxShow.lt-sm",
            "fxShow.lt-md": "fxShow.lt-md",
            "fxShow.lt-lg": "fxShow.lt-lg",
            "fxShow.lt-xl": "fxShow.lt-xl",
            "fxShow.gt-xs": "fxShow.gt-xs",
            "fxShow.gt-sm": "fxShow.gt-sm",
            "fxShow.gt-md": "fxShow.gt-md",
            "fxShow.gt-lg": "fxShow.gt-lg",
            fxHide: "fxHide",
            "fxHide.print": "fxHide.print",
            "fxHide.xs": "fxHide.xs",
            "fxHide.sm": "fxHide.sm",
            "fxHide.md": "fxHide.md",
            "fxHide.lg": "fxHide.lg",
            "fxHide.xl": "fxHide.xl",
            "fxHide.lt-sm": "fxHide.lt-sm",
            "fxHide.lt-md": "fxHide.lt-md",
            "fxHide.lt-lg": "fxHide.lt-lg",
            "fxHide.lt-xl": "fxHide.lt-xl",
            "fxHide.gt-xs": "fxHide.gt-xs",
            "fxHide.gt-sm": "fxHide.gt-sm",
            "fxHide.gt-md": "fxHide.gt-md",
            "fxHide.gt-lg": "fxHide.gt-lg",
          },
          features: [s.wc],
        }));
      const Pe = s.Tc(Me);
      class Re {
        constructor(e, t, n = !0) {
          (this.key = e),
            (this.value = t),
            (this.key = n ? e.replace(/['"]/g, "").trim() : e.trim()),
            (this.value = n ? t.replace(/['"]/g, "").trim() : t.trim()),
            (this.value = this.value.replace(/;/, ""));
        }
      }
      function je(e) {
        let t = typeof e;
        return "object" === t
          ? e.constructor === Array
            ? "array"
            : e.constructor === Set
            ? "set"
            : "object"
          : t;
      }
      function Ne(e, t) {
        let n = [];
        return (
          "set" === je(e)
            ? e.forEach((e) => n.push(e))
            : Object.keys(e).forEach((t) => {
                n.push(`${t}:${e[t]}`);
              }),
          (function (e, t) {
            return e
              .map(Fe)
              .filter((e) => !!e)
              .map((e) => (t && (e.value = t(e.value)), e))
              .reduce(Le, {});
          })(n, t)
        );
      }
      function Fe(e) {
        const [t, ...n] = e.split(":");
        return new Re(t, n.join(":"));
      }
      function Le(e, t) {
        return t.key && (e[t.key] = t.value), e;
      }
      class Ve extends P {
        constructor(e, t, n, s, r, o, a, l, c) {
          super(e, null, t, n),
            (this.sanitizer = s),
            (this.ngStyleInstance = a),
            (this.DIRECTIVE_KEY = "ngStyle"),
            this.ngStyleInstance || (this.ngStyleInstance = new i.l(e, r, o)),
            this.init();
          const u = this.nativeElement.getAttribute("style") || "";
          (this.fallbackStyles = this.buildStyleMap(u)),
            (this.isServer = l && Object(i.A)(c));
        }
        updateWithValue(e) {
          const t = this.buildStyleMap(e);
          (this.ngStyleInstance.ngStyle = Object.assign(
            Object.assign({}, this.fallbackStyles),
            t
          )),
            this.isServer && this.applyStyleToElement(t),
            this.ngStyleInstance.ngDoCheck();
        }
        clearStyles() {
          (this.ngStyleInstance.ngStyle = this.fallbackStyles),
            this.ngStyleInstance.ngDoCheck();
        }
        buildStyleMap(e) {
          const t = (e) => this.sanitizer.sanitize(s.cb.STYLE, e) || "";
          if (e)
            switch (je(e)) {
              case "string":
                return Ge(
                  (function (e, t = ";") {
                    return String(e)
                      .trim()
                      .split(t)
                      .map((e) => e.trim())
                      .filter((e) => "" !== e);
                  })(e),
                  t
                );
              case "array":
                return Ge(e, t);
              case "set":
              default:
                return Ne(e, t);
            }
          return {};
        }
        ngDoCheck() {
          this.ngStyleInstance.ngDoCheck();
        }
      }
      (Ve.ɵfac = function (e) {
        return new (e || Ve)(
          s.Mc(s.v),
          s.Mc(le),
          s.Mc(he),
          s.Mc(fe.b),
          s.Mc(s.I),
          s.Mc(s.Y),
          s.Mc(i.l, 10),
          s.Mc(k),
          s.Mc(s.U)
        );
      }),
        (Ve.ɵdir = s.Hc({ type: Ve, features: [s.wc] })),
        (Ve.ctorParameters = () => [
          { type: s.v },
          { type: le },
          { type: he },
          { type: fe.b },
          { type: s.I },
          { type: s.Y },
          { type: i.l, decorators: [{ type: s.R }, { type: s.db }] },
          { type: Boolean, decorators: [{ type: s.C, args: [k] }] },
          { type: Object, decorators: [{ type: s.C, args: [s.U] }] },
        ]);
      const Be = [
        "ngStyle",
        "ngStyle.xs",
        "ngStyle.sm",
        "ngStyle.md",
        "ngStyle.lg",
        "ngStyle.xl",
        "ngStyle.lt-sm",
        "ngStyle.lt-md",
        "ngStyle.lt-lg",
        "ngStyle.lt-xl",
        "ngStyle.gt-xs",
        "ngStyle.gt-sm",
        "ngStyle.gt-md",
        "ngStyle.gt-lg",
      ];
      class ze extends Ve {
        constructor() {
          super(...arguments), (this.inputs = Be);
        }
      }
      (ze.ɵfac = function (e) {
        return He(e || ze);
      }),
        (ze.ɵdir = s.Hc({
          type: ze,
          selectors: [
            ["", "ngStyle", ""],
            ["", "ngStyle.xs", ""],
            ["", "ngStyle.sm", ""],
            ["", "ngStyle.md", ""],
            ["", "ngStyle.lg", ""],
            ["", "ngStyle.xl", ""],
            ["", "ngStyle.lt-sm", ""],
            ["", "ngStyle.lt-md", ""],
            ["", "ngStyle.lt-lg", ""],
            ["", "ngStyle.lt-xl", ""],
            ["", "ngStyle.gt-xs", ""],
            ["", "ngStyle.gt-sm", ""],
            ["", "ngStyle.gt-md", ""],
            ["", "ngStyle.gt-lg", ""],
          ],
          inputs: {
            ngStyle: "ngStyle",
            "ngStyle.xs": "ngStyle.xs",
            "ngStyle.sm": "ngStyle.sm",
            "ngStyle.md": "ngStyle.md",
            "ngStyle.lg": "ngStyle.lg",
            "ngStyle.xl": "ngStyle.xl",
            "ngStyle.lt-sm": "ngStyle.lt-sm",
            "ngStyle.lt-md": "ngStyle.lt-md",
            "ngStyle.lt-lg": "ngStyle.lt-lg",
            "ngStyle.lt-xl": "ngStyle.lt-xl",
            "ngStyle.gt-xs": "ngStyle.gt-xs",
            "ngStyle.gt-sm": "ngStyle.gt-sm",
            "ngStyle.gt-md": "ngStyle.gt-md",
            "ngStyle.gt-lg": "ngStyle.gt-lg",
          },
          features: [s.wc],
        }));
      const He = s.Tc(ze);
      function Ge(e, t) {
        return e
          .map(Fe)
          .filter((e) => !!e)
          .map((e) => (t && (e.value = t(e.value)), e))
          .reduce(Le, {});
      }
      class Ue {}
      (Ue.ɵmod = s.Kc({ type: Ue })),
        (Ue.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || Ue)();
          },
          imports: [[_]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(Ue, {
            declarations: function () {
              return [Me, Ee, ze, _e];
            },
            imports: function () {
              return [_];
            },
            exports: function () {
              return [Me, Ee, ze, _e];
            },
          });
      var $e = n("cH1L");
      const qe = "inline",
        We = ["row", "column", "row-reverse", "column-reverse"];
      function Ye(e) {
        e = e ? e.toLowerCase() : "";
        let [t, n, s] = e.split(" ");
        return (
          We.find((e) => e === t) || (t = We[0]),
          n === qe && ((n = s !== qe ? s : ""), (s = qe)),
          [t, Ke(n), !!s]
        );
      }
      function Qe(e) {
        let [t] = Ye(e);
        return t.indexOf("row") > -1;
      }
      function Ke(e) {
        if (e)
          switch (e.toLowerCase()) {
            case "reverse":
            case "wrap-reverse":
            case "reverse-wrap":
              e = "wrap-reverse";
              break;
            case "no":
            case "none":
            case "nowrap":
              e = "nowrap";
              break;
            default:
              e = "wrap";
          }
        return e;
      }
      class Je extends ce {
        buildStyles(e) {
          return (function (e) {
            let [t, n, s] = Ye(e);
            return (function (e, t = null, n = !1) {
              return {
                display: n ? "inline-flex" : "flex",
                "box-sizing": "border-box",
                "flex-direction": e,
                "flex-wrap": t || null,
              };
            })(t, n, s);
          })(e);
        }
      }
      (Je.ɵfac = function (e) {
        return Xe(e || Je);
      }),
        (Je.ɵprov = Object(s.Ic)({
          factory: function () {
            return new Je();
          },
          token: Je,
          providedIn: "root",
        }));
      const Xe = s.Tc(Je),
        Ze = [
          "fxLayout",
          "fxLayout.xs",
          "fxLayout.sm",
          "fxLayout.md",
          "fxLayout.lg",
          "fxLayout.xl",
          "fxLayout.lt-sm",
          "fxLayout.lt-md",
          "fxLayout.lt-lg",
          "fxLayout.lt-xl",
          "fxLayout.gt-xs",
          "fxLayout.gt-sm",
          "fxLayout.gt-md",
          "fxLayout.gt-lg",
        ];
      class et extends P {
        constructor(e, t, n, s) {
          super(e, n, t, s),
            (this.DIRECTIVE_KEY = "layout"),
            (this.styleCache = st),
            this.init();
        }
      }
      (et.ɵfac = function (e) {
        return new (e || et)(s.Mc(s.v), s.Mc(le), s.Mc(Je), s.Mc(he));
      }),
        (et.ɵdir = s.Hc({ type: et, features: [s.wc] })),
        (et.ctorParameters = () => [
          { type: s.v },
          { type: le },
          { type: Je },
          { type: he },
        ]);
      class tt extends et {
        constructor() {
          super(...arguments), (this.inputs = Ze);
        }
      }
      (tt.ɵfac = function (e) {
        return nt(e || tt);
      }),
        (tt.ɵdir = s.Hc({
          type: tt,
          selectors: [
            ["", "fxLayout", ""],
            ["", "fxLayout.xs", ""],
            ["", "fxLayout.sm", ""],
            ["", "fxLayout.md", ""],
            ["", "fxLayout.lg", ""],
            ["", "fxLayout.xl", ""],
            ["", "fxLayout.lt-sm", ""],
            ["", "fxLayout.lt-md", ""],
            ["", "fxLayout.lt-lg", ""],
            ["", "fxLayout.lt-xl", ""],
            ["", "fxLayout.gt-xs", ""],
            ["", "fxLayout.gt-sm", ""],
            ["", "fxLayout.gt-md", ""],
            ["", "fxLayout.gt-lg", ""],
          ],
          inputs: {
            fxLayout: "fxLayout",
            "fxLayout.xs": "fxLayout.xs",
            "fxLayout.sm": "fxLayout.sm",
            "fxLayout.md": "fxLayout.md",
            "fxLayout.lg": "fxLayout.lg",
            "fxLayout.xl": "fxLayout.xl",
            "fxLayout.lt-sm": "fxLayout.lt-sm",
            "fxLayout.lt-md": "fxLayout.lt-md",
            "fxLayout.lt-lg": "fxLayout.lt-lg",
            "fxLayout.lt-xl": "fxLayout.lt-xl",
            "fxLayout.gt-xs": "fxLayout.gt-xs",
            "fxLayout.gt-sm": "fxLayout.gt-sm",
            "fxLayout.gt-md": "fxLayout.gt-md",
            "fxLayout.gt-lg": "fxLayout.gt-lg",
          },
          features: [s.wc],
        }));
      const nt = s.Tc(tt),
        st = new Map(),
        it = {
          "margin-left": null,
          "margin-right": null,
          "margin-top": null,
          "margin-bottom": null,
        };
      class rt extends ce {
        constructor(e) {
          super(), (this._styler = e);
        }
        buildStyles(e, t) {
          return e.endsWith(mt)
            ? (function (e, t) {
                const [n, s] = e.split(" "),
                  i = (e) => "-" + e;
                let r = "0px",
                  o = i(s || n),
                  a = "0px";
                "rtl" === t ? (a = i(n)) : (r = i(n));
                return { margin: `0px ${r} ${o} ${a}` };
              })((e = e.slice(0, e.indexOf(mt))), t.directionality)
            : {};
        }
        sideEffect(e, t, n) {
          const s = n.items;
          if (e.endsWith(mt)) {
            const t = (function (e, t) {
              const [n, s] = e.split(" ");
              let i = "0px",
                r = "0px";
              "rtl" === t ? (r = n) : (i = n);
              return { padding: `0px ${i} ${s || n} ${r}` };
            })((e = e.slice(0, e.indexOf(mt))), n.directionality);
            this._styler.applyStyleToElements(t, n.items);
          } else {
            const t = s.pop(),
              i = (function (e, t) {
                const n = ft(t.directionality, t.layout),
                  s = Object.assign({}, it);
                return (s[n] = e), s;
              })(e, n);
            this._styler.applyStyleToElements(i, s),
              this._styler.applyStyleToElements(it, [t]);
          }
        }
      }
      (rt.ɵfac = function (e) {
        return new (e || rt)(s.Yc(le));
      }),
        (rt.ɵprov = Object(s.Ic)({
          factory: function () {
            return new rt(Object(s.Yc)(le));
          },
          token: rt,
          providedIn: "root",
        })),
        (rt.ctorParameters = () => [{ type: le }]);
      const ot = [
        "fxLayoutGap",
        "fxLayoutGap.xs",
        "fxLayoutGap.sm",
        "fxLayoutGap.md",
        "fxLayoutGap.lg",
        "fxLayoutGap.xl",
        "fxLayoutGap.lt-sm",
        "fxLayoutGap.lt-md",
        "fxLayoutGap.lt-lg",
        "fxLayoutGap.lt-xl",
        "fxLayoutGap.gt-xs",
        "fxLayoutGap.gt-sm",
        "fxLayoutGap.gt-md",
        "fxLayoutGap.gt-lg",
      ];
      class at extends P {
        constructor(e, t, n, s, i, o) {
          super(e, i, s, o),
            (this.zone = t),
            (this.directionality = n),
            (this.styleUtils = s),
            (this.layout = "row"),
            (this.DIRECTIVE_KEY = "layout-gap"),
            (this.observerSubject = new r.a());
          const a = [
            this.directionality.change,
            this.observerSubject.asObservable(),
          ];
          this.init(a),
            this.marshal
              .trackValue(this.nativeElement, "layout")
              .pipe(Object(g.a)(this.destroySubject))
              .subscribe(this.onLayoutChange.bind(this));
        }
        get childrenNodes() {
          const e = this.nativeElement.children,
            t = [];
          for (let n = e.length; n--; ) t[n] = e[n];
          return t;
        }
        ngAfterContentInit() {
          this.buildChildObservable(), this.triggerUpdate();
        }
        ngOnDestroy() {
          super.ngOnDestroy(), this.observer && this.observer.disconnect();
        }
        onLayoutChange(e) {
          const t = e.value.split(" ");
          (this.layout = t[0]),
            We.find((e) => e === this.layout) || (this.layout = "row"),
            this.triggerUpdate();
        }
        updateWithValue(e) {
          const t = this.childrenNodes
            .filter((e) => 1 === e.nodeType && this.willDisplay(e))
            .sort((e, t) => {
              const n = +this.styler.lookupStyle(e, "order"),
                s = +this.styler.lookupStyle(t, "order");
              return isNaN(n) || isNaN(s) || n === s ? 0 : n > s ? 1 : -1;
            });
          if (t.length > 0) {
            const n = this.directionality.value,
              s = this.layout;
            "row" === s && "rtl" === n
              ? (this.styleCache = ut)
              : "row" === s && "rtl" !== n
              ? (this.styleCache = ht)
              : "column" === s && "rtl" === n
              ? (this.styleCache = dt)
              : "column" === s && "rtl" !== n && (this.styleCache = pt),
              this.addStyles(e, { directionality: n, items: t, layout: s });
          }
        }
        clearStyles() {
          const e = Object.keys(this.mru).length > 0,
            t = e ? "padding" : ft(this.directionality.value, this.layout);
          e && super.clearStyles(),
            this.styleUtils.applyStyleToElements(
              { [t]: "" },
              this.childrenNodes
            );
        }
        willDisplay(e) {
          const t = this.marshal.getValue(e, "show-hide");
          return (
            !0 === t ||
            (void 0 === t &&
              "none" !== this.styleUtils.lookupStyle(e, "display"))
          );
        }
        buildChildObservable() {
          this.zone.runOutsideAngular(() => {
            "undefined" != typeof MutationObserver &&
              ((this.observer = new MutationObserver((e) => {
                e.some(
                  (e) =>
                    (e.addedNodes && e.addedNodes.length > 0) ||
                    (e.removedNodes && e.removedNodes.length > 0)
                ) && this.observerSubject.next();
              })),
              this.observer.observe(this.nativeElement, { childList: !0 }));
          });
        }
      }
      (at.ɵfac = function (e) {
        return new (e || at)(
          s.Mc(s.v),
          s.Mc(s.Q),
          s.Mc($e.b),
          s.Mc(le),
          s.Mc(rt),
          s.Mc(he)
        );
      }),
        (at.ɵdir = s.Hc({ type: at, features: [s.wc] })),
        (at.ctorParameters = () => [
          { type: s.v },
          { type: s.Q },
          { type: $e.b },
          { type: le },
          { type: rt },
          { type: he },
        ]);
      class lt extends at {
        constructor() {
          super(...arguments), (this.inputs = ot);
        }
      }
      (lt.ɵfac = function (e) {
        return ct(e || lt);
      }),
        (lt.ɵdir = s.Hc({
          type: lt,
          selectors: [
            ["", "fxLayoutGap", ""],
            ["", "fxLayoutGap.xs", ""],
            ["", "fxLayoutGap.sm", ""],
            ["", "fxLayoutGap.md", ""],
            ["", "fxLayoutGap.lg", ""],
            ["", "fxLayoutGap.xl", ""],
            ["", "fxLayoutGap.lt-sm", ""],
            ["", "fxLayoutGap.lt-md", ""],
            ["", "fxLayoutGap.lt-lg", ""],
            ["", "fxLayoutGap.lt-xl", ""],
            ["", "fxLayoutGap.gt-xs", ""],
            ["", "fxLayoutGap.gt-sm", ""],
            ["", "fxLayoutGap.gt-md", ""],
            ["", "fxLayoutGap.gt-lg", ""],
          ],
          inputs: {
            fxLayoutGap: "fxLayoutGap",
            "fxLayoutGap.xs": "fxLayoutGap.xs",
            "fxLayoutGap.sm": "fxLayoutGap.sm",
            "fxLayoutGap.md": "fxLayoutGap.md",
            "fxLayoutGap.lg": "fxLayoutGap.lg",
            "fxLayoutGap.xl": "fxLayoutGap.xl",
            "fxLayoutGap.lt-sm": "fxLayoutGap.lt-sm",
            "fxLayoutGap.lt-md": "fxLayoutGap.lt-md",
            "fxLayoutGap.lt-lg": "fxLayoutGap.lt-lg",
            "fxLayoutGap.lt-xl": "fxLayoutGap.lt-xl",
            "fxLayoutGap.gt-xs": "fxLayoutGap.gt-xs",
            "fxLayoutGap.gt-sm": "fxLayoutGap.gt-sm",
            "fxLayoutGap.gt-md": "fxLayoutGap.gt-md",
            "fxLayoutGap.gt-lg": "fxLayoutGap.gt-lg",
          },
          features: [s.wc],
        }));
      const ct = s.Tc(lt),
        ut = new Map(),
        dt = new Map(),
        ht = new Map(),
        pt = new Map(),
        mt = " grid";
      function ft(e, t) {
        switch (t) {
          case "column":
            return "margin-bottom";
          case "column-reverse":
            return "margin-top";
          case "row":
            return "rtl" === e ? "margin-left" : "margin-right";
          case "row-reverse":
            return "rtl" === e ? "margin-right" : "margin-left";
          default:
            return "rtl" === e ? "margin-left" : "margin-right";
        }
      }
      function gt(e, ...t) {
        if (null == e)
          throw TypeError("Cannot convert undefined or null to object");
        for (let n of t)
          if (null != n) for (let t in n) n.hasOwnProperty(t) && (e[t] = n[t]);
        return e;
      }
      class yt extends ce {
        constructor(e) {
          super(), (this.layoutConfig = e);
        }
        buildStyles(e, t) {
          let [n, s, ...i] = e.split(" "),
            r = i.join(" ");
          const o = t.direction.indexOf("column") > -1 ? "column" : "row",
            a = Qe(o) ? "max-width" : "max-height",
            l = Qe(o) ? "min-width" : "min-height",
            c = String(r).indexOf("calc") > -1,
            u = c || "auto" === r,
            d = String(r).indexOf("%") > -1 && !c,
            h =
              String(r).indexOf("px") > -1 ||
              String(r).indexOf("rem") > -1 ||
              String(r).indexOf("em") > -1 ||
              String(r).indexOf("vw") > -1 ||
              String(r).indexOf("vh") > -1;
          let p = c || h;
          (n = "0" == n ? 0 : n), (s = "0" == s ? 0 : s);
          const m = !n && !s;
          let f = {};
          const g = {
            "max-width": null,
            "max-height": null,
            "min-width": null,
            "min-height": null,
          };
          switch (r || "") {
            case "":
              const e = !1 !== this.layoutConfig.useColumnBasisZero;
              r = "row" === o ? "0%" : e ? "0.000000001px" : "auto";
              break;
            case "initial":
            case "nogrow":
              (n = 0), (r = "auto");
              break;
            case "grow":
              r = "100%";
              break;
            case "noshrink":
              (s = 0), (r = "auto");
              break;
            case "auto":
              break;
            case "none":
              (n = 0), (s = 0), (r = "auto");
              break;
            default:
              p || d || isNaN(r) || (r += "%"),
                "0%" === r && (p = !0),
                "0px" === r && (r = "0%"),
                (f = gt(
                  g,
                  c
                    ? {
                        "flex-grow": n,
                        "flex-shrink": s,
                        "flex-basis": p ? r : "100%",
                      }
                    : { flex: `${n} ${s} ${p ? r : "100%"}` }
                ));
          }
          return (
            f.flex ||
              f["flex-grow"] ||
              (f = gt(
                g,
                c
                  ? { "flex-grow": n, "flex-shrink": s, "flex-basis": r }
                  : { flex: `${n} ${s} ${r}` }
              )),
            "0%" !== r &&
              "0px" !== r &&
              "0.000000001px" !== r &&
              "auto" !== r &&
              ((f[l] = m || (p && n) ? r : null),
              (f[a] = m || (!u && s) ? r : null)),
            f[l] || f[a]
              ? t.hasWrap &&
                (f[c ? "flex-basis" : "flex"] = f[a]
                  ? c
                    ? f[a]
                    : `${n} ${s} ${f[a]}`
                  : c
                  ? f[l]
                  : `${n} ${s} ${f[l]}`)
              : (f = gt(
                  g,
                  c
                    ? { "flex-grow": n, "flex-shrink": s, "flex-basis": r }
                    : { flex: `${n} ${s} ${r}` }
                )),
            gt(f, { "box-sizing": "border-box" })
          );
        }
      }
      (yt.ɵfac = function (e) {
        return new (e || yt)(s.Yc(E));
      }),
        (yt.ɵprov = Object(s.Ic)({
          factory: function () {
            return new yt(Object(s.Yc)(E));
          },
          token: yt,
          providedIn: "root",
        })),
        (yt.ctorParameters = () => [
          { type: void 0, decorators: [{ type: s.C, args: [E] }] },
        ]);
      const vt = [
        "fxFlex",
        "fxFlex.xs",
        "fxFlex.sm",
        "fxFlex.md",
        "fxFlex.lg",
        "fxFlex.xl",
        "fxFlex.lt-sm",
        "fxFlex.lt-md",
        "fxFlex.lt-lg",
        "fxFlex.lt-xl",
        "fxFlex.gt-xs",
        "fxFlex.gt-sm",
        "fxFlex.gt-md",
        "fxFlex.gt-lg",
      ];
      class bt extends P {
        constructor(e, t, n, s, i) {
          super(e, s, t, i),
            (this.layoutConfig = n),
            (this.marshal = i),
            (this.DIRECTIVE_KEY = "flex"),
            (this.direction = void 0),
            (this.wrap = void 0),
            (this.flexGrow = "1"),
            (this.flexShrink = "1"),
            this.init();
        }
        get shrink() {
          return this.flexShrink;
        }
        set shrink(e) {
          (this.flexShrink = e || "1"), this.triggerReflow();
        }
        get grow() {
          return this.flexGrow;
        }
        set grow(e) {
          (this.flexGrow = e || "1"), this.triggerReflow();
        }
        ngOnInit() {
          this.parentElement &&
            (this.marshal
              .trackValue(this.parentElement, "layout")
              .pipe(Object(g.a)(this.destroySubject))
              .subscribe(this.onLayoutChange.bind(this)),
            this.marshal
              .trackValue(this.nativeElement, "layout-align")
              .pipe(Object(g.a)(this.destroySubject))
              .subscribe(this.triggerReflow.bind(this)));
        }
        onLayoutChange(e) {
          const t = e.value.split(" ");
          (this.direction = t[0]),
            (this.wrap = void 0 !== t[1] && "wrap" === t[1]),
            this.triggerUpdate();
        }
        updateWithValue(e) {
          const t = !1 !== this.layoutConfig.addFlexToParent;
          void 0 === this.direction &&
            (this.direction = this.getFlexFlowDirection(this.parentElement, t)),
            void 0 === this.wrap &&
              (this.wrap = this.hasWrap(this.parentElement));
          const n = this.direction,
            s = n.startsWith("row"),
            i = this.wrap;
          s && i
            ? (this.styleCache = St)
            : s && !i
            ? (this.styleCache = wt)
            : !s && i
            ? (this.styleCache = Et)
            : s || i || (this.styleCache = Ct);
          const r = ue(
            String(e).replace(";", ""),
            this.flexGrow,
            this.flexShrink
          );
          this.addStyles(r.join(" "), { direction: n, hasWrap: i });
        }
        triggerReflow() {
          const e = this.activatedValue;
          if (void 0 !== e) {
            const t = ue(e + "", this.flexGrow, this.flexShrink);
            this.marshal.updateElement(
              this.nativeElement,
              this.DIRECTIVE_KEY,
              t.join(" ")
            );
          }
        }
      }
      (bt.ɵfac = function (e) {
        return new (e || bt)(s.Mc(s.v), s.Mc(le), s.Mc(E), s.Mc(yt), s.Mc(he));
      }),
        (bt.ɵdir = s.Hc({
          type: bt,
          inputs: { shrink: ["fxShrink", "shrink"], grow: ["fxGrow", "grow"] },
          features: [s.wc],
        })),
        (bt.ctorParameters = () => [
          { type: s.v },
          { type: le },
          { type: void 0, decorators: [{ type: s.C, args: [E] }] },
          { type: yt },
          { type: he },
        ]),
        (bt.propDecorators = {
          shrink: [{ type: s.G, args: ["fxShrink"] }],
          grow: [{ type: s.G, args: ["fxGrow"] }],
        });
      class xt extends bt {
        constructor() {
          super(...arguments), (this.inputs = vt);
        }
      }
      (xt.ɵfac = function (e) {
        return _t(e || xt);
      }),
        (xt.ɵdir = s.Hc({
          type: xt,
          selectors: [
            ["", "fxFlex", ""],
            ["", "fxFlex.xs", ""],
            ["", "fxFlex.sm", ""],
            ["", "fxFlex.md", ""],
            ["", "fxFlex.lg", ""],
            ["", "fxFlex.xl", ""],
            ["", "fxFlex.lt-sm", ""],
            ["", "fxFlex.lt-md", ""],
            ["", "fxFlex.lt-lg", ""],
            ["", "fxFlex.lt-xl", ""],
            ["", "fxFlex.gt-xs", ""],
            ["", "fxFlex.gt-sm", ""],
            ["", "fxFlex.gt-md", ""],
            ["", "fxFlex.gt-lg", ""],
          ],
          inputs: {
            fxFlex: "fxFlex",
            "fxFlex.xs": "fxFlex.xs",
            "fxFlex.sm": "fxFlex.sm",
            "fxFlex.md": "fxFlex.md",
            "fxFlex.lg": "fxFlex.lg",
            "fxFlex.xl": "fxFlex.xl",
            "fxFlex.lt-sm": "fxFlex.lt-sm",
            "fxFlex.lt-md": "fxFlex.lt-md",
            "fxFlex.lt-lg": "fxFlex.lt-lg",
            "fxFlex.lt-xl": "fxFlex.lt-xl",
            "fxFlex.gt-xs": "fxFlex.gt-xs",
            "fxFlex.gt-sm": "fxFlex.gt-sm",
            "fxFlex.gt-md": "fxFlex.gt-md",
            "fxFlex.gt-lg": "fxFlex.gt-lg",
          },
          features: [s.wc],
        }));
      const _t = s.Tc(xt),
        wt = new Map(),
        Ct = new Map(),
        St = new Map(),
        Et = new Map();
      class kt extends ce {
        buildStyles(e) {
          return { order: (e && parseInt(e, 10)) || "" };
        }
      }
      (kt.ɵfac = function (e) {
        return Ot(e || kt);
      }),
        (kt.ɵprov = Object(s.Ic)({
          factory: function () {
            return new kt();
          },
          token: kt,
          providedIn: "root",
        }));
      const Ot = s.Tc(kt),
        It = [
          "fxFlexOrder",
          "fxFlexOrder.xs",
          "fxFlexOrder.sm",
          "fxFlexOrder.md",
          "fxFlexOrder.lg",
          "fxFlexOrder.xl",
          "fxFlexOrder.lt-sm",
          "fxFlexOrder.lt-md",
          "fxFlexOrder.lt-lg",
          "fxFlexOrder.lt-xl",
          "fxFlexOrder.gt-xs",
          "fxFlexOrder.gt-sm",
          "fxFlexOrder.gt-md",
          "fxFlexOrder.gt-lg",
        ];
      class Tt extends P {
        constructor(e, t, n, s) {
          super(e, n, t, s),
            (this.DIRECTIVE_KEY = "flex-order"),
            (this.styleCache = At),
            this.init();
        }
      }
      (Tt.ɵfac = function (e) {
        return new (e || Tt)(s.Mc(s.v), s.Mc(le), s.Mc(kt), s.Mc(he));
      }),
        (Tt.ɵdir = s.Hc({ type: Tt, features: [s.wc] })),
        (Tt.ctorParameters = () => [
          { type: s.v },
          { type: le },
          { type: kt },
          { type: he },
        ]);
      const At = new Map();
      class Dt extends Tt {
        constructor() {
          super(...arguments), (this.inputs = It);
        }
      }
      (Dt.ɵfac = function (e) {
        return Mt(e || Dt);
      }),
        (Dt.ɵdir = s.Hc({
          type: Dt,
          selectors: [
            ["", "fxFlexOrder", ""],
            ["", "fxFlexOrder.xs", ""],
            ["", "fxFlexOrder.sm", ""],
            ["", "fxFlexOrder.md", ""],
            ["", "fxFlexOrder.lg", ""],
            ["", "fxFlexOrder.xl", ""],
            ["", "fxFlexOrder.lt-sm", ""],
            ["", "fxFlexOrder.lt-md", ""],
            ["", "fxFlexOrder.lt-lg", ""],
            ["", "fxFlexOrder.lt-xl", ""],
            ["", "fxFlexOrder.gt-xs", ""],
            ["", "fxFlexOrder.gt-sm", ""],
            ["", "fxFlexOrder.gt-md", ""],
            ["", "fxFlexOrder.gt-lg", ""],
          ],
          inputs: {
            fxFlexOrder: "fxFlexOrder",
            "fxFlexOrder.xs": "fxFlexOrder.xs",
            "fxFlexOrder.sm": "fxFlexOrder.sm",
            "fxFlexOrder.md": "fxFlexOrder.md",
            "fxFlexOrder.lg": "fxFlexOrder.lg",
            "fxFlexOrder.xl": "fxFlexOrder.xl",
            "fxFlexOrder.lt-sm": "fxFlexOrder.lt-sm",
            "fxFlexOrder.lt-md": "fxFlexOrder.lt-md",
            "fxFlexOrder.lt-lg": "fxFlexOrder.lt-lg",
            "fxFlexOrder.lt-xl": "fxFlexOrder.lt-xl",
            "fxFlexOrder.gt-xs": "fxFlexOrder.gt-xs",
            "fxFlexOrder.gt-sm": "fxFlexOrder.gt-sm",
            "fxFlexOrder.gt-md": "fxFlexOrder.gt-md",
            "fxFlexOrder.gt-lg": "fxFlexOrder.gt-lg",
          },
          features: [s.wc],
        }));
      const Mt = s.Tc(Dt);
      class Pt extends ce {
        buildStyles(e, t) {
          "" === e && (e = "0");
          const n = String(e).indexOf("%") > -1;
          String(e).indexOf("px") > -1 || n || isNaN(+e) || (e += "%");
          const s = t.isRtl ? "margin-right" : "margin-left";
          return Qe(t.layout) ? { [s]: "" + e } : { "margin-top": "" + e };
        }
      }
      (Pt.ɵfac = function (e) {
        return Rt(e || Pt);
      }),
        (Pt.ɵprov = Object(s.Ic)({
          factory: function () {
            return new Pt();
          },
          token: Pt,
          providedIn: "root",
        }));
      const Rt = s.Tc(Pt),
        jt = [
          "fxFlexOffset",
          "fxFlexOffset.xs",
          "fxFlexOffset.sm",
          "fxFlexOffset.md",
          "fxFlexOffset.lg",
          "fxFlexOffset.xl",
          "fxFlexOffset.lt-sm",
          "fxFlexOffset.lt-md",
          "fxFlexOffset.lt-lg",
          "fxFlexOffset.lt-xl",
          "fxFlexOffset.gt-xs",
          "fxFlexOffset.gt-sm",
          "fxFlexOffset.gt-md",
          "fxFlexOffset.gt-lg",
        ];
      class Nt extends P {
        constructor(e, t, n, s, i) {
          super(e, n, i, s),
            (this.directionality = t),
            (this.DIRECTIVE_KEY = "flex-offset"),
            this.init([this.directionality.change]),
            this.parentElement &&
              this.marshal
                .trackValue(this.parentElement, "layout-gap")
                .pipe(Object(g.a)(this.destroySubject))
                .subscribe(this.triggerUpdate.bind(this));
        }
        updateWithValue(e = "") {
          const t = this.getFlexFlowDirection(this.parentElement, !0),
            n = "rtl" === this.directionality.value;
          "row" === t && n
            ? (this.styleCache = Vt)
            : "row" !== t || n
            ? "column" === t && n
              ? (this.styleCache = Bt)
              : "column" !== t || n || (this.styleCache = Ht)
            : (this.styleCache = zt),
            this.addStyles(e + "", { layout: t, isRtl: n });
        }
      }
      (Nt.ɵfac = function (e) {
        return new (e || Nt)(
          s.Mc(s.v),
          s.Mc($e.b),
          s.Mc(Pt),
          s.Mc(he),
          s.Mc(le)
        );
      }),
        (Nt.ɵdir = s.Hc({ type: Nt, features: [s.wc] })),
        (Nt.ctorParameters = () => [
          { type: s.v },
          { type: $e.b },
          { type: Pt },
          { type: he },
          { type: le },
        ]);
      class Ft extends Nt {
        constructor() {
          super(...arguments), (this.inputs = jt);
        }
      }
      (Ft.ɵfac = function (e) {
        return Lt(e || Ft);
      }),
        (Ft.ɵdir = s.Hc({
          type: Ft,
          selectors: [
            ["", "fxFlexOffset", ""],
            ["", "fxFlexOffset.xs", ""],
            ["", "fxFlexOffset.sm", ""],
            ["", "fxFlexOffset.md", ""],
            ["", "fxFlexOffset.lg", ""],
            ["", "fxFlexOffset.xl", ""],
            ["", "fxFlexOffset.lt-sm", ""],
            ["", "fxFlexOffset.lt-md", ""],
            ["", "fxFlexOffset.lt-lg", ""],
            ["", "fxFlexOffset.lt-xl", ""],
            ["", "fxFlexOffset.gt-xs", ""],
            ["", "fxFlexOffset.gt-sm", ""],
            ["", "fxFlexOffset.gt-md", ""],
            ["", "fxFlexOffset.gt-lg", ""],
          ],
          inputs: {
            fxFlexOffset: "fxFlexOffset",
            "fxFlexOffset.xs": "fxFlexOffset.xs",
            "fxFlexOffset.sm": "fxFlexOffset.sm",
            "fxFlexOffset.md": "fxFlexOffset.md",
            "fxFlexOffset.lg": "fxFlexOffset.lg",
            "fxFlexOffset.xl": "fxFlexOffset.xl",
            "fxFlexOffset.lt-sm": "fxFlexOffset.lt-sm",
            "fxFlexOffset.lt-md": "fxFlexOffset.lt-md",
            "fxFlexOffset.lt-lg": "fxFlexOffset.lt-lg",
            "fxFlexOffset.lt-xl": "fxFlexOffset.lt-xl",
            "fxFlexOffset.gt-xs": "fxFlexOffset.gt-xs",
            "fxFlexOffset.gt-sm": "fxFlexOffset.gt-sm",
            "fxFlexOffset.gt-md": "fxFlexOffset.gt-md",
            "fxFlexOffset.gt-lg": "fxFlexOffset.gt-lg",
          },
          features: [s.wc],
        }));
      const Lt = s.Tc(Ft),
        Vt = new Map(),
        Bt = new Map(),
        zt = new Map(),
        Ht = new Map();
      class Gt extends ce {
        buildStyles(e) {
          const t = {};
          switch ((e = e || "stretch")) {
            case "start":
              t["align-self"] = "flex-start";
              break;
            case "end":
              t["align-self"] = "flex-end";
              break;
            default:
              t["align-self"] = e;
          }
          return t;
        }
      }
      (Gt.ɵfac = function (e) {
        return Ut(e || Gt);
      }),
        (Gt.ɵprov = Object(s.Ic)({
          factory: function () {
            return new Gt();
          },
          token: Gt,
          providedIn: "root",
        }));
      const Ut = s.Tc(Gt),
        $t = [
          "fxFlexAlign",
          "fxFlexAlign.xs",
          "fxFlexAlign.sm",
          "fxFlexAlign.md",
          "fxFlexAlign.lg",
          "fxFlexAlign.xl",
          "fxFlexAlign.lt-sm",
          "fxFlexAlign.lt-md",
          "fxFlexAlign.lt-lg",
          "fxFlexAlign.lt-xl",
          "fxFlexAlign.gt-xs",
          "fxFlexAlign.gt-sm",
          "fxFlexAlign.gt-md",
          "fxFlexAlign.gt-lg",
        ];
      class qt extends P {
        constructor(e, t, n, s) {
          super(e, n, t, s),
            (this.DIRECTIVE_KEY = "flex-align"),
            (this.styleCache = Wt),
            this.init();
        }
      }
      (qt.ɵfac = function (e) {
        return new (e || qt)(s.Mc(s.v), s.Mc(le), s.Mc(Gt), s.Mc(he));
      }),
        (qt.ɵdir = s.Hc({ type: qt, features: [s.wc] })),
        (qt.ctorParameters = () => [
          { type: s.v },
          { type: le },
          { type: Gt },
          { type: he },
        ]);
      const Wt = new Map();
      class Yt extends qt {
        constructor() {
          super(...arguments), (this.inputs = $t);
        }
      }
      (Yt.ɵfac = function (e) {
        return Qt(e || Yt);
      }),
        (Yt.ɵdir = s.Hc({
          type: Yt,
          selectors: [
            ["", "fxFlexAlign", ""],
            ["", "fxFlexAlign.xs", ""],
            ["", "fxFlexAlign.sm", ""],
            ["", "fxFlexAlign.md", ""],
            ["", "fxFlexAlign.lg", ""],
            ["", "fxFlexAlign.xl", ""],
            ["", "fxFlexAlign.lt-sm", ""],
            ["", "fxFlexAlign.lt-md", ""],
            ["", "fxFlexAlign.lt-lg", ""],
            ["", "fxFlexAlign.lt-xl", ""],
            ["", "fxFlexAlign.gt-xs", ""],
            ["", "fxFlexAlign.gt-sm", ""],
            ["", "fxFlexAlign.gt-md", ""],
            ["", "fxFlexAlign.gt-lg", ""],
          ],
          inputs: {
            fxFlexAlign: "fxFlexAlign",
            "fxFlexAlign.xs": "fxFlexAlign.xs",
            "fxFlexAlign.sm": "fxFlexAlign.sm",
            "fxFlexAlign.md": "fxFlexAlign.md",
            "fxFlexAlign.lg": "fxFlexAlign.lg",
            "fxFlexAlign.xl": "fxFlexAlign.xl",
            "fxFlexAlign.lt-sm": "fxFlexAlign.lt-sm",
            "fxFlexAlign.lt-md": "fxFlexAlign.lt-md",
            "fxFlexAlign.lt-lg": "fxFlexAlign.lt-lg",
            "fxFlexAlign.lt-xl": "fxFlexAlign.lt-xl",
            "fxFlexAlign.gt-xs": "fxFlexAlign.gt-xs",
            "fxFlexAlign.gt-sm": "fxFlexAlign.gt-sm",
            "fxFlexAlign.gt-md": "fxFlexAlign.gt-md",
            "fxFlexAlign.gt-lg": "fxFlexAlign.gt-lg",
          },
          features: [s.wc],
        }));
      const Qt = s.Tc(Yt),
        Kt = {
          margin: 0,
          width: "100%",
          height: "100%",
          "min-width": "100%",
          "min-height": "100%",
        };
      class Jt extends ce {
        buildStyles(e) {
          return Kt;
        }
      }
      (Jt.ɵfac = function (e) {
        return Xt(e || Jt);
      }),
        (Jt.ɵprov = Object(s.Ic)({
          factory: function () {
            return new Jt();
          },
          token: Jt,
          providedIn: "root",
        }));
      const Xt = s.Tc(Jt);
      class Zt extends P {
        constructor(e, t, n, s) {
          super(e, n, t, s), (this.styleCache = en), this.addStyles("");
        }
      }
      (Zt.ɵfac = function (e) {
        return new (e || Zt)(s.Mc(s.v), s.Mc(le), s.Mc(Jt), s.Mc(he));
      }),
        (Zt.ɵdir = s.Hc({
          type: Zt,
          selectors: [
            ["", "fxFill", ""],
            ["", "fxFlexFill", ""],
          ],
          features: [s.wc],
        })),
        (Zt.ctorParameters = () => [
          { type: s.v },
          { type: le },
          { type: Jt },
          { type: he },
        ]);
      const en = new Map();
      class tn extends ce {
        buildStyles(e, t) {
          const n = {},
            [s, i] = e.split(" ");
          switch (s) {
            case "center":
              n["justify-content"] = "center";
              break;
            case "space-around":
              n["justify-content"] = "space-around";
              break;
            case "space-between":
              n["justify-content"] = "space-between";
              break;
            case "space-evenly":
              n["justify-content"] = "space-evenly";
              break;
            case "end":
            case "flex-end":
              n["justify-content"] = "flex-end";
              break;
            case "start":
            case "flex-start":
            default:
              n["justify-content"] = "flex-start";
          }
          switch (i) {
            case "start":
            case "flex-start":
              n["align-items"] = n["align-content"] = "flex-start";
              break;
            case "center":
              n["align-items"] = n["align-content"] = "center";
              break;
            case "end":
            case "flex-end":
              n["align-items"] = n["align-content"] = "flex-end";
              break;
            case "space-between":
              (n["align-content"] = "space-between"),
                (n["align-items"] = "stretch");
              break;
            case "space-around":
              (n["align-content"] = "space-around"),
                (n["align-items"] = "stretch");
              break;
            case "baseline":
              (n["align-content"] = "stretch"), (n["align-items"] = "baseline");
              break;
            case "stretch":
            default:
              n["align-items"] = n["align-content"] = "stretch";
          }
          return gt(n, {
            display: t.inline ? "inline-flex" : "flex",
            "flex-direction": t.layout,
            "box-sizing": "border-box",
            "max-width":
              "stretch" === i ? (Qe(t.layout) ? null : "100%") : null,
            "max-height": "stretch" === i && Qe(t.layout) ? "100%" : null,
          });
        }
      }
      (tn.ɵfac = function (e) {
        return nn(e || tn);
      }),
        (tn.ɵprov = Object(s.Ic)({
          factory: function () {
            return new tn();
          },
          token: tn,
          providedIn: "root",
        }));
      const nn = s.Tc(tn),
        sn = [
          "fxLayoutAlign",
          "fxLayoutAlign.xs",
          "fxLayoutAlign.sm",
          "fxLayoutAlign.md",
          "fxLayoutAlign.lg",
          "fxLayoutAlign.xl",
          "fxLayoutAlign.lt-sm",
          "fxLayoutAlign.lt-md",
          "fxLayoutAlign.lt-lg",
          "fxLayoutAlign.lt-xl",
          "fxLayoutAlign.gt-xs",
          "fxLayoutAlign.gt-sm",
          "fxLayoutAlign.gt-md",
          "fxLayoutAlign.gt-lg",
        ];
      class rn extends P {
        constructor(e, t, n, s) {
          super(e, n, t, s),
            (this.DIRECTIVE_KEY = "layout-align"),
            (this.layout = "row"),
            (this.inline = !1),
            this.init(),
            this.marshal
              .trackValue(this.nativeElement, "layout")
              .pipe(Object(g.a)(this.destroySubject))
              .subscribe(this.onLayoutChange.bind(this));
        }
        updateWithValue(e) {
          const t = this.layout || "row",
            n = this.inline;
          "row" === t && n
            ? (this.styleCache = hn)
            : "row" !== t || n
            ? "row-reverse" === t && n
              ? (this.styleCache = mn)
              : "row-reverse" !== t || n
              ? "column" === t && n
                ? (this.styleCache = pn)
                : "column" !== t || n
                ? "column-reverse" === t && n
                  ? (this.styleCache = fn)
                  : "column-reverse" !== t || n || (this.styleCache = dn)
                : (this.styleCache = cn)
              : (this.styleCache = un)
            : (this.styleCache = ln),
            this.addStyles(e, { layout: t, inline: n });
        }
        onLayoutChange(e) {
          const t = e.value.split(" ");
          (this.layout = t[0]),
            (this.inline = e.value.includes("inline")),
            We.find((e) => e === this.layout) || (this.layout = "row"),
            this.triggerUpdate();
        }
      }
      (rn.ɵfac = function (e) {
        return new (e || rn)(s.Mc(s.v), s.Mc(le), s.Mc(tn), s.Mc(he));
      }),
        (rn.ɵdir = s.Hc({ type: rn, features: [s.wc] })),
        (rn.ctorParameters = () => [
          { type: s.v },
          { type: le },
          { type: tn },
          { type: he },
        ]);
      class on extends rn {
        constructor() {
          super(...arguments), (this.inputs = sn);
        }
      }
      (on.ɵfac = function (e) {
        return an(e || on);
      }),
        (on.ɵdir = s.Hc({
          type: on,
          selectors: [
            ["", "fxLayoutAlign", ""],
            ["", "fxLayoutAlign.xs", ""],
            ["", "fxLayoutAlign.sm", ""],
            ["", "fxLayoutAlign.md", ""],
            ["", "fxLayoutAlign.lg", ""],
            ["", "fxLayoutAlign.xl", ""],
            ["", "fxLayoutAlign.lt-sm", ""],
            ["", "fxLayoutAlign.lt-md", ""],
            ["", "fxLayoutAlign.lt-lg", ""],
            ["", "fxLayoutAlign.lt-xl", ""],
            ["", "fxLayoutAlign.gt-xs", ""],
            ["", "fxLayoutAlign.gt-sm", ""],
            ["", "fxLayoutAlign.gt-md", ""],
            ["", "fxLayoutAlign.gt-lg", ""],
          ],
          inputs: {
            fxLayoutAlign: "fxLayoutAlign",
            "fxLayoutAlign.xs": "fxLayoutAlign.xs",
            "fxLayoutAlign.sm": "fxLayoutAlign.sm",
            "fxLayoutAlign.md": "fxLayoutAlign.md",
            "fxLayoutAlign.lg": "fxLayoutAlign.lg",
            "fxLayoutAlign.xl": "fxLayoutAlign.xl",
            "fxLayoutAlign.lt-sm": "fxLayoutAlign.lt-sm",
            "fxLayoutAlign.lt-md": "fxLayoutAlign.lt-md",
            "fxLayoutAlign.lt-lg": "fxLayoutAlign.lt-lg",
            "fxLayoutAlign.lt-xl": "fxLayoutAlign.lt-xl",
            "fxLayoutAlign.gt-xs": "fxLayoutAlign.gt-xs",
            "fxLayoutAlign.gt-sm": "fxLayoutAlign.gt-sm",
            "fxLayoutAlign.gt-md": "fxLayoutAlign.gt-md",
            "fxLayoutAlign.gt-lg": "fxLayoutAlign.gt-lg",
          },
          features: [s.wc],
        }));
      const an = s.Tc(on),
        ln = new Map(),
        cn = new Map(),
        un = new Map(),
        dn = new Map(),
        hn = new Map(),
        pn = new Map(),
        mn = new Map(),
        fn = new Map();
      class gn {}
      (gn.ɵmod = s.Kc({ type: gn })),
        (gn.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || gn)();
          },
          imports: [[_, $e.a]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(gn, {
            declarations: function () {
              return [tt, lt, on, Dt, Ft, Zt, Yt, xt];
            },
            imports: function () {
              return [_, $e.a];
            },
            exports: function () {
              return [tt, lt, on, Dt, Ft, Zt, Yt, xt];
            },
          });
      const yn = "stretch",
        vn = "stretch";
      class bn extends ce {
        buildStyles(e) {
          return (function (e = "") {
            const t = {},
              [n, s] = e.split(" ");
            switch (n) {
              case "end":
                t["justify-self"] = "end";
                break;
              case "center":
                t["justify-self"] = "center";
                break;
              case "stretch":
                t["justify-self"] = "stretch";
                break;
              case "start":
                t["justify-self"] = "start";
                break;
              default:
                t["justify-self"] = yn;
            }
            switch (s) {
              case "end":
                t["align-self"] = "end";
                break;
              case "center":
                t["align-self"] = "center";
                break;
              case "stretch":
                t["align-self"] = "stretch";
                break;
              case "start":
                t["align-self"] = "start";
                break;
              default:
                t["align-self"] = vn;
            }
            return t;
          })(e || yn);
        }
      }
      (bn.ɵfac = function (e) {
        return xn(e || bn);
      }),
        (bn.ɵprov = Object(s.Ic)({
          factory: function () {
            return new bn();
          },
          token: bn,
          providedIn: "root",
        }));
      const xn = s.Tc(bn);
      class _n extends P {
        constructor(e, t, n, s) {
          super(e, t, n, s),
            (this.DIRECTIVE_KEY = "grid-align"),
            (this.styleCache = wn),
            this.init();
        }
      }
      (_n.ɵfac = function (e) {
        return new (e || _n)(s.Mc(s.v), s.Mc(bn), s.Mc(le), s.Mc(he));
      }),
        (_n.ɵdir = s.Hc({ type: _n, features: [s.wc] })),
        (_n.ctorParameters = () => [
          { type: s.v },
          { type: bn },
          { type: le },
          { type: he },
        ]);
      const wn = new Map(),
        Cn = [
          "gdGridAlign",
          "gdGridAlign.xs",
          "gdGridAlign.sm",
          "gdGridAlign.md",
          "gdGridAlign.lg",
          "gdGridAlign.xl",
          "gdGridAlign.lt-sm",
          "gdGridAlign.lt-md",
          "gdGridAlign.lt-lg",
          "gdGridAlign.lt-xl",
          "gdGridAlign.gt-xs",
          "gdGridAlign.gt-sm",
          "gdGridAlign.gt-md",
          "gdGridAlign.gt-lg",
        ];
      class Sn extends _n {
        constructor() {
          super(...arguments), (this.inputs = Cn);
        }
      }
      (Sn.ɵfac = function (e) {
        return En(e || Sn);
      }),
        (Sn.ɵdir = s.Hc({
          type: Sn,
          selectors: [
            ["", "gdGridAlign", ""],
            ["", "gdGridAlign.xs", ""],
            ["", "gdGridAlign.sm", ""],
            ["", "gdGridAlign.md", ""],
            ["", "gdGridAlign.lg", ""],
            ["", "gdGridAlign.xl", ""],
            ["", "gdGridAlign.lt-sm", ""],
            ["", "gdGridAlign.lt-md", ""],
            ["", "gdGridAlign.lt-lg", ""],
            ["", "gdGridAlign.lt-xl", ""],
            ["", "gdGridAlign.gt-xs", ""],
            ["", "gdGridAlign.gt-sm", ""],
            ["", "gdGridAlign.gt-md", ""],
            ["", "gdGridAlign.gt-lg", ""],
          ],
          inputs: {
            gdGridAlign: "gdGridAlign",
            "gdGridAlign.xs": "gdGridAlign.xs",
            "gdGridAlign.sm": "gdGridAlign.sm",
            "gdGridAlign.md": "gdGridAlign.md",
            "gdGridAlign.lg": "gdGridAlign.lg",
            "gdGridAlign.xl": "gdGridAlign.xl",
            "gdGridAlign.lt-sm": "gdGridAlign.lt-sm",
            "gdGridAlign.lt-md": "gdGridAlign.lt-md",
            "gdGridAlign.lt-lg": "gdGridAlign.lt-lg",
            "gdGridAlign.lt-xl": "gdGridAlign.lt-xl",
            "gdGridAlign.gt-xs": "gdGridAlign.gt-xs",
            "gdGridAlign.gt-sm": "gdGridAlign.gt-sm",
            "gdGridAlign.gt-md": "gdGridAlign.gt-md",
            "gdGridAlign.gt-lg": "gdGridAlign.gt-lg",
          },
          features: [s.wc],
        }));
      const En = s.Tc(Sn);
      const kn = "start",
        On = "stretch";
      class In extends ce {
        buildStyles(e, t) {
          return (function (e, t) {
            const n = {},
              [s, i] = e.split(" ");
            switch (s) {
              case "center":
                n["align-content"] = "center";
                break;
              case "space-around":
                n["align-content"] = "space-around";
                break;
              case "space-between":
                n["align-content"] = "space-between";
                break;
              case "space-evenly":
                n["align-content"] = "space-evenly";
                break;
              case "end":
                n["align-content"] = "end";
                break;
              case "start":
                n["align-content"] = "start";
                break;
              case "stretch":
                n["align-content"] = "stretch";
                break;
              default:
                n["align-content"] = kn;
            }
            switch (i) {
              case "start":
                n["align-items"] = "start";
                break;
              case "center":
                n["align-items"] = "center";
                break;
              case "end":
                n["align-items"] = "end";
                break;
              case "stretch":
                n["align-items"] = "stretch";
                break;
              default:
                n["align-items"] = On;
            }
            return (n.display = t ? "inline-grid" : "grid"), n;
          })(e || "start stretch", t.inline);
        }
      }
      (In.ɵfac = function (e) {
        return Tn(e || In);
      }),
        (In.ɵprov = Object(s.Ic)({
          factory: function () {
            return new In();
          },
          token: In,
          providedIn: "root",
        }));
      const Tn = s.Tc(In);
      class An extends P {
        constructor(e, t, n, s) {
          super(e, t, n, s),
            (this.DIRECTIVE_KEY = "grid-align-columns"),
            (this._inline = !1),
            this.init();
        }
        get inline() {
          return this._inline;
        }
        set inline(e) {
          this._inline = Object(me.b)(e);
        }
        updateWithValue(e) {
          (this.styleCache = this.inline ? Mn : Dn),
            this.addStyles(e, { inline: this.inline });
        }
      }
      (An.ɵfac = function (e) {
        return new (e || An)(s.Mc(s.v), s.Mc(In), s.Mc(le), s.Mc(he));
      }),
        (An.ɵdir = s.Hc({
          type: An,
          inputs: { inline: ["gdInline", "inline"] },
          features: [s.wc],
        })),
        (An.ctorParameters = () => [
          { type: s.v },
          { type: In },
          { type: le },
          { type: he },
        ]),
        (An.propDecorators = { inline: [{ type: s.G, args: ["gdInline"] }] });
      const Dn = new Map(),
        Mn = new Map(),
        Pn = [
          "gdAlignColumns",
          "gdAlignColumns.xs",
          "gdAlignColumns.sm",
          "gdAlignColumns.md",
          "gdAlignColumns.lg",
          "gdAlignColumns.xl",
          "gdAlignColumns.lt-sm",
          "gdAlignColumns.lt-md",
          "gdAlignColumns.lt-lg",
          "gdAlignColumns.lt-xl",
          "gdAlignColumns.gt-xs",
          "gdAlignColumns.gt-sm",
          "gdAlignColumns.gt-md",
          "gdAlignColumns.gt-lg",
        ];
      class Rn extends An {
        constructor() {
          super(...arguments), (this.inputs = Pn);
        }
      }
      (Rn.ɵfac = function (e) {
        return jn(e || Rn);
      }),
        (Rn.ɵdir = s.Hc({
          type: Rn,
          selectors: [
            ["", "gdAlignColumns", ""],
            ["", "gdAlignColumns.xs", ""],
            ["", "gdAlignColumns.sm", ""],
            ["", "gdAlignColumns.md", ""],
            ["", "gdAlignColumns.lg", ""],
            ["", "gdAlignColumns.xl", ""],
            ["", "gdAlignColumns.lt-sm", ""],
            ["", "gdAlignColumns.lt-md", ""],
            ["", "gdAlignColumns.lt-lg", ""],
            ["", "gdAlignColumns.lt-xl", ""],
            ["", "gdAlignColumns.gt-xs", ""],
            ["", "gdAlignColumns.gt-sm", ""],
            ["", "gdAlignColumns.gt-md", ""],
            ["", "gdAlignColumns.gt-lg", ""],
          ],
          inputs: {
            gdAlignColumns: "gdAlignColumns",
            "gdAlignColumns.xs": "gdAlignColumns.xs",
            "gdAlignColumns.sm": "gdAlignColumns.sm",
            "gdAlignColumns.md": "gdAlignColumns.md",
            "gdAlignColumns.lg": "gdAlignColumns.lg",
            "gdAlignColumns.xl": "gdAlignColumns.xl",
            "gdAlignColumns.lt-sm": "gdAlignColumns.lt-sm",
            "gdAlignColumns.lt-md": "gdAlignColumns.lt-md",
            "gdAlignColumns.lt-lg": "gdAlignColumns.lt-lg",
            "gdAlignColumns.lt-xl": "gdAlignColumns.lt-xl",
            "gdAlignColumns.gt-xs": "gdAlignColumns.gt-xs",
            "gdAlignColumns.gt-sm": "gdAlignColumns.gt-sm",
            "gdAlignColumns.gt-md": "gdAlignColumns.gt-md",
            "gdAlignColumns.gt-lg": "gdAlignColumns.gt-lg",
          },
          features: [s.wc],
        }));
      const jn = s.Tc(Rn);
      const Nn = "start",
        Fn = "stretch";
      class Ln extends ce {
        buildStyles(e, t) {
          return (function (e, t) {
            const n = {},
              [s, i] = e.split(" ");
            switch (s) {
              case "center":
              case "space-around":
              case "space-between":
              case "space-evenly":
              case "end":
              case "start":
              case "stretch":
                n["justify-content"] = s;
                break;
              default:
                n["justify-content"] = Nn;
            }
            switch (i) {
              case "start":
              case "center":
              case "end":
              case "stretch":
                n["justify-items"] = i;
                break;
              default:
                n["justify-items"] = Fn;
            }
            return (n.display = t ? "inline-grid" : "grid"), n;
          })(e || "start stretch", t.inline);
        }
      }
      (Ln.ɵfac = function (e) {
        return Vn(e || Ln);
      }),
        (Ln.ɵprov = Object(s.Ic)({
          factory: function () {
            return new Ln();
          },
          token: Ln,
          providedIn: "root",
        }));
      const Vn = s.Tc(Ln);
      class Bn extends P {
        constructor(e, t, n, s) {
          super(e, t, n, s),
            (this.DIRECTIVE_KEY = "grid-align-rows"),
            (this._inline = !1),
            this.init();
        }
        get inline() {
          return this._inline;
        }
        set inline(e) {
          this._inline = Object(me.b)(e);
        }
        updateWithValue(e) {
          (this.styleCache = this.inline ? Hn : zn),
            this.addStyles(e, { inline: this.inline });
        }
      }
      (Bn.ɵfac = function (e) {
        return new (e || Bn)(s.Mc(s.v), s.Mc(Ln), s.Mc(le), s.Mc(he));
      }),
        (Bn.ɵdir = s.Hc({
          type: Bn,
          inputs: { inline: ["gdInline", "inline"] },
          features: [s.wc],
        })),
        (Bn.ctorParameters = () => [
          { type: s.v },
          { type: Ln },
          { type: le },
          { type: he },
        ]),
        (Bn.propDecorators = { inline: [{ type: s.G, args: ["gdInline"] }] });
      const zn = new Map(),
        Hn = new Map(),
        Gn = [
          "gdAlignRows",
          "gdAlignRows.xs",
          "gdAlignRows.sm",
          "gdAlignRows.md",
          "gdAlignRows.lg",
          "gdAlignRows.xl",
          "gdAlignRows.lt-sm",
          "gdAlignRows.lt-md",
          "gdAlignRows.lt-lg",
          "gdAlignRows.lt-xl",
          "gdAlignRows.gt-xs",
          "gdAlignRows.gt-sm",
          "gdAlignRows.gt-md",
          "gdAlignRows.gt-lg",
        ];
      class Un extends Bn {
        constructor() {
          super(...arguments), (this.inputs = Gn);
        }
      }
      (Un.ɵfac = function (e) {
        return $n(e || Un);
      }),
        (Un.ɵdir = s.Hc({
          type: Un,
          selectors: [
            ["", "gdAlignRows", ""],
            ["", "gdAlignRows.xs", ""],
            ["", "gdAlignRows.sm", ""],
            ["", "gdAlignRows.md", ""],
            ["", "gdAlignRows.lg", ""],
            ["", "gdAlignRows.xl", ""],
            ["", "gdAlignRows.lt-sm", ""],
            ["", "gdAlignRows.lt-md", ""],
            ["", "gdAlignRows.lt-lg", ""],
            ["", "gdAlignRows.lt-xl", ""],
            ["", "gdAlignRows.gt-xs", ""],
            ["", "gdAlignRows.gt-sm", ""],
            ["", "gdAlignRows.gt-md", ""],
            ["", "gdAlignRows.gt-lg", ""],
          ],
          inputs: {
            gdAlignRows: "gdAlignRows",
            "gdAlignRows.xs": "gdAlignRows.xs",
            "gdAlignRows.sm": "gdAlignRows.sm",
            "gdAlignRows.md": "gdAlignRows.md",
            "gdAlignRows.lg": "gdAlignRows.lg",
            "gdAlignRows.xl": "gdAlignRows.xl",
            "gdAlignRows.lt-sm": "gdAlignRows.lt-sm",
            "gdAlignRows.lt-md": "gdAlignRows.lt-md",
            "gdAlignRows.lt-lg": "gdAlignRows.lt-lg",
            "gdAlignRows.lt-xl": "gdAlignRows.lt-xl",
            "gdAlignRows.gt-xs": "gdAlignRows.gt-xs",
            "gdAlignRows.gt-sm": "gdAlignRows.gt-sm",
            "gdAlignRows.gt-md": "gdAlignRows.gt-md",
            "gdAlignRows.gt-lg": "gdAlignRows.gt-lg",
          },
          features: [s.wc],
        }));
      const $n = s.Tc(Un);
      class qn extends ce {
        buildStyles(e) {
          return { "grid-area": e || "auto" };
        }
      }
      (qn.ɵfac = function (e) {
        return Wn(e || qn);
      }),
        (qn.ɵprov = Object(s.Ic)({
          factory: function () {
            return new qn();
          },
          token: qn,
          providedIn: "root",
        }));
      const Wn = s.Tc(qn);
      class Yn extends P {
        constructor(e, t, n, s) {
          super(e, n, t, s),
            (this.DIRECTIVE_KEY = "grid-area"),
            (this.styleCache = Qn),
            this.init();
        }
      }
      (Yn.ɵfac = function (e) {
        return new (e || Yn)(s.Mc(s.v), s.Mc(le), s.Mc(qn), s.Mc(he));
      }),
        (Yn.ɵdir = s.Hc({ type: Yn, features: [s.wc] })),
        (Yn.ctorParameters = () => [
          { type: s.v },
          { type: le },
          { type: qn },
          { type: he },
        ]);
      const Qn = new Map(),
        Kn = [
          "gdArea",
          "gdArea.xs",
          "gdArea.sm",
          "gdArea.md",
          "gdArea.lg",
          "gdArea.xl",
          "gdArea.lt-sm",
          "gdArea.lt-md",
          "gdArea.lt-lg",
          "gdArea.lt-xl",
          "gdArea.gt-xs",
          "gdArea.gt-sm",
          "gdArea.gt-md",
          "gdArea.gt-lg",
        ];
      class Jn extends Yn {
        constructor() {
          super(...arguments), (this.inputs = Kn);
        }
      }
      (Jn.ɵfac = function (e) {
        return Xn(e || Jn);
      }),
        (Jn.ɵdir = s.Hc({
          type: Jn,
          selectors: [
            ["", "gdArea", ""],
            ["", "gdArea.xs", ""],
            ["", "gdArea.sm", ""],
            ["", "gdArea.md", ""],
            ["", "gdArea.lg", ""],
            ["", "gdArea.xl", ""],
            ["", "gdArea.lt-sm", ""],
            ["", "gdArea.lt-md", ""],
            ["", "gdArea.lt-lg", ""],
            ["", "gdArea.lt-xl", ""],
            ["", "gdArea.gt-xs", ""],
            ["", "gdArea.gt-sm", ""],
            ["", "gdArea.gt-md", ""],
            ["", "gdArea.gt-lg", ""],
          ],
          inputs: {
            gdArea: "gdArea",
            "gdArea.xs": "gdArea.xs",
            "gdArea.sm": "gdArea.sm",
            "gdArea.md": "gdArea.md",
            "gdArea.lg": "gdArea.lg",
            "gdArea.xl": "gdArea.xl",
            "gdArea.lt-sm": "gdArea.lt-sm",
            "gdArea.lt-md": "gdArea.lt-md",
            "gdArea.lt-lg": "gdArea.lt-lg",
            "gdArea.lt-xl": "gdArea.lt-xl",
            "gdArea.gt-xs": "gdArea.gt-xs",
            "gdArea.gt-sm": "gdArea.gt-sm",
            "gdArea.gt-md": "gdArea.gt-md",
            "gdArea.gt-lg": "gdArea.gt-lg",
          },
          features: [s.wc],
        }));
      const Xn = s.Tc(Jn);
      class Zn extends ce {
        buildStyles(e, t) {
          const n = (e || "none").split("|").map((e) => `"${e.trim()}"`);
          return {
            display: t.inline ? "inline-grid" : "grid",
            "grid-template-areas": n.join(" "),
          };
        }
      }
      (Zn.ɵfac = function (e) {
        return es(e || Zn);
      }),
        (Zn.ɵprov = Object(s.Ic)({
          factory: function () {
            return new Zn();
          },
          token: Zn,
          providedIn: "root",
        }));
      const es = s.Tc(Zn);
      class ts extends P {
        constructor(e, t, n, s) {
          super(e, n, t, s),
            (this.DIRECTIVE_KEY = "grid-areas"),
            (this._inline = !1),
            this.init();
        }
        get inline() {
          return this._inline;
        }
        set inline(e) {
          this._inline = Object(me.b)(e);
        }
        updateWithValue(e) {
          (this.styleCache = this.inline ? ss : ns),
            this.addStyles(e, { inline: this.inline });
        }
      }
      (ts.ɵfac = function (e) {
        return new (e || ts)(s.Mc(s.v), s.Mc(le), s.Mc(Zn), s.Mc(he));
      }),
        (ts.ɵdir = s.Hc({
          type: ts,
          inputs: { inline: ["gdInline", "inline"] },
          features: [s.wc],
        })),
        (ts.ctorParameters = () => [
          { type: s.v },
          { type: le },
          { type: Zn },
          { type: he },
        ]),
        (ts.propDecorators = { inline: [{ type: s.G, args: ["gdInline"] }] });
      const ns = new Map(),
        ss = new Map(),
        is = [
          "gdAreas",
          "gdAreas.xs",
          "gdAreas.sm",
          "gdAreas.md",
          "gdAreas.lg",
          "gdAreas.xl",
          "gdAreas.lt-sm",
          "gdAreas.lt-md",
          "gdAreas.lt-lg",
          "gdAreas.lt-xl",
          "gdAreas.gt-xs",
          "gdAreas.gt-sm",
          "gdAreas.gt-md",
          "gdAreas.gt-lg",
        ];
      class rs extends ts {
        constructor() {
          super(...arguments), (this.inputs = is);
        }
      }
      (rs.ɵfac = function (e) {
        return os(e || rs);
      }),
        (rs.ɵdir = s.Hc({
          type: rs,
          selectors: [
            ["", "gdAreas", ""],
            ["", "gdAreas.xs", ""],
            ["", "gdAreas.sm", ""],
            ["", "gdAreas.md", ""],
            ["", "gdAreas.lg", ""],
            ["", "gdAreas.xl", ""],
            ["", "gdAreas.lt-sm", ""],
            ["", "gdAreas.lt-md", ""],
            ["", "gdAreas.lt-lg", ""],
            ["", "gdAreas.lt-xl", ""],
            ["", "gdAreas.gt-xs", ""],
            ["", "gdAreas.gt-sm", ""],
            ["", "gdAreas.gt-md", ""],
            ["", "gdAreas.gt-lg", ""],
          ],
          inputs: {
            gdAreas: "gdAreas",
            "gdAreas.xs": "gdAreas.xs",
            "gdAreas.sm": "gdAreas.sm",
            "gdAreas.md": "gdAreas.md",
            "gdAreas.lg": "gdAreas.lg",
            "gdAreas.xl": "gdAreas.xl",
            "gdAreas.lt-sm": "gdAreas.lt-sm",
            "gdAreas.lt-md": "gdAreas.lt-md",
            "gdAreas.lt-lg": "gdAreas.lt-lg",
            "gdAreas.lt-xl": "gdAreas.lt-xl",
            "gdAreas.gt-xs": "gdAreas.gt-xs",
            "gdAreas.gt-sm": "gdAreas.gt-sm",
            "gdAreas.gt-md": "gdAreas.gt-md",
            "gdAreas.gt-lg": "gdAreas.gt-lg",
          },
          features: [s.wc],
        }));
      const os = s.Tc(rs);
      class as extends ce {
        buildStyles(e, t) {
          let [n, s] = (e || "initial").split(" ");
          return (
            "column" !== n && "row" !== n && "dense" !== n && (n = "row"),
            (s = "dense" === s && "dense" !== n ? " dense" : ""),
            {
              display: t.inline ? "inline-grid" : "grid",
              "grid-auto-flow": n + s,
            }
          );
        }
      }
      (as.ɵfac = function (e) {
        return ls(e || as);
      }),
        (as.ɵprov = Object(s.Ic)({
          factory: function () {
            return new as();
          },
          token: as,
          providedIn: "root",
        }));
      const ls = s.Tc(as);
      class cs extends P {
        constructor(e, t, n, s) {
          super(e, t, n, s),
            (this._inline = !1),
            (this.DIRECTIVE_KEY = "grid-auto"),
            this.init();
        }
        get inline() {
          return this._inline;
        }
        set inline(e) {
          this._inline = Object(me.b)(e);
        }
        updateWithValue(e) {
          (this.styleCache = this.inline ? ds : us),
            this.addStyles(e, { inline: this.inline });
        }
      }
      (cs.ɵfac = function (e) {
        return new (e || cs)(s.Mc(s.v), s.Mc(as), s.Mc(le), s.Mc(he));
      }),
        (cs.ɵdir = s.Hc({
          type: cs,
          inputs: { inline: ["gdInline", "inline"] },
          features: [s.wc],
        })),
        (cs.ctorParameters = () => [
          { type: s.v },
          { type: as },
          { type: le },
          { type: he },
        ]),
        (cs.propDecorators = { inline: [{ type: s.G, args: ["gdInline"] }] });
      const us = new Map(),
        ds = new Map(),
        hs = [
          "gdAuto",
          "gdAuto.xs",
          "gdAuto.sm",
          "gdAuto.md",
          "gdAuto.lg",
          "gdAuto.xl",
          "gdAuto.lt-sm",
          "gdAuto.lt-md",
          "gdAuto.lt-lg",
          "gdAuto.lt-xl",
          "gdAuto.gt-xs",
          "gdAuto.gt-sm",
          "gdAuto.gt-md",
          "gdAuto.gt-lg",
        ];
      class ps extends cs {
        constructor() {
          super(...arguments), (this.inputs = hs);
        }
      }
      (ps.ɵfac = function (e) {
        return ms(e || ps);
      }),
        (ps.ɵdir = s.Hc({
          type: ps,
          selectors: [
            ["", "gdAuto", ""],
            ["", "gdAuto.xs", ""],
            ["", "gdAuto.sm", ""],
            ["", "gdAuto.md", ""],
            ["", "gdAuto.lg", ""],
            ["", "gdAuto.xl", ""],
            ["", "gdAuto.lt-sm", ""],
            ["", "gdAuto.lt-md", ""],
            ["", "gdAuto.lt-lg", ""],
            ["", "gdAuto.lt-xl", ""],
            ["", "gdAuto.gt-xs", ""],
            ["", "gdAuto.gt-sm", ""],
            ["", "gdAuto.gt-md", ""],
            ["", "gdAuto.gt-lg", ""],
          ],
          inputs: {
            gdAuto: "gdAuto",
            "gdAuto.xs": "gdAuto.xs",
            "gdAuto.sm": "gdAuto.sm",
            "gdAuto.md": "gdAuto.md",
            "gdAuto.lg": "gdAuto.lg",
            "gdAuto.xl": "gdAuto.xl",
            "gdAuto.lt-sm": "gdAuto.lt-sm",
            "gdAuto.lt-md": "gdAuto.lt-md",
            "gdAuto.lt-lg": "gdAuto.lt-lg",
            "gdAuto.lt-xl": "gdAuto.lt-xl",
            "gdAuto.gt-xs": "gdAuto.gt-xs",
            "gdAuto.gt-sm": "gdAuto.gt-sm",
            "gdAuto.gt-md": "gdAuto.gt-md",
            "gdAuto.gt-lg": "gdAuto.gt-lg",
          },
          features: [s.wc],
        }));
      const ms = s.Tc(ps);
      class fs extends ce {
        buildStyles(e) {
          return { "grid-column": e || "auto" };
        }
      }
      (fs.ɵfac = function (e) {
        return gs(e || fs);
      }),
        (fs.ɵprov = Object(s.Ic)({
          factory: function () {
            return new fs();
          },
          token: fs,
          providedIn: "root",
        }));
      const gs = s.Tc(fs);
      class ys extends P {
        constructor(e, t, n, s) {
          super(e, t, n, s),
            (this.DIRECTIVE_KEY = "grid-column"),
            (this.styleCache = vs),
            this.init();
        }
      }
      (ys.ɵfac = function (e) {
        return new (e || ys)(s.Mc(s.v), s.Mc(fs), s.Mc(le), s.Mc(he));
      }),
        (ys.ɵdir = s.Hc({ type: ys, features: [s.wc] })),
        (ys.ctorParameters = () => [
          { type: s.v },
          { type: fs },
          { type: le },
          { type: he },
        ]);
      const vs = new Map(),
        bs = [
          "gdColumn",
          "gdColumn.xs",
          "gdColumn.sm",
          "gdColumn.md",
          "gdColumn.lg",
          "gdColumn.xl",
          "gdColumn.lt-sm",
          "gdColumn.lt-md",
          "gdColumn.lt-lg",
          "gdColumn.lt-xl",
          "gdColumn.gt-xs",
          "gdColumn.gt-sm",
          "gdColumn.gt-md",
          "gdColumn.gt-lg",
        ];
      class xs extends ys {
        constructor() {
          super(...arguments), (this.inputs = bs);
        }
      }
      (xs.ɵfac = function (e) {
        return _s(e || xs);
      }),
        (xs.ɵdir = s.Hc({
          type: xs,
          selectors: [
            ["", "gdColumn", ""],
            ["", "gdColumn.xs", ""],
            ["", "gdColumn.sm", ""],
            ["", "gdColumn.md", ""],
            ["", "gdColumn.lg", ""],
            ["", "gdColumn.xl", ""],
            ["", "gdColumn.lt-sm", ""],
            ["", "gdColumn.lt-md", ""],
            ["", "gdColumn.lt-lg", ""],
            ["", "gdColumn.lt-xl", ""],
            ["", "gdColumn.gt-xs", ""],
            ["", "gdColumn.gt-sm", ""],
            ["", "gdColumn.gt-md", ""],
            ["", "gdColumn.gt-lg", ""],
          ],
          inputs: {
            gdColumn: "gdColumn",
            "gdColumn.xs": "gdColumn.xs",
            "gdColumn.sm": "gdColumn.sm",
            "gdColumn.md": "gdColumn.md",
            "gdColumn.lg": "gdColumn.lg",
            "gdColumn.xl": "gdColumn.xl",
            "gdColumn.lt-sm": "gdColumn.lt-sm",
            "gdColumn.lt-md": "gdColumn.lt-md",
            "gdColumn.lt-lg": "gdColumn.lt-lg",
            "gdColumn.lt-xl": "gdColumn.lt-xl",
            "gdColumn.gt-xs": "gdColumn.gt-xs",
            "gdColumn.gt-sm": "gdColumn.gt-sm",
            "gdColumn.gt-md": "gdColumn.gt-md",
            "gdColumn.gt-lg": "gdColumn.gt-lg",
          },
          features: [s.wc],
        }));
      const _s = s.Tc(xs);
      class ws extends ce {
        buildStyles(e, t) {
          let n = !1;
          (e = e || "none").endsWith("!") &&
            ((e = e.substring(0, e.indexOf("!"))), (n = !0));
          const s = {
            display: t.inline ? "inline-grid" : "grid",
            "grid-auto-columns": "",
            "grid-template-columns": "",
          };
          return (s[n ? "grid-auto-columns" : "grid-template-columns"] = e), s;
        }
      }
      (ws.ɵfac = function (e) {
        return Cs(e || ws);
      }),
        (ws.ɵprov = Object(s.Ic)({
          factory: function () {
            return new ws();
          },
          token: ws,
          providedIn: "root",
        }));
      const Cs = s.Tc(ws);
      class Ss extends P {
        constructor(e, t, n, s) {
          super(e, t, n, s),
            (this.DIRECTIVE_KEY = "grid-columns"),
            (this._inline = !1),
            this.init();
        }
        get inline() {
          return this._inline;
        }
        set inline(e) {
          this._inline = Object(me.b)(e);
        }
        updateWithValue(e) {
          (this.styleCache = this.inline ? ks : Es),
            this.addStyles(e, { inline: this.inline });
        }
      }
      (Ss.ɵfac = function (e) {
        return new (e || Ss)(s.Mc(s.v), s.Mc(ws), s.Mc(le), s.Mc(he));
      }),
        (Ss.ɵdir = s.Hc({
          type: Ss,
          inputs: { inline: ["gdInline", "inline"] },
          features: [s.wc],
        })),
        (Ss.ctorParameters = () => [
          { type: s.v },
          { type: ws },
          { type: le },
          { type: he },
        ]),
        (Ss.propDecorators = { inline: [{ type: s.G, args: ["gdInline"] }] });
      const Es = new Map(),
        ks = new Map(),
        Os = [
          "gdColumns",
          "gdColumns.xs",
          "gdColumns.sm",
          "gdColumns.md",
          "gdColumns.lg",
          "gdColumns.xl",
          "gdColumns.lt-sm",
          "gdColumns.lt-md",
          "gdColumns.lt-lg",
          "gdColumns.lt-xl",
          "gdColumns.gt-xs",
          "gdColumns.gt-sm",
          "gdColumns.gt-md",
          "gdColumns.gt-lg",
        ];
      class Is extends Ss {
        constructor() {
          super(...arguments), (this.inputs = Os);
        }
      }
      (Is.ɵfac = function (e) {
        return Ts(e || Is);
      }),
        (Is.ɵdir = s.Hc({
          type: Is,
          selectors: [
            ["", "gdColumns", ""],
            ["", "gdColumns.xs", ""],
            ["", "gdColumns.sm", ""],
            ["", "gdColumns.md", ""],
            ["", "gdColumns.lg", ""],
            ["", "gdColumns.xl", ""],
            ["", "gdColumns.lt-sm", ""],
            ["", "gdColumns.lt-md", ""],
            ["", "gdColumns.lt-lg", ""],
            ["", "gdColumns.lt-xl", ""],
            ["", "gdColumns.gt-xs", ""],
            ["", "gdColumns.gt-sm", ""],
            ["", "gdColumns.gt-md", ""],
            ["", "gdColumns.gt-lg", ""],
          ],
          inputs: {
            gdColumns: "gdColumns",
            "gdColumns.xs": "gdColumns.xs",
            "gdColumns.sm": "gdColumns.sm",
            "gdColumns.md": "gdColumns.md",
            "gdColumns.lg": "gdColumns.lg",
            "gdColumns.xl": "gdColumns.xl",
            "gdColumns.lt-sm": "gdColumns.lt-sm",
            "gdColumns.lt-md": "gdColumns.lt-md",
            "gdColumns.lt-lg": "gdColumns.lt-lg",
            "gdColumns.lt-xl": "gdColumns.lt-xl",
            "gdColumns.gt-xs": "gdColumns.gt-xs",
            "gdColumns.gt-sm": "gdColumns.gt-sm",
            "gdColumns.gt-md": "gdColumns.gt-md",
            "gdColumns.gt-lg": "gdColumns.gt-lg",
          },
          features: [s.wc],
        }));
      const Ts = s.Tc(Is);
      class As extends ce {
        buildStyles(e, t) {
          return {
            display: t.inline ? "inline-grid" : "grid",
            "grid-gap": e || "0",
          };
        }
      }
      (As.ɵfac = function (e) {
        return Ds(e || As);
      }),
        (As.ɵprov = Object(s.Ic)({
          factory: function () {
            return new As();
          },
          token: As,
          providedIn: "root",
        }));
      const Ds = s.Tc(As);
      class Ms extends P {
        constructor(e, t, n, s) {
          super(e, n, t, s),
            (this.DIRECTIVE_KEY = "grid-gap"),
            (this._inline = !1),
            this.init();
        }
        get inline() {
          return this._inline;
        }
        set inline(e) {
          this._inline = Object(me.b)(e);
        }
        updateWithValue(e) {
          (this.styleCache = this.inline ? Rs : Ps),
            this.addStyles(e, { inline: this.inline });
        }
      }
      (Ms.ɵfac = function (e) {
        return new (e || Ms)(s.Mc(s.v), s.Mc(le), s.Mc(As), s.Mc(he));
      }),
        (Ms.ɵdir = s.Hc({
          type: Ms,
          inputs: { inline: ["gdInline", "inline"] },
          features: [s.wc],
        })),
        (Ms.ctorParameters = () => [
          { type: s.v },
          { type: le },
          { type: As },
          { type: he },
        ]),
        (Ms.propDecorators = { inline: [{ type: s.G, args: ["gdInline"] }] });
      const Ps = new Map(),
        Rs = new Map(),
        js = [
          "gdGap",
          "gdGap.xs",
          "gdGap.sm",
          "gdGap.md",
          "gdGap.lg",
          "gdGap.xl",
          "gdGap.lt-sm",
          "gdGap.lt-md",
          "gdGap.lt-lg",
          "gdGap.lt-xl",
          "gdGap.gt-xs",
          "gdGap.gt-sm",
          "gdGap.gt-md",
          "gdGap.gt-lg",
        ];
      class Ns extends Ms {
        constructor() {
          super(...arguments), (this.inputs = js);
        }
      }
      (Ns.ɵfac = function (e) {
        return Fs(e || Ns);
      }),
        (Ns.ɵdir = s.Hc({
          type: Ns,
          selectors: [
            ["", "gdGap", ""],
            ["", "gdGap.xs", ""],
            ["", "gdGap.sm", ""],
            ["", "gdGap.md", ""],
            ["", "gdGap.lg", ""],
            ["", "gdGap.xl", ""],
            ["", "gdGap.lt-sm", ""],
            ["", "gdGap.lt-md", ""],
            ["", "gdGap.lt-lg", ""],
            ["", "gdGap.lt-xl", ""],
            ["", "gdGap.gt-xs", ""],
            ["", "gdGap.gt-sm", ""],
            ["", "gdGap.gt-md", ""],
            ["", "gdGap.gt-lg", ""],
          ],
          inputs: {
            gdGap: "gdGap",
            "gdGap.xs": "gdGap.xs",
            "gdGap.sm": "gdGap.sm",
            "gdGap.md": "gdGap.md",
            "gdGap.lg": "gdGap.lg",
            "gdGap.xl": "gdGap.xl",
            "gdGap.lt-sm": "gdGap.lt-sm",
            "gdGap.lt-md": "gdGap.lt-md",
            "gdGap.lt-lg": "gdGap.lt-lg",
            "gdGap.lt-xl": "gdGap.lt-xl",
            "gdGap.gt-xs": "gdGap.gt-xs",
            "gdGap.gt-sm": "gdGap.gt-sm",
            "gdGap.gt-md": "gdGap.gt-md",
            "gdGap.gt-lg": "gdGap.gt-lg",
          },
          features: [s.wc],
        }));
      const Fs = s.Tc(Ns);
      class Ls extends ce {
        buildStyles(e) {
          return { "grid-row": e || "auto" };
        }
      }
      (Ls.ɵfac = function (e) {
        return Vs(e || Ls);
      }),
        (Ls.ɵprov = Object(s.Ic)({
          factory: function () {
            return new Ls();
          },
          token: Ls,
          providedIn: "root",
        }));
      const Vs = s.Tc(Ls);
      class Bs extends P {
        constructor(e, t, n, s) {
          super(e, t, n, s),
            (this.DIRECTIVE_KEY = "grid-row"),
            (this.styleCache = zs),
            this.init();
        }
      }
      (Bs.ɵfac = function (e) {
        return new (e || Bs)(s.Mc(s.v), s.Mc(Ls), s.Mc(le), s.Mc(he));
      }),
        (Bs.ɵdir = s.Hc({ type: Bs, features: [s.wc] })),
        (Bs.ctorParameters = () => [
          { type: s.v },
          { type: Ls },
          { type: le },
          { type: he },
        ]);
      const zs = new Map(),
        Hs = [
          "gdRow",
          "gdRow.xs",
          "gdRow.sm",
          "gdRow.md",
          "gdRow.lg",
          "gdRow.xl",
          "gdRow.lt-sm",
          "gdRow.lt-md",
          "gdRow.lt-lg",
          "gdRow.lt-xl",
          "gdRow.gt-xs",
          "gdRow.gt-sm",
          "gdRow.gt-md",
          "gdRow.gt-lg",
        ];
      class Gs extends Bs {
        constructor() {
          super(...arguments), (this.inputs = Hs);
        }
      }
      (Gs.ɵfac = function (e) {
        return Us(e || Gs);
      }),
        (Gs.ɵdir = s.Hc({
          type: Gs,
          selectors: [
            ["", "gdRow", ""],
            ["", "gdRow.xs", ""],
            ["", "gdRow.sm", ""],
            ["", "gdRow.md", ""],
            ["", "gdRow.lg", ""],
            ["", "gdRow.xl", ""],
            ["", "gdRow.lt-sm", ""],
            ["", "gdRow.lt-md", ""],
            ["", "gdRow.lt-lg", ""],
            ["", "gdRow.lt-xl", ""],
            ["", "gdRow.gt-xs", ""],
            ["", "gdRow.gt-sm", ""],
            ["", "gdRow.gt-md", ""],
            ["", "gdRow.gt-lg", ""],
          ],
          inputs: {
            gdRow: "gdRow",
            "gdRow.xs": "gdRow.xs",
            "gdRow.sm": "gdRow.sm",
            "gdRow.md": "gdRow.md",
            "gdRow.lg": "gdRow.lg",
            "gdRow.xl": "gdRow.xl",
            "gdRow.lt-sm": "gdRow.lt-sm",
            "gdRow.lt-md": "gdRow.lt-md",
            "gdRow.lt-lg": "gdRow.lt-lg",
            "gdRow.lt-xl": "gdRow.lt-xl",
            "gdRow.gt-xs": "gdRow.gt-xs",
            "gdRow.gt-sm": "gdRow.gt-sm",
            "gdRow.gt-md": "gdRow.gt-md",
            "gdRow.gt-lg": "gdRow.gt-lg",
          },
          features: [s.wc],
        }));
      const Us = s.Tc(Gs);
      class $s extends ce {
        buildStyles(e, t) {
          let n = !1;
          (e = e || "none").endsWith("!") &&
            ((e = e.substring(0, e.indexOf("!"))), (n = !0));
          const s = {
            display: t.inline ? "inline-grid" : "grid",
            "grid-auto-rows": "",
            "grid-template-rows": "",
          };
          return (s[n ? "grid-auto-rows" : "grid-template-rows"] = e), s;
        }
      }
      ($s.ɵfac = function (e) {
        return qs(e || $s);
      }),
        ($s.ɵprov = Object(s.Ic)({
          factory: function () {
            return new $s();
          },
          token: $s,
          providedIn: "root",
        }));
      const qs = s.Tc($s);
      class Ws extends P {
        constructor(e, t, n, s) {
          super(e, t, n, s),
            (this.DIRECTIVE_KEY = "grid-rows"),
            (this._inline = !1),
            this.init();
        }
        get inline() {
          return this._inline;
        }
        set inline(e) {
          this._inline = Object(me.b)(e);
        }
        updateWithValue(e) {
          (this.styleCache = this.inline ? Qs : Ys),
            this.addStyles(e, { inline: this.inline });
        }
      }
      (Ws.ɵfac = function (e) {
        return new (e || Ws)(s.Mc(s.v), s.Mc($s), s.Mc(le), s.Mc(he));
      }),
        (Ws.ɵdir = s.Hc({
          type: Ws,
          inputs: { inline: ["gdInline", "inline"] },
          features: [s.wc],
        })),
        (Ws.ctorParameters = () => [
          { type: s.v },
          { type: $s },
          { type: le },
          { type: he },
        ]),
        (Ws.propDecorators = { inline: [{ type: s.G, args: ["gdInline"] }] });
      const Ys = new Map(),
        Qs = new Map(),
        Ks = [
          "gdRows",
          "gdRows.xs",
          "gdRows.sm",
          "gdRows.md",
          "gdRows.lg",
          "gdRows.xl",
          "gdRows.lt-sm",
          "gdRows.lt-md",
          "gdRows.lt-lg",
          "gdRows.lt-xl",
          "gdRows.gt-xs",
          "gdRows.gt-sm",
          "gdRows.gt-md",
          "gdRows.gt-lg",
        ];
      class Js extends Ws {
        constructor() {
          super(...arguments), (this.inputs = Ks);
        }
      }
      (Js.ɵfac = function (e) {
        return Xs(e || Js);
      }),
        (Js.ɵdir = s.Hc({
          type: Js,
          selectors: [
            ["", "gdRows", ""],
            ["", "gdRows.xs", ""],
            ["", "gdRows.sm", ""],
            ["", "gdRows.md", ""],
            ["", "gdRows.lg", ""],
            ["", "gdRows.xl", ""],
            ["", "gdRows.lt-sm", ""],
            ["", "gdRows.lt-md", ""],
            ["", "gdRows.lt-lg", ""],
            ["", "gdRows.lt-xl", ""],
            ["", "gdRows.gt-xs", ""],
            ["", "gdRows.gt-sm", ""],
            ["", "gdRows.gt-md", ""],
            ["", "gdRows.gt-lg", ""],
          ],
          inputs: {
            gdRows: "gdRows",
            "gdRows.xs": "gdRows.xs",
            "gdRows.sm": "gdRows.sm",
            "gdRows.md": "gdRows.md",
            "gdRows.lg": "gdRows.lg",
            "gdRows.xl": "gdRows.xl",
            "gdRows.lt-sm": "gdRows.lt-sm",
            "gdRows.lt-md": "gdRows.lt-md",
            "gdRows.lt-lg": "gdRows.lt-lg",
            "gdRows.lt-xl": "gdRows.lt-xl",
            "gdRows.gt-xs": "gdRows.gt-xs",
            "gdRows.gt-sm": "gdRows.gt-sm",
            "gdRows.gt-md": "gdRows.gt-md",
            "gdRows.gt-lg": "gdRows.gt-lg",
          },
          features: [s.wc],
        }));
      const Xs = s.Tc(Js);
      class Zs {}
      (Zs.ɵmod = s.Kc({ type: Zs })),
        (Zs.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || Zs)();
          },
          imports: [[_]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(Zs, {
            declarations: function () {
              return [Sn, Rn, Un, Jn, rs, ps, xs, Is, Ns, Gs, Js];
            },
            imports: function () {
              return [_];
            },
            exports: function () {
              return [Sn, Rn, Un, Jn, rs, ps, xs, Is, Ns, Gs, Js];
            },
          });
      new s.lb("11.0.0-beta.33");
      class ei {
        constructor(e, t) {
          Object(i.A)(t) &&
            !e &&
            console.warn(
              "Warning: Flex Layout loaded on the server without FlexLayoutServerModule"
            );
        }
        static withConfig(e, t = []) {
          return {
            ngModule: ei,
            providers: e.serverLoaded
              ? [
                  {
                    provide: E,
                    useValue: Object.assign(Object.assign({}, S), e),
                  },
                  { provide: O, useValue: t, multi: !0 },
                  { provide: k, useValue: !0 },
                ]
              : [
                  {
                    provide: E,
                    useValue: Object.assign(Object.assign({}, S), e),
                  },
                  { provide: O, useValue: t, multi: !0 },
                ],
          };
        }
      }
      (ei.ɵmod = s.Kc({ type: ei })),
        (ei.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || ei)(s.Yc(k), s.Yc(s.U));
          },
          imports: [[gn, Ue, Zs], gn, Ue, Zs],
        })),
        (ei.ctorParameters = () => [
          { type: Boolean, decorators: [{ type: s.C, args: [k] }] },
          { type: Object, decorators: [{ type: s.C, args: [s.U] }] },
        ]),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(ei, {
            imports: function () {
              return [gn, Ue, Zs];
            },
            exports: function () {
              return [gn, Ue, Zs];
            },
          });
    },
    Ylt2: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      var s = n("quSY");
      class i extends s.a {
        constructor(e, t) {
          super(),
            (this.subject = e),
            (this.subscriber = t),
            (this.closed = !1);
        }
        unsubscribe() {
          if (this.closed) return;
          this.closed = !0;
          const e = this.subject,
            t = e.observers;
          if (
            ((this.subject = null),
            !t || 0 === t.length || e.isStopped || e.closed)
          )
            return;
          const n = t.indexOf(this.subscriber);
          -1 !== n && t.splice(n, 1);
        }
      }
    },
    ZSlC: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return A;
      });
      var s = n("mrSG"),
        i = n("0IaG"),
        r = n("fXoL"),
        o = n("ofXK"),
        a = n("d0en"),
        l = n("tyNb"),
        c = n("uZrY"),
        u = n("xKP8"),
        d = n("3Pt+"),
        h = n("ZVe6"),
        p = n("bUSd"),
        m = n("0pfW");
      let f = class {
        constructor(e, t, n, s, i, r, o) {
          (this._FreeTrial = e),
            (this._FormsBuilder = t),
            (this.shared = n),
            (this.subscriptionService = s),
            (this.dialog = i),
            (this.router = r),
            (this.clevertap = o),
            (this.isSubscription = !1),
            (this.showOtpSection = !1),
            (this.showclassSection = !1),
            (this.submitted = !1),
            (this.goToAppSubmit = !1),
            (this.numericCode = "+91"),
            (this.noSelect = !1),
            (this.showOtpError = !1),
            (this.showResendOtpOption = !1),
            (this.showEmail = !1),
            (this.formInput = ["input1", "input2", "input3", "input4"]),
            (this.nameMinLength = 4),
            (this.countryNames = {}),
            (this.enableOtpButton = !0),
            (this.enableErrorBorder = !1),
            (this.captchaVerificationToken = ""),
            (this.CONST_ALLOWEDSCIENCEGRADES = [6, 7, 8, 9, 10]),
            (this.CONST_ALLOWEDENGLISHGRADES = [4, 5, 6, 7, 8, 9]),
            (this.CONST_ALLOWEDMATHSGRADES = [
              1,
              2,
              3,
              4,
              5,
              ...this.CONST_ALLOWEDSCIENCEGRADES,
            ]),
            (this.isCaptchaVerified = !1),
            (this.showGetOtpLoader = !1),
            (this.verifyLoader = !1),
            (this.createUserLoader = !1),
            (this.classes = [
              { class: "Select Class" },
              { class: "Class 1" },
              { class: "Class 2" },
              { class: "Class 3" },
              { class: "Class 4" },
              { class: "Class 5" },
              { class: "Class 6" },
              { class: "Class 7" },
              { class: "Class 8" },
              { class: "Class 9" },
              { class: "Class 10" },
            ]),
            (this.syllabus = [
              { syllabusType: "Select Syllabus" },
              { syllabusType: "ICSE" },
              { syllabusType: "CBSE" },
              { syllabusType: "IGCSE" },
            ]),
            (this.listList = this.syllabus),
            (this.otpBoxform = this.toFormGroup(this.formInput)),
            (this.classSelect = this.classes[0].class),
            (this.syllabusSelect = this.syllabus[0].syllabusType),
            (this.whatsAppConsent = !0),
            (this.whatsappValue = "1");
        }
        resolvedCaptcha(e) {
          e.length > 0
            ? ((this.isCaptchaVerified = !0),
              (this.enableErrorBorder = !1),
              (this.captchaVerificationToken = e))
            : (this.enableErrorBorder = !0);
        }
        ngOnInit() {
          this.isSubscription
            ? (this.otpForm = this._FormsBuilder.group({
                phoneNumber: new d.c("", [
                  d.m.required,
                  d.m.pattern(/^[1-9][0-9]*$/),
                ]),
              }))
            : (this.otpForm = this._FormsBuilder.group({
                studentName: new d.c("", [
                  d.m.required,
                  d.m.minLength(this.nameMinLength),
                  d.m.pattern(/^[a-zA-Z]+(?: [a-zA-Z]+)*$/),
                ]),
                phoneNumber: new d.c("", [
                  d.m.required,
                  d.m.pattern(/^[1-9][0-9]*$/),
                ]),
              })),
            (this.classSelectForm = this._FormsBuilder.group({
              classSelect: new d.c("", [d.m.required]),
              syllabusSelect: new d.c("", [d.m.required]),
              email: new d.c("", [d.m.required, d.m.email]),
            })),
            (this.allCountries = this.shared.getCountries().subscribe((e) => {
              let t = [],
                n = {};
              for (let s of e)
                if (s.callingCodes.length > 0) {
                  let e = Number(s.callingCodes[0]);
                  e &&
                    !t.includes(e) &&
                    ((n["+" + e.toString()] = s.name), t.push(e));
                }
              (t = t.sort(function (e, t) {
                return e - t;
              })),
                (this.countryNames = n),
                (this.countryCodes = t);
            })),
            this._FreeTrial.showSendOtp.subscribe(() => {
              this.showResendOtpOption = !0;
            }),
            this.setMinlength();
        }
        setMinlength() {
          "+91" == this.numericCode
            ? (this.phoneMinLength = 10)
            : (this.phoneMinLength = 4);
        }
        toFormGroup(e) {
          const t = {};
          return (
            e.forEach((e) => {
              t[e] = new d.c("", d.m.required);
            }),
            new d.d(t)
          );
        }
        keyUpEvent(e, t) {
          let n = t;
          (n = 8 === e.keyCode && 8 === e.which ? t - 1 : t + 1),
            n > -1 &&
              n < this.formInput.length &&
              this.rows._results[n].nativeElement.focus();
        }
        get f() {
          return this.otpForm.controls;
        }
        get o() {
          return this.otpBoxform.controls;
        }
        get c() {
          return this.classSelectForm.controls;
        }
        onSubmit() {
          (this.submitted = !0),
            (this.enableErrorBorder = !this.isCaptchaVerified),
            !this.otpForm.invalid && this.isCaptchaVerified && this.sendOtp();
        }
        sendOtp() {
          if (this.showGetOtpLoader) return;
          this.showGetOtpLoader = !0;
          let e = this.countryNames[this.numericCode];
          this._FreeTrial
            .sendOTP(
              this.phoneNumber,
              this.numericCode,
              e,
              this.captchaVerificationToken
            )
            .subscribe((e) => {
              (this.showGetOtpLoader = !1),
                "Success" == e.status
                  ? ((this.showOtpError = !1),
                    (this.freetrialResult = e),
                    (this.noSelect = !0),
                    (this.showOtpSection = !0),
                    (this.showResendOtpOption = !1),
                    this.scrollToTop())
                  : (this.showOtpError = !0);
            });
        }
        scrollToTop() {
          /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
            navigator.userAgent
          ) && window.scrollTo(0, 0);
        }
        editPhoneNumber() {
          (this.noSelect = !1),
            (this.showOtpSection = !1),
            (this.showResendOtpOption = !0),
            (this.isCaptchaVerified = !1),
            (this.captchaVerificationToken = "");
        }
        onOtpSubmit() {
          (this.otpBoxform.value.input1 ||
            this.otpBoxform.value.input2 ||
            this.otpBoxform.value.input3 ||
            this.otpBoxform.value.input4) &&
            (this.verifyLoader ||
              this.showGetOtpLoader ||
              ((this.verifyLoader = !0),
              (this.otpValue =
                "" +
                this.otpBoxform.value.input1 +
                this.otpBoxform.value.input2 +
                this.otpBoxform.value.input3 +
                this.otpBoxform.value.input4),
              this._FreeTrial
                .verifyEnteredOtp(
                  this.phoneNumber,
                  this.numericCode,
                  this.otpValue
                )
                .subscribe((e) => {
                  if (((this.verifyLoader = !1), "success" == e.status)) {
                    this.showOtpError = !1;
                    let t = this.countryNames[this.numericCode];
                    if (
                      (this.subscriptionService.updateBasicInfo(
                        "contryCode",
                        this.numericCode
                      ),
                      this.subscriptionService.updateBasicInfo(
                        "countryName",
                        t
                      ),
                      this.subscriptionService.updateBasicInfo(
                        "phone",
                        this.phoneNumber
                      ),
                      this.subscriptionService.updateBasicInfo(
                        "isNumberVerified",
                        "true"
                      ),
                      this.isSubscription)
                    ) {
                      let t = e.userData;
                      t && t.length > 0 && this.isSubscription
                        ? this.subscriptionService.showPopUp(t)
                        : this.subscriptionService.updateState("basicInfo");
                    } else this.showclassSection = !this.showclassSection;
                    this.scrollToTop();
                  } else this.showOtpError = !0;
                })));
        }
        updateClassName() {
          (this.classGrade = this.subscriptionService.getClassId(
            this.classSelect
          )),
            6 == this.classGrade ||
            7 == this.classGrade ||
            8 == this.classGrade ||
            9 == this.classGrade ||
            10 == this.classGrade
              ? (this.listList = this.syllabus.slice(0, -1))
              : (this.listList = this.syllabus),
            this.classSelect != this.classes[0].class &&
              this.syllabusSelect != this.syllabus[0].syllabusType &&
              this.classSelect &&
              this.syllabusSelect &&
              (this.showEmail = !0);
        }
        onClassSubmit() {
          if (((this.goToAppSubmit = !0), this.classSelectForm.invalid)) return;
          let e = this.countryNames[this.numericCode];
          if (this.createUserLoader) return;
          this.createUserLoader = !0;
          let t = +this.classGrade,
            n = "",
            s = "";
          this.CONST_ALLOWEDMATHSGRADES.includes(t) &&
            ((n = "Mindspark"), (s = "MS1")),
            this.CONST_ALLOWEDENGLISHGRADES.includes(t) &&
              ("" == n
                ? ((n = "MSE"), (s = "MS2"))
                : ((n += ",MSE"), (s += ",MS2"))),
            this.CONST_ALLOWEDSCIENCEGRADES.includes(t) &&
              "IGCSE" != this.syllabusSelect &&
              ("" == n
                ? ((n = "MSS"), (s = "MS3"))
                : ((n += ",MSS"), (s += ",MS3"))),
            this.whatsAppConsent
              ? (this.whatsappValue = "1")
              : (this.whatsappValue = "0"),
            this._FreeTrial
              .createUser(
                this.phoneNumber,
                this.numericCode,
                this.studentName,
                this.email,
                this.classGrade,
                this.syllabusSelect,
                e,
                this.whatsappValue,
                this.subscriptionService.utmParams
              )
              .subscribe((e) => {
                if ("success" == e.status) {
                  let t = e.userData,
                    i = e.trailPeriod,
                    r = t.username,
                    o = new Date(),
                    a = o;
                  o.setTime(o.getTime() + 24 * i * 60 * 60 * 1e3);
                  let l = o.toUTCString(),
                    c = {
                      phoneNumber: this.numericCode + " " + this.phoneNumber,
                      studentName: this.studentName,
                      email: this.email,
                      grade: this.classGrade,
                      syllabus: this.syllabusSelect,
                      userName: r,
                      trailPeriod: i,
                      trailStartDate: a.toUTCString(),
                      trailEndDate: l,
                      utmparams: this.subscriptionService.utmParams,
                      whatsappValue: this.whatsappValue,
                    };
                  this.clevertap.setUserProfile(c),
                    this._FreeTrial.getJwtToken(r, n).subscribe((e) => {
                      let t = e.redirectionData.JWT;
                      (this.createUserLoader = !1),
                        this.subscriptionService.updateJWT(t),
                        this.router.navigate(["/free-trial/thank-you"], {
                          queryParams: { trial: i, pid: s },
                        });
                    });
                } else if (((this.createUserLoader = !1), "-666" == e.code)) {
                  this.subscriptionService.updateSyllabus(this.syllabusSelect),
                    this.subscriptionService.updateApiClass(this.classGrade),
                    this.subscriptionService.updateClass(
                      "Class " + this.classGrade
                    );
                  let t = e.data || [];
                  this.dialog
                    .open(c.a, {
                      data: { students: t },
                      disableClose: !0,
                      autoFocus: !1,
                      maxHeight: "95vh",
                      maxWidth: "95vw",
                    })
                    .afterClosed()
                    .subscribe((e) => {
                      e &&
                        Object.keys(e).length > 0 &&
                        this.subscriptionService.updateActiveStudent(e),
                        this._FreeTrial.updateState("payment");
                    });
                }
              });
        }
      };
      (f.ctorParameters = () => [
        { type: h.a },
        { type: d.b },
        { type: p.a },
        { type: u.a },
        { type: i.b },
        { type: l.b },
        { type: m.a },
      ]),
        (f.propDecorators = {
          isSubscription: [{ type: r.G, args: ["subscription"] }],
          rows: [{ type: r.nb, args: ["formRow"] }],
        }),
        (f = Object(s.a)(
          [
            Object(r.n)({
              selector: "app-login-free-trial",
              template:
                '<div class="freeTrialContainer">\n    <div fxLayout="row" fxLayout.sm="column" fxLayout.xs="column" class="freeTrialWrapper">\n        <mat-card fxFlex="50" fxFlex.xs="none" class="leftContainer">\n            <div class="leftContent">\n                <img loading="lazy" class="freeImage" src="assets/images/freeTrial.svg" alt="student Icon" />\n            </div>\n        </mat-card>\n\n        <div class="loginForm" fxFlex="50" fxFlex.xs="none">\n            <form [formGroup]="otpForm" *ngIf="!showclassSection" (ngSubmit)="onSubmit()">\n                <div class="freeTrialHeading mb-xs-2">\n                    <p class="loginTitle" [ngStyle.xs]="{\'font-size\':\'28px\'}">Welcome to Ei Mindspark</p>\n                    \x3c!-- <p class="loginsubTitle" [ngStyle.xs]="{\'font-size\':\'14px\'}"> Please enter your phone number to get\n                        an OTP.\n                    </p> --\x3e\n                </div>\n\n                <div class="inputField" *ngIf="!isSubscription">\n                    <label>Student Name</label>\n                    <mat-form-field appearance="fill">\n\n                        <input type="text" [readonly]="noSelect" name="studentName" matInput\n                            class="form-control studentName "\n                            [ngClass]="{ \'is-invalid\': submitted && f.studentName.errors }" [(ngModel)]="studentName"\n                            formControlName="studentName" placeholder="Full name of student"\n                            minlength={{nameMinLength}} />\n                        <div *ngIf="f.studentName.errors" class="invalid-feedback">\n                            <div *ngIf="f.studentName.errors.required">Username Name is required</div>\n                        </div>\n                        <div *ngIf="f.studentName.errors?.pattern" class="invalid-feedback">\n                            <div *ngIf="f.studentName.errors?.pattern">Please enter a valid name</div>\n                        </div>\n                        <div *ngIf="!f.studentName.errors?.required && !f.studentName.errors?.pattern && !f.studentName?.valid"\n                            class="invalid-feedback">\n                            <div>minimum length required is {{nameMinLength}}</div>\n                        </div>\n                        <div class="editBtn" *ngIf="noSelect" (click)="editPhoneNumber()">\n                            Edit\n                        </div>\n                    </mat-form-field>\n\n                </div>\n                <div class="inputField">\n                    <label>Phone Number</label>\n                    <div class="phoneDetail" [ngClass]="{ \'is-invalid\': submitted && f.phoneNumber.errors }"\n                        fxLayout="row">\n                        \x3c!-- <input name="countryCode" value="+91" [(ngModel)]="countryCode" class="countryCode form-control" formControlName="countryCode" matInput placeholder="Enter your phone"> --\x3e\n                        <mat-form-field class="numericCode" appearance="fill">\n\n                            <select [(ngModel)]="numericCode" [ngModelOptions]="{standalone: true}"\n                                [disabled]="noSelect" (change)="setMinlength()" matNativeControl>\n                                <option *ngFor="let inTel of countryCodes;let p =  index" [selected]="p==\'41\'">\n                                    +{{inTel}}\n                                </option>\n                            </select>\n                        </mat-form-field>\n                        <span class="vertical"></span>\n\n                        <mat-form-field appearance="fill">\n                            <input class="phoneNumber" matInput name="phoneNumber" placeholder="Enter Parent Mobile"\n                                value="{{phoneNumber}}" spellcheck="false" [(ngModel)]="phoneNumber"\n                                formControlName="phoneNumber" [readonly]="noSelect" (input)="setMinlength()"\n                                minlength={{phoneMinLength}} maxlength="{{numericCode === \'+91\' ? phoneMinLength : 15}}"/>\n                        </mat-form-field>\n                    </div>\n                    <div *ngIf="f.phoneNumber.errors?.required " class="invalid-feedback ">\n                        <div *ngIf="f.phoneNumber.errors.required ">Phone Number is required</div>\n                    </div>\n                    <div *ngIf="f.phoneNumber.errors?.pattern" class="invalid-feedback">\n                        <div *ngIf="f.phoneNumber.errors?.pattern">Please enter a valid phone Number</div>\n                    </div>\n                    <div *ngIf="!f.phoneNumber.errors?.required && !f.phoneNumber.errors?.pattern && !f.phoneNumber?.valid"\n                        class="invalid-feedback">\n                        <div>minimum length required is {{phoneMinLength}}</div>\n                    </div>\n                    <div class="editBtn" *ngIf="noSelect && isSubscription" (click)="editPhoneNumber()">\n                        Edit\n                    </div>\n                </div>\n                \n                <div class="form-group" *ngIf="showOtpSection==false ">\n                    <p *ngIf="showOtpError" class="serverError">Oops, something went wrong please try again</p>\n                    \x3c!-- <button (click)="executeImportantAction()">Important action</button> --\x3e\n                    <div class="captcha-wrapper"\n                    [style.border]="enableErrorBorder ? \'2px solid red\' : \'none\'"\n                    >\n                        <re-captcha (resolved)="resolvedCaptcha($event)" errorMode="handled" ></re-captcha>\n                    </div>\n\n                    <button class="btn sendOtp" [disabled]="showGetOtpLoader">\n                        <div fxLayout="row">\n                            <div>Get OTP</div>\n                            <app-loader *ngIf="showGetOtpLoader"></app-loader>\n                        </div>\n                    </button>\n                </div>\n                \x3c!-- *ngIf="showOtpSection==true " --\x3e\n                <div *ngIf="showOtpSection==true" class="otpSection ">\n                    <div> Please enter the OTP received </div>\n                    <form (ngSubmit)="onOtpSubmit()" [formGroup]="otpBoxform">\n\n                        <div class="row">\n                            <div class="form-group  is-invalid" *ngFor="let input of formInput;  index as i">\n                                <input #formRow type="password" formControlName="{{input}}" class="form-control otp "\n                                    maxlength="1" (keyup)="keyUpEvent($event, i)" inputmode="numeric">\n                            </div>\n                        </div>\n                        <button class="btn sendOtp" *ngIf="showResendOtpOption" (click)="sendOtp()">\n                            <div fxLayout="row">\n                                <div>Resend OTP</div>\n                                <app-loader *ngIf="showGetOtpLoader"></app-loader>\n                            </div>\n                        </button>\n                        <div class="otpText" *ngIf="!showResendOtpOption">\n                            This OTP expires in <b>\n                                <app-countdown-timer></app-countdown-timer>\n                            </b> minutes\n                        </div>\n                        <p class="invalid" *ngIf="showOtpError==true">OTP is invalid. Please check and enter the valid\n                            OTP</p>\n                        <button class="sendOtp" (click)="onOtpSubmit()" *ngIf="otpBoxform.status!==\'INVALID\' && !showResendOtpOption"\n                            mat-button [disabled]="verifyLoader">\n                            <div class="btnContent">\n                                <div>Verify</div>\n                                <app-loader *ngIf="verifyLoader"></app-loader>\n                            </div>\n                        </button>\n                    </form>\n                </div>\n            </form>\n            \x3c!-- *ngIf="showclassSection==true"  --\x3e\n            <div *ngIf="showclassSection==true" class="classSection ">\n                <form [formGroup]="classSelectForm" (ngSubmit)="onClassSubmit()">\n                    <span *ngIf="showEmail==false" class="classTitle ">Select Class</span>\n                    <span *ngIf="showEmail==true" class="classTitle ">Almost Done!</span>\n                    <div class="inputField ">\n                        <label>Class</label>\n                        <mat-form-field formControlName="classSelect" class="classSelect is-invalid"\n                            [ngClass]="{ \'is-invalid\': goToAppSubmit && c.classSelect.errors }" ngDefaultControl>\n                            <select [(ngModel)]="classSelect" matNativeControl required\n                                [ngModelOptions]="{standalone: true}" (change)="updateClassName()">\n                                <option *ngFor="let grade of classes;let i=index" [disabled]="i==0">{{grade.class}}\n                                </option>\n                            </select>\n                            \x3c!-- <select [(ngModel)]="classSelect" [ngModelOptions]="{standalone: true}" (change)="updateClassName()" matNativeControl required>\n                            <option *ngFor="let grade of classes;let i=index" [disabled]="i==0" >{{grade.class}}</option>\n                        </select> --\x3e\n                        </mat-form-field>\n                    </div>\n\n                    <div class="inputField ">\n                        <label>Syllabus</label>\n                        <mat-form-field formControlName="syllabusSelect" class="classSelect"\n                            [ngClass]="{ \'is-invalid\':  goToAppSubmit && c.syllabusSelect.errors }" appearance="fill "\n                            ngDefaultControl>\n                            <select [(ngModel)]="syllabusSelect" [ngModelOptions]="{standalone: true}"\n                                (change)="updateClassName()" matNativeControl required>\n                                <option *ngFor="let type of listList;let i= index" [disabled]="i==0"\n                                    [ngValue]="type.syllabusType">{{type.syllabusType}}</option>\n                            </select>\n                        </mat-form-field>\n                    </div>\n                    <div *ngIf="showEmail==true">\n                        <div class="inputField is-invalid ">\n                            <label class="email">Email</label>\n                            <mat-form-field appearance="fill ">\n                                <input type="email" name="email" matInput\n                                    [ngClass]="{ \'is-invalid\':  goToAppSubmit && c.email.errors }" [(ngModel)]="email"\n                                    class="emailField" formControlName="email" placeholder="Enter your email ">\n                                <div *ngIf="c.email.errors?.required" class="invalid-feedback">\n                                    <div *ngIf="c.email.errors?.required">Email is required</div>\n                                </div>\n                                <div *ngIf="c.email.errors?.email" class="invalid-feedback">\n                                    <div>Please enter a valid email</div>\n                                </div>\n                            </mat-form-field>\n                        </div>\n                        <div class="emailInfo ">\n                            We will be sending your Ei Mindspark username and password to your email address.\n                        </div><br/>\n                        <div class="whatsappInfo">\n                            <input id="whatsapp" type="checkbox" [checked]="whatsAppConsent" [ngModelOptions]="{standalone: true}"\n                                (change)="whatsAppConsent = !whatsAppConsent">\n                            <label>\n                                Get important updates on WhatsApp.\n                            </label>\n                        </div>\n\n                        <div mat-button class="form-group" class=" ">\n                            <button class="btn sendOtp goTo" [disabled]="createUserLoader">\n                                <div class="btnContent">\n                                    <div>\n                                        Sign me up!\n                                    </div>\n                                    <app-loader *ngIf="createUserLoader"></app-loader>\n                                </div>\n                            </button>\n                        </div>\n                        <div class="greyText pb-2">By proceeding you agree to our <a\n                            href="https://mindspark-ei.s3.ap-southeast-1.amazonaws.com/website/2020%20EI_Mindspark_website_TnC.pdf"\n                            target="_blank" class="blueText"><span class="one-space"></span>Terms of Use<span\n                                class="one-space"></span></a> and <a target="_blank"\n                            href="https://mindspark-ei.s3.ap-southeast-1.amazonaws.com/website/Privacy_Policy_Document_2021.pdf"\n                            class="blueText"><span class="one-space"></span>Privacy Policy<span></span>.<span\n                                class="one-space"></span></a>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>',
              styles: [
                ".freeTrialContainer {\n  display: flex;\n  justify-content: center;\n}\n\n.freeTrialWrapper {\n  width: 1302px;\n  margin-top: 80px;\n  margin: 40px 80px 60px 80px;\n}\n\n.leftContainer {\n  border-radius: 24px;\n  background-color: #fdefe0;\n  padding: 60px 113px 0px 113px;\n}\n\n.captcha-wrapper {\n  width: -webkit-max-content;\n  width: max-content;\n}\n\n.editBtn {\n  margin-top: 8px;\n  font-size: 16px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.5;\n  letter-spacing: normal;\n  text-align: left;\n  color: #28a7df;\n  display: flex;\n  justify-content: flex-end;\n  cursor: pointer;\n}\n\n.editBtn:hover {\n  text-decoration: underline;\n}\n\ninput:-webkit-autofill,\ninput:-webkit-autofill:hover,\ninput:-webkit-autofill:focus,\ninput:-webkit-autofill:active {\n  -webkit-box-shadow: 0 0 0 50px white inset !important;\n}\n\n.leftContent {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.loginTitle {\n  font-family: Manrope;\n  font-size: 32px;\n  font-weight: bold;\n  line-height: 1.38;\n  color: #212121;\n}\n\n.loginsubTitle {\n  font-size: 16px;\n  line-height: 1.5;\n  color: #969696;\n}\n\n.loginForm {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 25px;\n}\n\nlabel {\n  text-align: left;\n  height: 22px;\n  font-family: Manrope;\n  font-size: 16px;\n  line-height: 1.5;\n  color: #969696;\n}\n\n.freeImage {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 320px;\n}\n\n.sendOtp {\n  margin: 50px 0 0 266px;\n  padding: 18px 37px 16px;\n  border-radius: 30px;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);\n  border: 0;\n  background-image: linear-gradient(257deg, #ff3449, #b91e1e);\n  text-align: center;\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n}\n\n.sendOtp:hover {\n  background-image: linear-gradient(257deg, #ff3449, #b91e1ec2);\n}\n\n.btnContent {\n  display: flex;\n  justify-content: center;\n}\n\n.countryCode {\n  border: none;\n  margin: 0px 1.7px;\n}\n\n::ng-deep .sendOtp {\n  cursor: pointer !important;\n}\n\n.phoneNumber {\n  border: none !important;\n  height: 20px;\n}\n\n.phoneDetail {\n  border: 1px solid #ced4da;\n  padding: 12px;\n  border-radius: 1rem;\n  height: 75px;\n}\n\n.vertical {\n  border-left: solid 0.5px #707070;\n  margin: 11px;\n  color: #707070;\n}\n\n.is-invalid {\n  border-color: #dc3545;\n}\n\n.invalid {\n  color: #dc3545;\n  text-align: center;\n}\n\n.otp {\n  margin: 10px;\n  text-align: center;\n  height: 56px;\n  width: 63px;\n}\n\n.otpText {\n  height: 22px;\n  margin: 24px 0px;\n  font-family: Manrope;\n  font-size: 16px;\n  line-height: 1.5;\n  text-align: left;\n  color: #969696;\n}\n\n.otpSection {\n  margin: 30px 0px;\n}\n\n.serverError {\n  margin-bottom: 8px;\n  color: red;\n  font-size: 16px;\n  line-height: 1.5;\n}\n\n.mindsparkLogo {\n  margin-bottom: 60px;\n}\n\n.goTo {\n  margin: 28px 0px;\n  width: 100%;\n}\n\nmat-form-field {\n  border-radius: 16px;\n  padding: 0em;\n  background-color: #ffff;\n  width: 100%;\n}\n\n.btn {\n  color: #ffff;\n}\n\n::ng-deep.mat-form-field-appearance-fill .mat-form-field-flex {\n  background-color: #ffff;\n  padding: 2px !important;\n}\n\n::ng-deep .mat-form-field-underline {\n  display: none;\n}\n\n.mat-form-field-type-mat-native-select .mat-input-element {\n  padding-right: 0px;\n  font-size: 16px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n}\n\ninput {\n  border: 1px solid #ced4da;\n  padding: 13px 10px;\n}\n\n::ng-deep.mat-form-field-wrapper {\n  padding-bottom: 0.5em;\n}\n\n.mat-form-field-appearance-fill .mat-form-field-flex {\n  border-radius: 4px 4px 0 0;\n  /* padding: .75em .75em 0 .75em; */\n}\n\n.inputField {\n  margin: 20px 0px;\n}\n\n::ng-deep.mat-form-field-appearance-fill .mat-form-field-infix {\n  padding: 0.25em 0 0.95em 0 !important;\n  border-top: 0.3em solid transparent;\n}\n\n.form-control {\n  border-radius: 1rem;\n}\n\n.classTitle {\n  font-family: Manrope;\n  font-size: 32px;\n  font-weight: bold;\n  text-align: left;\n  color: #212121;\n}\n\n.emailInfo {\n  text-align: left;\n  color: #868686;\n  font-size: 16px;\n  width: 100%;\n}\n\n.studentName {\n  height: 65px;\n  padding: 22px;\n}\n\n.numericCode {\n  width: 50px;\n  margin-top: 4px;\n}\n\n.emailField {\n  height: 73px;\n  border-radius: 13px;\n}\n\n.email {\n  margin-bottom: 0px;\n}\n\n.classSelect {\n  border: 1px solid #ced4da;\n  padding: 6px 16px;\n}\n\n.topPlus {\n  padding-top: 7px;\n}\n\n.is-invalid {\n  border-color: #dc3545 !important;\n}\n\n.freeTrialHeading {\n  margin-bottom: 60px;\n}\n\n::ng-deep .mat-form-field-appearance-legacy .mat-form-field-wrapper {\n  padding-bottom: 0px;\n}\n\n::ng-deep .mat-form-field-appearance-legacy .mat-form-field-infix {\n  padding-bottom: 18px;\n}\n\n.whatsappInfo input {\n  margin-right: 5px;\n  cursor: pointer;\n}\n\n@media only screen and (max-width: 767px) {\n  .freeTrialWrapper {\n    width: 100%;\n    margin: 0;\n  }\n\n  .freeImage {\n    width: 180.4px;\n    height: 253px;\n  }\n\n  .mat-card {\n    width: 100%;\n  }\n\n  .leftContainer {\n    border-radius: 0px;\n    margin: 0px;\n    padding: 20px 80px 0px 80px;\n  }\n\n  .mindsparkLogo {\n    margin: 10px 24px;\n    position: absolute;\n  }\n\n  .loginForm {\n    padding: 20px;\n    margin-left: 0px;\n  }\n\n  .sendOtp {\n    margin: 32px auto;\n    width: 100%;\n  }\n\n  label {\n    width: 100%;\n    margin: 7px;\n  }\n\n  .inputField {\n    margin: 0;\n  }\n\n  .loginTitle {\n    margin-bottom: 4px;\n  }\n\n  .freeTrialHeading {\n    margin-bottom: 30px;\n  }\n}",
              ],
            }),
          ],
          f
        ));
      var g = n("YUcS"),
        y = n("NFeN"),
        v = n("bTqV"),
        b = n("XhcP"),
        x = n("/t3+"),
        _ = n("Wp6s"),
        w = n("kmnG"),
        C = n("qFsG"),
        S = n("d3UM");
      let E = class {
        constructor() {
          (this.showOtpSection = !1),
            (this.signin = new d.d({
              email: new d.c("", [d.m.email, d.m.required]),
              password: new d.c("", [d.m.required, d.m.min(3)]),
            })),
            (this.hide = !0);
        }
        get emailInput() {
          return this.signin.get("email");
        }
        get passwordInput() {
          return this.signin.get("password");
        }
        ngOnInit() {}
      };
      (E.ctorParameters = () => []),
        (E = Object(s.a)(
          [
            Object(r.n)({
              selector: "app-otp-login-free-trial",
              template:
                '<div fxLayout="row" class="loginContainer">\n    <mat-card fxFlex="50" class="leftContainer">\n        <div>\n            <img class="mindsparkLogo" src="assets/images/logo_dark.png" alt="Mindspark" />\n        </div>\n        <img class="otpImage" src="assets/images/otp.svg" alt="student Icon" />\n    </mat-card>\n\n    <div class="loginForm" fxFlex="50">\n\n        <form>\n            <div *ngIf="showOtpSection==false" class="passwordForm">\n                <div class="mb-5">\n                    <p class=" loginTitle">Login with Password</p>\n                </div>\n                <div class="inputField">\n                    <label>Student Name</label>\n                    <mat-form-field appearance="fill">\n                        <input matInput type="name" id="defaultLoginFormEmail" class="" placeholder="Enter your username">\n                    </mat-form-field>\n                </div>\n                <div class="inputField">\n                    <label>Password</label>\n                    <mat-form-field appearance="fill">\n                        <input matInput [type]="hide ? \'password\' : \'text\'">\n                        <button mat-icon-button matSuffix (click)="hide = !hide" [attr.aria-label]="\'Hide password\'" [attr.aria-pressed]="hide">\n                            <mat-icon>{{hide ? \'visibility_off\' : \'visibility\'}}</mat-icon>\n                        </button>\n                    </mat-form-field>\n                </div>\n                <div class="sendOtp ">\n                    <div mat-button>Verify</div>\n                </div>\n            </div>\n            <div *ngIf="showOtpSection==true" class="OtpForm">\n\n                <div class="mb-5">\n                    <p class=" loginTitle">Login with OTP</p>\n                </div>\n                <label>Phone Number</label>\n                <div class="phoneDetail" fxLayout="row">\n                    <input value="+91" class="countryCode form-control" matInput placeholder="Enter your phone">\n                    <span class="vertical"></span>\n                    <input matInput class="phoneNumber form-control" placeholder="Enter your phone number">\n                </div>\n                <div class="otpSection ">\n                    <div> Please enter the OTP received </div>\n                    <div fxLayout="row ">\n                        <input type="password " class="form-control otp " placeholder="0 " maxlength="1 " />\n                        <input type="password " class="form-control otp " placeholder="0 " maxlength="1 " />\n                        <input type="password " class="form-control otp " placeholder="0 " maxlength="1 " />\n                        <input type="password " class="form-control otp " placeholder="0 " maxlength="1 " />\n                    </div>\n                    <div class="otpText ">\n                        <div> Did not receive OTP?<span class="blueText">Resend</span> </div>\n                    </div>\n                    <div class="sendOtp ">\n                        <div mat-button>Login</div>\n                    </div>\n                </div>\n\n            </div>\n        </form>\n        <div *ngIf="showOtpSection==false" (click)="showOtpSection=! showOtpSection; " mat-button class="logintext ">\n            Login with OTP</div>\n        <div *ngIf="showOtpSection==true" (click)="showOtpSection=! showOtpSection; " mat-button class=" logintext ">\n            Login with password</div>\n    </div>\n\n</div>',
              styles: [
                ".leftContainer {\n  width: 636px;\n  border-radius: 24px;\n  background-color: #e0f2fd;\n  margin: 20px;\n  padding: 10px 20px;\n}\n\n.loginTitle {\n  width: 350px;\n  height: 44px;\n  font-family: Manrope;\n  font-size: 32px;\n  font-weight: bold;\n  line-height: 1.38;\n  letter-spacing: normal;\n  color: #212121;\n}\n\n.loginsubTitle {\n  width: 343px;\n  height: 22px;\n  font-family: Manrope;\n  font-size: 16px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.5;\n  letter-spacing: normal;\n  color: #969696;\n}\n\n.loginForm {\n  padding: 30px;\n  padding: 95px 84px;\n}\n\nlabel {\n  text-align: left;\n  width: 109px;\n  height: 22px;\n  margin: 0 305px 12px 0;\n  font-family: Manrope;\n  font-size: 16px;\n  line-height: 1.5;\n  color: #969696;\n}\n\n.otpImage {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 126px;\n}\n\n.sendOtp {\n  margin: 50px 0 0 266px;\n  padding: 18px 37px 16px;\n  border-radius: 30px;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);\n  border: solid 1px rgba(244, 124, 48, 0.29);\n  background-image: linear-gradient(257deg, #ff3449, #b91e1e);\n  text-align: center;\n  color: white;\n  width: 148px;\n}\n\n.countryCode {\n  width: 9%;\n  border: none;\n  margin: 0px 1.7px;\n}\n\n.phoneNumber {\n  border: none;\n}\n\n.phoneDetail {\n  border: 1px solid #ced4da;\n  padding: 12px;\n  border-radius: 1rem;\n}\n\n.vertical {\n  border-left: solid 0.5px #707070;\n  margin: 11px;\n  color: #707070;\n}\n\n.otp {\n  margin: 10px;\n  text-align: center;\n}\n\n.otpText {\n  width: 414px;\n  height: 22px;\n  margin: 24px 0 60px;\n  font-family: Manrope;\n  font-size: 16px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.5;\n  letter-spacing: normal;\n  text-align: left;\n  color: #969696;\n}\n\n.otpSection {\n  margin: 30px 0px;\n}\n\n.mindsparkLogo {\n  margin: 2% 25%;\n  text-align: center;\n}\n\nmat-form-field {\n  border-radius: 16px;\n  padding: 0.5em 0.75em;\n  border: 1px solid #ced4da;\n  background-color: #ffff;\n  width: 100%;\n}\n\n::ng-deep.mat-form-field-appearance-fill .mat-form-field-flex {\n  background-color: #ffff;\n  padding: 0px !important;\n}\n\n::ng-deep .mat-form-field-underline {\n  display: none;\n}\n\n::ng-deep.mat-form-field-wrapper {\n  padding-bottom: 0em;\n}\n\n.mat-form-field-appearance-fill .mat-form-field-flex {\n  border-radius: 4px 4px 0 0;\n  /* padding: .75em .75em 0 .75em; */\n}\n\n.inputField {\n  margin: 20px 0px;\n}\n\n::ng-deep.mat-form-field-appearance-fill .mat-form-field-infix {\n  padding: 0.25em 0 0.95em 0 !important;\n}\n\n.logintext {\n  font-size: 16px;\n  font-weight: bold;\n  color: #28a7df;\n  text-align: right;\n  margin-top: 15%;\n  cursor: pointer;\n}\n\n.blueText {\n  color: #28a7df;\n  padding: 5px;\n}\n\n.form-control {\n  border-radius: 1rem;\n}",
              ],
            }),
          ],
          E
        ));
      var k = n("FpXt"),
        O = n("tk/3");
      let I = class {
        constructor() {
          (this.userDetails = ["logout", "switch"]),
            (this.roles = ["Students", "Parents", "Teachers"]),
            (this.model = { role: "Students" });
        }
        ngOnInit() {}
      };
      (I.ctorParameters = () => []),
        (I = Object(s.a)(
          [
            Object(r.n)({
              selector: "app-free-trial-subscription",
              template:
                '<div class="mainContainer" [ngStyle.xs]="{\'font-size\':\'18px\',\'padding\':\'0px\'}">\n     <div class="space-between" [ngStyle.xs]="{\'display\':\'flex\',\'flex-direction\':\'column\'}">\n        <img class="logo" src="assets/images/ei-mindspark-maroon.svg" alt="Ei Mindspark" />\n        <span>\n            dropdown\n        </span>\n    </div>\n    <div class="backgroundCard" [ngStyle.xs]="{\'padding\':\'0\'}">\n        <div class="innerContent" [ngStyle.xs]="{\'padding\':\'0\'}">\n            <img src="assets/images/icon.png" alt="display">\n            <div class="">\n                <p class="loginTitle">Select Class</p>\n            </div>\n            <div class="margin-top" fxLayout="row wrap">\n                <mat-card class="classCard" [ngStyle.xs]="{\'width\':\'132px\'}"style="background-color: #2875df;color:#fff">\n                    <div>\n                        <div class="done-icon">\n                            <mat-icon class="">done</mat-icon>\n                        </div>\n                        <div class="center"> Class 1</div>\n                    </div>\n                </mat-card>\n                <mat-card class="classCard" [ngStyle.xs]="{\'width\':\'132px\'}">class 1</mat-card>\n                <mat-card class="classCard" [ngStyle.xs]="{\'width\':\'132px\'}">class 1</mat-card>\n                <mat-card class="classCard" [ngStyle.xs]="{\'width\':\'132px\'}">class 1</mat-card>\n                <mat-card class="classCard" [ngStyle.xs]="{\'width\':\'132px\'}">class 1</mat-card>\n                <mat-card class="classCard" [ngStyle.xs]="{\'width\':\'132px\'}">class 1</mat-card>\n            </div>\n        </div>\n    </div>\n    <footer>\n        <div mat-button fxLayout="row" class="selectedClass"><span class="serialNumber" fxFlex="25">1</span><span\n                fxFlex="75">\n                <div class="selectedClassHeading">selected class</div>\n                <div class="classSelected">Class 1</div>\n            </span></div>\n    </footer>\n</div>',
              styles: [
                ".mainContainer {\n  margin: 10px;\n  padding: 40px 70px;\n}\n\n.backgroundCard {\n  width: 100%;\n  margin: 125px 0 116px;\n  padding: 0 111px 60px 16px;\n  border-radius: 24px;\n  background-color: #e6f6ff;\n}\n\n.innerContent {\n  padding: 20px;\n}\n\n.loginTitle {\n  text-align: center;\n  font-family: Manrope;\n  font-size: 32px;\n  font-weight: bold;\n  line-height: 1.38;\n  letter-spacing: normal;\n  color: #212121;\n}\n\n.margin-left {\n  margin-left: 50px;\n}\n\n.margin-top {\n  margin-top: 20px;\n}\n\n.classCard {\n  width: 192px;\n  height: 80px;\n  margin: 13px 16px;\n  border-radius: 16px;\n  background-color: #fff;\n  text-align: center;\n  font-size: 16px;\n  font-weight: bold;\n}\n\n.done-icon {\n  width: 24px;\n  height: 24px;\n  /* margin: 2px 12px 2px 0; */\n  /* padding: 0px 0px 0px; */\n  background-color: #fff;\n  text-align: center;\n  color: #28a7df;\n  border-radius: 30px;\n  font-weight: 500;\n  font-size: 16px;\n}\n\n.center {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.space-between {\n  display: flex;\n  justify-content: space-between;\n}\n\n.selectedClass {\n  width: 178px;\n  height: 56px;\n  padding: 10px 44px 10px 12px;\n  border: solid 1px #c2e6f6;\n  background-color: #ffffff;\n  border-radius: 30px;\n}\n\n.serialNumber {\n  width: 32px;\n  height: 32px;\n  margin: 2px 12px 2px 0;\n  padding: 4px 7px 3px;\n  background-color: #28a7df;\n  text-align: center;\n  color: #fff;\n  border-radius: 30px;\n  font-weight: 500;\n  font-size: 16px;\n}\n\n.selectedClassHeading {\n  font-size: 11px;\n  text-align: left;\n  color: #212121;\n}\n\n.classSelected {\n  font-size: 14px;\n  color: #28a7df;\n  text-align: left;\n}",
              ],
            }),
          ],
          I
        ));
      var T = n("jCJ1");
      let A = class {};
      A = Object(s.a)(
        [
          Object(r.L)({
            declarations: [a.a, f, E, I],
            imports: [
              o.b,
              k.a,
              d.f,
              d.l,
              O.c,
              g.a,
              S.a,
              y.a,
              C.a,
              w.d,
              v.a,
              b.a,
              x.a,
              _.a,
              T.b,
            ],
            exports: [E, f],
            providers: [i.b],
          }),
        ],
        A
      );
    },
    ZUHj: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return a;
      });
      var s = n("7o/Q");
      class i extends s.a {
        constructor(e, t, n) {
          super(),
            (this.parent = e),
            (this.outerValue = t),
            (this.outerIndex = n),
            (this.index = 0);
        }
        _next(e) {
          this.parent.notifyNext(
            this.outerValue,
            e,
            this.outerIndex,
            this.index++,
            this
          );
        }
        _error(e) {
          this.parent.notifyError(e, this), this.unsubscribe();
        }
        _complete() {
          this.parent.notifyComplete(this), this.unsubscribe();
        }
      }
      var r = n("SeVD"),
        o = n("HDdC");
      function a(e, t, n, s, a = new i(e, n, s)) {
        if (!a.closed)
          return t instanceof o.a ? t.subscribe(a) : Object(r.a)(t)(a);
      }
    },
    ZVe6: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return a;
      });
      var s = n("mrSG"),
        i = n("fXoL"),
        r = n("tk/3"),
        o = n("AytR");
      let a = class {
        constructor(e) {
          (this.httpClient = e),
            (this.baseURL = o.a.API_END_POINT),
            (this.showSendOtp = new i.x()),
            (this.onUpdateState = new i.x());
        }
        sendOTP(e, t, n, s) {
          let i = new FormData();
          i.append("mobile", e),
            i.append("parentCountryCode", t),
            i.append("countryListVal", n),
            i.append("token", s);
          const r = this.baseURL + "user_api/send_otpV2";
          return this.httpClient.post(r, i);
        }
        verifyEnteredOtp(e, t, n) {
          let s = new FormData();
          s.append("mobile", e),
            s.append("countryCodeVal", t),
            s.append("parentMobileOTP", n);
          const i = this.baseURL + "user_api/verifyEnteredOtpV2";
          return this.httpClient.post(i, s);
        }
        createUser(e, t, n, s, i, r, o, a, l) {
          let c = new FormData();
          c.append("mobile", e),
            c.append("studentCountryCode", t),
            c.append("studentName", n),
            c.append("email", s),
            c.append("class", i),
            c.append("curriculum", r),
            c.append("countryListVal", o),
            c.append("whatsAppConsent", a),
            c.append("utm_source", l.utm_source),
            c.append("utm_medium", l.utm_medium),
            c.append("utm_campaign", l.utm_campaign),
            c.append("utm_term", l.utm_term),
            c.append("utm_content", l.utm_content),
            c.append("gclid_Source", l.gclid_Source),
            c.append("utm_source_new", l.utm_source_new),
            c.append("utm_term_new", l.utm_term_new),
            c.append("utm_medium_new", l.utm_medium_new),
            c.append("utm_content_new", l.utm_content_new),
            c.append("utm_campaign_new", l.utm_campaign_new),
            c.append("gclid_Source_new", l.gclid_Source_new);
          const u = this.baseURL + "user_api/createUser";
          return this.httpClient.post(u, c);
        }
        getJwtToken(e, t) {
          let n = new FormData();
          n.append("hashKey", "YWNlbG90U3R1ZGVudA=="),
            n.append("PID", t),
            n.append("username", e),
            n.append("Auth", "VendorSecret");
          const s = this.baseURL + "user_api/StudentSignInFromClient";
          return this.httpClient.post(s, n);
        }
        showResendOtp() {
          this.showSendOtp.emit();
        }
        updateState(e) {
          this.onUpdateState.emit(e);
        }
      };
      (a.ctorParameters = () => [{ type: r.b }]),
        (a = Object(s.a)([Object(i.D)({ providedIn: "root" })], a));
    },
    b6Qw: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var s = n("fXoL"),
        i = n("ofXK");
      class r {
        constructor(e, t) {
          (this.document = e),
            (this.platformId = t),
            (this.documentIsAccessible = Object(i.z)(this.platformId));
        }
        check(e) {
          if (!this.documentIsAccessible) return !1;
          e = encodeURIComponent(e);
          return this.getCookieRegExp(e).test(this.document.cookie);
        }
        get(e) {
          if (this.documentIsAccessible && this.check(e)) {
            e = encodeURIComponent(e);
            const t = this.getCookieRegExp(e).exec(this.document.cookie);
            return this.safeDecodeURIComponent(t[1]);
          }
          return "";
        }
        getAll() {
          if (!this.documentIsAccessible) return {};
          const e = {},
            t = this.document;
          return (
            t.cookie &&
              "" !== t.cookie &&
              t.cookie.split(";").forEach((t) => {
                const [n, s] = t.split("=");
                e[this.safeDecodeURIComponent(n.replace(/^ /, ""))] =
                  this.safeDecodeURIComponent(s);
              }),
            e
          );
        }
        set(e, t, n, s, i, r, o) {
          if (!this.documentIsAccessible) return;
          if ("number" == typeof n || n instanceof Date || s || i || r || o) {
            const a = {
              expires: n,
              path: s,
              domain: i,
              secure: r,
              sameSite: o || "Lax",
            };
            return void this.set(e, t, a);
          }
          let a = encodeURIComponent(e) + "=" + encodeURIComponent(t) + ";";
          const l = n || {};
          if (l.expires)
            if ("number" == typeof l.expires) {
              a +=
                "expires=" +
                new Date(
                  new Date().getTime() + 1e3 * l.expires * 60 * 60 * 24
                ).toUTCString() +
                ";";
            } else a += "expires=" + l.expires.toUTCString() + ";";
          l.path && (a += "path=" + l.path + ";"),
            l.domain && (a += "domain=" + l.domain + ";"),
            !1 === l.secure &&
              "None" === l.sameSite &&
              ((l.secure = !0),
              console.warn(
                `[ngx-cookie-service] Cookie ${e} was forced with secure flag because sameSite=None.More details : https://github.com/stevermeister/ngx-cookie-service/issues/86#issuecomment-597720130`
              )),
            l.secure && (a += "secure;"),
            l.sameSite || (l.sameSite = "Lax"),
            (a += "sameSite=" + l.sameSite + ";"),
            (this.document.cookie = a);
        }
        delete(e, t, n, s, i = "Lax") {
          if (!this.documentIsAccessible) return;
          const r = new Date("Thu, 01 Jan 1970 00:00:01 GMT");
          this.set(e, "", {
            expires: r,
            path: t,
            domain: n,
            secure: s,
            sameSite: i,
          });
        }
        deleteAll(e, t, n, s = "Lax") {
          if (!this.documentIsAccessible) return;
          const i = this.getAll();
          for (const r in i) i.hasOwnProperty(r) && this.delete(r, e, t, n, s);
        }
        getCookieRegExp(e) {
          const t = e.replace(/([\[\]\{\}\(\)\|\=\;\+\?\,\.\*\^\$])/gi, "\\$1");
          return new RegExp("(?:^" + t + "|;\\s*" + t + ")=(.*?)(?:;|$)", "g");
        }
        safeDecodeURIComponent(e) {
          try {
            return decodeURIComponent(e);
          } catch (t) {
            return e;
          }
        }
      }
      (r.ɵfac = function (e) {
        return new (e || r)(s.Yc(i.c), s.Yc(s.U));
      }),
        (r.ɵprov = Object(s.Ic)({
          factory: function () {
            return new r(Object(s.Yc)(i.c), Object(s.Yc)(s.U));
          },
          token: r,
          providedIn: "root",
        })),
        (r.ctorParameters = () => [
          { type: void 0, decorators: [{ type: s.C, args: [i.c] }] },
          { type: s.E, decorators: [{ type: s.C, args: [s.U] }] },
        ]);
    },
    bHdf: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var s = n("5+tZ"),
        i = n("SpAZ");
      function r(e = Number.POSITIVE_INFINITY) {
        return Object(s.a)(i.a, e);
      }
    },
    bOdf: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      var s = n("5+tZ");
      function i(e, t) {
        return Object(s.a)(e, t, 1);
      }
    },
    bSwM: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return w;
      });
      var s = n("u47x"),
        i = n("8LU1"),
        r = n("fXoL"),
        o = n("3Pt+"),
        a = n("FKr1"),
        l = n("R1ws"),
        c = n("GU7r");
      const u = ["input"],
        d = function () {
          return { enterDuration: 150 };
        },
        h = new r.E("mat-checkbox-default-options", {
          providedIn: "root",
          factory: function () {
            return { color: "accent", clickAction: "check-indeterminate" };
          },
        });
      let p = 0;
      const m = { provide: o.h, useExisting: Object(r.sb)(() => y), multi: !0 };
      class f {}
      const g = Object(a.o)(
        Object(a.k)(
          Object(a.l)(
            Object(a.m)(
              class {
                constructor(e) {
                  this._elementRef = e;
                }
              }
            )
          )
        )
      );
      class y extends g {
        constructor(e, t, n, s, i, o, a) {
          super(e),
            (this._changeDetectorRef = t),
            (this._focusMonitor = n),
            (this._ngZone = s),
            (this._animationMode = o),
            (this._options = a),
            (this.ariaLabel = ""),
            (this.ariaLabelledby = null),
            (this._uniqueId = "mat-checkbox-" + ++p),
            (this.id = this._uniqueId),
            (this.labelPosition = "after"),
            (this.name = null),
            (this.change = new r.x()),
            (this.indeterminateChange = new r.x()),
            (this._onTouched = () => {}),
            (this._currentAnimationClass = ""),
            (this._currentCheckState = 0),
            (this._controlValueAccessorChangeFn = () => {}),
            (this._checked = !1),
            (this._disabled = !1),
            (this._indeterminate = !1),
            (this._options = this._options || {}),
            this._options.color &&
              (this.color = this.defaultColor = this._options.color),
            (this.tabIndex = parseInt(i) || 0);
        }
        get inputId() {
          return (this.id || this._uniqueId) + "-input";
        }
        get required() {
          return this._required;
        }
        set required(e) {
          this._required = Object(i.b)(e);
        }
        ngAfterViewInit() {
          this._focusMonitor.monitor(this._elementRef, !0).subscribe((e) => {
            e ||
              Promise.resolve().then(() => {
                this._onTouched(), this._changeDetectorRef.markForCheck();
              });
          }),
            this._syncIndeterminate(this._indeterminate);
        }
        ngAfterViewChecked() {}
        ngOnDestroy() {
          this._focusMonitor.stopMonitoring(this._elementRef);
        }
        get checked() {
          return this._checked;
        }
        set checked(e) {
          e != this.checked &&
            ((this._checked = e), this._changeDetectorRef.markForCheck());
        }
        get disabled() {
          return this._disabled;
        }
        set disabled(e) {
          const t = Object(i.b)(e);
          t !== this.disabled &&
            ((this._disabled = t), this._changeDetectorRef.markForCheck());
        }
        get indeterminate() {
          return this._indeterminate;
        }
        set indeterminate(e) {
          const t = e != this._indeterminate;
          (this._indeterminate = Object(i.b)(e)),
            t &&
              (this._indeterminate
                ? this._transitionCheckState(3)
                : this._transitionCheckState(this.checked ? 1 : 2),
              this.indeterminateChange.emit(this._indeterminate)),
            this._syncIndeterminate(this._indeterminate);
        }
        _isRippleDisabled() {
          return this.disableRipple || this.disabled;
        }
        _onLabelTextChange() {
          this._changeDetectorRef.detectChanges();
        }
        writeValue(e) {
          this.checked = !!e;
        }
        registerOnChange(e) {
          this._controlValueAccessorChangeFn = e;
        }
        registerOnTouched(e) {
          this._onTouched = e;
        }
        setDisabledState(e) {
          this.disabled = e;
        }
        _getAriaChecked() {
          return this.checked ? "true" : this.indeterminate ? "mixed" : "false";
        }
        _transitionCheckState(e) {
          let t = this._currentCheckState,
            n = this._elementRef.nativeElement;
          if (
            t !== e &&
            (this._currentAnimationClass.length > 0 &&
              n.classList.remove(this._currentAnimationClass),
            (this._currentAnimationClass =
              this._getAnimationClassForCheckStateTransition(t, e)),
            (this._currentCheckState = e),
            this._currentAnimationClass.length > 0)
          ) {
            n.classList.add(this._currentAnimationClass);
            const e = this._currentAnimationClass;
            this._ngZone.runOutsideAngular(() => {
              setTimeout(() => {
                n.classList.remove(e);
              }, 1e3);
            });
          }
        }
        _emitChangeEvent() {
          const e = new f();
          (e.source = this),
            (e.checked = this.checked),
            this._controlValueAccessorChangeFn(this.checked),
            this.change.emit(e);
        }
        toggle() {
          this.checked = !this.checked;
        }
        _onInputClick(e) {
          var t;
          const n =
            null === (t = this._options) || void 0 === t
              ? void 0
              : t.clickAction;
          e.stopPropagation(),
            this.disabled || "noop" === n
              ? this.disabled ||
                "noop" !== n ||
                ((this._inputElement.nativeElement.checked = this.checked),
                (this._inputElement.nativeElement.indeterminate =
                  this.indeterminate))
              : (this.indeterminate &&
                  "check" !== n &&
                  Promise.resolve().then(() => {
                    (this._indeterminate = !1),
                      this.indeterminateChange.emit(this._indeterminate);
                  }),
                this.toggle(),
                this._transitionCheckState(this._checked ? 1 : 2),
                this._emitChangeEvent());
        }
        focus(e = "keyboard", t) {
          this._focusMonitor.focusVia(this._inputElement, e, t);
        }
        _onInteractionEvent(e) {
          e.stopPropagation();
        }
        _getAnimationClassForCheckStateTransition(e, t) {
          if ("NoopAnimations" === this._animationMode) return "";
          let n = "";
          switch (e) {
            case 0:
              if (1 === t) n = "unchecked-checked";
              else {
                if (3 != t) return "";
                n = "unchecked-indeterminate";
              }
              break;
            case 2:
              n = 1 === t ? "unchecked-checked" : "unchecked-indeterminate";
              break;
            case 1:
              n = 2 === t ? "checked-unchecked" : "checked-indeterminate";
              break;
            case 3:
              n = 1 === t ? "indeterminate-checked" : "indeterminate-unchecked";
          }
          return "mat-checkbox-anim-" + n;
        }
        _syncIndeterminate(e) {
          const t = this._inputElement;
          t && (t.nativeElement.indeterminate = e);
        }
      }
      (y.ɵfac = function (e) {
        return new (e || y)(
          r.Mc(r.v),
          r.Mc(r.k),
          r.Mc(s.c),
          r.Mc(r.Q),
          r.Zc("tabindex"),
          r.Mc(l.a, 8),
          r.Mc(h, 8)
        );
      }),
        (y.ɵcmp = r.Gc({
          type: y,
          selectors: [["mat-checkbox"]],
          viewQuery: function (e, t) {
            if ((1 & e && (r.Id(u, !0), r.Id(a.g, !0)), 2 & e)) {
              let e;
              r.sd((e = r.dd())) && (t._inputElement = e.first),
                r.sd((e = r.dd())) && (t.ripple = e.first);
            }
          },
          hostAttrs: [1, "mat-checkbox"],
          hostVars: 12,
          hostBindings: function (e, t) {
            2 & e &&
              (r.Uc("id", t.id),
              r.Ac("tabindex", null),
              r.Ec("mat-checkbox-indeterminate", t.indeterminate)(
                "mat-checkbox-checked",
                t.checked
              )("mat-checkbox-disabled", t.disabled)(
                "mat-checkbox-label-before",
                "before" == t.labelPosition
              )(
                "_mat-animation-noopable",
                "NoopAnimations" === t._animationMode
              ));
          },
          inputs: {
            disableRipple: "disableRipple",
            color: "color",
            tabIndex: "tabIndex",
            ariaLabel: ["aria-label", "ariaLabel"],
            ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
            id: "id",
            labelPosition: "labelPosition",
            name: "name",
            required: "required",
            checked: "checked",
            disabled: "disabled",
            indeterminate: "indeterminate",
            ariaDescribedby: ["aria-describedby", "ariaDescribedby"],
            value: "value",
          },
          outputs: {
            change: "change",
            indeterminateChange: "indeterminateChange",
          },
          exportAs: ["matCheckbox"],
          features: [r.yc([m]), r.wc],
          ngContentSelectors: ["*"],
          decls: 17,
          vars: 20,
          consts: [
            [1, "mat-checkbox-layout"],
            ["label", ""],
            [1, "mat-checkbox-inner-container"],
            [
              "type",
              "checkbox",
              1,
              "mat-checkbox-input",
              "cdk-visually-hidden",
              3,
              "id",
              "required",
              "checked",
              "disabled",
              "tabIndex",
              "change",
              "click",
            ],
            ["input", ""],
            [
              "matRipple",
              "",
              1,
              "mat-checkbox-ripple",
              "mat-focus-indicator",
              3,
              "matRippleTrigger",
              "matRippleDisabled",
              "matRippleRadius",
              "matRippleCentered",
              "matRippleAnimation",
            ],
            [1, "mat-ripple-element", "mat-checkbox-persistent-ripple"],
            [1, "mat-checkbox-frame"],
            [1, "mat-checkbox-background"],
            [
              "version",
              "1.1",
              "focusable",
              "false",
              "viewBox",
              "0 0 24 24",
              0,
              "xml",
              "space",
              "preserve",
              1,
              "mat-checkbox-checkmark",
            ],
            [
              "fill",
              "none",
              "stroke",
              "white",
              "d",
              "M4.1,12.7 9,17.6 20.3,6.3",
              1,
              "mat-checkbox-checkmark-path",
            ],
            [1, "mat-checkbox-mixedmark"],
            [1, "mat-checkbox-label", 3, "cdkObserveContent"],
            ["checkboxLabel", ""],
            [2, "display", "none"],
          ],
          template: function (e, t) {
            if (
              (1 & e &&
                (r.kd(),
                r.Rc(0, "label", 0, 1),
                r.Rc(2, "div", 2),
                r.Rc(3, "input", 3, 4),
                r.cd("change", function (e) {
                  return t._onInteractionEvent(e);
                })("click", function (e) {
                  return t._onInputClick(e);
                }),
                r.Qc(),
                r.Rc(5, "div", 5),
                r.Nc(6, "div", 6),
                r.Qc(),
                r.Nc(7, "div", 7),
                r.Rc(8, "div", 8),
                r.fd(),
                r.Rc(9, "svg", 9),
                r.Nc(10, "path", 10),
                r.Qc(),
                r.ed(),
                r.Nc(11, "div", 11),
                r.Qc(),
                r.Qc(),
                r.Rc(12, "span", 12, 13),
                r.cd("cdkObserveContent", function () {
                  return t._onLabelTextChange();
                }),
                r.Rc(14, "span", 14),
                r.Ed(15, "\xa0"),
                r.Qc(),
                r.jd(16),
                r.Qc(),
                r.Qc()),
              2 & e)
            ) {
              const e = r.td(1),
                n = r.td(13);
              r.Ac("for", t.inputId),
                r.zc(2),
                r.Ec(
                  "mat-checkbox-inner-container-no-side-margin",
                  !n.textContent || !n.textContent.trim()
                ),
                r.zc(1),
                r.ld("id", t.inputId)("required", t.required)(
                  "checked",
                  t.checked
                )("disabled", t.disabled)("tabIndex", t.tabIndex),
                r.Ac("value", t.value)("name", t.name)(
                  "aria-label",
                  t.ariaLabel || null
                )("aria-labelledby", t.ariaLabelledby)(
                  "aria-checked",
                  t._getAriaChecked()
                )("aria-describedby", t.ariaDescribedby),
                r.zc(2),
                r.ld("matRippleTrigger", e)(
                  "matRippleDisabled",
                  t._isRippleDisabled()
                )("matRippleRadius", 20)("matRippleCentered", !0)(
                  "matRippleAnimation",
                  r.od(19, d)
                );
            }
          },
          directives: [a.g, c.a],
          styles: [
            "@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\n",
          ],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (y.ctorParameters = () => [
          { type: r.v },
          { type: r.k },
          { type: s.c },
          { type: r.Q },
          { type: String, decorators: [{ type: r.h, args: ["tabindex"] }] },
          {
            type: String,
            decorators: [{ type: r.R }, { type: r.C, args: [l.a] }],
          },
          {
            type: void 0,
            decorators: [{ type: r.R }, { type: r.C, args: [h] }],
          },
        ]),
        (y.propDecorators = {
          ariaLabel: [{ type: r.G, args: ["aria-label"] }],
          ariaLabelledby: [{ type: r.G, args: ["aria-labelledby"] }],
          ariaDescribedby: [{ type: r.G, args: ["aria-describedby"] }],
          id: [{ type: r.G }],
          required: [{ type: r.G }],
          labelPosition: [{ type: r.G }],
          name: [{ type: r.G }],
          change: [{ type: r.S }],
          indeterminateChange: [{ type: r.S }],
          value: [{ type: r.G }],
          _inputElement: [{ type: r.mb, args: ["input"] }],
          ripple: [{ type: r.mb, args: [a.g] }],
          checked: [{ type: r.G }],
          disabled: [{ type: r.G }],
          indeterminate: [{ type: r.G }],
        });
      const v = { provide: o.g, useExisting: Object(r.sb)(() => b), multi: !0 };
      class b extends o.a {}
      (b.ɵfac = function (e) {
        return x(e || b);
      }),
        (b.ɵdir = r.Hc({
          type: b,
          selectors: [
            ["mat-checkbox", "required", "", "formControlName", ""],
            ["mat-checkbox", "required", "", "formControl", ""],
            ["mat-checkbox", "required", "", "ngModel", ""],
          ],
          features: [r.yc([v]), r.wc],
        }));
      const x = r.Tc(b);
      class _ {}
      (_.ɵmod = r.Kc({ type: _ })),
        (_.ɵinj = r.Jc({
          factory: function (e) {
            return new (e || _)();
          },
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          r.wd(_, { declarations: [b], exports: [b] });
      class w {}
      (w.ɵmod = r.Kc({ type: w })),
        (w.ɵinj = r.Jc({
          factory: function (e) {
            return new (e || w)();
          },
          imports: [[a.h, a.d, c.c, _], a.d, _],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          r.wd(w, {
            declarations: function () {
              return [y];
            },
            imports: function () {
              return [a.h, a.d, c.c, _];
            },
            exports: function () {
              return [y, a.d, _];
            },
          });
    },
    bTqV: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return m;
      });
      var s = n("fXoL"),
        i = n("FKr1"),
        r = n("u47x"),
        o = n("R1ws");
      const a = ["mat-button", ""],
        l = ["*"],
        c =
          ".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\n",
        u = [
          "mat-button",
          "mat-flat-button",
          "mat-icon-button",
          "mat-raised-button",
          "mat-stroked-button",
          "mat-mini-fab",
          "mat-fab",
        ];
      const d = Object(i.k)(
        Object(i.m)(
          Object(i.l)(
            class {
              constructor(e) {
                this._elementRef = e;
              }
            }
          )
        )
      );
      class h extends d {
        constructor(e, t, n) {
          super(e),
            (this._focusMonitor = t),
            (this._animationMode = n),
            (this.isRoundButton = this._hasHostAttributes(
              "mat-fab",
              "mat-mini-fab"
            )),
            (this.isIconButton = this._hasHostAttributes("mat-icon-button"));
          for (const s of u)
            this._hasHostAttributes(s) &&
              this._getHostElement().classList.add(s);
          e.nativeElement.classList.add("mat-button-base"),
            this.isRoundButton && (this.color = "accent");
        }
        ngAfterViewInit() {
          this._focusMonitor.monitor(this._elementRef, !0);
        }
        ngOnDestroy() {
          this._focusMonitor.stopMonitoring(this._elementRef);
        }
        focus(e = "program", t) {
          this._focusMonitor.focusVia(this._getHostElement(), e, t);
        }
        _getHostElement() {
          return this._elementRef.nativeElement;
        }
        _isRippleDisabled() {
          return this.disableRipple || this.disabled;
        }
        _hasHostAttributes(...e) {
          return e.some((e) => this._getHostElement().hasAttribute(e));
        }
      }
      (h.ɵfac = function (e) {
        return new (e || h)(s.Mc(s.v), s.Mc(r.c), s.Mc(o.a, 8));
      }),
        (h.ɵcmp = s.Gc({
          type: h,
          selectors: [
            ["button", "mat-button", ""],
            ["button", "mat-raised-button", ""],
            ["button", "mat-icon-button", ""],
            ["button", "mat-fab", ""],
            ["button", "mat-mini-fab", ""],
            ["button", "mat-stroked-button", ""],
            ["button", "mat-flat-button", ""],
          ],
          viewQuery: function (e, t) {
            if ((1 & e && s.Id(i.g, !0), 2 & e)) {
              let e;
              s.sd((e = s.dd())) && (t.ripple = e.first);
            }
          },
          hostAttrs: [1, "mat-focus-indicator"],
          hostVars: 5,
          hostBindings: function (e, t) {
            2 & e &&
              (s.Ac("disabled", t.disabled || null),
              s.Ec(
                "_mat-animation-noopable",
                "NoopAnimations" === t._animationMode
              )("mat-button-disabled", t.disabled));
          },
          inputs: {
            disabled: "disabled",
            disableRipple: "disableRipple",
            color: "color",
          },
          exportAs: ["matButton"],
          features: [s.wc],
          attrs: a,
          ngContentSelectors: l,
          decls: 4,
          vars: 5,
          consts: [
            [1, "mat-button-wrapper"],
            [
              "matRipple",
              "",
              1,
              "mat-button-ripple",
              3,
              "matRippleDisabled",
              "matRippleCentered",
              "matRippleTrigger",
            ],
            [1, "mat-button-focus-overlay"],
          ],
          template: function (e, t) {
            1 & e &&
              (s.kd(),
              s.Rc(0, "span", 0),
              s.jd(1),
              s.Qc(),
              s.Nc(2, "span", 1),
              s.Nc(3, "span", 2)),
              2 & e &&
                (s.zc(2),
                s.Ec(
                  "mat-button-ripple-round",
                  t.isRoundButton || t.isIconButton
                ),
                s.ld("matRippleDisabled", t._isRippleDisabled())(
                  "matRippleCentered",
                  t.isIconButton
                )("matRippleTrigger", t._getHostElement()));
          },
          directives: [i.g],
          styles: [c],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (h.ctorParameters = () => [
          { type: s.v },
          { type: r.c },
          {
            type: String,
            decorators: [{ type: s.R }, { type: s.C, args: [o.a] }],
          },
        ]),
        (h.propDecorators = { ripple: [{ type: s.mb, args: [i.g] }] });
      class p extends h {
        constructor(e, t, n) {
          super(t, e, n);
        }
        _haltDisabledEvents(e) {
          this.disabled && (e.preventDefault(), e.stopImmediatePropagation());
        }
      }
      (p.ɵfac = function (e) {
        return new (e || p)(s.Mc(r.c), s.Mc(s.v), s.Mc(o.a, 8));
      }),
        (p.ɵcmp = s.Gc({
          type: p,
          selectors: [
            ["a", "mat-button", ""],
            ["a", "mat-raised-button", ""],
            ["a", "mat-icon-button", ""],
            ["a", "mat-fab", ""],
            ["a", "mat-mini-fab", ""],
            ["a", "mat-stroked-button", ""],
            ["a", "mat-flat-button", ""],
          ],
          hostAttrs: [1, "mat-focus-indicator"],
          hostVars: 7,
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("click", function (e) {
                return t._haltDisabledEvents(e);
              }),
              2 & e &&
                (s.Ac("tabindex", t.disabled ? -1 : t.tabIndex || 0)(
                  "disabled",
                  t.disabled || null
                )("aria-disabled", t.disabled.toString()),
                s.Ec(
                  "_mat-animation-noopable",
                  "NoopAnimations" === t._animationMode
                )("mat-button-disabled", t.disabled));
          },
          inputs: {
            disabled: "disabled",
            disableRipple: "disableRipple",
            color: "color",
            tabIndex: "tabIndex",
          },
          exportAs: ["matButton", "matAnchor"],
          features: [s.wc],
          attrs: a,
          ngContentSelectors: l,
          decls: 4,
          vars: 5,
          consts: [
            [1, "mat-button-wrapper"],
            [
              "matRipple",
              "",
              1,
              "mat-button-ripple",
              3,
              "matRippleDisabled",
              "matRippleCentered",
              "matRippleTrigger",
            ],
            [1, "mat-button-focus-overlay"],
          ],
          template: function (e, t) {
            1 & e &&
              (s.kd(),
              s.Rc(0, "span", 0),
              s.jd(1),
              s.Qc(),
              s.Nc(2, "span", 1),
              s.Nc(3, "span", 2)),
              2 & e &&
                (s.zc(2),
                s.Ec(
                  "mat-button-ripple-round",
                  t.isRoundButton || t.isIconButton
                ),
                s.ld("matRippleDisabled", t._isRippleDisabled())(
                  "matRippleCentered",
                  t.isIconButton
                )("matRippleTrigger", t._getHostElement()));
          },
          directives: [i.g],
          styles: [c],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (p.ctorParameters = () => [
          { type: r.c },
          { type: s.v },
          {
            type: String,
            decorators: [{ type: s.R }, { type: s.C, args: [o.a] }],
          },
        ]),
        (p.propDecorators = { tabIndex: [{ type: s.G }] });
      class m {}
      (m.ɵmod = s.Kc({ type: m })),
        (m.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || m)();
          },
          imports: [[i.h, i.d], i.d],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(m, {
            declarations: function () {
              return [h, p];
            },
            imports: function () {
              return [i.h, i.d];
            },
            exports: function () {
              return [h, p, i.d];
            },
          });
    },
    bUSd: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var s = n("mrSG"),
        i = n("fXoL"),
        r = n("tk/3");
      let o = class {
        constructor(e) {
          (this.httpClient = e), this.getCountries();
        }
        getCountries() {
          return (
            (this.countryCodes = this.httpClient.get(
              "assets/jsonList/countryList.json"
            )),
            this.countryCodes
          );
        }
        getContryCodes() {
          return this.countryCodes;
        }
      };
      (o.ctorParameters = () => [{ type: r.b }]),
        (o = Object(s.a)([Object(i.D)({ providedIn: "root" })], o));
    },
    beVS: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return h;
      }),
        n.d(t, "c", function () {
          return m;
        }),
        n.d(t, "b", function () {
          return g;
        }),
        n.d(t, "e", function () {
          return v;
        }),
        n.d(t, "d", function () {
          return x;
        }),
        n.d(t, "f", function () {
          return w;
        });
      var s = n("dw8f"),
        i = n("d0en"),
        r = n("tyNb"),
        o = n("0Pcf"),
        a = n("dtin"),
        l = n("TuID"),
        c = n("96hE"),
        u = n("JLX5");
      const d = [
          {
            path: "home",
            loadChildren: () =>
              Promise.resolve()
                .then(n.bind(null, "iydT"))
                .then((e) => e.HomeModule),
          },
          {
            path: "maths",
            loadChildren: () =>
              Promise.resolve()
                .then(n.bind(null, "20q5"))
                .then((e) => e.MathsModule),
            data: { title: "Mindspark-Maths" },
          },
          {
            path: "maths/:id",
            loadChildren: () =>
              Promise.resolve()
                .then(n.bind(null, "20q5"))
                .then((e) => e.MathsModule),
            data: { title: "Mindspark-Maths" },
          },
          {
            path: "faq",
            loadChildren: () =>
              n
                .e(7)
                .then(n.bind(null, "9NiU"))
                .then((e) => e.FaqModule),
          },
          {
            path: "english",
            loadChildren: () =>
              n
                .e(1)
                .then(n.bind(null, "J38G"))
                .then((e) => e.EnglishModule),
          },
          {
            path: "english/:id",
            loadChildren: () =>
              n
                .e(1)
                .then(n.bind(null, "J38G"))
                .then((e) => e.EnglishModule),
          },
          {
            path: "science",
            loadChildren: () =>
              n
                .e(2)
                .then(n.bind(null, "stlA"))
                .then((e) => e.ScienceModule),
          },
          {
            path: "science/:id",
            loadChildren: () =>
              n
                .e(2)
                .then(n.bind(null, "stlA"))
                .then((e) => e.ScienceModule),
          },
          { path: "free-trial", component: i.a },
          {
            path: "subscription",
            loadChildren: () =>
              Promise.resolve()
                .then(n.bind(null, "c0J5"))
                .then((e) => e.SubscriptionModule),
          },
          {
            path: "subscription/thank-you",
            loadChildren: () =>
              n
                .e(3)
                .then(n.bind(null, "1khd"))
                .then((e) => e.ThankYouModule),
          },
          {
            path: "free-trial/thank-you",
            loadChildren: () =>
              n
                .e(3)
                .then(n.bind(null, "1khd"))
                .then((e) => e.ThankYouModule),
          },
          {
            path: "live-classes",
            loadChildren: () =>
              n
                .e(8)
                .then(n.bind(null, "Pldm"))
                .then((e) => e.LiveClassesModule),
          },
          {
            path: "free-sign-up",
            loadChildren: () =>
              Promise.resolve()
                .then(n.bind(null, "w/SU"))
                .then((e) => e.CampaignPageModule),
          },
          { path: "", redirectTo: "home", pathMatch: "full" },
          { path: "**", redirectTo: "home", pathMatch: "full" },
        ],
        h = r.c.forRoot(d, {
          useHash: !0,
          scrollPositionRestoration: "enabled",
        }),
        p = [{ path: "", component: o.a }],
        m = r.c.forChild(p),
        f = [{ path: "", component: u.a }],
        g = r.c.forChild(f),
        y = [{ path: "", component: a.a }],
        v = r.c.forChild(y),
        b = [
          { path: "book-a-demo", component: l.a },
          { path: "registration-confirmation", component: c.a },
        ],
        x = r.c.forChild(b),
        _ = [{ path: "", component: s.a }],
        w = r.c.forChild(_);
    },
    c0J5: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, "SubscriptionModule", function () {
          return p;
        });
      var s = n("mrSG"),
        i = n("0IaG"),
        r = n("tk/3"),
        o = n("dw8f"),
        a = n("fXoL"),
        l = n("ofXK"),
        c = n("FpXt"),
        u = n("YUcS"),
        d = n("beVS"),
        h = n("ZSlC");
      let p = class {};
      p = Object(s.a)(
        [
          Object(a.L)({
            declarations: [o.a],
            imports: [l.b, c.a, i.c, d.f, r.c, u.a, h.a],
            providers: [],
          }),
        ],
        p
      );
    },
    c2HN: function (e, t, n) {
      "use strict";
      function s(e) {
        return (
          !!e && "function" != typeof e.subscribe && "function" == typeof e.then
        );
      }
      n.d(t, "a", function () {
        return s;
      });
    },
    cH1L: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return l;
      }),
        n.d(t, "b", function () {
          return o;
        });
      var s = n("fXoL"),
        i = n("ofXK");
      const r = new s.E("cdk-dir-doc", {
        providedIn: "root",
        factory: function () {
          return Object(s.tb)(i.c);
        },
      });
      class o {
        constructor(e) {
          if (((this.value = "ltr"), (this.change = new s.x()), e)) {
            const t = e.body ? e.body.dir : null,
              n = e.documentElement ? e.documentElement.dir : null,
              s = t || n;
            this.value = "ltr" === s || "rtl" === s ? s : "ltr";
          }
        }
        ngOnDestroy() {
          this.change.complete();
        }
      }
      (o.ɵfac = function (e) {
        return new (e || o)(s.Yc(r, 8));
      }),
        (o.ɵprov = Object(s.Ic)({
          factory: function () {
            return new o(Object(s.Yc)(r, 8));
          },
          token: o,
          providedIn: "root",
        })),
        (o.ctorParameters = () => [
          {
            type: void 0,
            decorators: [{ type: s.R }, { type: s.C, args: [r] }],
          },
        ]);
      class a {
        constructor() {
          (this._dir = "ltr"),
            (this._isInitialized = !1),
            (this.change = new s.x());
        }
        get dir() {
          return this._dir;
        }
        set dir(e) {
          const t = this._dir,
            n = e ? e.toLowerCase() : e;
          (this._rawDir = e),
            (this._dir = "ltr" === n || "rtl" === n ? n : "ltr"),
            t !== this._dir &&
              this._isInitialized &&
              this.change.emit(this._dir);
        }
        get value() {
          return this.dir;
        }
        ngAfterContentInit() {
          this._isInitialized = !0;
        }
        ngOnDestroy() {
          this.change.complete();
        }
      }
      (a.ɵfac = function (e) {
        return new (e || a)();
      }),
        (a.ɵdir = s.Hc({
          type: a,
          selectors: [["", "dir", ""]],
          hostVars: 1,
          hostBindings: function (e, t) {
            2 & e && s.Ac("dir", t._rawDir);
          },
          inputs: { dir: "dir" },
          outputs: { change: "dirChange" },
          exportAs: ["dir"],
          features: [s.yc([{ provide: o, useExisting: a }])],
        })),
        (a.propDecorators = {
          change: [{ type: s.S, args: ["dirChange"] }],
          dir: [{ type: s.G }],
        });
      class l {}
      (l.ɵmod = s.Kc({ type: l })),
        (l.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || l)();
          },
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(l, { declarations: [a], exports: [a] });
    },
    cp0P: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return l;
      });
      var s = n("HDdC"),
        i = n("DH7j"),
        r = n("lJxs"),
        o = n("XoHu"),
        a = n("Cfvw");
      function l(...e) {
        if (1 === e.length) {
          const t = e[0];
          if (Object(i.a)(t)) return c(t, null);
          if (Object(o.a)(t) && Object.getPrototypeOf(t) === Object.prototype) {
            const e = Object.keys(t);
            return c(
              e.map((e) => t[e]),
              e
            );
          }
        }
        if ("function" == typeof e[e.length - 1]) {
          const t = e.pop();
          return c(
            (e = 1 === e.length && Object(i.a)(e[0]) ? e[0] : e),
            null
          ).pipe(Object(r.a)((e) => t(...e)));
        }
        return c(e, null);
      }
      function c(e, t) {
        return new s.a((n) => {
          const s = e.length;
          if (0 === s) return void n.complete();
          const i = new Array(s);
          let r = 0,
            o = 0;
          for (let l = 0; l < s; l++) {
            const c = Object(a.a)(e[l]);
            let u = !1;
            n.add(
              c.subscribe({
                next: (e) => {
                  u || ((u = !0), o++), (i[l] = e);
                },
                error: (e) => n.error(e),
                complete: () => {
                  r++,
                    (r !== s && u) ||
                      (o === s &&
                        n.next(
                          t ? t.reduce((e, t, n) => ((e[t] = i[n]), e), {}) : i
                        ),
                      n.complete());
                },
              })
            );
          }
        });
      }
    },
    d0en: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var s = n("mrSG"),
        i = n("ZVe6"),
        r = n("fXoL");
      let o = class {
        constructor(e) {
          (this.freeTrialService = e),
            (this.freeTrialState = "freeTrial"),
            this.freeTrialService.onUpdateState.subscribe((e) => {
              this.freeTrialState = e;
            });
        }
        ngOnInit() {
          var e = document.createElement("script");
          (e.type = "text/javascript"),
            (e.src = "https://checkout.razorpay.com/v1/checkout.js"),
            (e.async = !0),
            document.head.append(e);
        }
      };
      (o.ctorParameters = () => [{ type: i.a }]),
        (o = Object(s.a)(
          [
            Object(r.n)({
              selector: "app-free-trial",
              template:
                '<app-header></app-header>\n<app-login-free-trial *ngIf="freeTrialState == \'freeTrial\'"></app-login-free-trial>\n<app-payment-page [fromFreeTrial]="true" *ngIf="freeTrialState == \'payment\'"></app-payment-page>\n<app-package-select [fromFreeTrial]="true" *ngIf="freeTrialState == \'package\'"></app-package-select>\n<app-footer></app-footer>',
              styles: [""],
            }),
          ],
          o
        ));
    },
    d3UM: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return W;
      });
      var s = n("rDax"),
        i = n("ofXK"),
        r = n("fXoL"),
        o = n("FKr1"),
        a = n("kmnG"),
        l = n("vxfF"),
        c = n("u47x"),
        u = n("cH1L"),
        d = n("8LU1"),
        h = n("0EQZ"),
        p = n("FtGj"),
        m = n("3Pt+"),
        f = n("XNiG"),
        g = n("NXyV"),
        y = n("VRyK"),
        v = n("JX91"),
        b = n("eIep"),
        x = n("IzEk"),
        _ = n("pLZG"),
        w = n("lJxs"),
        C = n("/uUt"),
        S = n("1G5W"),
        E = n("R0Ic");
      const k = ["trigger"],
        O = ["panel"];
      function I(e, t) {
        if ((1 & e && (r.Rc(0, "span", 8), r.Ed(1), r.Qc()), 2 & e)) {
          const e = r.gd();
          r.zc(1), r.Fd(e.placeholder || "\xa0");
        }
      }
      function T(e, t) {
        if ((1 & e && (r.Rc(0, "span"), r.Ed(1), r.Qc()), 2 & e)) {
          const e = r.gd(2);
          r.zc(1), r.Fd(e.triggerValue || "\xa0");
        }
      }
      function A(e, t) {
        1 & e && r.jd(0, 0, ["*ngSwitchCase", "true"]);
      }
      function D(e, t) {
        if (
          (1 & e &&
            (r.Rc(0, "span", 9),
            r.Cd(1, T, 2, 1, "span", 10),
            r.Cd(2, A, 1, 0, "ng-content", 11),
            r.Qc()),
          2 & e)
        ) {
          const e = r.gd();
          r.ld("ngSwitch", !!e.customTrigger),
            r.zc(2),
            r.ld("ngSwitchCase", !0);
        }
      }
      function M(e, t) {
        if (1 & e) {
          const e = r.Sc();
          r.Rc(0, "div", 12),
            r.Rc(1, "div", 13, 14),
            r.cd("@transformPanel.done", function (t) {
              r.ud(e);
              return r.gd()._panelDoneAnimatingStream.next(t.toState);
            })("keydown", function (t) {
              r.ud(e);
              return r.gd()._handleKeydown(t);
            }),
            r.jd(3, 1),
            r.Qc(),
            r.Qc();
        }
        if (2 & e) {
          const e = r.gd();
          r.ld("@transformPanelWrap", void 0),
            r.zc(1),
            r.Cc("mat-select-panel ", e._getPanelTheme(), ""),
            r.zd("transform-origin", e._transformOrigin)(
              "font-size",
              e._triggerFontSize,
              "px"
            ),
            r.ld("ngClass", e.panelClass)(
              "@transformPanel",
              e.multiple ? "showing-multiple" : "showing"
            ),
            r.Ac("id", e.id + "-panel")("aria-multiselectable", e.multiple)(
              "aria-label",
              e.ariaLabel || null
            )("aria-labelledby", e._getPanelAriaLabelledby());
        }
      }
      const P = [[["mat-select-trigger"]], "*"],
        R = {
          transformPanelWrap: Object(E.n)("transformPanelWrap", [
            Object(E.m)(
              "* => void",
              Object(E.i)("@transformPanel", [Object(E.f)()], { optional: !0 })
            ),
          ]),
          transformPanel: Object(E.n)("transformPanel", [
            Object(E.k)(
              "void",
              Object(E.l)({
                transform: "scaleY(0.8)",
                minWidth: "100%",
                opacity: 0,
              })
            ),
            Object(E.k)(
              "showing",
              Object(E.l)({
                opacity: 1,
                minWidth: "calc(100% + 32px)",
                transform: "scaleY(1)",
              })
            ),
            Object(E.k)(
              "showing-multiple",
              Object(E.l)({
                opacity: 1,
                minWidth: "calc(100% + 64px)",
                transform: "scaleY(1)",
              })
            ),
            Object(E.m)(
              "void => *",
              Object(E.e)("120ms cubic-bezier(0, 0, 0.2, 1)")
            ),
            Object(E.m)(
              "* => void",
              Object(E.e)("100ms 25ms linear", Object(E.l)({ opacity: 0 }))
            ),
          ]),
        };
      let j = 0;
      const N = 256,
        F = new r.E("mat-select-scroll-strategy");
      const L = new r.E("MAT_SELECT_CONFIG"),
        V = {
          provide: F,
          deps: [s.c],
          useFactory: function (e) {
            return () => e.scrollStrategies.reposition();
          },
        };
      class B {
        constructor(e, t) {
          (this.source = e), (this.value = t);
        }
      }
      const z = Object(o.l)(
          Object(o.o)(
            Object(o.m)(
              Object(o.n)(
                class {
                  constructor(e, t, n, s, i) {
                    (this._elementRef = e),
                      (this._defaultErrorStateMatcher = t),
                      (this._parentForm = n),
                      (this._parentFormGroup = s),
                      (this.ngControl = i);
                  }
                }
              )
            )
          )
        ),
        H = new r.E("MatSelectTrigger");
      class G {}
      (G.ɵfac = function (e) {
        return new (e || G)();
      }),
        (G.ɵdir = r.Hc({
          type: G,
          selectors: [["mat-select-trigger"]],
          features: [r.yc([{ provide: H, useExisting: G }])],
        }));
      class U extends z {
        constructor(e, t, n, s, i, o, a, l, c, u, d, h, p, m) {
          var C, S, E, k, O;
          super(i, s, a, l, u),
            (this._viewportRuler = e),
            (this._changeDetectorRef = t),
            (this._ngZone = n),
            (this._dir = o),
            (this._parentFormField = c),
            (this.ngControl = u),
            (this._liveAnnouncer = p),
            (this._defaultOptions = m),
            (this._panelOpen = !1),
            (this._compareWith = (e, t) => e === t),
            (this._uid = "mat-select-" + j++),
            (this._triggerAriaLabelledBy = null),
            (this._destroy = new f.a()),
            (this._onChange = () => {}),
            (this._onTouched = () => {}),
            (this._valueId = "mat-select-value-" + j++),
            (this._panelDoneAnimatingStream = new f.a()),
            (this._overlayPanelClass =
              (null === (C = this._defaultOptions) || void 0 === C
                ? void 0
                : C.overlayPanelClass) || ""),
            (this._focused = !1),
            (this.controlType = "mat-select"),
            (this._required = !1),
            (this._multiple = !1),
            (this._disableOptionCentering =
              null !==
                (E =
                  null === (S = this._defaultOptions) || void 0 === S
                    ? void 0
                    : S.disableOptionCentering) &&
              void 0 !== E &&
              E),
            (this.ariaLabel = ""),
            (this._typeaheadDebounceInterval =
              null !==
                (O =
                  null === (k = this._defaultOptions) || void 0 === k
                    ? void 0
                    : k.typeaheadDebounceInterval) && void 0 !== O
                ? O
                : 0),
            (this.optionSelectionChanges = Object(g.a)(() => {
              const e = this.options;
              return e
                ? e.changes.pipe(
                    Object(v.a)(e),
                    Object(b.a)(() =>
                      Object(y.a)(...e.map((e) => e.onSelectionChange))
                    )
                  )
                : this._ngZone.onStable.pipe(
                    Object(x.a)(1),
                    Object(b.a)(() => this.optionSelectionChanges)
                  );
            })),
            (this.openedChange = new r.x()),
            (this._openedStream = this.openedChange.pipe(
              Object(_.a)((e) => e),
              Object(w.a)(() => {})
            )),
            (this._closedStream = this.openedChange.pipe(
              Object(_.a)((e) => !e),
              Object(w.a)(() => {})
            )),
            (this.selectionChange = new r.x()),
            (this.valueChange = new r.x()),
            this.ngControl && (this.ngControl.valueAccessor = this),
            (this._scrollStrategyFactory = h),
            (this._scrollStrategy = this._scrollStrategyFactory()),
            (this.tabIndex = parseInt(d) || 0),
            (this.id = this.id);
        }
        get focused() {
          return this._focused || this._panelOpen;
        }
        get placeholder() {
          return this._placeholder;
        }
        set placeholder(e) {
          (this._placeholder = e), this.stateChanges.next();
        }
        get required() {
          return this._required;
        }
        set required(e) {
          (this._required = Object(d.b)(e)), this.stateChanges.next();
        }
        get multiple() {
          return this._multiple;
        }
        set multiple(e) {
          this._selectionModel, (this._multiple = Object(d.b)(e));
        }
        get disableOptionCentering() {
          return this._disableOptionCentering;
        }
        set disableOptionCentering(e) {
          this._disableOptionCentering = Object(d.b)(e);
        }
        get compareWith() {
          return this._compareWith;
        }
        set compareWith(e) {
          (this._compareWith = e),
            this._selectionModel && this._initializeSelection();
        }
        get value() {
          return this._value;
        }
        set value(e) {
          e !== this._value &&
            (this.options && this._setSelectionByValue(e), (this._value = e));
        }
        get typeaheadDebounceInterval() {
          return this._typeaheadDebounceInterval;
        }
        set typeaheadDebounceInterval(e) {
          this._typeaheadDebounceInterval = Object(d.e)(e);
        }
        get id() {
          return this._id;
        }
        set id(e) {
          (this._id = e || this._uid), this.stateChanges.next();
        }
        ngOnInit() {
          (this._selectionModel = new h.b(this.multiple)),
            this.stateChanges.next(),
            this._panelDoneAnimatingStream
              .pipe(Object(C.a)(), Object(S.a)(this._destroy))
              .subscribe(() => this._panelDoneAnimating(this.panelOpen));
        }
        ngAfterContentInit() {
          this._initKeyManager(),
            this._selectionModel.changed
              .pipe(Object(S.a)(this._destroy))
              .subscribe((e) => {
                e.added.forEach((e) => e.select()),
                  e.removed.forEach((e) => e.deselect());
              }),
            this.options.changes
              .pipe(Object(v.a)(null), Object(S.a)(this._destroy))
              .subscribe(() => {
                this._resetOptions(), this._initializeSelection();
              });
        }
        ngDoCheck() {
          const e = this._getTriggerAriaLabelledby();
          if (e !== this._triggerAriaLabelledBy) {
            const t = this._elementRef.nativeElement;
            (this._triggerAriaLabelledBy = e),
              e
                ? t.setAttribute("aria-labelledby", e)
                : t.removeAttribute("aria-labelledby");
          }
          this.ngControl && this.updateErrorState();
        }
        ngOnChanges(e) {
          e.disabled && this.stateChanges.next(),
            e.typeaheadDebounceInterval &&
              this._keyManager &&
              this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);
        }
        ngOnDestroy() {
          this._destroy.next(),
            this._destroy.complete(),
            this.stateChanges.complete();
        }
        toggle() {
          this.panelOpen ? this.close() : this.open();
        }
        open() {
          this._canOpen() &&
            ((this._panelOpen = !0),
            this._keyManager.withHorizontalOrientation(null),
            this._highlightCorrectOption(),
            this._changeDetectorRef.markForCheck());
        }
        close() {
          this._panelOpen &&
            ((this._panelOpen = !1),
            this._keyManager.withHorizontalOrientation(
              this._isRtl() ? "rtl" : "ltr"
            ),
            this._changeDetectorRef.markForCheck(),
            this._onTouched());
        }
        writeValue(e) {
          this.value = e;
        }
        registerOnChange(e) {
          this._onChange = e;
        }
        registerOnTouched(e) {
          this._onTouched = e;
        }
        setDisabledState(e) {
          (this.disabled = e),
            this._changeDetectorRef.markForCheck(),
            this.stateChanges.next();
        }
        get panelOpen() {
          return this._panelOpen;
        }
        get selected() {
          return this.multiple
            ? this._selectionModel.selected
            : this._selectionModel.selected[0];
        }
        get triggerValue() {
          if (this.empty) return "";
          if (this._multiple) {
            const e = this._selectionModel.selected.map((e) => e.viewValue);
            return this._isRtl() && e.reverse(), e.join(", ");
          }
          return this._selectionModel.selected[0].viewValue;
        }
        _isRtl() {
          return !!this._dir && "rtl" === this._dir.value;
        }
        _handleKeydown(e) {
          this.disabled ||
            (this.panelOpen
              ? this._handleOpenKeydown(e)
              : this._handleClosedKeydown(e));
        }
        _handleClosedKeydown(e) {
          const t = e.keyCode,
            n = t === p.b || t === p.l || t === p.g || t === p.i,
            s = t === p.d || t === p.j,
            i = this._keyManager;
          if (
            (!i.isTyping() && s && !Object(p.o)(e)) ||
            ((this.multiple || e.altKey) && n)
          )
            e.preventDefault(), this.open();
          else if (!this.multiple) {
            const t = this.selected;
            i.onKeydown(e);
            const n = this.selected;
            n && t !== n && this._liveAnnouncer.announce(n.viewValue, 1e4);
          }
        }
        _handleOpenKeydown(e) {
          const t = this._keyManager,
            n = e.keyCode,
            s = n === p.b || n === p.l,
            i = t.isTyping();
          if (s && e.altKey) e.preventDefault(), this.close();
          else if (
            i ||
            (n !== p.d && n !== p.j) ||
            !t.activeItem ||
            Object(p.o)(e)
          )
            if (!i && this._multiple && n === p.a && e.ctrlKey) {
              e.preventDefault();
              const t = this.options.some((e) => !e.disabled && !e.selected);
              this.options.forEach((e) => {
                e.disabled || (t ? e.select() : e.deselect());
              });
            } else {
              const n = t.activeItemIndex;
              t.onKeydown(e),
                this._multiple &&
                  s &&
                  e.shiftKey &&
                  t.activeItem &&
                  t.activeItemIndex !== n &&
                  t.activeItem._selectViaInteraction();
            }
          else e.preventDefault(), t.activeItem._selectViaInteraction();
        }
        _onFocus() {
          this.disabled || ((this._focused = !0), this.stateChanges.next());
        }
        _onBlur() {
          (this._focused = !1),
            this.disabled ||
              this.panelOpen ||
              (this._onTouched(),
              this._changeDetectorRef.markForCheck(),
              this.stateChanges.next());
        }
        _onAttached() {
          this.overlayDir.positionChange.pipe(Object(x.a)(1)).subscribe(() => {
            this._changeDetectorRef.detectChanges(), this._positioningSettled();
          });
        }
        _getPanelTheme() {
          return this._parentFormField
            ? "mat-" + this._parentFormField.color
            : "";
        }
        get empty() {
          return !this._selectionModel || this._selectionModel.isEmpty();
        }
        _initializeSelection() {
          Promise.resolve().then(() => {
            this._setSelectionByValue(
              this.ngControl ? this.ngControl.value : this._value
            ),
              this.stateChanges.next();
          });
        }
        _setSelectionByValue(e) {
          if (
            (this._selectionModel.selected.forEach((e) =>
              e.setInactiveStyles()
            ),
            this._selectionModel.clear(),
            this.multiple && e)
          )
            Array.isArray(e),
              e.forEach((e) => this._selectValue(e)),
              this._sortValues();
          else {
            const t = this._selectValue(e);
            t
              ? this._keyManager.updateActiveItem(t)
              : this.panelOpen || this._keyManager.updateActiveItem(-1);
          }
          this._changeDetectorRef.markForCheck();
        }
        _selectValue(e) {
          const t = this.options.find((t) => {
            try {
              return null != t.value && this._compareWith(t.value, e);
            } catch (n) {
              return !1;
            }
          });
          return t && this._selectionModel.select(t), t;
        }
        _initKeyManager() {
          (this._keyManager = new c.a(this.options)
            .withTypeAhead(this._typeaheadDebounceInterval)
            .withVerticalOrientation()
            .withHorizontalOrientation(this._isRtl() ? "rtl" : "ltr")
            .withHomeAndEnd()
            .withAllowedModifierKeys(["shiftKey"])),
            this._keyManager.tabOut
              .pipe(Object(S.a)(this._destroy))
              .subscribe(() => {
                this.panelOpen &&
                  (!this.multiple &&
                    this._keyManager.activeItem &&
                    this._keyManager.activeItem._selectViaInteraction(),
                  this.focus(),
                  this.close());
              }),
            this._keyManager.change
              .pipe(Object(S.a)(this._destroy))
              .subscribe(() => {
                this._panelOpen && this.panel
                  ? this._scrollOptionIntoView(
                      this._keyManager.activeItemIndex || 0
                    )
                  : this._panelOpen ||
                    this.multiple ||
                    !this._keyManager.activeItem ||
                    this._keyManager.activeItem._selectViaInteraction();
              });
        }
        _resetOptions() {
          const e = Object(y.a)(this.options.changes, this._destroy);
          this.optionSelectionChanges.pipe(Object(S.a)(e)).subscribe((e) => {
            this._onSelect(e.source, e.isUserInput),
              e.isUserInput &&
                !this.multiple &&
                this._panelOpen &&
                (this.close(), this.focus());
          }),
            Object(y.a)(...this.options.map((e) => e._stateChanges))
              .pipe(Object(S.a)(e))
              .subscribe(() => {
                this._changeDetectorRef.markForCheck(),
                  this.stateChanges.next();
              });
        }
        _onSelect(e, t) {
          const n = this._selectionModel.isSelected(e);
          null != e.value || this._multiple
            ? (n !== e.selected &&
                (e.selected
                  ? this._selectionModel.select(e)
                  : this._selectionModel.deselect(e)),
              t && this._keyManager.setActiveItem(e),
              this.multiple && (this._sortValues(), t && this.focus()))
            : (e.deselect(),
              this._selectionModel.clear(),
              null != this.value && this._propagateChanges(e.value)),
            n !== this._selectionModel.isSelected(e) &&
              this._propagateChanges(),
            this.stateChanges.next();
        }
        _sortValues() {
          if (this.multiple) {
            const e = this.options.toArray();
            this._selectionModel.sort((t, n) =>
              this.sortComparator
                ? this.sortComparator(t, n, e)
                : e.indexOf(t) - e.indexOf(n)
            ),
              this.stateChanges.next();
          }
        }
        _propagateChanges(e) {
          let t = null;
          (t = this.multiple
            ? this.selected.map((e) => e.value)
            : this.selected
            ? this.selected.value
            : e),
            (this._value = t),
            this.valueChange.emit(t),
            this._onChange(t),
            this.selectionChange.emit(this._getChangeEvent(t)),
            this._changeDetectorRef.markForCheck();
        }
        _highlightCorrectOption() {
          this._keyManager &&
            (this.empty
              ? this._keyManager.setFirstItemActive()
              : this._keyManager.setActiveItem(
                  this._selectionModel.selected[0]
                ));
        }
        _canOpen() {
          var e;
          return (
            !this._panelOpen &&
            !this.disabled &&
            (null === (e = this.options) || void 0 === e ? void 0 : e.length) >
              0
          );
        }
        focus(e) {
          this._elementRef.nativeElement.focus(e);
        }
        _getPanelAriaLabelledby() {
          if (this.ariaLabel) return null;
          const e = this._getLabelId();
          return this.ariaLabelledby ? e + " " + this.ariaLabelledby : e;
        }
        _getAriaActiveDescendant() {
          return this.panelOpen &&
            this._keyManager &&
            this._keyManager.activeItem
            ? this._keyManager.activeItem.id
            : null;
        }
        _getLabelId() {
          var e;
          return (
            (null === (e = this._parentFormField) || void 0 === e
              ? void 0
              : e.getLabelId()) || ""
          );
        }
        _getTriggerAriaLabelledby() {
          if (this.ariaLabel) return null;
          let e = this._getLabelId() + " " + this._valueId;
          return this.ariaLabelledby && (e += " " + this.ariaLabelledby), e;
        }
        _panelDoneAnimating(e) {
          this.openedChange.emit(e);
        }
        setDescribedByIds(e) {
          this._ariaDescribedby = e.join(" ");
        }
        onContainerClick() {
          this.focus(), this.open();
        }
        get shouldLabelFloat() {
          return this._panelOpen || !this.empty;
        }
      }
      (U.ɵfac = function (e) {
        return new (e || U)(
          r.Mc(l.e),
          r.Mc(r.k),
          r.Mc(r.Q),
          r.Mc(o.a),
          r.Mc(r.v),
          r.Mc(u.b, 8),
          r.Mc(m.j, 8),
          r.Mc(m.e, 8),
          r.Mc(a.a, 8),
          r.Mc(m.i, 10),
          r.Zc("tabindex"),
          r.Mc(F),
          r.Mc(c.f),
          r.Mc(L, 8)
        );
      }),
        (U.ɵdir = r.Hc({
          type: U,
          viewQuery: function (e, t) {
            if ((1 & e && (r.Id(k, !0), r.Id(O, !0), r.Id(s.a, !0)), 2 & e)) {
              let e;
              r.sd((e = r.dd())) && (t.trigger = e.first),
                r.sd((e = r.dd())) && (t.panel = e.first),
                r.sd((e = r.dd())) && (t.overlayDir = e.first);
            }
          },
          inputs: {
            ariaLabel: ["aria-label", "ariaLabel"],
            id: "id",
            placeholder: "placeholder",
            required: "required",
            multiple: "multiple",
            disableOptionCentering: "disableOptionCentering",
            compareWith: "compareWith",
            value: "value",
            typeaheadDebounceInterval: "typeaheadDebounceInterval",
            panelClass: "panelClass",
            ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
            errorStateMatcher: "errorStateMatcher",
            sortComparator: "sortComparator",
          },
          outputs: {
            openedChange: "openedChange",
            _openedStream: "opened",
            _closedStream: "closed",
            selectionChange: "selectionChange",
            valueChange: "valueChange",
          },
          features: [r.wc, r.xc],
        })),
        (U.ctorParameters = () => [
          { type: l.e },
          { type: r.k },
          { type: r.Q },
          { type: o.a },
          { type: r.v },
          { type: u.b, decorators: [{ type: r.R }] },
          { type: m.j, decorators: [{ type: r.R }] },
          { type: m.e, decorators: [{ type: r.R }] },
          {
            type: a.b,
            decorators: [{ type: r.R }, { type: r.C, args: [a.a] }],
          },
          { type: m.i, decorators: [{ type: r.db }, { type: r.R }] },
          { type: String, decorators: [{ type: r.h, args: ["tabindex"] }] },
          { type: void 0, decorators: [{ type: r.C, args: [F] }] },
          { type: c.f },
          {
            type: void 0,
            decorators: [{ type: r.R }, { type: r.C, args: [L] }],
          },
        ]),
        (U.propDecorators = {
          trigger: [{ type: r.mb, args: ["trigger"] }],
          panel: [{ type: r.mb, args: ["panel"] }],
          overlayDir: [{ type: r.mb, args: [s.a] }],
          panelClass: [{ type: r.G }],
          placeholder: [{ type: r.G }],
          required: [{ type: r.G }],
          multiple: [{ type: r.G }],
          disableOptionCentering: [{ type: r.G }],
          compareWith: [{ type: r.G }],
          value: [{ type: r.G }],
          ariaLabel: [{ type: r.G, args: ["aria-label"] }],
          ariaLabelledby: [{ type: r.G, args: ["aria-labelledby"] }],
          errorStateMatcher: [{ type: r.G }],
          typeaheadDebounceInterval: [{ type: r.G }],
          sortComparator: [{ type: r.G }],
          id: [{ type: r.G }],
          openedChange: [{ type: r.S }],
          _openedStream: [{ type: r.S, args: ["opened"] }],
          _closedStream: [{ type: r.S, args: ["closed"] }],
          selectionChange: [{ type: r.S }],
          valueChange: [{ type: r.S }],
        });
      class $ extends U {
        constructor() {
          super(...arguments),
            (this._scrollTop = 0),
            (this._triggerFontSize = 0),
            (this._transformOrigin = "top"),
            (this._offsetY = 0),
            (this._positions = [
              {
                originX: "start",
                originY: "top",
                overlayX: "start",
                overlayY: "top",
              },
              {
                originX: "start",
                originY: "bottom",
                overlayX: "start",
                overlayY: "bottom",
              },
            ]);
        }
        _calculateOverlayScroll(e, t, n) {
          const s = this._getItemHeight(),
            i = s * e - t + s / 2;
          return Math.min(Math.max(0, i), n);
        }
        ngOnInit() {
          super.ngOnInit(),
            this._viewportRuler
              .change()
              .pipe(Object(S.a)(this._destroy))
              .subscribe(() => {
                this.panelOpen &&
                  ((this._triggerRect =
                    this.trigger.nativeElement.getBoundingClientRect()),
                  this._changeDetectorRef.markForCheck());
              });
        }
        open() {
          super._canOpen() &&
            (super.open(),
            (this._triggerRect =
              this.trigger.nativeElement.getBoundingClientRect()),
            (this._triggerFontSize = parseInt(
              getComputedStyle(this.trigger.nativeElement).fontSize || "0"
            )),
            this._calculateOverlayPosition(),
            this._ngZone.onStable.pipe(Object(x.a)(1)).subscribe(() => {
              this._triggerFontSize &&
                this.overlayDir.overlayRef &&
                this.overlayDir.overlayRef.overlayElement &&
                (this.overlayDir.overlayRef.overlayElement.style.fontSize =
                  this._triggerFontSize + "px");
            }));
        }
        _scrollOptionIntoView(e) {
          const t = Object(o.i)(e, this.options, this.optionGroups),
            n = this._getItemHeight();
          this.panel.nativeElement.scrollTop = Object(o.j)(
            (e + t) * n,
            n,
            this.panel.nativeElement.scrollTop,
            N
          );
        }
        _positioningSettled() {
          this._calculateOverlayOffsetX(),
            (this.panel.nativeElement.scrollTop = this._scrollTop);
        }
        _panelDoneAnimating(e) {
          this.panelOpen
            ? (this._scrollTop = 0)
            : ((this.overlayDir.offsetX = 0),
              this._changeDetectorRef.markForCheck()),
            super._panelDoneAnimating(e);
        }
        _getChangeEvent(e) {
          return new B(this, e);
        }
        _calculateOverlayOffsetX() {
          const e =
              this.overlayDir.overlayRef.overlayElement.getBoundingClientRect(),
            t = this._viewportRuler.getViewportSize(),
            n = this._isRtl(),
            s = this.multiple ? 56 : 32;
          let i;
          if (this.multiple) i = 40;
          else {
            let e = this._selectionModel.selected[0] || this.options.first;
            i = e && e.group ? 32 : 16;
          }
          n || (i *= -1);
          const r = 0 - (e.left + i - (n ? s : 0)),
            o = e.right + i - t.width + (n ? 0 : s);
          r > 0 ? (i += r + 8) : o > 0 && (i -= o + 8),
            (this.overlayDir.offsetX = Math.round(i)),
            this.overlayDir.overlayRef.updatePosition();
        }
        _calculateOverlayOffsetY(e, t, n) {
          const s = this._getItemHeight(),
            i = (s - this._triggerRect.height) / 2,
            r = Math.floor(N / s);
          let o;
          if (this.disableOptionCentering) return 0;
          if (0 === this._scrollTop) o = e * s;
          else if (this._scrollTop === n) {
            o =
              (e - (this._getItemCount() - r)) * s +
              (s - ((this._getItemCount() * s - N) % s));
          } else o = t - s / 2;
          return Math.round(-1 * o - i);
        }
        _checkOverlayWithinViewport(e) {
          const t = this._getItemHeight(),
            n = this._viewportRuler.getViewportSize(),
            s = this._triggerRect.top - 8,
            i = n.height - this._triggerRect.bottom - 8,
            r = Math.abs(this._offsetY),
            o =
              Math.min(this._getItemCount() * t, N) -
              r -
              this._triggerRect.height;
          o > i
            ? this._adjustPanelUp(o, i)
            : r > s
            ? this._adjustPanelDown(r, s, e)
            : (this._transformOrigin = this._getOriginBasedOnOption());
        }
        _adjustPanelUp(e, t) {
          const n = Math.round(e - t);
          (this._scrollTop -= n),
            (this._offsetY -= n),
            (this._transformOrigin = this._getOriginBasedOnOption()),
            this._scrollTop <= 0 &&
              ((this._scrollTop = 0),
              (this._offsetY = 0),
              (this._transformOrigin = "50% bottom 0px"));
        }
        _adjustPanelDown(e, t, n) {
          const s = Math.round(e - t);
          if (
            ((this._scrollTop += s),
            (this._offsetY += s),
            (this._transformOrigin = this._getOriginBasedOnOption()),
            this._scrollTop >= n)
          )
            return (
              (this._scrollTop = n),
              (this._offsetY = 0),
              void (this._transformOrigin = "50% top 0px")
            );
        }
        _calculateOverlayPosition() {
          const e = this._getItemHeight(),
            t = this._getItemCount(),
            n = Math.min(t * e, N),
            s = t * e - n;
          let i;
          (i = this.empty
            ? 0
            : Math.max(
                this.options
                  .toArray()
                  .indexOf(this._selectionModel.selected[0]),
                0
              )),
            (i += Object(o.i)(i, this.options, this.optionGroups));
          const r = n / 2;
          (this._scrollTop = this._calculateOverlayScroll(i, r, s)),
            (this._offsetY = this._calculateOverlayOffsetY(i, r, s)),
            this._checkOverlayWithinViewport(s);
        }
        _getOriginBasedOnOption() {
          const e = this._getItemHeight(),
            t = (e - this._triggerRect.height) / 2;
          return `50% ${Math.abs(this._offsetY) - t + e / 2}px 0px`;
        }
        _getItemHeight() {
          return 3 * this._triggerFontSize;
        }
        _getItemCount() {
          return this.options.length + this.optionGroups.length;
        }
      }
      ($.ɵfac = function (e) {
        return q(e || $);
      }),
        ($.ɵcmp = r.Gc({
          type: $,
          selectors: [["mat-select"]],
          contentQueries: function (e, t, n) {
            if (
              (1 & e && (r.Fc(n, H, !0), r.Fc(n, o.e, !0), r.Fc(n, o.b, !0)),
              2 & e)
            ) {
              let e;
              r.sd((e = r.dd())) && (t.customTrigger = e.first),
                r.sd((e = r.dd())) && (t.options = e),
                r.sd((e = r.dd())) && (t.optionGroups = e);
            }
          },
          hostAttrs: [
            "role",
            "combobox",
            "aria-autocomplete",
            "none",
            "aria-haspopup",
            "true",
            1,
            "mat-select",
          ],
          hostVars: 20,
          hostBindings: function (e, t) {
            1 & e &&
              r.cd("keydown", function (e) {
                return t._handleKeydown(e);
              })("focus", function () {
                return t._onFocus();
              })("blur", function () {
                return t._onBlur();
              }),
              2 & e &&
                (r.Ac("id", t.id)("tabindex", t.tabIndex)(
                  "aria-controls",
                  t.panelOpen ? t.id + "-panel" : null
                )("aria-expanded", t.panelOpen)(
                  "aria-label",
                  t.ariaLabel || null
                )("aria-required", t.required.toString())(
                  "aria-disabled",
                  t.disabled.toString()
                )("aria-invalid", t.errorState)(
                  "aria-describedby",
                  t._ariaDescribedby || null
                )("aria-activedescendant", t._getAriaActiveDescendant()),
                r.Ec("mat-select-disabled", t.disabled)(
                  "mat-select-invalid",
                  t.errorState
                )("mat-select-required", t.required)(
                  "mat-select-empty",
                  t.empty
                )("mat-select-multiple", t.multiple));
          },
          inputs: {
            disabled: "disabled",
            disableRipple: "disableRipple",
            tabIndex: "tabIndex",
          },
          exportAs: ["matSelect"],
          features: [
            r.yc([
              { provide: a.c, useExisting: $ },
              { provide: o.c, useExisting: $ },
            ]),
            r.wc,
          ],
          ngContentSelectors: ["mat-select-trigger", "*"],
          decls: 9,
          vars: 12,
          consts: [
            ["cdk-overlay-origin", "", 1, "mat-select-trigger", 3, "click"],
            ["origin", "cdkOverlayOrigin", "trigger", ""],
            [1, "mat-select-value", 3, "ngSwitch"],
            ["class", "mat-select-placeholder", 4, "ngSwitchCase"],
            [
              "class",
              "mat-select-value-text",
              3,
              "ngSwitch",
              4,
              "ngSwitchCase",
            ],
            [1, "mat-select-arrow-wrapper"],
            [1, "mat-select-arrow"],
            [
              "cdk-connected-overlay",
              "",
              "cdkConnectedOverlayLockPosition",
              "",
              "cdkConnectedOverlayHasBackdrop",
              "",
              "cdkConnectedOverlayBackdropClass",
              "cdk-overlay-transparent-backdrop",
              3,
              "cdkConnectedOverlayPanelClass",
              "cdkConnectedOverlayScrollStrategy",
              "cdkConnectedOverlayOrigin",
              "cdkConnectedOverlayOpen",
              "cdkConnectedOverlayPositions",
              "cdkConnectedOverlayMinWidth",
              "cdkConnectedOverlayOffsetY",
              "backdropClick",
              "attach",
              "detach",
            ],
            [1, "mat-select-placeholder"],
            [1, "mat-select-value-text", 3, "ngSwitch"],
            [4, "ngSwitchDefault"],
            [4, "ngSwitchCase"],
            [1, "mat-select-panel-wrap"],
            ["role", "listbox", "tabindex", "-1", 3, "ngClass", "keydown"],
            ["panel", ""],
          ],
          template: function (e, t) {
            if (
              (1 & e &&
                (r.kd(P),
                r.Rc(0, "div", 0, 1),
                r.cd("click", function () {
                  return t.toggle();
                }),
                r.Rc(3, "div", 2),
                r.Cd(4, I, 2, 1, "span", 3),
                r.Cd(5, D, 3, 2, "span", 4),
                r.Qc(),
                r.Rc(6, "div", 5),
                r.Nc(7, "div", 6),
                r.Qc(),
                r.Qc(),
                r.Cd(8, M, 4, 14, "ng-template", 7),
                r.cd("backdropClick", function () {
                  return t.close();
                })("attach", function () {
                  return t._onAttached();
                })("detach", function () {
                  return t.close();
                })),
              2 & e)
            ) {
              const e = r.td(1);
              r.Ac("aria-owns", t.panelOpen ? t.id + "-panel" : null),
                r.zc(3),
                r.ld("ngSwitch", t.empty),
                r.Ac("id", t._valueId),
                r.zc(1),
                r.ld("ngSwitchCase", !0),
                r.zc(1),
                r.ld("ngSwitchCase", !1),
                r.zc(3),
                r.ld("cdkConnectedOverlayPanelClass", t._overlayPanelClass)(
                  "cdkConnectedOverlayScrollStrategy",
                  t._scrollStrategy
                )("cdkConnectedOverlayOrigin", e)(
                  "cdkConnectedOverlayOpen",
                  t.panelOpen
                )("cdkConnectedOverlayPositions", t._positions)(
                  "cdkConnectedOverlayMinWidth",
                  null == t._triggerRect ? null : t._triggerRect.width
                )("cdkConnectedOverlayOffsetY", t._offsetY);
            }
          },
          directives: [s.b, i.m, i.n, s.a, i.o, i.i],
          styles: [
            ".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\n",
          ],
          encapsulation: 2,
          data: { animation: [R.transformPanelWrap, R.transformPanel] },
          changeDetection: 0,
        })),
        ($.propDecorators = {
          options: [{ type: r.s, args: [o.e, { descendants: !0 }] }],
          optionGroups: [{ type: r.s, args: [o.b, { descendants: !0 }] }],
          customTrigger: [{ type: r.r, args: [H] }],
        });
      const q = r.Tc($);
      class W {}
      (W.ɵmod = r.Kc({ type: W })),
        (W.ɵinj = r.Jc({
          factory: function (e) {
            return new (e || W)();
          },
          providers: [V],
          imports: [[i.b, s.f, o.f, o.d], l.b, a.d, o.f, o.d],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          r.wd(W, {
            declarations: function () {
              return [$, G];
            },
            imports: function () {
              return [i.b, s.f, o.f, o.d];
            },
            exports: function () {
              return [l.b, a.d, $, G, o.f, o.d];
            },
          });
    },
    dtin: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var s = n("mrSG"),
        i = n("fXoL");
      let r = class {
        constructor() {}
        ngOnInit() {}
      };
      (r.ctorParameters = () => []),
        (r = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-maths",
              template:
                '<app-header></app-header>\n<div class="mathsContainer">\n    <div class="wrapper">\n        <app-maths-intro></app-maths-intro>\n        <app-free-trial-callout></app-free-trial-callout>\n        <h2 class="h3_text">Ei Mindspark\u2013Learn Maths Concepts</h2>\n        <app-subject-pillers [subject]="\'Maths\'"></app-subject-pillers>\n        <app-subject-syllabus [subject]="\'Maths\'"></app-subject-syllabus>\n        <app-role-wise></app-role-wise>\n        <app-awards></app-awards>\n        \x3c!-- <app-study-material></app-study-material> --\x3e\n        <app-free-trial-callout [background]=\'true\'></app-free-trial-callout>\n        <app-footer></app-footer>\n    </div>\n</div>',
              styles: [
                ".mathsContainer {\n  display: flex;\n  justify-content: center;\n  margin-top: 120px;\n}\n\n.wrapper {\n  width: 1302px;\n}\n\n@media only screen and (max-width: 1302px) {\n  .wrapper {\n    width: 100%;\n  }\n\n  .mathsContainer {\n    margin: 80px 24px 0px 24px;\n  }\n}\n\n@media only screen and (max-width: 767px) {\n  .wrapper {\n    width: 100%;\n  }\n\n  .mathsContainer {\n    margin: 40px 20px 0px 20px;\n  }\n}\n\n.h3_text {\n  margin: 10px 10px;\n  font-size: 36px;\n  font-weight: bold;\n  line-height: 1.36;\n  text-align: center;\n  color: #212121;\n  margin-bottom: 5%;\n}",
              ],
            }),
          ],
          r
        ));
    },
    dw8f: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return a;
      });
      var s = n("mrSG"),
        i = n("tyNb"),
        r = n("fXoL"),
        o = n("xKP8");
      let a = class {
        constructor(e, t) {
          (this.subsriptionService = e),
            (this.route = t),
            (this.subscriptionState = "");
        }
        ngOnInit() {
          this.subsriptionService.onUpdateState.subscribe((e) => {
            (this.subscriptionState = e), this.scrollToTop();
          }),
            this.route.queryParams.subscribe((e) => {
              (this.subsriptionService.basicInfo = {}),
                this.subsriptionService.setUTMParams(e),
                e.username && "" != e.username
                  ? this.getUserDetails(e.username)
                  : this.subsriptionService.updateState("selectPlan");
            });
          var e = document.createElement("script");
          (e.type = "text/javascript"),
            (e.src = "https://checkout.razorpay.com/v1/checkout.js"),
            (e.async = !0),
            document.head.append(e);
        }
        getUserDetails(e) {
          this.subsriptionService.getUserDetailsByUsername(e).subscribe((e) => {
            let { data: t, code: n } = e;
            if ("555" == n && t) {
              let e = t.username,
                n = t.Name,
                s = t.childEmail,
                i = t.parentName,
                r = t.class,
                o = t.contactno_res,
                a = t.country,
                l = {};
              (l.username = e),
                (l.studentName = n),
                (l.email = s),
                (l.parent = i),
                (l.class = r),
                this.subsriptionService.updateApiClass(r),
                this.subsriptionService.updateClass("Class " + r);
              let c = o.split("-");
              this.subsriptionService.updateBasicInfo("contryCode", c[0]),
                this.subsriptionService.updateBasicInfo("countryName", a),
                this.subsriptionService.updateBasicInfo("phone", c[1]),
                this.subsriptionService.updateBasicInfo(
                  "isNumberVerified",
                  "true"
                ),
                this.subsriptionService.updateActiveStudent(l),
                this.subsriptionService.updateState("basicInfo");
            } else this.subsriptionService.updateState("selectPlan");
          });
        }
        scrollToTop() {
          /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
            navigator.userAgent
          ) && window.scrollTo(0, 0);
        }
      };
      (a.ctorParameters = () => [{ type: o.a }, { type: i.a }]),
        (a = Object(s.a)(
          [
            Object(r.n)({
              selector: "app-subscription",
              template:
                '<app-header></app-header>\n<app-package-select *ngIf="subscriptionState ==\'selectPlan\'"></app-package-select>\n<app-login-free-trial *ngIf="subscriptionState == \'otpVerify\'" [subscription]="true"></app-login-free-trial>\n<app-payment-page *ngIf="subscriptionState == \'basicInfo\'"></app-payment-page>\n<app-footer *ngIf="subscriptionState != \'\'"></app-footer>\n',
              styles: [
                ".mainContainer {\n  background-color: #f5f5f5;\n}\n\n.innerContent {\n  padding: 20px;\n}\n\n.loginTitle {\n  text-align: start;\n  font-family: Manrope;\n  font-size: 32px;\n  font-weight: bold;\n  line-height: 1.38;\n  letter-spacing: normal;\n  color: #212121;\n  margin-left: 20px;\n}\n\n.syllabus {\n  text-align: start;\n  font-family: Manrope;\n  font-size: 16px;\n  font-weight: bold;\n  line-height: 1.38;\n  letter-spacing: normal;\n  color: #212121;\n  display: flex;\n  align-items: center;\n}\n\n.selectClass {\n  border-radius: 18px;\n  padding: 8px;\n  margin-left: 4px;\n  box-shadow: 0 1px 2px 0 rgba(243, 111, 49, 0.1);\n  background-color: #ffffff;\n  font-size: 16px;\n  font-weight: bold;\n}\n\n.margin-left {\n  margin-left: 50px;\n}\n\n.margin-top {\n  margin-top: 20px;\n}\n\n.classCard {\n  width: 100px;\n  height: 80px;\n  margin: 13px 16px;\n  border-radius: 16px;\n  background-color: #fff;\n  text-align: center;\n  font-size: 16px;\n  font-weight: bold;\n}\n\n.classCard2 {\n  width: 192px;\n  height: 80px;\n  margin: 13px 16px;\n  border-radius: 16px;\n  background-color: #fff;\n  text-align: center;\n  font-size: 16px;\n  font-weight: bold;\n}\n\n.classCard3 {\n  margin: 10px;\n  border-radius: 16px;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n  background-color: #ffffff;\n  color: black;\n}\n\n.button {\n  width: 113px;\n  height: 29px;\n  margin: 4px 0 0;\n  padding: 6px 23px 5px 24px;\n  border-radius: 15px;\n  border: solid 1px #a5d170;\n  background-color: #a5d170;\n  margin-bottom: 20px;\n  font-size: 13px;\n  color: #fff;\n  display: flex;\n  justify-content: center;\n}\n\n.cardContent {\n  text-align: center;\n  align-items: center;\n}\n\n.mathsEnglish {\n  font-size: 23px;\n  margin-bottom: 20px;\n}\n\n.strike {\n  color: #212121;\n  font-size: 16px;\n}\n\n.months {\n  font-size: 23px;\n}\n\n.done-icon {\n  width: 24px;\n  height: 24px;\n  /* margin: 2px 12px 2px 0; */\n  /* padding: 0px 0px 0px; */\n  background-color: #fff;\n  text-align: center;\n  color: #28a7df;\n  border-radius: 30px;\n  font-weight: 500;\n  font-size: 16px;\n}\n\n.flex {\n  display: flex;\n}\n\n.center {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.space-between {\n  display: flex;\n  justify-content: space-between;\n}\n\n.selectedClass {\n  width: 178px;\n  height: 56px;\n  padding: 10px 44px 10px 12px;\n  border: solid 1px #c2e6f6;\n  background-color: #ffffff;\n  border-radius: 30px;\n}\n\n.serialNumber {\n  width: 32px;\n  height: 32px;\n  margin: 2px 12px 2px 0;\n  padding: 4px 7px 3px;\n  background-color: #28a7df;\n  text-align: center;\n  color: #fff;\n  border-radius: 30px;\n  font-weight: 500;\n  font-size: 16px;\n}\n\n.selectedClassHeading {\n  font-size: 11px;\n  text-align: left;\n  color: #212121;\n}\n\n.classSelected {\n  font-size: 14px;\n  color: #28a7df;\n  text-align: left;\n}",
              ],
            }),
          ],
          a
        ));
    },
    eIep: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var s = n("lJxs"),
        i = n("Cfvw"),
        r = n("zx2A");
      function o(e, t) {
        return "function" == typeof t
          ? (n) =>
              n.pipe(
                o((n, r) =>
                  Object(i.a)(e(n, r)).pipe(
                    Object(s.a)((e, s) => t(n, e, r, s))
                  )
                )
              )
          : (t) => t.lift(new a(e));
      }
      class a {
        constructor(e) {
          this.project = e;
        }
        call(e, t) {
          return t.subscribe(new l(e, this.project));
        }
      }
      class l extends r.b {
        constructor(e, t) {
          super(e), (this.project = t), (this.index = 0);
        }
        _next(e) {
          let t;
          const n = this.index++;
          try {
            t = this.project(e, n);
          } catch (s) {
            return void this.destination.error(s);
          }
          this._innerSub(t);
        }
        _innerSub(e) {
          const t = this.innerSubscription;
          t && t.unsubscribe();
          const n = new r.a(this),
            s = this.destination;
          s.add(n),
            (this.innerSubscription = Object(r.c)(e, n)),
            this.innerSubscription !== n && s.add(this.innerSubscription);
        }
        _complete() {
          const { innerSubscription: e } = this;
          (e && !e.closed) || super._complete(), this.unsubscribe();
        }
        _unsubscribe() {
          this.innerSubscription = void 0;
        }
        notifyComplete() {
          (this.innerSubscription = void 0),
            this.isStopped && super._complete();
        }
        notifyNext(e) {
          this.destination.next(e);
        }
      }
    },
    fXoL: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return V;
      }),
        n.d(t, "b", function () {
          return my;
        }),
        n.d(t, "c", function () {
          return cy;
        }),
        n.d(t, "d", function () {
          return ay;
        }),
        n.d(t, "e", function () {
          return ly;
        }),
        n.d(t, "f", function () {
          return Dv;
        }),
        n.d(t, "g", function () {
          return nv;
        }),
        n.d(t, "h", function () {
          return _;
        }),
        n.d(t, "i", function () {
          return Ay;
        }),
        n.d(t, "j", function () {
          return $;
        }),
        n.d(t, "k", function () {
          return np;
        }),
        n.d(t, "l", function () {
          return Ty;
        }),
        n.d(t, "m", function () {
          return Dy;
        }),
        n.d(t, "n", function () {
          return Kg;
        }),
        n.d(t, "o", function () {
          return Sh;
        }),
        n.d(t, "p", function () {
          return Oh;
        }),
        n.d(t, "q", function () {
          return Ch;
        }),
        n.d(t, "r", function () {
          return H;
        }),
        n.d(t, "s", function () {
          return z;
        }),
        n.d(t, "t", function () {
          return vy;
        }),
        n.d(t, "u", function () {
          return Qg;
        }),
        n.d(t, "v", function () {
          return Ph;
        }),
        n.d(t, "w", function () {
          return $i;
        }),
        n.d(t, "x", function () {
          return Jf;
        }),
        n.d(t, "y", function () {
          return x;
        }),
        n.d(t, "z", function () {
          return ey;
        }),
        n.d(t, "A", function () {
          return ty;
        }),
        n.d(t, "B", function () {
          return ca;
        }),
        n.d(t, "C", function () {
          return g;
        }),
        n.d(t, "D", function () {
          return Dl;
        }),
        n.d(t, "E", function () {
          return L;
        }),
        n.d(t, "F", function () {
          return Ea;
        }),
        n.d(t, "G", function () {
          return Xg;
        }),
        n.d(t, "H", function () {
          return Kh;
        }),
        n.d(t, "I", function () {
          return Jh;
        }),
        n.d(t, "J", function () {
          return yy;
        }),
        n.d(t, "K", function () {
          return _y;
        }),
        n.d(t, "L", function () {
          return ry;
        }),
        n.d(t, "M", function () {
          return mp;
        }),
        n.d(t, "N", function () {
          return rv;
        }),
        n.d(t, "O", function () {
          return pp;
        }),
        n.d(t, "P", function () {
          return Jy;
        }),
        n.d(t, "Q", function () {
          return Ry;
        }),
        n.d(t, "R", function () {
          return y;
        }),
        n.d(t, "S", function () {
          return Zg;
        }),
        n.d(t, "T", function () {
          return fy;
        }),
        n.d(t, "U", function () {
          return py;
        }),
        n.d(t, "V", function () {
          return hy;
        }),
        n.d(t, "W", function () {
          return Jg;
        }),
        n.d(t, "X", function () {
          return Zf;
        }),
        n.d(t, "Y", function () {
          return jh;
        }),
        n.d(t, "Z", function () {
          return Rh;
        }),
        n.d(t, "ab", function () {
          return lr;
        }),
        n.d(t, "bb", function () {
          return Fh;
        }),
        n.d(t, "cb", function () {
          return Fs;
        }),
        n.d(t, "db", function () {
          return v;
        }),
        n.d(t, "eb", function () {
          return b;
        }),
        n.d(t, "fb", function () {
          return lv;
        }),
        n.d(t, "gb", function () {
          return by;
        }),
        n.d(t, "hb", function () {
          return xy;
        }),
        n.d(t, "ib", function () {
          return cp;
        }),
        n.d(t, "jb", function () {
          return Hy;
        }),
        n.d(t, "kb", function () {
          return oe;
        }),
        n.d(t, "lb", function () {
          return Lh;
        }),
        n.d(t, "mb", function () {
          return U;
        }),
        n.d(t, "nb", function () {
          return G;
        }),
        n.d(t, "ob", function () {
          return gp;
        }),
        n.d(t, "pb", function () {
          return Pe;
        }),
        n.d(t, "qb", function () {
          return Xy;
        }),
        n.d(t, "rb", function () {
          return as;
        }),
        n.d(t, "sb", function () {
          return se;
        }),
        n.d(t, "tb", function () {
          return bt;
        }),
        n.d(t, "ub", function () {
          return os;
        }),
        n.d(t, "vb", function () {
          return Tv;
        }),
        n.d(t, "wb", function () {
          return Uy;
        }),
        n.d(t, "xb", function () {
          return Ih;
        }),
        n.d(t, "yb", function () {
          return gy;
        }),
        n.d(t, "zb", function () {
          return fm;
        }),
        n.d(t, "Ab", function () {
          return gm;
        }),
        n.d(t, "Bb", function () {
          return da;
        }),
        n.d(t, "Cb", function () {
          return rd;
        }),
        n.d(t, "Db", function () {
          return _e;
        }),
        n.d(t, "Eb", function () {
          return js;
        }),
        n.d(t, "Fb", function () {
          return ps;
        }),
        n.d(t, "Gb", function () {
          return Jn;
        }),
        n.d(t, "Hb", function () {
          return Mv;
        }),
        n.d(t, "Ib", function () {
          return Zn;
        }),
        n.d(t, "Jb", function () {
          return ss;
        }),
        n.d(t, "Kb", function () {
          return ts;
        }),
        n.d(t, "Lb", function () {
          return es;
        }),
        n.d(t, "Mb", function () {
          return ns;
        }),
        n.d(t, "Nb", function () {
          return Am;
        }),
        n.d(t, "Ob", function () {
          return ix;
        }),
        n.d(t, "Pb", function () {
          return Vp;
        }),
        n.d(t, "Qb", function () {
          return Jm;
        }),
        n.d(t, "Rb", function () {
          return Pv;
        }),
        n.d(t, "Sb", function () {
          return td;
        }),
        n.d(t, "Tb", function () {
          return Ov;
        }),
        n.d(t, "Ub", function () {
          return nd;
        }),
        n.d(t, "Vb", function () {
          return sd;
        }),
        n.d(t, "Wb", function () {
          return Xn;
        }),
        n.d(t, "Xb", function () {
          return J;
        }),
        n.d(t, "Yb", function () {
          return pm;
        }),
        n.d(t, "Zb", function () {
          return hm;
        }),
        n.d(t, "ac", function () {
          return Ja;
        }),
        n.d(t, "bc", function () {
          return fc;
        }),
        n.d(t, "cc", function () {
          return mc;
        }),
        n.d(t, "dc", function () {
          return wm;
        }),
        n.d(t, "ec", function () {
          return _m;
        }),
        n.d(t, "fc", function () {
          return Gv;
        }),
        n.d(t, "gc", function () {
          return zm;
        }),
        n.d(t, "hc", function () {
          return qv;
        }),
        n.d(t, "ic", function () {
          return Xm;
        }),
        n.d(t, "jc", function () {
          return Wv;
        }),
        n.d(t, "kc", function () {
          return $v;
        }),
        n.d(t, "lc", function () {
          return Zm;
        }),
        n.d(t, "mc", function () {
          return Lv;
        }),
        n.d(t, "nc", function () {
          return ed;
        }),
        n.d(t, "oc", function () {
          return wf;
        }),
        n.d(t, "pc", function () {
          return xf;
        }),
        n.d(t, "qc", function () {
          return St;
        }),
        n.d(t, "rc", function () {
          return w;
        }),
        n.d(t, "sc", function () {
          return Qv;
        }),
        n.d(t, "tc", function () {
          return Np;
        }),
        n.d(t, "uc", function () {
          return Kn;
        }),
        n.d(t, "vc", function () {
          return Xv;
        }),
        n.d(t, "wc", function () {
          return Va;
        }),
        n.d(t, "xc", function () {
          return ei;
        }),
        n.d(t, "yc", function () {
          return wh;
        }),
        n.d(t, "zc", function () {
          return io;
        }),
        n.d(t, "Ac", function () {
          return rl;
        }),
        n.d(t, "Bc", function () {
          return Xc;
        }),
        n.d(t, "Cc", function () {
          return wu;
        }),
        n.d(t, "Dc", function () {
          return Eu;
        }),
        n.d(t, "Ec", function () {
          return Qc;
        }),
        n.d(t, "Fc", function () {
          return pg;
        }),
        n.d(t, "Gc", function () {
          return Ue;
        }),
        n.d(t, "Hc", function () {
          return Xe;
        }),
        n.d(t, "Ic", function () {
          return T;
        }),
        n.d(t, "Jc", function () {
          return A;
        }),
        n.d(t, "Kc", function () {
          return Qe;
        }),
        n.d(t, "Lc", function () {
          return Ze;
        }),
        n.d(t, "Mc", function () {
          return tc;
        }),
        n.d(t, "Nc", function () {
          return cc;
        }),
        n.d(t, "Oc", function () {
          return dc;
        }),
        n.d(t, "Pc", function () {
          return uc;
        }),
        n.d(t, "Qc", function () {
          return lc;
        }),
        n.d(t, "Rc", function () {
          return ac;
        }),
        n.d(t, "Sc", function () {
          return pc;
        }),
        n.d(t, "Tc", function () {
          return zi;
        }),
        n.d(t, "Uc", function () {
          return Qu;
        }),
        n.d(t, "Vc", function () {
          return uh;
        }),
        n.d(t, "Wc", function () {
          return ph;
        }),
        n.d(t, "Xc", function () {
          return hh;
        }),
        n.d(t, "Yc", function () {
          return yt;
        }),
        n.d(t, "Zc", function () {
          return nc;
        }),
        n.d(t, "ad", function () {
          return _g;
        }),
        n.d(t, "bd", function () {
          return sc;
        }),
        n.d(t, "cd", function () {
          return gc;
        }),
        n.d(t, "dd", function () {
          return gg;
        }),
        n.d(t, "ed", function () {
          return Vn;
        }),
        n.d(t, "fd", function () {
          return Fn;
        }),
        n.d(t, "gd", function () {
          return _c;
        }),
        n.d(t, "hd", function () {
          return Hf;
        }),
        n.d(t, "id", function () {
          return Gf;
        }),
        n.d(t, "jd", function () {
          return Sc;
        }),
        n.d(t, "kd", function () {
          return Cc;
        }),
        n.d(t, "ld", function () {
          return ic;
        }),
        n.d(t, "md", function () {
          return Ec;
        }),
        n.d(t, "nd", function () {
          return kc;
        }),
        n.d(t, "od", function () {
          return kf;
        }),
        n.d(t, "pd", function () {
          return Of;
        }),
        n.d(t, "qd", function () {
          return If;
        }),
        n.d(t, "rd", function () {
          return Tf;
        }),
        n.d(t, "sd", function () {
          return cg;
        }),
        n.d(t, "td", function () {
          return El;
        }),
        n.d(t, "ud", function () {
          return rn;
        }),
        n.d(t, "vd", function () {
          return Bs;
        }),
        n.d(t, "wd", function () {
          return Ke;
        }),
        n.d(t, "xd", function () {
          return mg;
        }),
        n.d(t, "yd", function () {
          return ug;
        }),
        n.d(t, "zd", function () {
          return Yc;
        }),
        n.d(t, "Ad", function () {
          return yc;
        }),
        n.d(t, "Bd", function () {
          return Ku;
        }),
        n.d(t, "Cd", function () {
          return Sl;
        }),
        n.d(t, "Dd", function () {
          return xg;
        }),
        n.d(t, "Ed", function () {
          return du;
        }),
        n.d(t, "Fd", function () {
          return hu;
        }),
        n.d(t, "Gd", function () {
          return pu;
        }),
        n.d(t, "Hd", function () {
          return mu;
        }),
        n.d(t, "Id", function () {
          return dg;
        });
      var s = n("XNiG"),
        i = n("quSY"),
        r = n("HDdC"),
        o = n("VRyK"),
        a = n("w1tV");
      function l(e) {
        return { toString: e }.toString();
      }
      const c = "__annotations__",
        u = "__parameters__",
        d = "__prop__metadata__";
      function h(e, t, n, s, i) {
        return l(() => {
          const r = p(t);
          function o(...e) {
            if (this instanceof o) return r.call(this, ...e), this;
            const t = new o(...e);
            return function (n) {
              i && i(n, ...e);
              return (
                (n.hasOwnProperty(c)
                  ? n[c]
                  : Object.defineProperty(n, c, { value: [] })[c]
                ).push(t),
                s && s(n),
                n
              );
            };
          }
          return (
            n && (o.prototype = Object.create(n.prototype)),
            (o.prototype.ngMetadataName = e),
            (o.annotationCls = o),
            o
          );
        });
      }
      function p(e) {
        return function (...t) {
          if (e) {
            const n = e(...t);
            for (const e in n) this[e] = n[e];
          }
        };
      }
      function m(e, t, n) {
        return l(() => {
          const s = p(t);
          function i(...e) {
            if (this instanceof i) return s.apply(this, e), this;
            const t = new i(...e);
            return (n.annotation = t), n;
            function n(e, n, s) {
              const i = e.hasOwnProperty(u)
                ? e[u]
                : Object.defineProperty(e, u, { value: [] })[u];
              for (; i.length <= s; ) i.push(null);
              return (i[s] = i[s] || []).push(t), e;
            }
          }
          return (
            n && (i.prototype = Object.create(n.prototype)),
            (i.prototype.ngMetadataName = e),
            (i.annotationCls = i),
            i
          );
        });
      }
      function f(e, t, n, s) {
        return l(() => {
          const i = p(t);
          function r(...e) {
            if (this instanceof r) return i.apply(this, e), this;
            const t = new r(...e);
            return function (n, i) {
              const r = n.constructor,
                o = r.hasOwnProperty(d)
                  ? r[d]
                  : Object.defineProperty(r, d, { value: {} })[d];
              (o[i] = (o.hasOwnProperty(i) && o[i]) || []),
                o[i].unshift(t),
                s && s(n, i, ...e);
            };
          }
          return (
            n && (r.prototype = Object.create(n.prototype)),
            (r.prototype.ngMetadataName = e),
            (r.annotationCls = r),
            r
          );
        });
      }
      const g = m("Inject", (e) => ({ token: e })),
        y = m("Optional"),
        v = m("Self"),
        b = m("SkipSelf"),
        x = m("Host"),
        _ = m("Attribute", (e) => ({ attributeName: e }));
      function w(e) {
        if ("string" == typeof e) return e;
        if (Array.isArray(e)) return "[" + e.map(w).join(", ") + "]";
        if (null == e) return "" + e;
        if (e.overriddenName) return "" + e.overriddenName;
        if (e.name) return "" + e.name;
        const t = e.toString();
        if (null == t) return "" + t;
        const n = t.indexOf("\n");
        return -1 === n ? t : t.substring(0, n);
      }
      function C(e, t) {
        return null == e || "" === e
          ? null === t
            ? ""
            : t
          : null == t || "" === t
          ? e
          : e + " " + t;
      }
      function S(e, t, n) {
        e != t && k(n, e, t, "==");
      }
      function E(e, t) {
        null == e && k(t, e, null, "!=");
      }
      function k(e, t, n, s) {
        throw new Error(
          "ASSERTION ERROR: " +
            e +
            (null == s ? "" : ` [Expected=> ${n} ${s} ${t} <=Actual]`)
        );
      }
      function O(e) {
        for (let t in e) if (e[t] === O) return t;
        throw Error("Could not find renamed property on target object.");
      }
      function I(e, t) {
        for (const n in t)
          t.hasOwnProperty(n) && !e.hasOwnProperty(n) && (e[n] = t[n]);
      }
      function T(e) {
        return {
          token: e.token,
          providedIn: e.providedIn || null,
          factory: e.factory,
          value: void 0,
        };
      }
      function A(e) {
        return {
          factory: e.factory,
          providers: e.providers || [],
          imports: e.imports || [],
        };
      }
      function D(e) {
        return M(e, R) || M(e, N);
      }
      function M(e, t) {
        return e.hasOwnProperty(t) ? e[t] : null;
      }
      function P(e) {
        return e && (e.hasOwnProperty(j) || e.hasOwnProperty(F)) ? e[j] : null;
      }
      const R = O({ "\u0275prov": O }),
        j = O({ "\u0275inj": O }),
        N = O({ ngInjectableDef: O }),
        F = O({ ngInjectorDef: O });
      class L {
        constructor(e, t) {
          (this._desc = e),
            (this.ngMetadataName = "InjectionToken"),
            (this.ɵprov = void 0),
            "number" == typeof t
              ? (this.__NG_ELEMENT_ID__ = t)
              : void 0 !== t &&
                (this.ɵprov = T({
                  token: this,
                  providedIn: t.providedIn || "root",
                  factory: t.factory,
                }));
        }
        toString() {
          return "InjectionToken " + this._desc;
        }
      }
      const V = new L("AnalyzeForEntryComponents");
      class B {}
      const z = f(
          "ContentChildren",
          (e, t = {}) =>
            Object.assign(
              { selector: e, first: !1, isViewQuery: !1, descendants: !1 },
              t
            ),
          B
        ),
        H = f(
          "ContentChild",
          (e, t = {}) =>
            Object.assign(
              { selector: e, first: !0, isViewQuery: !1, descendants: !0 },
              t
            ),
          B
        ),
        G = f(
          "ViewChildren",
          (e, t = {}) =>
            Object.assign(
              { selector: e, first: !1, isViewQuery: !0, descendants: !0 },
              t
            ),
          B
        ),
        U = f(
          "ViewChild",
          (e, t) =>
            Object.assign(
              { selector: e, first: !0, isViewQuery: !0, descendants: !0 },
              t
            ),
          B
        );
      var $, q;
      !(function (e) {
        (e[(e.OnPush = 0)] = "OnPush"), (e[(e.Default = 1)] = "Default");
      })($ || ($ = {})),
        (function (e) {
          (e[(e.CheckOnce = 0)] = "CheckOnce"),
            (e[(e.Checked = 1)] = "Checked"),
            (e[(e.CheckAlways = 2)] = "CheckAlways"),
            (e[(e.Detached = 3)] = "Detached"),
            (e[(e.Errored = 4)] = "Errored"),
            (e[(e.Destroyed = 5)] = "Destroyed");
        })(q || (q = {}));
      const W = "undefined" != typeof globalThis && globalThis,
        Y = "undefined" != typeof window && window,
        Q =
          "undefined" != typeof self &&
          "undefined" != typeof WorkerGlobalScope &&
          self instanceof WorkerGlobalScope &&
          self,
        K = "undefined" != typeof global && global,
        J = W || K || Y || Q;
      var X, Z, ee;
      function te() {
        const e = J.ng;
        if (!e || !e.ɵcompilerFacade)
          throw new Error(
            "Angular JIT compilation failed: '@angular/compiler' not loaded!\n  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\n  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\n  - Alternatively provide the compiler with 'import \"@angular/compiler\";' before bootstrapping."
          );
        return e.ɵcompilerFacade;
      }
      !(function (e) {
        (e[(e.Token = 0)] = "Token"),
          (e[(e.Attribute = 1)] = "Attribute"),
          (e[(e.ChangeDetectorRef = 2)] = "ChangeDetectorRef"),
          (e[(e.Invalid = 3)] = "Invalid");
      })(X || (X = {})),
        (function (e) {
          (e[(e.Directive = 0)] = "Directive"),
            (e[(e.Component = 1)] = "Component"),
            (e[(e.Injectable = 2)] = "Injectable"),
            (e[(e.Pipe = 3)] = "Pipe"),
            (e[(e.NgModule = 4)] = "NgModule");
        })(Z || (Z = {})),
        (function (e) {
          (e[(e.Emulated = 0)] = "Emulated"),
            (e[(e.None = 2)] = "None"),
            (e[(e.ShadowDom = 3)] = "ShadowDom");
        })(ee || (ee = {}));
      const ne = O({ __forward_ref__: O });
      function se(e) {
        return (
          (e.__forward_ref__ = se),
          (e.toString = function () {
            return w(this());
          }),
          e
        );
      }
      function ie(e) {
        return re(e) ? e() : e;
      }
      function re(e) {
        return (
          "function" == typeof e &&
          e.hasOwnProperty(ne) &&
          e.__forward_ref__ === se
        );
      }
      const oe = Function;
      function ae(e) {
        return "function" == typeof e;
      }
      function le(e, t) {
        void 0 === t && (t = e);
        for (let n = 0; n < e.length; n++) {
          let s = e[n];
          Array.isArray(s)
            ? (t === e && (t = e.slice(0, n)), le(s, t))
            : t !== e && t.push(s);
        }
        return t;
      }
      function ce(e, t) {
        e.forEach((e) => (Array.isArray(e) ? ce(e, t) : t(e)));
      }
      function ue(e, t, n) {
        t >= e.length ? e.push(n) : e.splice(t, 0, n);
      }
      function de(e, t) {
        return t >= e.length - 1 ? e.pop() : e.splice(t, 1)[0];
      }
      function he(e, t) {
        const n = [];
        for (let s = 0; s < e; s++) n.push(t);
        return n;
      }
      function pe(e, t, n) {
        let s = fe(e, t);
        return (
          s >= 0
            ? (e[1 | s] = n)
            : ((s = ~s),
              (function (e, t, n, s) {
                let i = e.length;
                if (i == t) e.push(n, s);
                else if (1 === i) e.push(s, e[0]), (e[0] = n);
                else {
                  for (i--, e.push(e[i - 1], e[i]); i > t; ) {
                    const t = i - 2;
                    (e[i] = e[t]), i--;
                  }
                  (e[t] = n), (e[t + 1] = s);
                }
              })(e, s, t, n)),
          s
        );
      }
      function me(e, t) {
        const n = fe(e, t);
        if (n >= 0) return e[1 | n];
      }
      function fe(e, t) {
        return ge(e, t, 1);
      }
      function ge(e, t, n) {
        let s = 0,
          i = e.length >> n;
        for (; i !== s; ) {
          const r = s + ((i - s) >> 1),
            o = e[r << n];
          if (t === o) return r << n;
          o > t ? (i = r) : (s = r + 1);
        }
        return ~(i << n);
      }
      const ye =
          /^function\s+\S+\(\)\s*{[\s\S]+\.apply\(this,\s*(arguments|[^()]+\(arguments\))\)/,
        ve = /^class\s+[A-Za-z\d$_]*\s*extends\s+[^{]+{/,
        be = /^class\s+[A-Za-z\d$_]*\s*extends\s+[^{]+{[\s\S]*constructor\s*\(/,
        xe =
          /^class\s+[A-Za-z\d$_]*\s*extends\s+[^{]+{[\s\S]*constructor\s*\(\)\s*{\s*super\(\.\.\.arguments\)/;
      class _e {
        constructor(e) {
          this._reflect = e || J.Reflect;
        }
        isReflectionEnabled() {
          return !0;
        }
        factory(e) {
          return (...t) => new e(...t);
        }
        _zipTypesAndAnnotations(e, t) {
          let n;
          n = he(void 0 === e ? t.length : e.length);
          for (let s = 0; s < n.length; s++)
            void 0 === e
              ? (n[s] = [])
              : e[s] && e[s] != Object
              ? (n[s] = [e[s]])
              : (n[s] = []),
              t && null != t[s] && (n[s] = n[s].concat(t[s]));
          return n;
        }
        _ownParameters(e, t) {
          if (
            (function (e) {
              return ye.test(e) || xe.test(e) || (ve.test(e) && !be.test(e));
            })(e.toString())
          )
            return null;
          if (e.parameters && e.parameters !== t.parameters)
            return e.parameters;
          const n = e.ctorParameters;
          if (n && n !== t.ctorParameters) {
            const e = "function" == typeof n ? n() : n,
              t = e.map((e) => e && e.type),
              s = e.map((e) => e && we(e.decorators));
            return this._zipTypesAndAnnotations(t, s);
          }
          const s = e.hasOwnProperty(u) && e[u],
            i =
              this._reflect &&
              this._reflect.getOwnMetadata &&
              this._reflect.getOwnMetadata("design:paramtypes", e);
          return i || s ? this._zipTypesAndAnnotations(i, s) : he(e.length);
        }
        parameters(e) {
          if (!ae(e)) return [];
          const t = Ce(e);
          let n = this._ownParameters(e, t);
          return n || t === Object || (n = this.parameters(t)), n || [];
        }
        _ownAnnotations(e, t) {
          if (e.annotations && e.annotations !== t.annotations) {
            let t = e.annotations;
            return (
              "function" == typeof t && t.annotations && (t = t.annotations), t
            );
          }
          return e.decorators && e.decorators !== t.decorators
            ? we(e.decorators)
            : e.hasOwnProperty(c)
            ? e[c]
            : null;
        }
        annotations(e) {
          if (!ae(e)) return [];
          const t = Ce(e),
            n = this._ownAnnotations(e, t) || [];
          return (t !== Object ? this.annotations(t) : []).concat(n);
        }
        _ownPropMetadata(e, t) {
          if (e.propMetadata && e.propMetadata !== t.propMetadata) {
            let t = e.propMetadata;
            return (
              "function" == typeof t && t.propMetadata && (t = t.propMetadata),
              t
            );
          }
          if (e.propDecorators && e.propDecorators !== t.propDecorators) {
            const t = e.propDecorators,
              n = {};
            return (
              Object.keys(t).forEach((e) => {
                n[e] = we(t[e]);
              }),
              n
            );
          }
          return e.hasOwnProperty(d) ? e[d] : null;
        }
        propMetadata(e) {
          if (!ae(e)) return {};
          const t = Ce(e),
            n = {};
          if (t !== Object) {
            const e = this.propMetadata(t);
            Object.keys(e).forEach((t) => {
              n[t] = e[t];
            });
          }
          const s = this._ownPropMetadata(e, t);
          return (
            s &&
              Object.keys(s).forEach((e) => {
                const t = [];
                n.hasOwnProperty(e) && t.push(...n[e]),
                  t.push(...s[e]),
                  (n[e] = t);
              }),
            n
          );
        }
        ownPropMetadata(e) {
          return (ae(e) && this._ownPropMetadata(e, Ce(e))) || {};
        }
        hasLifecycleHook(e, t) {
          return e instanceof oe && t in e.prototype;
        }
        guards(e) {
          return {};
        }
        getter(e) {
          return new Function("o", "return o." + e + ";");
        }
        setter(e) {
          return new Function("o", "v", "return o." + e + " = v;");
        }
        method(e) {
          return new Function(
            "o",
            "args",
            `if (!o.${e}) throw new Error('"${e}" is undefined');\n        return o.${e}.apply(o, args);`
          );
        }
        importUri(e) {
          return "object" == typeof e && e.filePath ? e.filePath : "./" + w(e);
        }
        resourceUri(e) {
          return "./" + w(e);
        }
        resolveIdentifier(e, t, n, s) {
          return s;
        }
        resolveEnum(e, t) {
          return e[t];
        }
      }
      function we(e) {
        return e
          ? e.map(
              (e) => new (0, e.type.annotationCls)(...(e.args ? e.args : []))
            )
          : [];
      }
      function Ce(e) {
        const t = e.prototype ? Object.getPrototypeOf(e.prototype) : null;
        return (t ? t.constructor : null) || Object;
      }
      let Se = null;
      function Ee() {
        return (Se = Se || new _e());
      }
      function ke(e) {
        return Oe(Ee().parameters(e));
      }
      function Oe(e) {
        const t = te();
        return e.map((e) =>
          (function (e, t) {
            const n = {
              token: null,
              host: !1,
              optional: !1,
              resolved: e.R3ResolvedDependencyType.Token,
              self: !1,
              skipSelf: !1,
            };
            function s(t) {
              (n.resolved = e.R3ResolvedDependencyType.Token), (n.token = t);
            }
            if (Array.isArray(t) && t.length > 0)
              for (let i = 0; i < t.length; i++) {
                const r = t[i];
                if (void 0 === r) continue;
                const o = Object.getPrototypeOf(r);
                if (r instanceof y || "Optional" === o.ngMetadataName)
                  n.optional = !0;
                else if (r instanceof b || "SkipSelf" === o.ngMetadataName)
                  n.skipSelf = !0;
                else if (r instanceof v || "Self" === o.ngMetadataName)
                  n.self = !0;
                else if (r instanceof x || "Host" === o.ngMetadataName)
                  n.host = !0;
                else if (r instanceof g) n.token = r.token;
                else if (r instanceof _) {
                  if (void 0 === r.attributeName)
                    throw new Error("Attribute name must be defined.");
                  (n.token = r.attributeName),
                    (n.resolved = e.R3ResolvedDependencyType.Attribute);
                } else
                  !0 === r.__ChangeDetectorRef__
                    ? ((n.token = r),
                      (n.resolved =
                        e.R3ResolvedDependencyType.ChangeDetectorRef))
                    : s(r);
              }
            else
              void 0 === t || (Array.isArray(t) && 0 === t.length)
                ? ((n.token = void 0), (n.resolved = X.Invalid))
                : s(t);
            return n;
          })(t, e)
        );
      }
      function Ie(e) {
        const t = [],
          n = new Map();
        function s(t) {
          let s = n.get(t);
          if (!s) {
            const i = e(t);
            n.set(t, (s = i.then(Me)));
          }
          return s;
        }
        return (
          Te.forEach((e, n) => {
            const i = [];
            e.templateUrl &&
              i.push(
                s(e.templateUrl).then((t) => {
                  e.template = t;
                })
              );
            const r = e.styleUrls,
              o = e.styles || (e.styles = []),
              a = e.styles.length;
            r &&
              r.forEach((t, n) => {
                o.push(""),
                  i.push(
                    s(t).then((s) => {
                      (o[a + n] = s),
                        r.splice(r.indexOf(t), 1),
                        0 == r.length && (e.styleUrls = void 0);
                    })
                  );
              });
            const l = Promise.all(i).then(() =>
              (function (e) {
                Ae.delete(e);
              })(n)
            );
            t.push(l);
          }),
          (function () {
            const e = Te;
            Te = new Map();
          })(),
          Promise.all(t).then(() => {})
        );
      }
      let Te = new Map();
      const Ae = new Set();
      function De(e) {
        return !!(
          (e.templateUrl && !e.hasOwnProperty("template")) ||
          (e.styleUrls && e.styleUrls.length)
        );
      }
      function Me(e) {
        return "string" == typeof e ? e : e.text();
      }
      var Pe;
      !(function (e) {
        (e[(e.Emulated = 0)] = "Emulated"),
          (e[(e.None = 2)] = "None"),
          (e[(e.ShadowDom = 3)] = "ShadowDom");
      })(Pe || (Pe = {}));
      const Re = {},
        je = [];
      const Ne = O({ "\u0275cmp": O }),
        Fe = O({ "\u0275dir": O }),
        Le = O({ "\u0275pipe": O }),
        Ve = O({ "\u0275mod": O }),
        Be = O({ "\u0275loc": O }),
        ze = O({ "\u0275fac": O }),
        He = O({ __NG_ELEMENT_ID__: O });
      let Ge = 0;
      function Ue(e) {
        return l(() => {
          const t = e.type,
            n = (t.prototype, {}),
            s = {
              type: t,
              providersResolver: null,
              decls: e.decls,
              vars: e.vars,
              factory: null,
              template: e.template || null,
              consts: e.consts || null,
              ngContentSelectors: e.ngContentSelectors,
              hostBindings: e.hostBindings || null,
              hostVars: e.hostVars || 0,
              hostAttrs: e.hostAttrs || null,
              contentQueries: e.contentQueries || null,
              declaredInputs: n,
              inputs: null,
              outputs: null,
              exportAs: e.exportAs || null,
              onPush: e.changeDetection === $.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              selectors: e.selectors || je,
              viewQuery: e.viewQuery || null,
              features: e.features || null,
              data: e.data || {},
              encapsulation: e.encapsulation || Pe.Emulated,
              id: "c",
              styles: e.styles || je,
              _: null,
              setInput: null,
              schemas: e.schemas || null,
              tView: null,
            },
            i = e.directives,
            r = e.features,
            o = e.pipes;
          return (
            (s.id += Ge++),
            (s.inputs = Je(e.inputs, n)),
            (s.outputs = Je(e.outputs)),
            r && r.forEach((e) => e(s)),
            (s.directiveDefs = i
              ? () => ("function" == typeof i ? i() : i).map(qe)
              : null),
            (s.pipeDefs = o
              ? () => ("function" == typeof o ? o() : o).map(We)
              : null),
            s
          );
        });
      }
      function $e(e, t, n) {
        const s = e.ɵcmp;
        (s.directiveDefs = () => t.map(qe)), (s.pipeDefs = () => n.map(We));
      }
      function qe(e) {
        const t = et(e) || tt(e);
        return t;
      }
      function We(e) {
        const t = nt(e);
        return t;
      }
      const Ye = {};
      function Qe(e) {
        const t = {
          type: e.type,
          bootstrap: e.bootstrap || je,
          declarations: e.declarations || je,
          imports: e.imports || je,
          exports: e.exports || je,
          transitiveCompileScopes: null,
          schemas: e.schemas || null,
          id: e.id || null,
        };
        return (
          null != e.id &&
            l(() => {
              Ye[e.id] = e.type;
            }),
          t
        );
      }
      function Ke(e, t) {
        return l(() => {
          const n = st(e, !0);
          (n.declarations = t.declarations || je),
            (n.imports = t.imports || je),
            (n.exports = t.exports || je);
        });
      }
      function Je(e, t) {
        if (null == e) return Re;
        const n = {};
        for (const s in e)
          if (e.hasOwnProperty(s)) {
            let i = e[s],
              r = i;
            Array.isArray(i) && ((r = i[1]), (i = i[0])),
              (n[i] = s),
              t && (t[i] = r);
          }
        return n;
      }
      const Xe = Ue;
      function Ze(e) {
        return {
          type: e.type,
          name: e.name,
          factory: null,
          pure: !1 !== e.pure,
          onDestroy: e.type.prototype.ngOnDestroy || null,
        };
      }
      function et(e) {
        return e[Ne] || null;
      }
      function tt(e) {
        return e[Fe] || null;
      }
      function nt(e) {
        return e[Le] || null;
      }
      function st(e, t) {
        const n = e[Ve] || null;
        if (!n && !0 === t)
          throw new Error(`Type ${w(e)} does not have '\u0275mod' property.`);
        return n;
      }
      function it(e) {
        return "string" == typeof e ? e : null == e ? "" : "" + e;
      }
      function rt(e) {
        return "function" == typeof e
          ? e.name || e.toString()
          : "object" == typeof e && null != e && "function" == typeof e.type
          ? e.type.name || e.type.toString()
          : it(e);
      }
      var ot;
      let at;
      function lt(e) {
        const t = at;
        return (at = e), t;
      }
      function ct(e, t, n) {
        const s = D(e);
        if (s && "root" == s.providedIn)
          return void 0 === s.value ? (s.value = s.factory()) : s.value;
        if (n & ot.Optional) return null;
        if (void 0 !== t) return t;
        throw new Error(`Injector: NOT_FOUND [${w(e)}]`);
      }
      !(function (e) {
        (e[(e.Default = 0)] = "Default"),
          (e[(e.Host = 1)] = "Host"),
          (e[(e.Self = 2)] = "Self"),
          (e[(e.SkipSelf = 4)] = "SkipSelf"),
          (e[(e.Optional = 8)] = "Optional");
      })(ot || (ot = {}));
      const ut = {},
        dt = /\n/gm,
        ht = "__source",
        pt = O({ provide: String, useValue: O });
      let mt = void 0;
      function ft(e) {
        const t = mt;
        return (mt = e), t;
      }
      function gt(e, t = ot.Default) {
        if (void 0 === mt)
          throw new Error("inject() must be called from an injection context");
        return null === mt
          ? ct(e, void 0, t)
          : mt.get(e, t & ot.Optional ? null : void 0, t);
      }
      function yt(e, t = ot.Default) {
        return (at || gt)(ie(e), t);
      }
      function vt(e) {
        throw new Error("invalid");
      }
      const bt = yt;
      function xt(e) {
        const t = [];
        for (let n = 0; n < e.length; n++) {
          const s = ie(e[n]);
          if (Array.isArray(s)) {
            if (0 === s.length)
              throw new Error("Arguments array must have arguments.");
            let e = void 0,
              n = ot.Default;
            for (let t = 0; t < s.length; t++) {
              const i = s[t];
              i instanceof y || "Optional" === i.ngMetadataName || i === y
                ? (n |= ot.Optional)
                : i instanceof b || "SkipSelf" === i.ngMetadataName || i === b
                ? (n |= ot.SkipSelf)
                : i instanceof v || "Self" === i.ngMetadataName || i === v
                ? (n |= ot.Self)
                : (e = i instanceof g || i === g ? i.token : i);
            }
            t.push(yt(e, n));
          } else t.push(yt(s));
        }
        return t;
      }
      function _t(e, t, n, s) {
        const i = e.ngTempTokenPath;
        throw (
          (t[ht] && i.unshift(t[ht]),
          (e.message = wt("\n" + e.message, i, n, s)),
          (e.ngTokenPath = i),
          (e.ngTempTokenPath = null),
          e)
        );
      }
      function wt(e, t, n, s = null) {
        e =
          e && "\n" === e.charAt(0) && "\u0275" == e.charAt(1)
            ? e.substr(2)
            : e;
        let i = w(t);
        if (Array.isArray(t)) i = t.map(w).join(" -> ");
        else if ("object" == typeof t) {
          let e = [];
          for (let n in t)
            if (t.hasOwnProperty(n)) {
              let s = t[n];
              e.push(
                n + ":" + ("string" == typeof s ? JSON.stringify(s) : w(s))
              );
            }
          i = `{${e.join(", ")}}`;
        }
        return `${n}${s ? "(" + s + ")" : ""}[${i}]: ${e.replace(dt, "\n  ")}`;
      }
      let Ct = void 0;
      function St(e) {
        Ct = e;
      }
      function Et() {
        return void 0 !== Ct
          ? Ct
          : "undefined" != typeof document
          ? document
          : void 0;
      }
      const kt = 20,
        Ot = 10;
      function It(e) {
        return Array.isArray(e) && "object" == typeof e[1];
      }
      function Tt(e) {
        return Array.isArray(e) && !0 === e[1];
      }
      function At(e) {
        return 0 != (8 & e.flags);
      }
      function Dt(e) {
        return 2 == (2 & e.flags);
      }
      function Mt(e) {
        return 1 == (1 & e.flags);
      }
      function Pt(e) {
        return null !== e.template;
      }
      const Rt = "http://www.w3.org/2000/svg",
        jt = "http://www.w3.org/1998/MathML/";
      var Nt;
      function Ft(e) {
        return !!e.listen;
      }
      !(function (e) {
        (e[(e.Important = 1)] = "Important"),
          (e[(e.DashCase = 2)] = "DashCase");
      })(Nt || (Nt = {}));
      const Lt = { createRenderer: (e, t) => Et() };
      function Vt(e) {
        for (; Array.isArray(e); ) e = e[0];
        return e;
      }
      function Bt(e, t) {
        return Vt(t[e]);
      }
      function zt(e, t) {
        const n = Vt(t[e.index]);
        return n;
      }
      function Ht(e, t) {
        const n = e.data[t];
        return n;
      }
      function Gt(e, t) {
        return e[t];
      }
      function Ut(e, t) {
        const n = t[e];
        return It(n) ? n : n[0];
      }
      function $t(e) {
        return e.__ngContext__ || null;
      }
      function qt(e) {
        const t = $t(e);
        return t ? (Array.isArray(t) ? t : t.lView) : null;
      }
      function Wt(e) {
        return 4 == (4 & e[2]);
      }
      function Yt(e) {
        return 128 == (128 & e[2]);
      }
      function Qt(e, t) {
        return null == t ? null : e[t];
      }
      function Kt(e) {
        e[18] = 0;
      }
      function Jt(e, t) {
        e[5] += t;
        let n = e,
          s = e[3];
        for (
          ;
          null !== s && ((1 === t && 1 === n[5]) || (-1 === t && 0 === n[5]));

        )
          (s[5] += t), (n = s), (s = s[3]);
      }
      const Xt = {
        lFrame: Tn(null),
        bindingsEnabled: !0,
        isInCheckNoChangesMode: !1,
      };
      function Zt() {
        return Xt.bindingsEnabled;
      }
      function en() {
        Xt.bindingsEnabled = !0;
      }
      function tn() {
        Xt.bindingsEnabled = !1;
      }
      function nn() {
        return Xt.lFrame.lView;
      }
      function sn() {
        return Xt.lFrame.tView;
      }
      function rn(e) {
        Xt.lFrame.contextLView = e;
      }
      function on() {
        let e = an();
        for (; null !== e && 64 === e.type; ) e = e.parent;
        return e;
      }
      function an() {
        return Xt.lFrame.currentTNode;
      }
      function ln() {
        const e = Xt.lFrame,
          t = e.currentTNode;
        return e.isParent ? t : t.parent;
      }
      function cn(e, t) {
        const n = Xt.lFrame;
        (n.currentTNode = e), (n.isParent = t);
      }
      function un() {
        return Xt.lFrame.isParent;
      }
      function dn() {
        Xt.lFrame.isParent = !1;
      }
      function hn() {
        return Xt.isInCheckNoChangesMode;
      }
      function pn(e) {
        Xt.isInCheckNoChangesMode = e;
      }
      function mn() {
        const e = Xt.lFrame;
        let t = e.bindingRootIndex;
        return (
          -1 === t && (t = e.bindingRootIndex = e.tView.bindingStartIndex), t
        );
      }
      function fn() {
        return Xt.lFrame.bindingIndex;
      }
      function gn(e) {
        return (Xt.lFrame.bindingIndex = e);
      }
      function yn() {
        return Xt.lFrame.bindingIndex++;
      }
      function vn(e) {
        const t = Xt.lFrame,
          n = t.bindingIndex;
        return (t.bindingIndex = t.bindingIndex + e), n;
      }
      function bn(e) {
        Xt.lFrame.inI18n = e;
      }
      function xn(e, t) {
        const n = Xt.lFrame;
        (n.bindingIndex = n.bindingRootIndex = e), _n(t);
      }
      function _n(e) {
        Xt.lFrame.currentDirectiveIndex = e;
      }
      function wn(e) {
        const t = Xt.lFrame.currentDirectiveIndex;
        return -1 === t ? null : e[t];
      }
      function Cn() {
        return Xt.lFrame.currentQueryIndex;
      }
      function Sn(e) {
        Xt.lFrame.currentQueryIndex = e;
      }
      function En(e) {
        const t = e[1];
        return 2 === t.type ? t.declTNode : 1 === t.type ? e[6] : null;
      }
      function kn(e, t, n) {
        if (n & ot.SkipSelf) {
          let s = t,
            i = e;
          for (
            ;
            !((s = s.parent),
            null !== s ||
              n & ot.Host ||
              ((s = En(i)), null === s) ||
              ((i = i[15]), 10 & s.type));

          );
          if (null === s) return !1;
          (t = s), (e = i);
        }
        const s = (Xt.lFrame = In());
        return (s.currentTNode = t), (s.lView = e), !0;
      }
      function On(e) {
        const t = In();
        const n = e[1];
        (Xt.lFrame = t),
          (t.currentTNode = n.firstChild),
          (t.lView = e),
          (t.tView = n),
          (t.contextLView = e),
          (t.bindingIndex = n.bindingStartIndex),
          (t.inI18n = !1);
      }
      function In() {
        const e = Xt.lFrame,
          t = null === e ? null : e.child;
        return null === t ? Tn(e) : t;
      }
      function Tn(e) {
        const t = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: e,
          child: null,
          inI18n: !1,
        };
        return null !== e && (e.child = t), t;
      }
      function An() {
        const e = Xt.lFrame;
        return (
          (Xt.lFrame = e.parent), (e.currentTNode = null), (e.lView = null), e
        );
      }
      const Dn = An;
      function Mn() {
        const e = An();
        (e.isParent = !0),
          (e.tView = null),
          (e.selectedIndex = -1),
          (e.contextLView = null),
          (e.elementDepthCount = 0),
          (e.currentDirectiveIndex = -1),
          (e.currentNamespace = null),
          (e.bindingRootIndex = -1),
          (e.bindingIndex = -1),
          (e.currentQueryIndex = 0);
      }
      function Pn(e) {
        return (Xt.lFrame.contextLView = (function (e, t) {
          for (; e > 0; ) (t = t[15]), e--;
          return t;
        })(e, Xt.lFrame.contextLView))[8];
      }
      function Rn() {
        return Xt.lFrame.selectedIndex;
      }
      function jn(e) {
        Xt.lFrame.selectedIndex = e;
      }
      function Nn() {
        const e = Xt.lFrame;
        return Ht(e.tView, e.selectedIndex);
      }
      function Fn() {
        Xt.lFrame.currentNamespace = Rt;
      }
      function Ln() {
        Xt.lFrame.currentNamespace = jt;
      }
      function Vn() {
        Xt.lFrame.currentNamespace = null;
      }
      let Bn;
      function zn() {
        if (void 0 === Bn && ((Bn = null), J.trustedTypes))
          try {
            Bn = J.trustedTypes.createPolicy("angular", {
              createHTML: (e) => e,
              createScript: (e) => e,
              createScriptURL: (e) => e,
            });
          } catch (e) {}
        return Bn;
      }
      function Hn(e) {
        var t;
        return (
          (null === (t = zn()) || void 0 === t ? void 0 : t.createHTML(e)) || e
        );
      }
      function Gn(e) {
        var t;
        return (
          (null === (t = zn()) || void 0 === t ? void 0 : t.createScript(e)) ||
          e
        );
      }
      class Un {
        constructor(e) {
          this.changingThisBreaksApplicationSecurity = e;
        }
        toString() {
          return (
            "SafeValue must use [property]=binding: " +
            this.changingThisBreaksApplicationSecurity +
            " (see http://g.co/ng/security#xss)"
          );
        }
      }
      class $n extends Un {
        getTypeName() {
          return "HTML";
        }
      }
      class qn extends Un {
        getTypeName() {
          return "Style";
        }
      }
      class Wn extends Un {
        getTypeName() {
          return "Script";
        }
      }
      class Yn extends Un {
        getTypeName() {
          return "URL";
        }
      }
      class Qn extends Un {
        getTypeName() {
          return "ResourceURL";
        }
      }
      function Kn(e) {
        return e instanceof Un ? e.changingThisBreaksApplicationSecurity : e;
      }
      function Jn(e, t) {
        const n = Xn(e);
        if (null != n && n !== t) {
          if ("ResourceURL" === n && "URL" === t) return !0;
          throw new Error(
            `Required a safe ${t}, got a ${n} (see http://g.co/ng/security#xss)`
          );
        }
        return n === t;
      }
      function Xn(e) {
        return (e instanceof Un && e.getTypeName()) || null;
      }
      function Zn(e) {
        return new $n(e);
      }
      function es(e) {
        return new qn(e);
      }
      function ts(e) {
        return new Wn(e);
      }
      function ns(e) {
        return new Yn(e);
      }
      function ss(e) {
        return new Qn(e);
      }
      let is = !0,
        rs = !1;
      function os() {
        return (rs = !0), is;
      }
      function as() {
        if (rs)
          throw new Error("Cannot enable prod mode after platform setup.");
        is = !1;
      }
      function ls(e) {
        return (function () {
          try {
            return !!new window.DOMParser().parseFromString(
              Hn(""),
              "text/html"
            );
          } catch (e) {
            return !1;
          }
        })()
          ? new cs()
          : new us(e);
      }
      class cs {
        getInertBodyElement(e) {
          e = "<body><remove></remove>" + e;
          try {
            const t = new window.DOMParser().parseFromString(
              Hn(e),
              "text/html"
            ).body;
            return t.removeChild(t.firstChild), t;
          } catch (t) {
            return null;
          }
        }
      }
      class us {
        constructor(e) {
          if (
            ((this.defaultDoc = e),
            (this.inertDocument =
              this.defaultDoc.implementation.createHTMLDocument(
                "sanitization-inert"
              )),
            null == this.inertDocument.body)
          ) {
            const e = this.inertDocument.createElement("html");
            this.inertDocument.appendChild(e);
            const t = this.inertDocument.createElement("body");
            e.appendChild(t);
          }
        }
        getInertBodyElement(e) {
          const t = this.inertDocument.createElement("template");
          if ("content" in t) return (t.innerHTML = Hn(e)), t;
          const n = this.inertDocument.createElement("body");
          return (
            (n.innerHTML = Hn(e)),
            this.defaultDoc.documentMode && this.stripCustomNsAttrs(n),
            n
          );
        }
        stripCustomNsAttrs(e) {
          const t = e.attributes;
          for (let s = t.length - 1; 0 < s; s--) {
            const n = t.item(s).name;
            ("xmlns:ns1" !== n && 0 !== n.indexOf("ns1:")) ||
              e.removeAttribute(n);
          }
          let n = e.firstChild;
          for (; n; )
            n.nodeType === Node.ELEMENT_NODE && this.stripCustomNsAttrs(n),
              (n = n.nextSibling);
        }
      }
      const ds =
          /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,
        hs =
          /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;
      function ps(e) {
        return (e = String(e)).match(ds) || e.match(hs)
          ? e
          : (os() &&
              console.warn(
                `WARNING: sanitizing unsafe URL value ${e} (see http://g.co/ng/security#xss)`
              ),
            "unsafe:" + e);
      }
      function ms(e) {
        return (e = String(e))
          .split(",")
          .map((e) => ps(e.trim()))
          .join(", ");
      }
      function fs(e) {
        const t = {};
        for (const n of e.split(",")) t[n] = !0;
        return t;
      }
      function gs(...e) {
        const t = {};
        for (const n of e)
          for (const e in n) n.hasOwnProperty(e) && (t[e] = !0);
        return t;
      }
      const ys = fs("area,br,col,hr,img,wbr"),
        vs = fs("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),
        bs = fs("rp,rt"),
        xs = gs(bs, vs),
        _s = gs(
          vs,
          fs(
            "address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul"
          )
        ),
        ws = gs(
          bs,
          fs(
            "a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video"
          )
        ),
        Cs = gs(ys, _s, ws, xs),
        Ss = fs("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),
        Es = fs("srcset"),
        ks = fs(
          "abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"
        ),
        Os = fs(
          "aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext"
        ),
        Is = gs(Ss, Es, ks, Os),
        Ts = fs("script,style,template");
      class As {
        constructor() {
          (this.sanitizedSomething = !1), (this.buf = []);
        }
        sanitizeChildren(e) {
          let t = e.firstChild,
            n = !0;
          for (; t; )
            if (
              (t.nodeType === Node.ELEMENT_NODE
                ? (n = this.startElement(t))
                : t.nodeType === Node.TEXT_NODE
                ? this.chars(t.nodeValue)
                : (this.sanitizedSomething = !0),
              n && t.firstChild)
            )
              t = t.firstChild;
            else
              for (; t; ) {
                t.nodeType === Node.ELEMENT_NODE && this.endElement(t);
                let e = this.checkClobberedElement(t, t.nextSibling);
                if (e) {
                  t = e;
                  break;
                }
                t = this.checkClobberedElement(t, t.parentNode);
              }
          return this.buf.join("");
        }
        startElement(e) {
          const t = e.nodeName.toLowerCase();
          if (!Cs.hasOwnProperty(t))
            return (this.sanitizedSomething = !0), !Ts.hasOwnProperty(t);
          this.buf.push("<"), this.buf.push(t);
          const n = e.attributes;
          for (let s = 0; s < n.length; s++) {
            const e = n.item(s),
              t = e.name,
              i = t.toLowerCase();
            if (!Is.hasOwnProperty(i)) {
              this.sanitizedSomething = !0;
              continue;
            }
            let r = e.value;
            Ss[i] && (r = ps(r)),
              Es[i] && (r = ms(r)),
              this.buf.push(" ", t, '="', Ps(r), '"');
          }
          return this.buf.push(">"), !0;
        }
        endElement(e) {
          const t = e.nodeName.toLowerCase();
          Cs.hasOwnProperty(t) &&
            !ys.hasOwnProperty(t) &&
            (this.buf.push("</"), this.buf.push(t), this.buf.push(">"));
        }
        chars(e) {
          this.buf.push(Ps(e));
        }
        checkClobberedElement(e, t) {
          if (
            t &&
            (e.compareDocumentPosition(t) &
              Node.DOCUMENT_POSITION_CONTAINED_BY) ===
              Node.DOCUMENT_POSITION_CONTAINED_BY
          )
            throw new Error(
              "Failed to sanitize html because the element is clobbered: " +
                e.outerHTML
            );
          return t;
        }
      }
      const Ds = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
        Ms = /([^\#-~ |!])/g;
      function Ps(e) {
        return e
          .replace(/&/g, "&amp;")
          .replace(Ds, function (e) {
            return (
              "&#" +
              (1024 * (e.charCodeAt(0) - 55296) +
                (e.charCodeAt(1) - 56320) +
                65536) +
              ";"
            );
          })
          .replace(Ms, function (e) {
            return "&#" + e.charCodeAt(0) + ";";
          })
          .replace(/</g, "&lt;")
          .replace(/>/g, "&gt;");
      }
      let Rs;
      function js(e, t) {
        let n = null;
        try {
          Rs = Rs || ls(e);
          let s = t ? String(t) : "";
          n = Rs.getInertBodyElement(s);
          let i = 5,
            r = s;
          do {
            if (0 === i)
              throw new Error(
                "Failed to sanitize html because the input is unstable"
              );
            i--, (s = r), (r = n.innerHTML), (n = Rs.getInertBodyElement(s));
          } while (s !== r);
          const o = new As(),
            a = o.sanitizeChildren(Ns(n) || n);
          return (
            os() &&
              o.sanitizedSomething &&
              console.warn(
                "WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss"
              ),
            a
          );
        } finally {
          if (n) {
            const e = Ns(n) || n;
            for (; e.firstChild; ) e.removeChild(e.firstChild);
          }
        }
      }
      function Ns(e) {
        return "content" in e &&
          (function (e) {
            return (
              e.nodeType === Node.ELEMENT_NODE && "TEMPLATE" === e.nodeName
            );
          })(e)
          ? e.content
          : null;
      }
      var Fs;
      function Ls(e) {
        const t = Ws();
        return t
          ? t.sanitize(Fs.HTML, e) || ""
          : Jn(e, "HTML")
          ? Kn(e)
          : js(Et(), it(e));
      }
      function Vs(e) {
        const t = Ws();
        return t
          ? t.sanitize(Fs.STYLE, e) || ""
          : Jn(e, "Style")
          ? Kn(e)
          : it(e);
      }
      function Bs(e) {
        const t = Ws();
        return t
          ? t.sanitize(Fs.URL, e) || ""
          : Jn(e, "URL")
          ? Kn(e)
          : ps(it(e));
      }
      function zs(e) {
        const t = Ws();
        if (t) return t.sanitize(Fs.RESOURCE_URL, e) || "";
        if (Jn(e, "ResourceURL")) return Kn(e);
        throw new Error(
          "unsafe value used in a resource URL context (see http://g.co/ng/security#xss)"
        );
      }
      function Hs(e) {
        const t = Ws();
        if (t) return t.sanitize(Fs.SCRIPT, e) || "";
        if (Jn(e, "Script")) return Kn(e);
        throw new Error("unsafe value used in a script context");
      }
      function Gs(e) {
        return Hn(e);
      }
      function Us(e) {
        return Gn(e);
      }
      function $s(e) {
        return (function (e) {
          var t;
          return (
            (null === (t = zn()) || void 0 === t
              ? void 0
              : t.createScriptURL(e)) || e
          );
        })(e);
      }
      function qs(e, t, n) {
        return (function (e, t) {
          return ("src" === t &&
            ("embed" === e ||
              "frame" === e ||
              "iframe" === e ||
              "media" === e ||
              "script" === e)) ||
            ("href" === t && ("base" === e || "link" === e))
            ? zs
            : Bs;
        })(
          t,
          n
        )(e);
      }
      function Ws() {
        const e = nn();
        return e && e[12];
      }
      function Ys(e, t) {
        const n = e.hasOwnProperty(ze);
        return n ? e[ze] : null;
      }
      !(function (e) {
        (e[(e.NONE = 0)] = "NONE"),
          (e[(e.HTML = 1)] = "HTML"),
          (e[(e.STYLE = 2)] = "STYLE"),
          (e[(e.SCRIPT = 3)] = "SCRIPT"),
          (e[(e.URL = 4)] = "URL"),
          (e[(e.RESOURCE_URL = 5)] = "RESOURCE_URL");
      })(Fs || (Fs = {}));
      class Qs extends Error {
        constructor(e, t) {
          super(Ks(e, t)), (this.code = e);
        }
      }
      function Ks(e, t) {
        return `${e ? `NG0${e}: ` : ""}${t}`;
      }
      function Js(e, t) {
        const n = t ? `. Dependency path: ${t.join(" > ")} > ${e}` : "";
        throw new Qs("200", `Circular dependency in DI detected for ${e}${n}`);
      }
      function Xs(e, t) {
        const n = t ? " in " + t : "";
        throw new Qs("201", `No provider for ${rt(e)} found${n}`);
      }
      class Zs {
        constructor(e, t, n) {
          (this.previousValue = e),
            (this.currentValue = t),
            (this.firstChange = n);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function ei() {
        return ti;
      }
      function ti(e) {
        return e.type.prototype.ngOnChanges && (e.setInput = si), ni;
      }
      function ni() {
        const e = ii(this),
          t = null == e ? void 0 : e.current;
        if (t) {
          const n = e.previous;
          if (n === Re) e.previous = t;
          else for (let e in t) n[e] = t[e];
          (e.current = null), this.ngOnChanges(t);
        }
      }
      function si(e, t, n, s) {
        const i =
            ii(e) ||
            (function (e, t) {
              return (e.__ngSimpleChanges__ = t);
            })(e, { previous: Re, current: null }),
          r = i.current || (i.current = {}),
          o = i.previous,
          a = this.declaredInputs[n],
          l = o[a];
        (r[a] = new Zs(l && l.currentValue, t, o === Re)), (e[s] = t);
      }
      ei.ngInherit = !0;
      function ii(e) {
        return e.__ngSimpleChanges__ || null;
      }
      function ri(e, t) {
        for (let n = t.directiveStart, s = t.directiveEnd; n < s; n++) {
          const t = e.data[n],
            s = t.type.prototype,
            {
              ngAfterContentInit: i,
              ngAfterContentChecked: r,
              ngAfterViewInit: o,
              ngAfterViewChecked: a,
              ngOnDestroy: l,
            } = s;
          i && (e.contentHooks || (e.contentHooks = [])).push(-n, i),
            r &&
              ((e.contentHooks || (e.contentHooks = [])).push(n, r),
              (e.contentCheckHooks || (e.contentCheckHooks = [])).push(n, r)),
            o && (e.viewHooks || (e.viewHooks = [])).push(-n, o),
            a &&
              ((e.viewHooks || (e.viewHooks = [])).push(n, a),
              (e.viewCheckHooks || (e.viewCheckHooks = [])).push(n, a)),
            null != l && (e.destroyHooks || (e.destroyHooks = [])).push(n, l);
        }
      }
      function oi(e, t, n) {
        ci(e, t, 3, n);
      }
      function ai(e, t, n, s) {
        (3 & e[2]) === n && ci(e, t, n, s);
      }
      function li(e, t) {
        let n = e[2];
        (3 & n) === t && ((n &= 2047), (n += 1), (e[2] = n));
      }
      function ci(e, t, n, s) {
        const i = null != s ? s : -1;
        let r = 0;
        for (let o = void 0 !== s ? 65535 & e[18] : 0; o < t.length; o++) {
          if ("number" == typeof t[o + 1]) {
            if (((r = t[o]), null != s && r >= s)) break;
          } else {
            t[o] < 0 && (e[18] += 65536),
              (r < i || -1 == i) &&
                (ui(e, n, t, o), (e[18] = (4294901760 & e[18]) + o + 2)),
              o++;
          }
        }
      }
      function ui(e, t, n, s) {
        const i = n[s] < 0,
          r = n[s + 1],
          o = e[i ? -n[s] : n[s]];
        if (i) {
          e[2] >> 11 < e[18] >> 16 &&
            (3 & e[2]) === t &&
            ((e[2] += 2048), r.call(o));
        } else r.call(o);
      }
      const di = -1;
      class hi {
        constructor(e, t, n) {
          (this.factory = e),
            (this.resolving = !1),
            (this.canSeeViewProviders = t),
            (this.injectImpl = n);
        }
      }
      function pi(e, t, n) {
        const s = Ft(e);
        let i = 0;
        for (; i < n.length; ) {
          const r = n[i];
          if ("number" == typeof r) {
            if (0 !== r) break;
            i++;
            const o = n[i++],
              a = n[i++],
              l = n[i++];
            s ? e.setAttribute(t, a, l, o) : t.setAttributeNS(o, a, l);
          } else {
            const o = r,
              a = n[++i];
            fi(o)
              ? s && e.setProperty(t, o, a)
              : s
              ? e.setAttribute(t, o, a)
              : t.setAttribute(o, a),
              i++;
          }
        }
        return i;
      }
      function mi(e) {
        return 3 === e || 4 === e || 6 === e;
      }
      function fi(e) {
        return 64 === e.charCodeAt(0);
      }
      function gi(e, t) {
        if (null === t || 0 === t.length);
        else if (null === e || 0 === e.length) e = t.slice();
        else {
          let n = -1;
          for (let s = 0; s < t.length; s++) {
            const i = t[s];
            "number" == typeof i
              ? (n = i)
              : 0 === n ||
                yi(e, n, i, null, -1 === n || 2 === n ? t[++s] : null);
          }
        }
        return e;
      }
      function yi(e, t, n, s, i) {
        let r = 0,
          o = e.length;
        if (-1 === t) o = -1;
        else
          for (; r < e.length; ) {
            const n = e[r++];
            if ("number" == typeof n) {
              if (n === t) {
                o = -1;
                break;
              }
              if (n > t) {
                o = r - 1;
                break;
              }
            }
          }
        for (; r < e.length; ) {
          const t = e[r];
          if ("number" == typeof t) break;
          if (t === n) {
            if (null === s) return void (null !== i && (e[r + 1] = i));
            if (s === e[r + 1]) return void (e[r + 2] = i);
          }
          r++, null !== s && r++, null !== i && r++;
        }
        -1 !== o && (e.splice(o, 0, t), (r = o + 1)),
          e.splice(r++, 0, n),
          null !== s && e.splice(r++, 0, s),
          null !== i && e.splice(r++, 0, i);
      }
      function vi(e) {
        return e !== di;
      }
      function bi(e) {
        return 32767 & e;
      }
      function xi(e, t) {
        let n = e >> 16;
        let s = t;
        for (; n > 0; ) (s = s[15]), n--;
        return s;
      }
      let _i = !0;
      function wi(e) {
        const t = _i;
        return (_i = e), t;
      }
      let Ci = 0;
      function Si(e, t) {
        const n = ki(e, t);
        if (-1 !== n) return n;
        const s = t[1];
        s.firstCreatePass &&
          ((e.injectorIndex = t.length),
          Ei(s.data, e),
          Ei(t, null),
          Ei(s.blueprint, null));
        const i = Oi(e, t),
          r = e.injectorIndex;
        if (vi(i)) {
          const e = bi(i),
            n = xi(i, t),
            s = n[1].data;
          for (let i = 0; i < 8; i++) t[r + i] = n[e + i] | s[e + i];
        }
        return (t[r + 8] = i), r;
      }
      function Ei(e, t) {
        e.push(0, 0, 0, 0, 0, 0, 0, 0, t);
      }
      function ki(e, t) {
        return -1 === e.injectorIndex ||
          (e.parent && e.parent.injectorIndex === e.injectorIndex) ||
          null === t[e.injectorIndex + 8]
          ? -1
          : e.injectorIndex;
      }
      function Oi(e, t) {
        if (e.parent && -1 !== e.parent.injectorIndex)
          return e.parent.injectorIndex;
        let n = 0,
          s = null,
          i = t;
        for (; null !== i; ) {
          const e = i[1],
            t = e.type;
          if (((s = 2 === t ? e.declTNode : 1 === t ? i[6] : null), null === s))
            return di;
          if ((n++, (i = i[15]), -1 !== s.injectorIndex))
            return s.injectorIndex | (n << 16);
        }
        return di;
      }
      function Ii(e, t, n) {
        !(function (e, t, n) {
          let s;
          "string" == typeof n
            ? (s = n.charCodeAt(0) || 0)
            : n.hasOwnProperty(He) && (s = n[He]),
            null == s && (s = n[He] = Ci++);
          const i = 255 & s,
            r = 1 << i,
            o = 128 & i,
            a = 64 & i,
            l = 32 & i,
            c = t.data;
          o
            ? a
              ? l
                ? (c[e + 7] |= r)
                : (c[e + 6] |= r)
              : l
              ? (c[e + 5] |= r)
              : (c[e + 4] |= r)
            : a
            ? l
              ? (c[e + 3] |= r)
              : (c[e + 2] |= r)
            : l
            ? (c[e + 1] |= r)
            : (c[e] |= r);
        })(e, t, n);
      }
      function Ti(e, t, n) {
        if (n & ot.Optional) return e;
        Xs(t, "NodeInjector");
      }
      function Ai(e, t, n, s) {
        if (
          (n & ot.Optional && void 0 === s && (s = null),
          0 == (n & (ot.Self | ot.Host)))
        ) {
          const i = e[9],
            r = lt(void 0);
          try {
            return i ? i.get(t, s, n & ot.Optional) : ct(t, s, n & ot.Optional);
          } finally {
            lt(r);
          }
        }
        return Ti(s, t, n);
      }
      function Di(e, t, n, s = ot.Default, i) {
        if (null !== e) {
          const r = (function (e) {
            if ("string" == typeof e) return e.charCodeAt(0) || 0;
            const t = e.hasOwnProperty(He) ? e[He] : void 0;
            return "number" == typeof t ? (t >= 0 ? 255 & t : Pi) : t;
          })(n);
          if ("function" == typeof r) {
            if (!kn(t, e, s)) return s & ot.Host ? Ti(i, n, s) : Ai(t, n, s, i);
            try {
              const e = r();
              if (null != e || s & ot.Optional) return e;
              Xs(n);
            } finally {
              Dn();
            }
          } else if ("number" == typeof r) {
            let i = null,
              o = ki(e, t),
              a = di,
              l = s & ot.Host ? t[16][6] : null;
            for (
              (-1 === o || s & ot.SkipSelf) &&
              ((a = -1 === o ? Oi(e, t) : t[o + 8]),
              a !== di && Li(s, !1)
                ? ((i = t[1]), (o = bi(a)), (t = xi(a, t)))
                : (o = -1));
              -1 !== o;

            ) {
              const e = t[1];
              if (Fi(r, o, e.data)) {
                const e = Ri(o, t, n, i, s, l);
                if (e !== Mi) return e;
              }
              (a = t[o + 8]),
                a !== di && Li(s, t[1].data[o + 8] === l) && Fi(r, o, t)
                  ? ((i = e), (o = bi(a)), (t = xi(a, t)))
                  : (o = -1);
            }
          }
        }
        return Ai(t, n, s, i);
      }
      const Mi = {};
      function Pi() {
        return new Vi(on(), nn());
      }
      function Ri(e, t, n, s, i, r) {
        const o = t[1],
          a = o.data[e + 8],
          l = ji(
            a,
            o,
            n,
            null == s ? Dt(a) && _i : s != o && 0 != (3 & a.type),
            i & ot.Host && r === a
          );
        return null !== l ? Ni(t, o, l, a) : Mi;
      }
      function ji(e, t, n, s, i) {
        const r = e.providerIndexes,
          o = t.data,
          a = 1048575 & r,
          l = e.directiveStart,
          c = e.directiveEnd,
          u = r >> 20,
          d = i ? a + u : c;
        for (let h = s ? a : a + u; h < d; h++) {
          const e = o[h];
          if ((h < l && n === e) || (h >= l && e.type === n)) return h;
        }
        if (i) {
          const e = o[l];
          if (e && Pt(e) && e.type === n) return l;
        }
        return null;
      }
      function Ni(e, t, n, s) {
        let i = e[n];
        const r = t.data;
        if (i instanceof hi) {
          const o = i;
          o.resolving && Js(rt(r[n]));
          const a = wi(o.canSeeViewProviders);
          o.resolving = !0;
          const l = o.injectImpl ? lt(o.injectImpl) : null;
          kn(e, s, ot.Default);
          try {
            (i = e[n] = o.factory(void 0, r, e, s)),
              t.firstCreatePass &&
                n >= s.directiveStart &&
                (function (e, t, n) {
                  const {
                    ngOnChanges: s,
                    ngOnInit: i,
                    ngDoCheck: r,
                  } = t.type.prototype;
                  if (s) {
                    const s = ti(t);
                    (n.preOrderHooks || (n.preOrderHooks = [])).push(e, s),
                      (
                        n.preOrderCheckHooks || (n.preOrderCheckHooks = [])
                      ).push(e, s);
                  }
                  i &&
                    (n.preOrderHooks || (n.preOrderHooks = [])).push(0 - e, i),
                    r &&
                      ((n.preOrderHooks || (n.preOrderHooks = [])).push(e, r),
                      (
                        n.preOrderCheckHooks || (n.preOrderCheckHooks = [])
                      ).push(e, r));
                })(n, r[n], t);
          } finally {
            null !== l && lt(l), wi(a), (o.resolving = !1), Dn();
          }
        }
        return i;
      }
      function Fi(e, t, n) {
        const s = 1 << e,
          i = 64 & e,
          r = 32 & e;
        let o;
        return (
          (o =
            128 & e
              ? i
                ? r
                  ? n[t + 7]
                  : n[t + 6]
                : r
                ? n[t + 5]
                : n[t + 4]
              : i
              ? r
                ? n[t + 3]
                : n[t + 2]
              : r
              ? n[t + 1]
              : n[t]),
          !!(o & s)
        );
      }
      function Li(e, t) {
        return !(e & ot.Self || (e & ot.Host && t));
      }
      class Vi {
        constructor(e, t) {
          (this._tNode = e), (this._lView = t);
        }
        get(e, t) {
          return Di(this._tNode, this._lView, e, void 0, t);
        }
      }
      function Bi(e) {
        const t = e;
        if (re(e))
          return () => {
            const e = Bi(ie(t));
            return e ? e() : null;
          };
        let n = Ys(t);
        if (null === n) {
          const e = P(t);
          n = e && e.factory;
        }
        return n || null;
      }
      function zi(e) {
        return l(() => {
          const t = e.prototype.constructor,
            n = t[ze] || Bi(t),
            s = Object.prototype;
          let i = Object.getPrototypeOf(e.prototype).constructor;
          for (; i && i !== s; ) {
            const e = i[ze] || Bi(i);
            if (e && e !== n) return e;
            i = Object.getPrototypeOf(i);
          }
          return (e) => new e();
        });
      }
      function Hi(e) {
        return e.ngDebugContext;
      }
      function Gi(e) {
        return e.ngOriginalError;
      }
      function Ui(e, ...t) {
        e.error(...t);
      }
      class $i {
        constructor() {
          this._console = console;
        }
        handleError(e) {
          const t = this._findOriginalError(e),
            n = this._findContext(e),
            s = (function (e) {
              return e.ngErrorLogger || Ui;
            })(e);
          s(this._console, "ERROR", e),
            t && s(this._console, "ORIGINAL ERROR", t),
            n && s(this._console, "ERROR CONTEXT", n);
        }
        _findContext(e) {
          return e ? (Hi(e) ? Hi(e) : this._findContext(Gi(e))) : null;
        }
        _findOriginalError(e) {
          let t = Gi(e);
          for (; t && Gi(t); ) t = Gi(t);
          return t;
        }
      }
      function qi(e) {
        var t;
        return (
          (t = e.replace(/[$@]/g, "_")),
          "ng-reflect-" +
            (e = t.replace(Wi, (...e) => "-" + e[1].toLowerCase()))
        );
      }
      const Wi = /([A-Z])/g;
      function Yi(e) {
        try {
          return null != e ? e.toString().slice(0, 30) : e;
        } catch (t) {
          return "[ERROR] Exception while trying to serialize the value";
        }
      }
      function Qi(e) {
        let t = $t(e);
        if (t) {
          if (Array.isArray(t)) {
            const s = t;
            let i,
              r = void 0,
              o = void 0;
            if ((n = e) && n.constructor && n.constructor.ɵcmp) {
              if (((i = er(s, e)), -1 == i))
                throw new Error(
                  "The provided component was not found in the application"
                );
              r = e;
            } else if (
              (function (e) {
                return e && e.constructor && e.constructor.ɵdir;
              })(e)
            ) {
              if (
                ((i = (function (e, t) {
                  let n = e[1].firstChild;
                  for (; n; ) {
                    const s = n.directiveStart,
                      i = n.directiveEnd;
                    for (let r = s; r < i; r++) if (e[r] === t) return n.index;
                    n = Zi(n);
                  }
                  return -1;
                })(s, e)),
                -1 == i)
              )
                throw new Error(
                  "The provided directive was not found in the application"
                );
              o = tr(i, s, !1);
            } else if (((i = Xi(s, e)), -1 == i)) return null;
            const a = Vt(s[i]),
              l = $t(a),
              c = l && !Array.isArray(l) ? l : Ki(s, i, a);
            if (
              (r &&
                void 0 === c.component &&
                ((c.component = r), Ji(c.component, c)),
              o && void 0 === c.directives)
            ) {
              c.directives = o;
              for (let e = 0; e < o.length; e++) Ji(o[e], c);
            }
            Ji(c.native, c), (t = c);
          }
        } else {
          const n = e;
          let s = n;
          for (; (s = s.parentNode); ) {
            const e = $t(s);
            if (e) {
              let s;
              if (((s = Array.isArray(e) ? e : e.lView), !s)) return null;
              const i = Xi(s, n);
              if (i >= 0) {
                const e = Vt(s[i]),
                  n = Ki(s, i, e);
                Ji(e, n), (t = n);
                break;
              }
            }
          }
        }
        var n;
        return t || null;
      }
      function Ki(e, t, n) {
        return {
          lView: e,
          nodeIndex: t,
          native: n,
          component: void 0,
          directives: void 0,
          localRefs: void 0,
        };
      }
      function Ji(e, t) {
        e.__ngContext__ = t;
      }
      function Xi(e, t) {
        const n = e[1];
        for (let s = kt; s < n.bindingStartIndex; s++)
          if (Vt(e[s]) === t) return s;
        return -1;
      }
      function Zi(e) {
        if (e.child) return e.child;
        if (e.next) return e.next;
        for (; e.parent && !e.parent.next; ) e = e.parent;
        return e.parent && e.parent.next;
      }
      function er(e, t) {
        const n = e[1].components;
        if (n)
          for (let s = 0; s < n.length; s++) {
            const i = n[s];
            if (Ut(i, e)[8] === t) return i;
          }
        else {
          if (Ut(kt, e)[8] === t) return kt;
        }
        return -1;
      }
      function tr(e, t, n) {
        const s = t[1].data[e];
        let i = s.directiveStart;
        if (0 == i) return je;
        const r = s.directiveEnd;
        return !n && 2 & s.flags && i++, t.slice(i, r);
      }
      const nr = (
        ("undefined" != typeof requestAnimationFrame &&
          requestAnimationFrame) ||
        setTimeout
      ).bind(J);
      function sr(e) {
        return { name: "window", target: e.ownerDocument.defaultView };
      }
      function ir(e) {
        return { name: "document", target: e.ownerDocument };
      }
      function rr(e) {
        return { name: "body", target: e.ownerDocument.body };
      }
      const or = "\ufffd";
      function ar(e) {
        return e instanceof Function ? e() : e;
      }
      var lr;
      let cr;
      function ur(e, t) {
        return cr(e, t);
      }
      !(function (e) {
        (e[(e.Important = 1)] = "Important"),
          (e[(e.DashCase = 2)] = "DashCase");
      })(lr || (lr = {}));
      function dr(e) {
        const t = e[3];
        return Tt(t) ? t[3] : t;
      }
      function hr(e) {
        return mr(e[13]);
      }
      function pr(e) {
        return mr(e[4]);
      }
      function mr(e) {
        for (; null !== e && !Tt(e); ) e = e[4];
        return e;
      }
      function fr(e, t, n, s, i) {
        if (null != s) {
          let r,
            o = !1;
          Tt(s) ? (r = s) : It(s) && ((o = !0), (s = s[0]));
          const a = Vt(s);
          0 === e && null !== n
            ? null == i
              ? Ir(t, n, a)
              : Or(t, n, a, i || null, !0)
            : 1 === e && null !== n
            ? Or(t, n, a, i || null, !0)
            : 2 === e
            ? Vr(t, a, o)
            : 3 === e && t.destroyNode(a),
            null != r &&
              (function (e, t, n, s, i) {
                const r = n[7],
                  o = Vt(n);
                r !== o && fr(t, e, s, r, i);
                for (let a = Ot; a < n.length; a++) {
                  const i = n[a];
                  zr(i[1], i, e, t, s, r);
                }
              })(t, e, r, n, i);
        }
      }
      function gr(e, t) {
        return Ft(e) ? e.createText(t) : e.createTextNode(t);
      }
      function yr(e, t, n) {
        Ft(e) ? e.setValue(t, n) : (t.textContent = n);
      }
      function vr(e, t) {
        return e.createComment(t);
      }
      function br(e, t, n) {
        return Ft(e)
          ? e.createElement(t, n)
          : null === n
          ? e.createElement(t)
          : e.createElementNS(n, t);
      }
      function xr(e, t, n, s) {
        const i = Ot + s,
          r = n.length;
        s > 0 && (n[i - 1][4] = t),
          s < r - Ot
            ? ((t[4] = n[i]), ue(n, Ot + s, t))
            : (n.push(t), (t[4] = null)),
          (t[3] = n);
        const o = t[17];
        null !== o &&
          n !== o &&
          (function (e, t) {
            const n = e[9],
              s = t[3];
            const i = s[3][16];
            const r = t[16];
            r !== i && (e[2] = !0);
            null === n ? (e[9] = [t]) : n.push(t);
          })(o, t);
        const a = t[19];
        null !== a && a.insertView(e), (t[2] |= 128);
      }
      function _r(e, t) {
        const n = e[9],
          s = n.indexOf(t),
          i = t[3];
        1024 & t[2] && ((t[2] &= -1025), Jt(i, -1)), n.splice(s, 1);
      }
      function wr(e, t) {
        if (e.length <= Ot) return;
        const n = Ot + t,
          s = e[n];
        if (s) {
          const r = s[17];
          null !== r && r !== e && _r(r, s), t > 0 && (e[n - 1][4] = s[4]);
          const o = de(e, Ot + t);
          zr(s[1], (i = s), i[11], 2, null, null), (i[0] = null), (i[6] = null);
          const a = o[19];
          null !== a && a.detachView(o[1]),
            (s[3] = null),
            (s[4] = null),
            (s[2] &= -129);
        }
        var i;
        return s;
      }
      function Cr(e, t) {
        if (!(256 & t[2])) {
          const n = t[11];
          Ft(n) && n.destroyNode && zr(e, t, n, 3, null, null),
            (function (e) {
              let t = e[13];
              if (!t) return Sr(e[1], e);
              for (; t; ) {
                let n = null;
                if (It(t)) n = t[13];
                else {
                  const e = t[10];
                  e && (n = e);
                }
                if (!n) {
                  for (; t && !t[4] && t !== e; )
                    It(t) && Sr(t[1], t), (t = t[3]);
                  null === t && (t = e), It(t) && Sr(t[1], t), (n = t && t[4]);
                }
                t = n;
              }
            })(t);
        }
      }
      function Sr(e, t) {
        if (!(256 & t[2])) {
          (t[2] &= -129),
            (t[2] |= 256),
            (function (e, t) {
              let n;
              if (null != e && null != (n = e.destroyHooks))
                for (let s = 0; s < n.length; s += 2) {
                  const e = t[n[s]];
                  if (!(e instanceof hi)) {
                    const t = n[s + 1];
                    if (Array.isArray(t))
                      for (let n = 0; n < t.length; n += 2)
                        t[n + 1].call(e[t[n]]);
                    else t.call(e);
                  }
                }
            })(e, t),
            (function (e, t) {
              const n = e.cleanup;
              if (null !== n) {
                const e = t[7];
                for (let s = 0; s < n.length - 1; s += 2)
                  if ("string" == typeof n[s]) {
                    const i = n[s + 1],
                      r = "function" == typeof i ? i(t) : Vt(t[i]),
                      o = e[n[s + 2]],
                      a = n[s + 3];
                    "boolean" == typeof a
                      ? r.removeEventListener(n[s], o, a)
                      : a >= 0
                      ? e[a]()
                      : e[-a].unsubscribe(),
                      (s += 2);
                  } else {
                    const t = e[n[s + 1]];
                    n[s].call(t);
                  }
                t[7] = null;
              }
            })(e, t),
            1 === t[1].type && Ft(t[11]) && t[11].destroy();
          const n = t[17];
          if (null !== n && Tt(t[3])) {
            n !== t[3] && _r(n, t);
            const s = t[19];
            null !== s && s.detachView(e);
          }
        }
      }
      function Er(e, t, n) {
        return kr(e, t.parent, n);
      }
      function kr(e, t, n) {
        let s = t;
        for (; null !== s && 40 & s.type; ) s = (t = s).parent;
        if (null === s) return n[0];
        if (2 & s.flags) {
          const t = e.data[s.directiveStart].encapsulation;
          if (t === Pe.None || t === Pe.Emulated) return null;
        }
        return zt(s, n);
      }
      function Or(e, t, n, s, i) {
        Ft(e) ? e.insertBefore(t, n, s, i) : t.insertBefore(n, s, i);
      }
      function Ir(e, t, n) {
        Ft(e) ? e.appendChild(t, n) : t.appendChild(n);
      }
      function Tr(e, t, n, s, i) {
        null !== s ? Or(e, t, n, s, i) : Ir(e, t, n);
      }
      function Ar(e, t) {
        return Ft(e) ? e.parentNode(t) : t.parentNode;
      }
      function Dr(e, t, n) {
        return Rr(e, t, n);
      }
      function Mr(e, t, n) {
        return 40 & e.type ? zt(e, n) : null;
      }
      let Pr,
        Rr = Mr;
      function jr(e, t) {
        (Rr = e), (Pr = t);
      }
      function Nr(e, t, n, s) {
        const i = Er(e, s, t),
          r = t[11],
          o = Dr(s.parent || t[6], s, t);
        if (null != i)
          if (Array.isArray(n))
            for (let a = 0; a < n.length; a++) Tr(r, i, n[a], o, !1);
          else Tr(r, i, n, o, !1);
        void 0 !== Pr && Pr(r, s, t, n, i);
      }
      function Fr(e, t) {
        if (null !== t) {
          const n = t.type;
          if (3 & n) return zt(t, e);
          if (4 & n) return Lr(-1, e[t.index]);
          if (8 & n) {
            const n = t.child;
            if (null !== n) return Fr(e, n);
            {
              const n = e[t.index];
              return Tt(n) ? Lr(-1, n) : Vt(n);
            }
          }
          if (32 & n) {
            return ur(t, e)() || Vt(e[t.index]);
          }
          {
            const n = e[16],
              s = n[6],
              i = dr(n),
              r = s.projection[t.projection];
            return null != r ? Fr(i, r) : Fr(e, t.next);
          }
        }
        return null;
      }
      function Lr(e, t) {
        const n = Ot + e + 1;
        if (n < t.length) {
          const e = t[n],
            s = e[1].firstChild;
          if (null !== s) return Fr(e, s);
        }
        return t[7];
      }
      function Vr(e, t, n) {
        const s = Ar(e, t);
        s &&
          (function (e, t, n, s) {
            Ft(e) ? e.removeChild(t, n, s) : t.removeChild(n);
          })(e, s, t, n);
      }
      function Br(e, t, n, s, i, r, o) {
        for (; null != n; ) {
          const a = s[n.index],
            l = n.type;
          if (
            (o && 0 === t && (a && Ji(Vt(a), s), (n.flags |= 4)),
            64 != (64 & n.flags))
          )
            if (8 & l) Br(e, t, n.child, s, i, r, !1), fr(t, e, i, a, r);
            else if (32 & l) {
              const o = ur(n, s);
              let l;
              for (; (l = o()); ) fr(t, e, i, l, r);
              fr(t, e, i, a, r);
            } else 16 & l ? Hr(e, t, s, n, i, r) : fr(t, e, i, a, r);
          n = o ? n.projectionNext : n.next;
        }
      }
      function zr(e, t, n, s, i, r) {
        Br(n, s, e.firstChild, t, i, r, !1);
      }
      function Hr(e, t, n, s, i, r) {
        const o = n[16],
          a = o[6].projection[s.projection];
        if (Array.isArray(a))
          for (let l = 0; l < a.length; l++) {
            fr(t, e, i, a[l], r);
          }
        else {
          Br(e, t, a, o[3], i, r, !0);
        }
      }
      function Gr(e, t, n) {
        Ft(e) ? e.setAttribute(t, "style", n) : (t.style.cssText = n);
      }
      function Ur(e, t, n) {
        Ft(e)
          ? "" === n
            ? e.removeAttribute(t, "class")
            : e.setAttribute(t, "class", n)
          : (t.className = n);
      }
      function $r(e, t, n) {
        let s = e.length;
        for (;;) {
          const i = e.indexOf(t, n);
          if (-1 === i) return i;
          if (0 === i || e.charCodeAt(i - 1) <= 32) {
            const n = t.length;
            if (i + n === s || e.charCodeAt(i + n) <= 32) return i;
          }
          n = i + 1;
        }
      }
      const qr = "ng-template";
      function Wr(e, t, n) {
        let s = 0;
        for (; s < e.length; ) {
          let i = e[s++];
          if (n && "class" === i) {
            if (((i = e[s]), -1 !== $r(i.toLowerCase(), t, 0))) return !0;
          } else if (1 === i) {
            for (; s < e.length && "string" == typeof (i = e[s++]); )
              if (i.toLowerCase() === t) return !0;
            return !1;
          }
        }
        return !1;
      }
      function Yr(e) {
        return 4 === e.type && e.value !== qr;
      }
      function Qr(e, t, n) {
        return t === (4 !== e.type || n ? e.value : qr);
      }
      function Kr(e, t, n) {
        let s = 4;
        const i = e.attrs || [],
          r = (function (e) {
            for (let t = 0; t < e.length; t++) {
              if (mi(e[t])) return t;
            }
            return e.length;
          })(i);
        let o = !1;
        for (let a = 0; a < t.length; a++) {
          const l = t[a];
          if ("number" != typeof l) {
            if (!o)
              if (4 & s) {
                if (
                  ((s = 2 | (1 & s)),
                  ("" !== l && !Qr(e, l, n)) || ("" === l && 1 === t.length))
                ) {
                  if (Jr(s)) return !1;
                  o = !0;
                }
              } else {
                const c = 8 & s ? l : t[++a];
                if (8 & s && null !== e.attrs) {
                  if (!Wr(e.attrs, c, n)) {
                    if (Jr(s)) return !1;
                    o = !0;
                  }
                  continue;
                }
                const u = Xr(8 & s ? "class" : l, i, Yr(e), n);
                if (-1 === u) {
                  if (Jr(s)) return !1;
                  o = !0;
                  continue;
                }
                if ("" !== c) {
                  let e;
                  e = u > r ? "" : i[u + 1].toLowerCase();
                  const t = 8 & s ? e : null;
                  if ((t && -1 !== $r(t, c, 0)) || (2 & s && c !== e)) {
                    if (Jr(s)) return !1;
                    o = !0;
                  }
                }
              }
          } else {
            if (!o && !Jr(s) && !Jr(l)) return !1;
            if (o && Jr(l)) continue;
            (o = !1), (s = l | (1 & s));
          }
        }
        return Jr(s) || o;
      }
      function Jr(e) {
        return 0 == (1 & e);
      }
      function Xr(e, t, n, s) {
        if (null === t) return -1;
        let i = 0;
        if (s || !n) {
          let n = !1;
          for (; i < t.length; ) {
            const s = t[i];
            if (s === e) return i;
            if (3 === s || 6 === s) n = !0;
            else {
              if (1 === s || 2 === s) {
                let e = t[++i];
                for (; "string" == typeof e; ) e = t[++i];
                continue;
              }
              if (4 === s) break;
              if (0 === s) {
                i += 4;
                continue;
              }
            }
            i += n ? 1 : 2;
          }
          return -1;
        }
        return (function (e, t) {
          let n = e.indexOf(4);
          if (n > -1)
            for (n++; n < e.length; ) {
              const s = e[n];
              if ("number" == typeof s) return -1;
              if (s === t) return n;
              n++;
            }
          return -1;
        })(t, e);
      }
      function Zr(e, t, n = !1) {
        for (let s = 0; s < t.length; s++) if (Kr(e, t[s], n)) return !0;
        return !1;
      }
      function eo(e, t) {
        e: for (let n = 0; n < t.length; n++) {
          const s = t[n];
          if (e.length === s.length) {
            for (let t = 0; t < e.length; t++) if (e[t] !== s[t]) continue e;
            return !0;
          }
        }
        return !1;
      }
      function to(e, t) {
        return e ? ":not(" + t.trim() + ")" : t;
      }
      function no(e) {
        let t = e[0],
          n = 1,
          s = 2,
          i = "",
          r = !1;
        for (; n < e.length; ) {
          let o = e[n];
          if ("string" == typeof o)
            if (2 & s) {
              const t = e[++n];
              i += "[" + o + (t.length > 0 ? '="' + t + '"' : "") + "]";
            } else 8 & s ? (i += "." + o) : 4 & s && (i += " " + o);
          else
            "" === i || Jr(o) || ((t += to(r, i)), (i = "")),
              (s = o),
              (r = r || !Jr(s));
          n++;
        }
        return "" !== i && (t += to(r, i)), t;
      }
      const so = {};
      function io(e) {
        ro(sn(), nn(), Rn() + e, hn());
      }
      function ro(e, t, n, s) {
        if (!s) {
          if (3 == (3 & t[2])) {
            const s = e.preOrderCheckHooks;
            null !== s && oi(t, s, n);
          } else {
            const s = e.preOrderHooks;
            null !== s && ai(t, s, 0, n);
          }
        }
        jn(n);
      }
      function oo(e, t) {
        return (e << 17) | (t << 2);
      }
      function ao(e) {
        return (e >> 17) & 32767;
      }
      function lo(e) {
        return 2 == (2 & e);
      }
      function co(e) {
        return 2 | e;
      }
      function uo(e) {
        return (131068 & e) >> 2;
      }
      function ho(e, t) {
        return (-131069 & e) | (t << 2);
      }
      function po(e) {
        return 1 == (1 & e);
      }
      function mo(e) {
        return 1 | e;
      }
      const fo = Promise.resolve(null);
      function go(e, t) {
        const n = e.contentQueries;
        if (null !== n)
          for (let s = 0; s < n.length; s += 2) {
            const i = n[s],
              r = n[s + 1];
            if (-1 !== r) {
              const n = e.data[r];
              Sn(i), n.contentQueries(2, t[r], r);
            }
          }
      }
      function yo(e, t, n, s, i, r, o, a, l, c) {
        const u = t.blueprint.slice();
        return (
          (u[0] = i),
          (u[2] = 140 | s),
          Kt(u),
          (u[3] = u[15] = e),
          (u[8] = n),
          (u[10] = o || (e && e[10])),
          (u[11] = a || (e && e[11])),
          (u[12] = l || (e && e[12]) || null),
          (u[9] = c || (e && e[9]) || null),
          (u[6] = r),
          (u[16] = 2 == t.type ? e[16] : u),
          u
        );
      }
      function vo(e, t, n, s, i) {
        let r = e.data[t];
        if (null === r)
          (r = bo(e, t, n, s, i)), Xt.lFrame.inI18n && (r.flags |= 64);
        else if (64 & r.type) {
          (r.type = n), (r.value = s), (r.attrs = i);
          const e = ln();
          r.injectorIndex = null === e ? -1 : e.injectorIndex;
        }
        return cn(r, !0), r;
      }
      function bo(e, t, n, s, i) {
        const r = an(),
          o = un(),
          a = o ? r : r && r.parent,
          l = (e.data[t] = (function (e, t, n, s, i, r) {
            let o = t ? t.injectorIndex : -1;
            const a = {
              type: n,
              index: s,
              insertBeforeIndex: null,
              injectorIndex: o,
              directiveStart: -1,
              directiveEnd: -1,
              directiveStylingLast: -1,
              propertyBindings: null,
              flags: 0,
              providerIndexes: 0,
              value: i,
              attrs: r,
              mergedAttrs: null,
              localNames: null,
              initialInputs: void 0,
              inputs: null,
              outputs: null,
              tViews: null,
              next: null,
              projectionNext: null,
              child: null,
              parent: t,
              projection: null,
              styles: null,
              stylesWithoutHost: null,
              residualStyles: void 0,
              classes: null,
              classesWithoutHost: null,
              residualClasses: void 0,
              classBindings: 0,
              styleBindings: 0,
            };
            0;
            return a;
          })(0, a, n, t, s, i));
        return (
          null === e.firstChild && (e.firstChild = l),
          null !== r &&
            (o
              ? null == r.child && null !== l.parent && (r.child = l)
              : null === r.next && (r.next = l)),
          l
        );
      }
      function xo(e, t, n, s) {
        if (0 === n) return -1;
        const i = t.length;
        for (let r = 0; r < n; r++)
          t.push(s), e.blueprint.push(s), e.data.push(null);
        return i;
      }
      function _o(e, t, n) {
        On(t);
        try {
          const s = e.viewQuery;
          null !== s && ta(1, s, n);
          const i = e.template;
          null !== i && So(e, t, i, 1, n),
            e.firstCreatePass && (e.firstCreatePass = !1),
            e.staticContentQueries && go(e, t),
            e.staticViewQueries && ta(2, e.viewQuery, n);
          const r = e.components;
          null !== r &&
            (function (e, t) {
              for (let n = 0; n < t.length; n++) Qo(e, t[n]);
            })(t, r);
        } catch (s) {
          throw (e.firstCreatePass && (e.incompleteFirstPass = !0), s);
        } finally {
          (t[2] &= -5), Mn();
        }
      }
      function wo(e, t, n, s) {
        const i = t[2];
        if (256 == (256 & i)) return;
        On(t);
        const r = hn();
        try {
          Kt(t), gn(e.bindingStartIndex), null !== n && So(e, t, n, 2, s);
          const o = 3 == (3 & i);
          if (!r)
            if (o) {
              const n = e.preOrderCheckHooks;
              null !== n && oi(t, n, null);
            } else {
              const n = e.preOrderHooks;
              null !== n && ai(t, n, 0, null), li(t, 0);
            }
          if (
            ((function (e) {
              for (let t = hr(e); null !== t; t = pr(t)) {
                if (!t[2]) continue;
                const e = t[9];
                for (let t = 0; t < e.length; t++) {
                  const n = e[t],
                    s = n[3];
                  0 == (1024 & n[2]) && Jt(s, 1), (n[2] |= 1024);
                }
              }
            })(t),
            (function (e) {
              for (let t = hr(e); null !== t; t = pr(t))
                for (let e = Ot; e < t.length; e++) {
                  const n = t[e],
                    s = n[1];
                  Yt(n) && wo(s, n, s.template, n[8]);
                }
            })(t),
            null !== e.contentQueries && go(e, t),
            !r)
          )
            if (o) {
              const n = e.contentCheckHooks;
              null !== n && oi(t, n);
            } else {
              const n = e.contentHooks;
              null !== n && ai(t, n, 1), li(t, 1);
            }
          !(function (e, t) {
            const n = e.hostBindingOpCodes;
            if (null !== n)
              try {
                for (let e = 0; e < n.length; e++) {
                  const s = n[e];
                  if (s < 0) jn(~s);
                  else {
                    const i = s,
                      r = n[++e],
                      o = n[++e];
                    xn(r, i), o(2, t[i]);
                  }
                }
              } finally {
                jn(-1);
              }
          })(e, t);
          const a = e.components;
          null !== a &&
            (function (e, t) {
              for (let n = 0; n < t.length; n++) Wo(e, t[n]);
            })(t, a);
          const l = e.viewQuery;
          if ((null !== l && ta(2, l, s), !r))
            if (o) {
              const n = e.viewCheckHooks;
              null !== n && oi(t, n);
            } else {
              const n = e.viewHooks;
              null !== n && ai(t, n, 2), li(t, 2);
            }
          !0 === e.firstUpdatePass && (e.firstUpdatePass = !1),
            r || (t[2] &= -73),
            1024 & t[2] && ((t[2] &= -1025), Jt(t[3], -1));
        } finally {
          Mn();
        }
      }
      function Co(e, t, n, s) {
        const i = t[10],
          r = !hn(),
          o = Wt(t);
        try {
          r && !o && i.begin && i.begin(), o && _o(e, t, s), wo(e, t, n, s);
        } finally {
          r && !o && i.end && i.end();
        }
      }
      function So(e, t, n, s, i) {
        const r = Rn();
        try {
          jn(-1), 2 & s && t.length > kt && ro(e, t, kt, hn()), n(s, i);
        } finally {
          jn(r);
        }
      }
      function Eo(e, t, n) {
        if (At(t)) {
          const s = t.directiveStart,
            i = t.directiveEnd;
          for (let t = s; t < i; t++) {
            const s = e.data[t];
            s.contentQueries && s.contentQueries(1, n[t], t);
          }
        }
      }
      function ko(e, t, n) {
        Zt() &&
          ((function (e, t, n, s) {
            const i = n.directiveStart,
              r = n.directiveEnd;
            e.firstCreatePass || Si(n, t);
            Ji(s, t);
            const o = n.initialInputs;
            for (let a = i; a < r; a++) {
              const s = e.data[a],
                r = Pt(s);
              r && zo(t, n, s);
              const l = Ni(t, e, a, n);
              if ((Ji(l, t), null !== o && Uo(t, a - i, l, s, n, o), r)) {
                Ut(n.index, t)[8] = l;
              }
            }
          })(e, t, n, zt(n, t)),
          128 == (128 & n.flags) &&
            (function (e, t, n) {
              const s = n.directiveStart,
                i = n.directiveEnd,
                r = (e.firstCreatePass, n.index),
                o = Xt.lFrame.currentDirectiveIndex;
              try {
                jn(r);
                for (let n = s; n < i; n++) {
                  const s = e.data[n],
                    i = t[n];
                  _n(n),
                    (null === s.hostBindings &&
                      0 === s.hostVars &&
                      null === s.hostAttrs) ||
                      No(s, i);
                }
              } finally {
                jn(-1), _n(o);
              }
            })(e, t, n));
      }
      function Oo(e, t, n = zt) {
        const s = t.localNames;
        if (null !== s) {
          let i = t.index + 1;
          for (let r = 0; r < s.length; r += 2) {
            const o = s[r + 1],
              a = -1 === o ? n(t, e) : e[o];
            e[i++] = a;
          }
        }
      }
      function Io(e) {
        const t = e.tView;
        if (null === t || t.incompleteFirstPass) {
          const t = null;
          return (e.tView = To(
            1,
            t,
            e.template,
            e.decls,
            e.vars,
            e.directiveDefs,
            e.pipeDefs,
            e.viewQuery,
            e.schemas,
            e.consts
          ));
        }
        return t;
      }
      function To(e, t, n, s, i, r, o, a, l, c) {
        const u = kt + s,
          d = u + i,
          h = (function (e, t) {
            const n = [];
            for (let s = 0; s < t; s++) n.push(s < e ? null : so);
            return n;
          })(u, d),
          p = "function" == typeof c ? c() : c,
          m = (h[1] = {
            type: e,
            blueprint: h,
            template: n,
            queries: null,
            viewQuery: a,
            declTNode: t,
            data: h.slice().fill(null, u),
            bindingStartIndex: u,
            expandoStartIndex: d,
            hostBindingOpCodes: null,
            firstCreatePass: !0,
            firstUpdatePass: !0,
            staticViewQueries: !1,
            staticContentQueries: !1,
            preOrderHooks: null,
            preOrderCheckHooks: null,
            contentHooks: null,
            contentCheckHooks: null,
            viewHooks: null,
            viewCheckHooks: null,
            destroyHooks: null,
            cleanup: null,
            contentQueries: null,
            components: null,
            directiveRegistry: "function" == typeof r ? r() : r,
            pipeRegistry: "function" == typeof o ? o() : o,
            firstChild: null,
            schemas: l,
            consts: p,
            incompleteFirstPass: !1,
          });
        return m;
      }
      function Ao(e, t, n) {
        if (Ft(e)) {
          const s = n === Pe.ShadowDom;
          return e.selectRootElement(t, s);
        }
        let s = "string" == typeof t ? e.querySelector(t) : t;
        return (s.textContent = ""), s;
      }
      function Do(e, t, n, s) {
        const i = sa(t);
        i.push(n),
          e.firstCreatePass &&
            (function (e) {
              return e.cleanup || (e.cleanup = []);
            })(e).push(s, i.length - 1);
      }
      function Mo(e, t, n) {
        for (let s in e)
          if (e.hasOwnProperty(s)) {
            n = null === n ? {} : n;
            const i = e[s];
            n.hasOwnProperty(s) ? n[s].push(t, i) : (n[s] = [t, i]);
          }
        return n;
      }
      function Po(e, t, n, s, i, r, o, a) {
        const l = zt(t, n);
        let c,
          u = t.inputs;
        var d;
        !a && null != u && (c = u[s])
          ? (oa(e, n, c, s, i),
            Dt(t) &&
              (function (e, t) {
                const n = Ut(t, e);
                16 & n[2] || (n[2] |= 64);
              })(n, t.index))
          : 3 & t.type
          ? ((s =
              "class" === (d = s)
                ? "className"
                : "for" === d
                ? "htmlFor"
                : "formaction" === d
                ? "formAction"
                : "innerHtml" === d
                ? "innerHTML"
                : "readonly" === d
                ? "readOnly"
                : "tabindex" === d
                ? "tabIndex"
                : d),
            (i = null != o ? o(i, t.value || "", s) : i),
            Ft(r)
              ? r.setProperty(l, s, i)
              : fi(s) || (l.setProperty ? l.setProperty(s, i) : (l[s] = i)))
          : t.type;
      }
      function Ro(e, t, n, s) {
        let i = !1;
        if (Zt()) {
          const r = (function (e, t, n) {
              const s = e.directiveRegistry;
              let i = null;
              if (s)
                for (let r = 0; r < s.length; r++) {
                  const o = s[r];
                  Zr(n, o.selectors, !1) &&
                    (i || (i = []),
                    Ii(Si(n, t), e, o.type),
                    Pt(o) ? (Fo(e, n), i.unshift(o)) : i.push(o));
                }
              return i;
            })(e, t, n),
            o = null === s ? null : { "": -1 };
          if (null !== r) {
            (i = !0), Vo(n, e.data.length, r.length);
            for (let e = 0; e < r.length; e++) {
              const t = r[e];
              t.providersResolver && t.providersResolver(t);
            }
            let s = !1,
              a = !1,
              l = xo(e, t, r.length, null);
            for (let i = 0; i < r.length; i++) {
              const c = r[i];
              (n.mergedAttrs = gi(n.mergedAttrs, c.hostAttrs)),
                Bo(e, n, t, l, c),
                Lo(l, c, o),
                null !== c.contentQueries && (n.flags |= 8),
                (null === c.hostBindings &&
                  null === c.hostAttrs &&
                  0 === c.hostVars) ||
                  (n.flags |= 128);
              const u = c.type.prototype;
              !s &&
                (u.ngOnChanges || u.ngOnInit || u.ngDoCheck) &&
                ((e.preOrderHooks || (e.preOrderHooks = [])).push(n.index),
                (s = !0)),
                a ||
                  (!u.ngOnChanges && !u.ngDoCheck) ||
                  ((e.preOrderCheckHooks || (e.preOrderCheckHooks = [])).push(
                    n.index
                  ),
                  (a = !0)),
                l++;
            }
            !(function (e, t) {
              const n = t.directiveStart,
                s = t.directiveEnd,
                i = e.data,
                r = t.attrs,
                o = [];
              let a = null,
                l = null;
              for (let c = n; c < s; c++) {
                const e = i[c],
                  n = e.inputs,
                  s = null === r || Yr(t) ? null : $o(n, r);
                o.push(s), (a = Mo(n, c, a)), (l = Mo(e.outputs, c, l));
              }
              null !== a &&
                (a.hasOwnProperty("class") && (t.flags |= 16),
                a.hasOwnProperty("style") && (t.flags |= 32)),
                (t.initialInputs = o),
                (t.inputs = a),
                (t.outputs = l);
            })(e, n);
          }
          o &&
            (function (e, t, n) {
              if (t) {
                const s = (e.localNames = []);
                for (let e = 0; e < t.length; e += 2) {
                  const i = n[t[e + 1]];
                  if (null == i)
                    throw new Qs(
                      "301",
                      `Export of name '${t[e + 1]}' not found!`
                    );
                  s.push(t[e], i);
                }
              }
            })(n, s, o);
        }
        return (n.mergedAttrs = gi(n.mergedAttrs, n.attrs)), i;
      }
      function jo(e, t, n, s, i, r) {
        const o = r.hostBindings;
        if (o) {
          let n = e.hostBindingOpCodes;
          null === n && (n = e.hostBindingOpCodes = []);
          const r = ~t.index;
          (function (e) {
            let t = e.length;
            for (; t > 0; ) {
              const n = e[--t];
              if ("number" == typeof n && n < 0) return n;
            }
            return 0;
          })(n) != r && n.push(r),
            n.push(s, i, o);
        }
      }
      function No(e, t) {
        null !== e.hostBindings && e.hostBindings(1, t);
      }
      function Fo(e, t) {
        (t.flags |= 2), (e.components || (e.components = [])).push(t.index);
      }
      function Lo(e, t, n) {
        if (n) {
          if (t.exportAs)
            for (let s = 0; s < t.exportAs.length; s++) n[t.exportAs[s]] = e;
          Pt(t) && (n[""] = e);
        }
      }
      function Vo(e, t, n) {
        (e.flags |= 1),
          (e.directiveStart = t),
          (e.directiveEnd = t + n),
          (e.providerIndexes = t);
      }
      function Bo(e, t, n, s, i) {
        e.data[s] = i;
        const r = i.factory || (i.factory = Ys(i.type)),
          o = new hi(r, Pt(i), null);
        (e.blueprint[s] = o),
          (n[s] = o),
          jo(e, t, 0, s, xo(e, n, i.hostVars, so), i);
      }
      function zo(e, t, n) {
        const s = zt(t, e),
          i = Io(n),
          r = e[10],
          o = Ko(
            e,
            yo(
              e,
              i,
              null,
              n.onPush ? 64 : 16,
              s,
              t,
              r,
              r.createRenderer(s, n),
              null,
              null
            )
          );
        e[t.index] = o;
      }
      function Ho(e, t, n, s, i, r) {
        const o = zt(e, t);
        Go(t[11], o, r, e.value, n, s, i);
      }
      function Go(e, t, n, s, i, r, o) {
        if (null == r)
          Ft(e) ? e.removeAttribute(t, i, n) : t.removeAttribute(i);
        else {
          const a = null == o ? it(r) : o(r, s || "", i);
          Ft(e)
            ? e.setAttribute(t, i, a, n)
            : n
            ? t.setAttributeNS(n, i, a)
            : t.setAttribute(i, a);
        }
      }
      function Uo(e, t, n, s, i, r) {
        const o = r[t];
        if (null !== o) {
          const e = s.setInput;
          for (let t = 0; t < o.length; ) {
            const i = o[t++],
              r = o[t++],
              a = o[t++];
            null !== e ? s.setInput(n, a, i, r) : (n[r] = a);
          }
        }
      }
      function $o(e, t) {
        let n = null,
          s = 0;
        for (; s < t.length; ) {
          const i = t[s];
          if (0 !== i)
            if (5 !== i) {
              if ("number" == typeof i) break;
              e.hasOwnProperty(i) &&
                (null === n && (n = []), n.push(i, e[i], t[s + 1])),
                (s += 2);
            } else s += 2;
          else s += 4;
        }
        return n;
      }
      function qo(e, t, n, s) {
        const i = new Array(e, !0, !1, t, null, 0, s, n, null, null);
        return i;
      }
      function Wo(e, t) {
        const n = Ut(t, e);
        if (Yt(n)) {
          const e = n[1];
          80 & n[2] ? wo(e, n, e.template, n[8]) : n[5] > 0 && Yo(n);
        }
      }
      function Yo(e) {
        for (let n = hr(e); null !== n; n = pr(n))
          for (let e = Ot; e < n.length; e++) {
            const t = n[e];
            if (1024 & t[2]) {
              const e = t[1];
              wo(e, t, e.template, t[8]);
            } else t[5] > 0 && Yo(t);
          }
        const t = e[1].components;
        if (null !== t)
          for (let n = 0; n < t.length; n++) {
            const s = Ut(t[n], e);
            Yt(s) && s[5] > 0 && Yo(s);
          }
      }
      function Qo(e, t) {
        const n = Ut(t, e),
          s = n[1];
        !(function (e, t) {
          for (let n = t.length; n < e.blueprint.length; n++)
            t.push(e.blueprint[n]);
        })(s, n),
          _o(s, n, n[8]);
      }
      function Ko(e, t) {
        return e[13] ? (e[14][4] = t) : (e[13] = t), (e[14] = t), t;
      }
      function Jo(e) {
        for (; e; ) {
          e[2] |= 64;
          const t = dr(e);
          if (0 != (512 & e[2]) && !t) return e;
          e = t;
        }
        return null;
      }
      function Xo(e) {
        for (let t = 0; t < e.components.length; t++) {
          const n = e.components[t],
            s = qt(n),
            i = s[1];
          Co(i, s, i.template, n);
        }
      }
      function Zo(e, t, n) {
        const s = t[10];
        s.begin && s.begin();
        try {
          wo(e, t, e.template, n);
        } catch (i) {
          throw (ra(t, i), i);
        } finally {
          s.end && s.end();
        }
      }
      function ea(e) {
        Xo(e[8]);
      }
      function ta(e, t, n) {
        Sn(0), t(e, n);
      }
      const na = fo;
      function sa(e) {
        return e[7] || (e[7] = []);
      }
      function ia(e, t, n) {
        return (
          (null === e || Pt(e)) &&
            (n = (function (e) {
              for (; Array.isArray(e); ) {
                if ("object" == typeof e[1]) return e;
                e = e[0];
              }
              return null;
            })(n[t.index])),
          n[11]
        );
      }
      function ra(e, t) {
        const n = e[9],
          s = n ? n.get($i, null) : null;
        s && s.handleError(t);
      }
      function oa(e, t, n, s, i) {
        for (let r = 0; r < n.length; ) {
          const o = n[r++],
            a = n[r++],
            l = t[o],
            c = e.data[o];
          null !== c.setInput ? c.setInput(l, i, s, a) : (l[a] = i);
        }
      }
      function aa(e, t, n) {
        const s = Bt(t, e);
        yr(e[11], s, n);
      }
      function la(e, t, n) {
        let s = n ? e.styles : null,
          i = n ? e.classes : null,
          r = 0;
        if (null !== t)
          for (let o = 0; o < t.length; o++) {
            const e = t[o];
            if ("number" == typeof e) r = e;
            else if (1 == r) i = C(i, e);
            else if (2 == r) {
              s = C(s, e + ": " + t[++o] + ";");
            }
          }
        n ? (e.styles = s) : (e.stylesWithoutHost = s),
          n ? (e.classes = i) : (e.classesWithoutHost = i);
      }
      const ca = new L("INJECTOR", -1);
      class ua {
        get(e, t = ut) {
          if (t === ut) {
            const t = new Error(`NullInjectorError: No provider for ${w(e)}!`);
            throw ((t.name = "NullInjectorError"), t);
          }
          return t;
        }
      }
      const da = new L("Set Injector scope."),
        ha = {},
        pa = {},
        ma = [];
      let fa = void 0;
      function ga() {
        return void 0 === fa && (fa = new ua()), fa;
      }
      function ya(e, t = null, n = null, s) {
        return new va(e, n, t || ga(), s);
      }
      class va {
        constructor(e, t, n, s = null) {
          (this.parent = n),
            (this.records = new Map()),
            (this.injectorDefTypes = new Set()),
            (this.onDestroy = new Set()),
            (this._destroyed = !1);
          const i = [];
          t && ce(t, (n) => this.processProvider(n, e, t)),
            ce([e], (e) => this.processInjectorType(e, [], i)),
            this.records.set(ca, _a(void 0, this));
          const r = this.records.get(da);
          (this.scope = null != r ? r.value : null),
            (this.source = s || ("object" == typeof e ? null : w(e)));
        }
        get destroyed() {
          return this._destroyed;
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            this.onDestroy.forEach((e) => e.ngOnDestroy());
          } finally {
            this.records.clear(),
              this.onDestroy.clear(),
              this.injectorDefTypes.clear();
          }
        }
        get(e, t = ut, n = ot.Default) {
          this.assertNotDestroyed();
          const s = ft(this);
          try {
            if (!(n & ot.SkipSelf)) {
              let t = this.records.get(e);
              if (void 0 === t) {
                const n =
                  ("function" == typeof (i = e) ||
                    ("object" == typeof i && i instanceof L)) &&
                  D(e);
                (t = n && this.injectableDefInScope(n) ? _a(ba(e), ha) : null),
                  this.records.set(e, t);
              }
              if (null != t) return this.hydrate(e, t);
            }
            const r = n & ot.Self ? ga() : this.parent;
            return (t = n & ot.Optional && t === ut ? null : t), r.get(e, t);
          } catch (r) {
            if ("NullInjectorError" === r.name) {
              if (
                ((r.ngTempTokenPath = r.ngTempTokenPath || []).unshift(w(e)), s)
              )
                throw r;
              return _t(r, e, "R3InjectorError", this.source);
            }
            throw r;
          } finally {
            ft(s);
          }
          var i;
        }
        _resolveInjectorDefTypes() {
          this.injectorDefTypes.forEach((e) => this.get(e));
        }
        toString() {
          const e = [];
          return (
            this.records.forEach((t, n) => e.push(w(n))),
            `R3Injector[${e.join(", ")}]`
          );
        }
        assertNotDestroyed() {
          if (this._destroyed)
            throw new Error("Injector has already been destroyed.");
        }
        processInjectorType(e, t, n) {
          if (!(e = ie(e))) return !1;
          let s = P(e);
          const i = (null == s && e.ngModule) || void 0,
            r = void 0 === i ? e : i;
          const o = -1 !== n.indexOf(r);
          if ((void 0 !== i && (s = P(i)), null == s)) return !1;
          if (null != s.imports && !o) {
            let e;
            n.push(r);
            try {
              ce(s.imports, (s) => {
                this.processInjectorType(s, t, n) &&
                  (void 0 === e && (e = []), e.push(s));
              });
            } finally {
            }
            if (void 0 !== e)
              for (let t = 0; t < e.length; t++) {
                const { ngModule: n, providers: s } = e[t];
                ce(s, (e) => this.processProvider(e, n, s || ma));
              }
          }
          this.injectorDefTypes.add(r), this.records.set(r, _a(s.factory, ha));
          const a = s.providers;
          if (null != a && !o) {
            const t = e;
            ce(a, (e) => this.processProvider(e, t, a));
          }
          return void 0 !== i && void 0 !== e.providers;
        }
        processProvider(e, t, n) {
          let s = Ca((e = ie(e))) ? e : ie(e && e.provide);
          const i = (function (e, t, n) {
            if (wa(e)) return _a(void 0, e.useValue);
            return _a(xa(e, t, n), ha);
          })(e, t, n);
          if (Ca(e) || !0 !== e.multi) {
            this.records.get(s);
            0;
          } else {
            let t = this.records.get(s);
            t ||
              ((t = _a(void 0, ha, !0)),
              (t.factory = () => xt(t.multi)),
              this.records.set(s, t)),
              (s = e),
              t.multi.push(e);
          }
          this.records.set(s, i);
        }
        hydrate(e, t) {
          var n;
          return (
            t.value === ha && ((t.value = pa), (t.value = t.factory())),
            "object" == typeof t.value &&
              t.value &&
              null !== (n = t.value) &&
              "object" == typeof n &&
              "function" == typeof n.ngOnDestroy &&
              this.onDestroy.add(t.value),
            t.value
          );
        }
        injectableDefInScope(e) {
          return (
            !!e.providedIn &&
            ("string" == typeof e.providedIn
              ? "any" === e.providedIn || e.providedIn === this.scope
              : this.injectorDefTypes.has(e.providedIn))
          );
        }
      }
      function ba(e) {
        const t = D(e),
          n = null !== t ? t.factory : Ys(e);
        if (null !== n) return n;
        const s = P(e);
        if (null !== s) return s.factory;
        if (e instanceof L)
          throw new Error(`Token ${w(e)} is missing a \u0275prov definition.`);
        if (e instanceof Function)
          return (function (e) {
            const t = e.length;
            if (t > 0) {
              const n = he(t, "?");
              throw new Error(
                `Can't resolve all parameters for ${w(e)}: (${n.join(", ")}).`
              );
            }
            const n = (function (e) {
              const t = e && (e[R] || e[N]);
              if (t) {
                const n = (function (e) {
                  if (e.hasOwnProperty("name")) return e.name;
                  const t = ("" + e).match(/^function\s*([^\s(]+)/);
                  return null === t ? "" : t[1];
                })(e);
                return (
                  console.warn(
                    `DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${n}" class.`
                  ),
                  t
                );
              }
              return null;
            })(e);
            return null !== n ? () => n.factory(e) : () => new e();
          })(e);
        throw new Error("unreachable");
      }
      function xa(e, t, n) {
        let s = void 0;
        if (Ca(e)) {
          const t = ie(e);
          return Ys(t) || ba(t);
        }
        if (wa(e)) s = () => ie(e.useValue);
        else if ((i = e) && i.useFactory)
          s = () => e.useFactory(...xt(e.deps || []));
        else if (
          (function (e) {
            return !(!e || !e.useExisting);
          })(e)
        )
          s = () => yt(ie(e.useExisting));
        else {
          const t = ie(e && (e.useClass || e.provide));
          if (
            !(function (e) {
              return !!e.deps;
            })(e)
          )
            return Ys(t) || ba(t);
          s = () => new t(...xt(e.deps));
        }
        var i;
        return s;
      }
      function _a(e, t, n = !1) {
        return { factory: e, value: t, multi: n ? [] : void 0 };
      }
      function wa(e) {
        return null !== e && "object" == typeof e && pt in e;
      }
      function Ca(e) {
        return "function" == typeof e;
      }
      const Sa = function (e, t, n) {
        return (function (e, t = null, n = null, s) {
          const i = ya(e, t, n, s);
          return i._resolveInjectorDefTypes(), i;
        })({ name: n }, t, e, n);
      };
      class Ea {
        static create(e, t) {
          return Array.isArray(e)
            ? Sa(e, t, "")
            : Sa(e.providers, e.parent, e.name || "");
        }
      }
      (Ea.THROW_IF_NOT_FOUND = ut),
        (Ea.NULL = new ua()),
        (Ea.ɵprov = T({ token: Ea, providedIn: "any", factory: () => yt(ca) })),
        (Ea.__NG_ELEMENT_ID__ = -1);
      function ka(e) {
        Pa(e);
        const t = Aa(e, !1);
        return null === t
          ? null
          : (void 0 === t.component &&
              (t.component = (function (e, t) {
                const n = t[1].data[e];
                let s = n.directiveStart;
                return 2 & n.flags ? t[s] : null;
              })(t.nodeIndex, t.lView)),
            t.component);
      }
      function Oa(e) {
        Pa(e);
        const t = Aa(e, !1);
        return null === t ? null : t.lView[8];
      }
      function Ia(e) {
        const t = Aa(e, !1);
        if (null === t) return null;
        let n,
          s = t.lView;
        for (; 2 === s[1].type && (n = dr(s)); ) s = n;
        return 512 & s[2] ? null : s[8];
      }
      function Ta(e) {
        const t = Aa(e, !1);
        if (null === t) return Ea.NULL;
        const n = t.lView[1].data[t.nodeIndex];
        return new Vi(n, t.lView);
      }
      function Aa(e, t = !0) {
        const n = Qi(e);
        if (!n && t) throw new Error("Invalid ng target");
        return n;
      }
      function Da(e) {
        Pa(e);
        const t = Aa(e, !1);
        if (null === t) return [];
        const n = t.lView,
          s = n[1],
          i = n[7],
          r = s.cleanup,
          o = [];
        if (r && i)
          for (let a = 0; a < r.length; ) {
            const t = r[a++],
              s = r[a++];
            if ("string" == typeof t) {
              const l = t,
                c = Vt(n[s]),
                u = i[r[a++]],
                d = r[a++],
                h = "boolean" == typeof d || d >= 0 ? "dom" : "output",
                p = "boolean" == typeof d && d;
              e == c &&
                o.push({
                  element: e,
                  name: l,
                  callback: u,
                  useCapture: p,
                  type: h,
                });
            }
          }
        return o.sort(Ma), o;
      }
      function Ma(e, t) {
        return e.name == t.name ? 0 : e.name < t.name ? -1 : 1;
      }
      function Pa(e) {
        if ("undefined" != typeof Element && !(e instanceof Element))
          throw new Error("Expecting instance of DOM Element");
      }
      function Ra(e, t, n, s, i, r) {
        const o = n[1];
        n[20] = e;
        const a = vo(o, 20, 2, "#host", null),
          l = (a.mergedAttrs = t.hostAttrs);
        null !== l &&
          (la(a, l, !0),
          null !== e &&
            (pi(i, e, l),
            null !== a.classes && Ur(i, e, a.classes),
            null !== a.styles && Gr(i, e, a.styles)));
        const c = s.createRenderer(e, t),
          u = yo(
            n,
            Io(t),
            null,
            t.onPush ? 64 : 16,
            n[20],
            a,
            s,
            c,
            r || null,
            null
          );
        return (
          o.firstCreatePass &&
            (Ii(Si(a, n), o, t.type), Fo(o, a), Vo(a, n.length, 1)),
          Ko(n, u),
          (n[20] = u)
        );
      }
      function ja(e, t, n, s, i) {
        const r = n[1],
          o = (function (e, t, n) {
            const s = on();
            if (e.firstCreatePass) {
              n.providersResolver && n.providersResolver(n);
              Bo(e, s, t, xo(e, t, 1, null), n);
            }
            const i = Ni(t, e, s.directiveStart, s);
            Ji(i, t);
            const r = zt(s, t);
            return r && Ji(r, t), i;
          })(r, n, t);
        if (
          (s.components.push(o),
          (e[8] = o),
          i && i.forEach((e) => e(o, t)),
          t.contentQueries)
        ) {
          const e = on();
          t.contentQueries(1, o, e.directiveStart);
        }
        const a = on();
        if (
          r.firstCreatePass &&
          (null !== t.hostBindings || null !== t.hostAttrs)
        ) {
          jn(a.index);
          jo(n[1], a, 0, a.directiveStart, a.directiveEnd, t), No(t, o);
        }
        return o;
      }
      function Na(e, t) {
        return {
          components: [],
          scheduler: e || nr,
          clean: na,
          playerHandler: t || null,
          flags: 0,
        };
      }
      function Fa(e, t) {
        const n = qt(e),
          s = n[1],
          i = on();
        ri(s, i);
      }
      function La(e) {
        return Object.getPrototypeOf(e.prototype).constructor;
      }
      function Va(e) {
        let t = La(e.type),
          n = !0;
        const s = [e];
        for (; t; ) {
          let i = void 0;
          if (Pt(e)) i = t.ɵcmp || t.ɵdir;
          else {
            if (t.ɵcmp) throw new Error("Directives cannot inherit Components");
            i = t.ɵdir;
          }
          if (i) {
            if (n) {
              s.push(i);
              const t = e;
              (t.inputs = Ba(e.inputs)),
                (t.declaredInputs = Ba(e.declaredInputs)),
                (t.outputs = Ba(e.outputs));
              const n = i.hostBindings;
              n && Ga(e, n);
              const r = i.viewQuery,
                o = i.contentQueries;
              if (
                (r && za(e, r),
                o && Ha(e, o),
                I(e.inputs, i.inputs),
                I(e.declaredInputs, i.declaredInputs),
                I(e.outputs, i.outputs),
                Pt(i) && i.data.animation)
              ) {
                const t = e.data;
                t.animation = (t.animation || []).concat(i.data.animation);
              }
            }
            const t = i.features;
            if (t)
              for (let s = 0; s < t.length; s++) {
                const i = t[s];
                i && i.ngInherit && i(e), i === Va && (n = !1);
              }
          }
          t = Object.getPrototypeOf(t);
        }
        !(function (e) {
          let t = 0,
            n = null;
          for (let s = e.length - 1; s >= 0; s--) {
            const i = e[s];
            (i.hostVars = t += i.hostVars),
              (i.hostAttrs = gi(i.hostAttrs, (n = gi(n, i.hostAttrs))));
          }
        })(s);
      }
      function Ba(e) {
        return e === Re ? {} : e === je ? [] : e;
      }
      function za(e, t) {
        const n = e.viewQuery;
        e.viewQuery = n
          ? (e, s) => {
              t(e, s), n(e, s);
            }
          : t;
      }
      function Ha(e, t) {
        const n = e.contentQueries;
        e.contentQueries = n
          ? (e, s, i) => {
              t(e, s, i), n(e, s, i);
            }
          : t;
      }
      function Ga(e, t) {
        const n = e.hostBindings;
        e.hostBindings = n
          ? (e, s) => {
              t(e, s), n(e, s);
            }
          : t;
      }
      const Ua = ["providersResolver"],
        $a = [
          "template",
          "decls",
          "consts",
          "vars",
          "onPush",
          "ngContentSelectors",
          "styles",
          "encapsulation",
          "schemas",
        ];
      function qa(e) {
        let t = La(e.type),
          n = void 0;
        n = Pt(e) ? t.ɵcmp : t.ɵdir;
        const s = e;
        for (const i of Ua) s[i] = n[i];
        if (Pt(n)) for (const i of $a) s[i] = n[i];
      }
      let Wa = null;
      function Ya() {
        if (!Wa) {
          const e = J.Symbol;
          if (e && e.iterator) Wa = e.iterator;
          else {
            const e = Object.getOwnPropertyNames(Map.prototype);
            for (let t = 0; t < e.length; ++t) {
              const n = e[t];
              "entries" !== n &&
                "size" !== n &&
                Map.prototype[n] === Map.prototype.entries &&
                (Wa = n);
            }
          }
        }
        return Wa;
      }
      function Qa(e, t) {
        const n = Ja(e),
          s = Ja(t);
        if (n && s)
          return (function (e, t, n) {
            const s = e[Ya()](),
              i = t[Ya()]();
            for (;;) {
              const e = s.next(),
                t = i.next();
              if (e.done && t.done) return !0;
              if (e.done || t.done) return !1;
              if (!n(e.value, t.value)) return !1;
            }
          })(e, t, Qa);
        {
          const i = e && ("object" == typeof e || "function" == typeof e),
            r = t && ("object" == typeof t || "function" == typeof t);
          return !(n || !i || s || !r) || Object.is(e, t);
        }
      }
      class Ka {
        constructor(e) {
          this.wrapped = e;
        }
        static wrap(e) {
          return new Ka(e);
        }
        static unwrap(e) {
          return Ka.isWrapped(e) ? e.wrapped : e;
        }
        static isWrapped(e) {
          return e instanceof Ka;
        }
      }
      function Ja(e) {
        return (
          !!Xa(e) && (Array.isArray(e) || (!(e instanceof Map) && Ya() in e))
        );
      }
      function Xa(e) {
        return null !== e && ("function" == typeof e || "object" == typeof e);
      }
      function Za(e, t, n) {
        return (e[t] = n);
      }
      function el(e, t) {
        return e[t];
      }
      function tl(e, t, n) {
        const s = e[t];
        return !Object.is(s, n) && ((e[t] = n), !0);
      }
      function nl(e, t, n, s) {
        const i = tl(e, t, n);
        return tl(e, t + 1, s) || i;
      }
      function sl(e, t, n, s, i) {
        const r = nl(e, t, n, s);
        return tl(e, t + 2, i) || r;
      }
      function il(e, t, n, s, i, r) {
        const o = nl(e, t, n, s);
        return nl(e, t + 2, i, r) || o;
      }
      function rl(e, t, n, s) {
        const i = nn(),
          r = yn();
        if (tl(i, r, t)) {
          sn();
          const r = Nn();
          Ho(r, i, e, t, n, s);
        }
        return rl;
      }
      function ol(e, t) {
        let n = !1,
          s = fn();
        for (let r = 1; r < t.length; r += 2) n = tl(e, s++, t[r]) || n;
        if ((gn(s), !n)) return so;
        let i = t[0];
        for (let r = 1; r < t.length; r += 2) i += it(t[r]) + t[r + 1];
        return i;
      }
      function al(e, t, n, s) {
        return tl(e, yn(), n) ? t + it(n) + s : so;
      }
      function ll(e, t, n, s, i, r) {
        const o = nl(e, fn(), n, i);
        return vn(2), o ? t + it(n) + s + it(i) + r : so;
      }
      function cl(e, t, n, s, i, r, o, a) {
        const l = sl(e, fn(), n, i, o);
        return vn(3), l ? t + it(n) + s + it(i) + r + it(o) + a : so;
      }
      function ul(e, t, n, s, i, r, o, a, l, c) {
        const u = il(e, fn(), n, i, o, l);
        return (
          vn(4), u ? t + it(n) + s + it(i) + r + it(o) + a + it(l) + c : so
        );
      }
      function dl(e, t, n, s, i, r, o, a, l, c, u, d) {
        const h = fn();
        let p = il(e, h, n, i, o, l);
        return (
          (p = tl(e, h + 4, u) || p),
          vn(5),
          p ? t + it(n) + s + it(i) + r + it(o) + a + it(l) + c + it(u) + d : so
        );
      }
      function hl(e, t, n, s, i, r, o, a, l, c, u, d, h, p) {
        const m = fn();
        let f = il(e, m, n, i, o, l);
        return (
          (f = nl(e, m + 4, u, h) || f),
          vn(6),
          f
            ? t +
              it(n) +
              s +
              it(i) +
              r +
              it(o) +
              a +
              it(l) +
              c +
              it(u) +
              d +
              it(h) +
              p
            : so
        );
      }
      function pl(e, t, n, s, i, r, o, a, l, c, u, d, h, p, m, f) {
        const g = fn();
        let y = il(e, g, n, i, o, l);
        return (
          (y = sl(e, g + 4, u, h, m) || y),
          vn(7),
          y
            ? t +
              it(n) +
              s +
              it(i) +
              r +
              it(o) +
              a +
              it(l) +
              c +
              it(u) +
              d +
              it(h) +
              p +
              it(m) +
              f
            : so
        );
      }
      function ml(e, t, n, s, i, r, o, a, l, c, u, d, h, p, m, f, g, y) {
        const v = fn();
        let b = il(e, v, n, i, o, l);
        return (
          (b = il(e, v + 4, u, h, m, g) || b),
          vn(8),
          b
            ? t +
              it(n) +
              s +
              it(i) +
              r +
              it(o) +
              a +
              it(l) +
              c +
              it(u) +
              d +
              it(h) +
              p +
              it(m) +
              f +
              it(g) +
              y
            : so
        );
      }
      function fl(e, t, n, s, i, r) {
        const o = nn(),
          a = al(o, t, n, s);
        if (a !== so) {
          const t = Nn();
          Ho(t, o, e, a, i, r);
        }
        return fl;
      }
      function gl(e, t, n, s, i, r, o, a) {
        const l = nn(),
          c = ll(l, t, n, s, i, r);
        if (c !== so) {
          const t = Nn();
          Ho(t, l, e, c, o, a);
        }
        return gl;
      }
      function yl(e, t, n, s, i, r, o, a, l, c) {
        const u = nn(),
          d = cl(u, t, n, s, i, r, o, a);
        if (d !== so) {
          const t = Nn();
          Ho(t, u, e, d, l, c);
        }
        return yl;
      }
      function vl(e, t, n, s, i, r, o, a, l, c, u, d) {
        const h = nn(),
          p = ul(h, t, n, s, i, r, o, a, l, c);
        if (p !== so) {
          const t = Nn();
          Ho(t, h, e, p, u, d);
        }
        return vl;
      }
      function bl(e, t, n, s, i, r, o, a, l, c, u, d, h, p) {
        const m = nn(),
          f = dl(m, t, n, s, i, r, o, a, l, c, u, d);
        if (f !== so) {
          const t = Nn();
          Ho(t, m, e, f, h, p);
        }
        return bl;
      }
      function xl(e, t, n, s, i, r, o, a, l, c, u, d, h, p, m, f) {
        const g = nn(),
          y = hl(g, t, n, s, i, r, o, a, l, c, u, d, h, p);
        if (y !== so) {
          const t = Nn();
          Ho(t, g, e, y, m, f);
        }
        return xl;
      }
      function _l(e, t, n, s, i, r, o, a, l, c, u, d, h, p, m, f, g, y) {
        const v = nn(),
          b = pl(v, t, n, s, i, r, o, a, l, c, u, d, h, p, m, f);
        if (b !== so) {
          const t = Nn();
          Ho(t, v, e, b, g, y);
        }
        return _l;
      }
      function wl(e, t, n, s, i, r, o, a, l, c, u, d, h, p, m, f, g, y, v, b) {
        const x = nn(),
          _ = ml(x, t, n, s, i, r, o, a, l, c, u, d, h, p, m, f, g, y);
        if (_ !== so) {
          const t = Nn();
          Ho(t, x, e, _, v, b);
        }
        return wl;
      }
      function Cl(e, t, n, s) {
        const i = nn(),
          r = ol(i, t);
        if (r !== so) {
          const t = Nn();
          Ho(t, i, e, r, n, s);
        }
        return Cl;
      }
      function Sl(e, t, n, s, i, r, o, a) {
        const l = nn(),
          c = sn(),
          u = e + kt,
          d = c.firstCreatePass
            ? (function (e, t, n, s, i, r, o, a, l) {
                const c = t.consts,
                  u = vo(t, e, 4, o || null, Qt(c, a));
                Ro(t, n, u, Qt(c, l)), ri(t, u);
                const d = (u.tViews = To(
                  2,
                  u,
                  s,
                  i,
                  r,
                  t.directiveRegistry,
                  t.pipeRegistry,
                  null,
                  t.schemas,
                  c
                ));
                return (
                  null !== t.queries &&
                    (t.queries.template(t, u),
                    (d.queries = t.queries.embeddedTView(u))),
                  u
                );
              })(u, c, l, t, n, s, i, r, o)
            : c.data[u];
        cn(d, !1);
        const h = l[11].createComment("");
        Nr(c, l, h, d),
          Ji(h, l),
          Ko(l, (l[u] = qo(h, l, h, d))),
          Mt(d) && ko(c, l, d),
          null != o && Oo(l, d, a);
      }
      function El(e) {
        return Gt(Xt.lFrame.contextLView, kt + e);
      }
      const kl = {
        "\u0275\u0275defineInjectable": T,
        "\u0275\u0275defineInjector": A,
        "\u0275\u0275inject": yt,
        "\u0275\u0275getFactoryOf": function e(t) {
          const n = t;
          if (re(t))
            return () => {
              const t = e(ie(n));
              return t ? t() : null;
            };
          const s = D(n) || P(n);
          if (!s || void 0 === s.factory) return null;
          return s.factory;
        },
        "\u0275\u0275invalidFactoryDep": vt,
      };
      const Ol = O({ provide: String, useValue: O });
      function Il(e) {
        return void 0 !== e.useClass;
      }
      function Tl(e) {
        return void 0 !== e.useFactory;
      }
      function Al(e, t) {
        const n = t || { providedIn: null },
          s = {
            name: e.name,
            type: e,
            typeArgumentCount: 0,
            providedIn: n.providedIn,
            userDeps: void 0,
          };
        return (
          (Il(n) || Tl(n)) && void 0 !== n.deps && (s.userDeps = Oe(n.deps)),
          Il(n)
            ? (s.useClass = ie(n.useClass))
            : !(function (e) {
                return Ol in e;
              })(n)
            ? Tl(n)
              ? (s.useFactory = n.useFactory)
              : (function (e) {
                  return void 0 !== e.useExisting;
                })(n) && (s.useExisting = ie(n.useExisting))
            : (s.useValue = ie(n.useValue)),
          s
        );
      }
      O({ provide: String, useValue: O });
      const Dl = h("Injectable", void 0, void 0, void 0, (e, t) => Ml(e, t));
      const Ml = function (e, t) {
        let n = null,
          s = null;
        e.hasOwnProperty(R) ||
          Object.defineProperty(e, R, {
            get: () => (
              null === n &&
                (n = te().compileInjectable(
                  kl,
                  `ng:///${e.name}/\u0275prov.js`,
                  Al(e, t)
                )),
              n
            ),
          }),
          e.hasOwnProperty(ze) ||
            Object.defineProperty(e, ze, {
              get: () => {
                if (null === s) {
                  const n = Al(e, t),
                    i = te();
                  s = i.compileFactory(kl, `ng:///${e.name}/\u0275fac.js`, {
                    name: n.name,
                    type: n.type,
                    typeArgumentCount: n.typeArgumentCount,
                    deps: ke(e),
                    injectFn: "inject",
                    target: i.R3FactoryTarget.Injectable,
                  });
                }
                return s;
              },
              configurable: !0,
            });
      };
      function Pl(e) {
        if (e.length > 1) {
          return (
            " (" +
            (function (e) {
              const t = [];
              for (let n = 0; n < e.length; ++n) {
                if (t.indexOf(e[n]) > -1) return t.push(e[n]), t;
                t.push(e[n]);
              }
              return t;
            })(e.slice().reverse())
              .map((e) => w(e.token))
              .join(" -> ") +
            ")"
          );
        }
        return "";
      }
      function Rl(e, t, n, s) {
        const i = [t],
          r = n(i),
          o = s
            ? (function (e, t) {
                const n = `${e} caused by: ${
                    t instanceof Error ? t.message : t
                  }`,
                  s = Error(n);
                return (s.ngOriginalError = t), s;
              })(r, s)
            : Error(r);
        return (
          (o.addKey = jl),
          (o.keys = i),
          (o.injectors = [e]),
          (o.constructResolvingMessage = n),
          (o.ngOriginalError = s),
          o
        );
      }
      function jl(e, t) {
        this.injectors.push(e),
          this.keys.push(t),
          (this.message = this.constructResolvingMessage(this.keys));
      }
      function Nl(e, t) {
        const n = [];
        for (let s = 0, i = t.length; s < i; s++) {
          const e = t[s];
          e && 0 != e.length ? n.push(e.map(w).join(" ")) : n.push("?");
        }
        return Error(
          "Cannot resolve all parameters for '" +
            w(e) +
            "'(" +
            n.join(", ") +
            "). Make sure that all the parameters are decorated with Inject or have valid type annotations and that '" +
            w(e) +
            "' is decorated with Injectable."
        );
      }
      function Fl(e, t) {
        return Error(
          `Cannot mix multi providers and regular providers, got: ${e} ${t}`
        );
      }
      class Ll {
        constructor(e, t) {
          if (((this.token = e), (this.id = t), !e))
            throw new Error("Token must be defined!");
          this.displayName = w(this.token);
        }
        static get(e) {
          return Vl.get(ie(e));
        }
        static get numberOfKeys() {
          return Vl.numberOfKeys;
        }
      }
      const Vl = new (class {
        constructor() {
          this._allKeys = new Map();
        }
        get(e) {
          if (e instanceof Ll) return e;
          if (this._allKeys.has(e)) return this._allKeys.get(e);
          const t = new Ll(e, Ll.numberOfKeys);
          return this._allKeys.set(e, t), t;
        }
        get numberOfKeys() {
          return this._allKeys.size;
        }
      })();
      const Bl = new (class {
        constructor(e) {
          this.reflectionCapabilities = e;
        }
        updateCapabilities(e) {
          this.reflectionCapabilities = e;
        }
        factory(e) {
          return this.reflectionCapabilities.factory(e);
        }
        parameters(e) {
          return this.reflectionCapabilities.parameters(e);
        }
        annotations(e) {
          return this.reflectionCapabilities.annotations(e);
        }
        propMetadata(e) {
          return this.reflectionCapabilities.propMetadata(e);
        }
        hasLifecycleHook(e, t) {
          return this.reflectionCapabilities.hasLifecycleHook(e, t);
        }
        getter(e) {
          return this.reflectionCapabilities.getter(e);
        }
        setter(e) {
          return this.reflectionCapabilities.setter(e);
        }
        method(e) {
          return this.reflectionCapabilities.method(e);
        }
        importUri(e) {
          return this.reflectionCapabilities.importUri(e);
        }
        resourceUri(e) {
          return this.reflectionCapabilities.resourceUri(e);
        }
        resolveIdentifier(e, t, n, s) {
          return this.reflectionCapabilities.resolveIdentifier(e, t, n, s);
        }
        resolveEnum(e, t) {
          return this.reflectionCapabilities.resolveEnum(e, t);
        }
      })(new _e());
      class zl {
        constructor(e, t, n) {
          (this.key = e), (this.optional = t), (this.visibility = n);
        }
        static fromKey(e) {
          return new zl(e, !1, null);
        }
      }
      const Hl = [];
      class Gl {
        constructor(e, t, n) {
          (this.key = e),
            (this.resolvedFactories = t),
            (this.multiProvider = n),
            (this.resolvedFactory = this.resolvedFactories[0]);
        }
      }
      class Ul {
        constructor(e, t) {
          (this.factory = e), (this.dependencies = t);
        }
      }
      function $l(e) {
        let t, n;
        if (e.useClass) {
          const s = ie(e.useClass);
          (t = Bl.factory(s)), (n = Ql(s));
        } else
          e.useExisting
            ? ((t = (e) => e), (n = [zl.fromKey(Ll.get(e.useExisting))]))
            : e.useFactory
            ? ((t = e.useFactory),
              (n = (function (e, t) {
                if (t) {
                  const n = t.map((e) => [e]);
                  return t.map((t) => Kl(e, t, n));
                }
                return Ql(e);
              })(e.useFactory, e.deps)))
            : ((t = () => e.useValue), (n = Hl));
        return new Ul(t, n);
      }
      function ql(e) {
        return new Gl(Ll.get(e.provide), [$l(e)], e.multi || !1);
      }
      function Wl(e) {
        const t = (function (e, t) {
          for (let n = 0; n < e.length; n++) {
            const s = e[n],
              i = t.get(s.key.id);
            if (i) {
              if (s.multiProvider !== i.multiProvider) throw Fl(i, s);
              if (s.multiProvider)
                for (let e = 0; e < s.resolvedFactories.length; e++)
                  i.resolvedFactories.push(s.resolvedFactories[e]);
              else t.set(s.key.id, s);
            } else {
              let e;
              (e = s.multiProvider
                ? new Gl(s.key, s.resolvedFactories.slice(), s.multiProvider)
                : s),
                t.set(s.key.id, e);
            }
          }
          return t;
        })(Yl(e, []).map(ql), new Map());
        return Array.from(t.values());
      }
      function Yl(e, t) {
        return (
          e.forEach((e) => {
            if (e instanceof oe) t.push({ provide: e, useClass: e });
            else if (e && "object" == typeof e && void 0 !== e.provide)
              t.push(e);
            else {
              if (!Array.isArray(e))
                throw Error(
                  "Invalid provider - only instances of Provider and Type are allowed, got: " +
                    e
                );
              Yl(e, t);
            }
          }),
          t
        );
      }
      function Ql(e) {
        const t = Bl.parameters(e);
        if (!t) return [];
        if (t.some((e) => null == e)) throw Nl(e, t);
        return t.map((n) => Kl(e, n, t));
      }
      function Kl(e, t, n) {
        let s = null,
          i = !1;
        if (!Array.isArray(t)) return Jl(t instanceof g ? t.token : t, i, null);
        let r = null;
        for (let o = 0; o < t.length; ++o) {
          const e = t[o];
          e instanceof oe
            ? (s = e)
            : e instanceof g
            ? (s = e.token)
            : e instanceof y
            ? (i = !0)
            : e instanceof v || e instanceof b
            ? (r = e)
            : e instanceof L && (s = e);
        }
        if (((s = ie(s)), null != s)) return Jl(s, i, r);
        throw Nl(e, n);
      }
      function Jl(e, t, n) {
        return new zl(Ll.get(e), t, n);
      }
      const Xl = {};
      class Zl {
        static resolve(e) {
          return Wl(e);
        }
        static resolveAndCreate(e, t) {
          const n = Zl.resolve(e);
          return Zl.fromResolvedProviders(n, t);
        }
        static fromResolvedProviders(e, t) {
          return new ec(e, t);
        }
      }
      class ec {
        constructor(e, t) {
          (this._constructionCounter = 0),
            (this._providers = e),
            (this.parent = t || null);
          const n = e.length;
          (this.keyIds = []), (this.objs = []);
          for (let s = 0; s < n; s++)
            (this.keyIds[s] = e[s].key.id), (this.objs[s] = Xl);
        }
        get(e, t = ut) {
          return this._getByKey(Ll.get(e), null, t);
        }
        resolveAndCreateChild(e) {
          const t = Zl.resolve(e);
          return this.createChildFromResolved(t);
        }
        createChildFromResolved(e) {
          const t = new ec(e);
          return (t.parent = this), t;
        }
        resolveAndInstantiate(e) {
          return this.instantiateResolved(Zl.resolve([e])[0]);
        }
        instantiateResolved(e) {
          return this._instantiateProvider(e);
        }
        getProviderAtIndex(e) {
          if (e < 0 || e >= this._providers.length)
            throw (function (e) {
              return Error(`Index ${e} is out-of-bounds.`);
            })(e);
          return this._providers[e];
        }
        _new(e) {
          if (this._constructionCounter++ > this._getMaxNumberOfObjects())
            throw (
              ((t = this),
              (n = e.key),
              Rl(t, n, function (e) {
                return "Cannot instantiate cyclic dependency!" + Pl(e);
              }))
            );
          var t, n;
          return this._instantiateProvider(e);
        }
        _getMaxNumberOfObjects() {
          return this.objs.length;
        }
        _instantiateProvider(e) {
          if (e.multiProvider) {
            const t = [];
            for (let n = 0; n < e.resolvedFactories.length; ++n)
              t[n] = this._instantiate(e, e.resolvedFactories[n]);
            return t;
          }
          return this._instantiate(e, e.resolvedFactories[0]);
        }
        _instantiate(e, t) {
          const n = t.factory;
          let s, i;
          try {
            s = t.dependencies.map((e) => this._getByReflectiveDependency(e));
          } catch (l) {
            throw (l.addKey && l.addKey(this, e.key), l);
          }
          try {
            i = n(...s);
          } catch (l) {
            throw (
              ((r = this),
              (o = l),
              l.stack,
              (a = e.key),
              Rl(
                r,
                a,
                function (e) {
                  const t = w(e[0].token);
                  return `${o.message}: Error during instantiation of ${t}!${Pl(
                    e
                  )}.`;
                },
                o
              ))
            );
          }
          var r, o, a;
          return i;
        }
        _getByReflectiveDependency(e) {
          return this._getByKey(e.key, e.visibility, e.optional ? null : ut);
        }
        _getByKey(e, t, n) {
          return e === ec.INJECTOR_KEY
            ? this
            : t instanceof v
            ? this._getByKeySelf(e, n)
            : this._getByKeyDefault(e, n, t);
        }
        _getObjByKeyId(e) {
          for (let t = 0; t < this.keyIds.length; t++)
            if (this.keyIds[t] === e)
              return (
                this.objs[t] === Xl &&
                  (this.objs[t] = this._new(this._providers[t])),
                this.objs[t]
              );
          return Xl;
        }
        _throwOrNull(e, t) {
          if (t !== ut) return t;
          throw (function (e, t) {
            return Rl(e, t, function (e) {
              return `No provider for ${w(e[0].token)}!${Pl(e)}`;
            });
          })(this, e);
        }
        _getByKeySelf(e, t) {
          const n = this._getObjByKeyId(e.id);
          return n !== Xl ? n : this._throwOrNull(e, t);
        }
        _getByKeyDefault(e, t, n) {
          let s;
          for (s = n instanceof b ? this.parent : this; s instanceof ec; ) {
            const t = s,
              n = t._getObjByKeyId(e.id);
            if (n !== Xl) return n;
            s = t.parent;
          }
          return null !== s ? s.get(e.token, t) : this._throwOrNull(e, t);
        }
        get displayName() {
          return `ReflectiveInjector(providers: [${(function (e, t) {
            const n = [];
            for (let s = 0; s < e._providers.length; ++s)
              n[s] = t(e.getProviderAtIndex(s));
            return n;
          })(this, (e) => ' "' + e.key.displayName + '" ').join(", ")}])`;
        }
        toString() {
          return this.displayName;
        }
      }
      function tc(e, t = ot.Default) {
        const n = nn();
        if (null === n) return yt(e, t);
        return Di(on(), n, ie(e), t);
      }
      function nc(e) {
        return (function (e, t) {
          if ("class" === t) return e.classes;
          if ("style" === t) return e.styles;
          const n = e.attrs;
          if (n) {
            const e = n.length;
            let s = 0;
            for (; s < e; ) {
              const i = n[s];
              if (mi(i)) break;
              if (0 === i) s += 2;
              else if ("number" == typeof i)
                for (s++; s < e && "string" == typeof n[s]; ) s++;
              else {
                if (i === t) return n[s + 1];
                s += 2;
              }
            }
          }
          return null;
        })(on(), e);
      }
      function sc() {
        throw new Error("invalid");
      }
      function ic(e, t, n) {
        const s = nn(),
          i = yn();
        if (tl(s, i, t)) {
          const i = sn(),
            r = Nn();
          Po(i, r, s, e, t, s[11], n, !1);
        }
        return ic;
      }
      function rc(e, t, n, s, i) {
        const r = i ? "class" : "style";
        oa(e, n, t.inputs[r], r, s);
      }
      function oc(e, t, n, s, i, r, o) {
        const a = t.consts,
          l = vo(t, e, 2, i, Qt(a, r));
        Ro(t, n, l, Qt(a, o));
        return (
          null !== l.attrs && la(l, l.attrs, !1),
          null !== l.mergedAttrs && la(l, l.mergedAttrs, !0),
          null !== t.queries && t.queries.elementStart(t, l),
          l
        );
      }
      function ac(e, t, n, s) {
        const i = nn(),
          r = sn(),
          o = kt + e,
          a = i[11],
          l = (i[o] = br(a, t, Xt.lFrame.currentNamespace)),
          c = r.firstCreatePass ? oc(o, r, i, 0, t, n, s) : r.data[o];
        cn(c, !0);
        const u = c.mergedAttrs;
        null !== u && pi(a, l, u);
        const d = c.classes;
        null !== d && Ur(a, l, d);
        const h = c.styles;
        null !== h && Gr(a, l, h),
          64 != (64 & c.flags) && Nr(r, i, l, c),
          0 === Xt.lFrame.elementDepthCount && Ji(l, i),
          Xt.lFrame.elementDepthCount++,
          Mt(c) && (ko(r, i, c), Eo(r, c, i)),
          null !== s && Oo(i, c);
      }
      function lc() {
        let e = on();
        un() ? dn() : ((e = e.parent), cn(e, !1));
        const t = e;
        Xt.lFrame.elementDepthCount--;
        const n = sn();
        n.firstCreatePass && (ri(n, e), At(e) && n.queries.elementEnd(e)),
          null != t.classesWithoutHost &&
            (function (e) {
              return 0 != (16 & e.flags);
            })(t) &&
            rc(n, t, nn(), t.classesWithoutHost, !0),
          null != t.stylesWithoutHost &&
            (function (e) {
              return 0 != (32 & e.flags);
            })(t) &&
            rc(n, t, nn(), t.stylesWithoutHost, !1);
      }
      function cc(e, t, n, s) {
        ac(e, t, n, s), lc();
      }
      function uc(e, t, n) {
        const s = nn(),
          i = sn(),
          r = e + kt,
          o = i.firstCreatePass
            ? (function (e, t, n, s, i) {
                const r = t.consts,
                  o = Qt(r, s),
                  a = vo(t, e, 8, "ng-container", o);
                return (
                  null !== o && la(a, o, !0),
                  Ro(t, n, a, Qt(r, i)),
                  null !== t.queries && t.queries.elementStart(t, a),
                  a
                );
              })(r, i, s, t, n)
            : i.data[r];
        cn(o, !0);
        const a = (s[r] = s[11].createComment(""));
        Nr(i, s, a, o),
          Ji(a, s),
          Mt(o) && (ko(i, s, o), Eo(i, o, s)),
          null != n && Oo(s, o);
      }
      function dc() {
        let e = on();
        const t = sn();
        un() ? dn() : ((e = e.parent), cn(e, !1)),
          t.firstCreatePass && (ri(t, e), At(e) && t.queries.elementEnd(e));
      }
      function hc(e, t, n) {
        uc(e, t, n), dc();
      }
      function pc() {
        return nn();
      }
      function mc(e) {
        return !!e && "function" == typeof e.then;
      }
      function fc(e) {
        return !!e && "function" == typeof e.subscribe;
      }
      function gc(e, t, n = !1, s) {
        const i = nn(),
          r = sn(),
          o = on();
        return vc(r, i, i[11], o, e, t, n, s), gc;
      }
      function yc(e, t, n = !1, s) {
        const i = on(),
          r = nn(),
          o = sn();
        return vc(o, r, ia(wn(o.data), i, r), i, e, t, n, s), yc;
      }
      function vc(e, t, n, s, i, r, o = !1, a) {
        const l = Mt(s),
          c = e.firstCreatePass && (e.cleanup || (e.cleanup = [])),
          u = sa(t);
        let d = !0;
        if (3 & s.type) {
          const h = zt(s, t),
            p = a ? a(h) : Re,
            m = p.target || h,
            f = u.length,
            g = a ? (e) => a(Vt(e[s.index])).target : s.index;
          if (Ft(n)) {
            let o = null;
            if (
              (!a &&
                l &&
                (o = (function (e, t, n, s) {
                  const i = e.cleanup;
                  if (null != i)
                    for (let r = 0; r < i.length - 1; r += 2) {
                      const e = i[r];
                      if (e === n && i[r + 1] === s) {
                        const e = t[7],
                          n = i[r + 2];
                        return e.length > n ? e[n] : null;
                      }
                      "string" == typeof e && (r += 2);
                    }
                  return null;
                })(e, t, i, s.index)),
              null !== o)
            ) {
              ((o.__ngLastListenerFn__ || o).__ngNextListenerFn__ = r),
                (o.__ngLastListenerFn__ = r),
                (d = !1);
            } else {
              r = xc(s, t, r, !1);
              const e = n.listen(p.name || m, i, r);
              u.push(r, e), c && c.push(i, g, f, f + 1);
            }
          } else
            (r = xc(s, t, r, !0)),
              m.addEventListener(i, r, o),
              u.push(r),
              c && c.push(i, g, f, o);
        }
        const h = s.outputs;
        let p;
        if (d && null !== h && (p = h[i])) {
          const e = p.length;
          if (e)
            for (let n = 0; n < e; n += 2) {
              const e = p[n],
                o = p[n + 1],
                a = t[e],
                l = a[o];
              0;
              const d = l.subscribe(r),
                h = u.length;
              u.push(r, d), c && c.push(i, s.index, h, -(h + 1));
            }
        }
      }
      function bc(e, t, n) {
        try {
          return !1 !== t(n);
        } catch (s) {
          return ra(e, s), !1;
        }
      }
      function xc(e, t, n, s) {
        return function i(r) {
          if (r === Function) return n;
          const o = 2 & e.flags ? Ut(e.index, t) : t;
          0 == (32 & t[2]) && Jo(o);
          let a = bc(t, n, r),
            l = i.__ngNextListenerFn__;
          for (; l; ) (a = bc(t, l, r) && a), (l = l.__ngNextListenerFn__);
          return s && !1 === a && (r.preventDefault(), (r.returnValue = !1)), a;
        };
      }
      function _c(e = 1) {
        return Pn(e);
      }
      function wc(e, t) {
        let n = null;
        const s = (function (e) {
          const t = e.attrs;
          if (null != t) {
            const e = t.indexOf(5);
            if (0 == (1 & e)) return t[e + 1];
          }
          return null;
        })(e);
        for (let i = 0; i < t.length; i++) {
          const r = t[i];
          if ("*" !== r) {
            if (null === s ? Zr(e, r, !0) : eo(s, r)) return i;
          } else n = i;
        }
        return n;
      }
      function Cc(e) {
        const t = nn()[16][6];
        if (!t.projection) {
          const n = e ? e.length : 1,
            s = (t.projection = he(n, null)),
            i = s.slice();
          let r = t.child;
          for (; null !== r; ) {
            const t = e ? wc(r, e) : 0;
            null !== t &&
              (i[t] ? (i[t].projectionNext = r) : (s[t] = r), (i[t] = r)),
              (r = r.next);
          }
        }
      }
      function Sc(e, t = 0, n) {
        const s = nn(),
          i = sn(),
          r = vo(i, kt + e, 16, null, n || null);
        null === r.projection && (r.projection = t),
          dn(),
          64 != (64 & r.flags) &&
            (function (e, t, n) {
              Hr(t[11], 0, t, n, Er(e, n, t), Dr(n.parent || t[6], n, t));
            })(i, s, r);
      }
      function Ec(e, t, n) {
        return kc(e, "", t, "", n), Ec;
      }
      function kc(e, t, n, s, i) {
        const r = nn(),
          o = al(r, t, n, s);
        if (o !== so) {
          const t = sn(),
            n = Nn();
          Po(t, n, r, e, o, r[11], i, !1);
        }
        return kc;
      }
      function Oc(e, t, n, s, i, r, o) {
        const a = nn(),
          l = ll(a, t, n, s, i, r);
        if (l !== so) {
          const t = sn(),
            n = Nn();
          Po(t, n, a, e, l, a[11], o, !1);
        }
        return Oc;
      }
      function Ic(e, t, n, s, i, r, o, a, l) {
        const c = nn(),
          u = cl(c, t, n, s, i, r, o, a);
        if (u !== so) {
          const t = sn(),
            n = Nn();
          Po(t, n, c, e, u, c[11], l, !1);
        }
        return Ic;
      }
      function Tc(e, t, n, s, i, r, o, a, l, c, u) {
        const d = nn(),
          h = ul(d, t, n, s, i, r, o, a, l, c);
        if (h !== so) {
          const t = sn(),
            n = Nn();
          Po(t, n, d, e, h, d[11], u, !1);
        }
        return Tc;
      }
      function Ac(e, t, n, s, i, r, o, a, l, c, u, d, h) {
        const p = nn(),
          m = dl(p, t, n, s, i, r, o, a, l, c, u, d);
        if (m !== so) {
          const t = sn(),
            n = Nn();
          Po(t, n, p, e, m, p[11], h, !1);
        }
        return Ac;
      }
      function Dc(e, t, n, s, i, r, o, a, l, c, u, d, h, p, m) {
        const f = nn(),
          g = hl(f, t, n, s, i, r, o, a, l, c, u, d, h, p);
        if (g !== so) {
          const t = sn(),
            n = Nn();
          Po(t, n, f, e, g, f[11], m, !1);
        }
        return Dc;
      }
      function Mc(e, t, n, s, i, r, o, a, l, c, u, d, h, p, m, f, g) {
        const y = nn(),
          v = pl(y, t, n, s, i, r, o, a, l, c, u, d, h, p, m, f);
        if (v !== so) {
          const t = sn(),
            n = Nn();
          Po(t, n, y, e, v, y[11], g, !1);
        }
        return Mc;
      }
      function Pc(e, t, n, s, i, r, o, a, l, c, u, d, h, p, m, f, g, y, v) {
        const b = nn(),
          x = ml(b, t, n, s, i, r, o, a, l, c, u, d, h, p, m, f, g, y);
        if (x !== so) {
          const t = sn(),
            n = Nn();
          Po(t, n, b, e, x, b[11], v, !1);
        }
        return Pc;
      }
      function Rc(e, t, n) {
        const s = nn(),
          i = ol(s, t);
        if (i !== so) {
          const t = sn(),
            r = Nn();
          Po(t, r, s, e, i, s[11], n, !1);
        }
        return Rc;
      }
      ec.INJECTOR_KEY = Ll.get(Ea);
      const jc = [];
      function Nc(e, t, n, s, i, r) {
        let o = r ? t.classBindings : t.styleBindings,
          a = ao(o),
          l = uo(o);
        e[s] = n;
        let c,
          u = !1;
        if (Array.isArray(n)) {
          const e = n;
          (c = e[1]), (null === c || fe(e, c) > 0) && (u = !0);
        } else c = n;
        if (i) {
          if (0 !== l) {
            const t = ao(e[a + 1]);
            (e[s + 1] = oo(t, a)),
              0 !== t && (e[t + 1] = ho(e[t + 1], s)),
              (e[a + 1] = (131071 & e[a + 1]) | (s << 17));
          } else
            (e[s + 1] = oo(a, 0)),
              0 !== a && (e[a + 1] = ho(e[a + 1], s)),
              (a = s);
        } else
          (e[s + 1] = oo(l, 0)),
            0 === a ? (a = s) : (e[l + 1] = ho(e[l + 1], s)),
            (l = s);
        u && (e[s + 1] = co(e[s + 1])),
          Fc(e, c, s, !0, r),
          Fc(e, c, s, !1, r),
          (function (e, t, n, s, i) {
            const r = i ? e.residualClasses : e.residualStyles;
            null != r &&
              "string" == typeof t &&
              fe(r, t) >= 0 &&
              (n[s + 1] = mo(n[s + 1]));
          })(t, c, e, s, r),
          (o = oo(a, l)),
          r ? (t.classBindings = o) : (t.styleBindings = o);
      }
      function Fc(e, t, n, s, i) {
        const r = e[n + 1],
          o = null === t;
        let a = s ? ao(r) : uo(r),
          l = !1;
        for (; 0 !== a && (!1 === l || o); ) {
          const n = e[a],
            i = e[a + 1];
          Lc(n, t) && ((l = !0), (e[a + 1] = s ? mo(i) : co(i))),
            (a = s ? ao(i) : uo(i));
        }
        l && (e[n + 1] = s ? co(r) : mo(r));
      }
      function Lc(e, t) {
        return (
          null === e ||
          null == t ||
          (Array.isArray(e) ? e[1] : e) === t ||
          (!(!Array.isArray(e) || "string" != typeof t) && fe(e, t) >= 0)
        );
      }
      const Vc = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function Bc(e) {
        return e.substring(Vc.key, Vc.keyEnd);
      }
      function zc(e) {
        return e.substring(Vc.value, Vc.valueEnd);
      }
      function Hc(e, t) {
        const n = Vc.textEnd;
        return n === t
          ? -1
          : ((t = Vc.keyEnd =
              (function (e, t, n) {
                for (; t < n && e.charCodeAt(t) > 32; ) t++;
                return t;
              })(e, (Vc.key = t), n)),
            $c(e, t, n));
      }
      function Gc(e, t) {
        const n = Vc.textEnd;
        let s = (Vc.key = $c(e, t, n));
        return n === s
          ? -1
          : ((s = Vc.keyEnd =
              (function (e, t, n) {
                let s;
                for (
                  ;
                  t < n &&
                  (45 === (s = e.charCodeAt(t)) ||
                    95 === s ||
                    ((-33 & s) >= 65 && (-33 & s) <= 90) ||
                    (s >= 48 && s <= 57));

                )
                  t++;
                return t;
              })(e, s, n)),
            (s = qc(e, s, n, 58)),
            (s = Vc.value = $c(e, s, n)),
            (s = Vc.valueEnd =
              (function (e, t, n) {
                let s = -1,
                  i = -1,
                  r = -1,
                  o = t,
                  a = o;
                for (; o < n; ) {
                  const l = e.charCodeAt(o++);
                  if (59 === l) return a;
                  34 === l || 39 === l
                    ? (a = o = Wc(e, l, o, n))
                    : t === o - 4 &&
                      85 === r &&
                      82 === i &&
                      76 === s &&
                      40 === l
                    ? (a = o = Wc(e, 41, o, n))
                    : l > 32 && (a = o),
                    (r = i),
                    (i = s),
                    (s = -33 & l);
                }
                return a;
              })(e, s, n)),
            qc(e, s, n, 59));
      }
      function Uc(e) {
        (Vc.key = 0),
          (Vc.keyEnd = 0),
          (Vc.value = 0),
          (Vc.valueEnd = 0),
          (Vc.textEnd = e.length);
      }
      function $c(e, t, n) {
        for (; t < n && e.charCodeAt(t) <= 32; ) t++;
        return t;
      }
      function qc(e, t, n, s) {
        return (t = $c(e, t, n)) < n && t++, t;
      }
      function Wc(e, t, n, s) {
        let i = -1,
          r = n;
        for (; r < s; ) {
          const n = e.charCodeAt(r++);
          if (n == t && 92 !== i) return r;
          i = 92 == n && 92 === i ? 0 : n;
        }
        throw new Error();
      }
      function Yc(e, t, n) {
        return eu(e, t, n, !1), Yc;
      }
      function Qc(e, t) {
        return eu(e, t, null, !0), Qc;
      }
      function Kc(e) {
        tu(ou, Jc, e, !1);
      }
      function Jc(e, t) {
        for (
          let n = (function (e) {
            return Uc(e), Gc(e, $c(e, 0, Vc.textEnd));
          })(t);
          n >= 0;
          n = Gc(t, n)
        )
          ou(e, Bc(t), zc(t));
      }
      function Xc(e) {
        tu(pe, Zc, e, !0);
      }
      function Zc(e, t) {
        for (
          let n = (function (e) {
            return Uc(e), Hc(e, $c(e, 0, Vc.textEnd));
          })(t);
          n >= 0;
          n = Hc(t, n)
        )
          pe(e, Bc(t), !0);
      }
      function eu(e, t, n, s) {
        const i = nn(),
          r = sn(),
          o = vn(2);
        if ((r.firstUpdatePass && su(r, e, o, s), t !== so && tl(i, o, t))) {
          au(
            r,
            r.data[Rn()],
            i,
            i[11],
            e,
            (i[o + 1] = (function (e, t) {
              null == e ||
                ("string" == typeof t
                  ? (e += t)
                  : "object" == typeof e && (e = w(Kn(e))));
              return e;
            })(t, n)),
            s,
            o
          );
        }
      }
      function tu(e, t, n, s) {
        const i = sn(),
          r = vn(2);
        i.firstUpdatePass && su(i, null, r, s);
        const o = nn();
        if (n !== so && tl(o, r, n)) {
          const a = i.data[Rn()];
          if (uu(a, s) && !nu(i, r)) {
            0;
            let e = s ? a.classesWithoutHost : a.stylesWithoutHost;
            null !== e && (n = C(e, n || "")), rc(i, a, o, n, s);
          } else
            !(function (e, t, n, s, i, r, o, a) {
              i === so && (i = jc);
              let l = 0,
                c = 0,
                u = 0 < i.length ? i[0] : null,
                d = 0 < r.length ? r[0] : null;
              for (; null !== u || null !== d; ) {
                const h = l < i.length ? i[l + 1] : void 0,
                  p = c < r.length ? r[c + 1] : void 0;
                let m = null,
                  f = void 0;
                u === d
                  ? ((l += 2), (c += 2), h !== p && ((m = d), (f = p)))
                  : null === d || (null !== u && u < d)
                  ? ((l += 2), (m = u))
                  : ((c += 2), (m = d), (f = p)),
                  null !== m && au(e, t, n, s, m, f, o, a),
                  (u = l < i.length ? i[l] : null),
                  (d = c < r.length ? r[c] : null);
              }
            })(
              i,
              a,
              o,
              o[11],
              o[r + 1],
              (o[r + 1] = (function (e, t, n) {
                if (null == n || "" === n) return jc;
                const s = [],
                  i = Kn(n);
                if (Array.isArray(i))
                  for (let r = 0; r < i.length; r++) e(s, i[r], !0);
                else if ("object" == typeof i)
                  for (const r in i) i.hasOwnProperty(r) && e(s, r, i[r]);
                else "string" == typeof i && t(s, i);
                return s;
              })(e, t, n)),
              s,
              r
            );
        }
      }
      function nu(e, t) {
        return t >= e.expandoStartIndex;
      }
      function su(e, t, n, s) {
        const i = e.data;
        if (null === i[n + 1]) {
          const r = i[Rn()],
            o = nu(e, n);
          uu(r, s) && null === t && !o && (t = !1),
            (t = (function (e, t, n, s) {
              const i = wn(e);
              let r = s ? t.residualClasses : t.residualStyles;
              if (null === i) {
                0 === (s ? t.classBindings : t.styleBindings) &&
                  ((n = ru((n = iu(null, e, t, n, s)), t.attrs, s)),
                  (r = null));
              } else {
                const o = t.directiveStylingLast;
                if (-1 === o || e[o] !== i)
                  if (((n = iu(i, e, t, n, s)), null === r)) {
                    let n = (function (e, t, n) {
                      const s = n ? t.classBindings : t.styleBindings;
                      if (0 === uo(s)) return;
                      return e[ao(s)];
                    })(e, t, s);
                    void 0 !== n &&
                      Array.isArray(n) &&
                      ((n = iu(null, e, t, n[1], s)),
                      (n = ru(n, t.attrs, s)),
                      (function (e, t, n, s) {
                        const i = n ? t.classBindings : t.styleBindings;
                        e[ao(i)] = s;
                      })(e, t, s, n));
                  } else
                    r = (function (e, t, n) {
                      let s = void 0;
                      const i = t.directiveEnd;
                      for (let r = 1 + t.directiveStylingLast; r < i; r++) {
                        s = ru(s, e[r].hostAttrs, n);
                      }
                      return ru(s, t.attrs, n);
                    })(e, t, s);
              }
              void 0 !== r &&
                (s ? (t.residualClasses = r) : (t.residualStyles = r));
              return n;
            })(i, r, t, s)),
            Nc(i, r, t, n, o, s);
        }
      }
      function iu(e, t, n, s, i) {
        let r = null;
        const o = n.directiveEnd;
        let a = n.directiveStylingLast;
        for (
          -1 === a ? (a = n.directiveStart) : a++;
          a < o && ((r = t[a]), (s = ru(s, r.hostAttrs, i)), r !== e);

        )
          a++;
        return null !== e && (n.directiveStylingLast = a), s;
      }
      function ru(e, t, n) {
        const s = n ? 1 : 2;
        let i = -1;
        if (null !== t)
          for (let r = 0; r < t.length; r++) {
            const o = t[r];
            "number" == typeof o
              ? (i = o)
              : i === s &&
                (Array.isArray(e) || (e = void 0 === e ? [] : ["", e]),
                pe(e, o, !!n || t[++r]));
          }
        return void 0 === e ? null : e;
      }
      function ou(e, t, n) {
        pe(e, t, Kn(n));
      }
      function au(e, t, n, s, i, r, o, a) {
        if (!(3 & t.type)) return;
        const l = e.data,
          c = l[a + 1];
        if (!cu(po(c) ? lu(l, t, n, i, uo(c), o) : void 0)) {
          cu(r) || (lo(c) && (r = lu(l, null, n, i, a, o)));
          !(function (e, t, n, s, i) {
            const r = Ft(e);
            if (t)
              i
                ? r
                  ? e.addClass(n, s)
                  : n.classList.add(s)
                : r
                ? e.removeClass(n, s)
                : n.classList.remove(s);
            else {
              let t = -1 === s.indexOf("-") ? void 0 : lr.DashCase;
              if (null == i)
                r ? e.removeStyle(n, s, t) : n.style.removeProperty(s);
              else {
                const o = "string" == typeof i && i.endsWith("!important");
                o && ((i = i.slice(0, -10)), (t |= lr.Important)),
                  r
                    ? e.setStyle(n, s, i, t)
                    : n.style.setProperty(s, i, o ? "important" : "");
              }
            }
          })(s, o, Bt(Rn(), n), i, r);
        }
      }
      function lu(e, t, n, s, i, r) {
        const o = null === t;
        let a = void 0;
        for (; i > 0; ) {
          const t = e[i],
            r = Array.isArray(t),
            l = r ? t[1] : t,
            c = null === l;
          let u = n[i + 1];
          u === so && (u = c ? jc : void 0);
          let d = c ? me(u, s) : l === s ? u : void 0;
          if ((r && !cu(d) && (d = me(t, s)), cu(d) && ((a = d), o))) return a;
          const h = e[i + 1];
          i = o ? ao(h) : uo(h);
        }
        if (null !== t) {
          let e = r ? t.residualClasses : t.residualStyles;
          null != e && (a = me(e, s));
        }
        return a;
      }
      function cu(e) {
        return void 0 !== e;
      }
      function uu(e, t) {
        return 0 != (e.flags & (t ? 16 : 32));
      }
      function du(e, t = "") {
        const n = nn(),
          s = sn(),
          i = e + kt,
          r = s.firstCreatePass ? vo(s, i, 1, t, null) : s.data[i],
          o = (n[i] = gr(n[11], t));
        Nr(s, n, o, r), cn(r, !1);
      }
      function hu(e) {
        return pu("", e, ""), hu;
      }
      function pu(e, t, n) {
        const s = nn(),
          i = al(s, e, t, n);
        return i !== so && aa(s, Rn(), i), pu;
      }
      function mu(e, t, n, s, i) {
        const r = nn(),
          o = ll(r, e, t, n, s, i);
        return o !== so && aa(r, Rn(), o), mu;
      }
      function fu(e, t, n, s, i, r, o) {
        const a = nn(),
          l = cl(a, e, t, n, s, i, r, o);
        return l !== so && aa(a, Rn(), l), fu;
      }
      function gu(e, t, n, s, i, r, o, a, l) {
        const c = nn(),
          u = ul(c, e, t, n, s, i, r, o, a, l);
        return u !== so && aa(c, Rn(), u), gu;
      }
      function yu(e, t, n, s, i, r, o, a, l, c, u) {
        const d = nn(),
          h = dl(d, e, t, n, s, i, r, o, a, l, c, u);
        return h !== so && aa(d, Rn(), h), yu;
      }
      function vu(e, t, n, s, i, r, o, a, l, c, u, d, h) {
        const p = nn(),
          m = hl(p, e, t, n, s, i, r, o, a, l, c, u, d, h);
        return m !== so && aa(p, Rn(), m), vu;
      }
      function bu(e, t, n, s, i, r, o, a, l, c, u, d, h, p, m) {
        const f = nn(),
          g = pl(f, e, t, n, s, i, r, o, a, l, c, u, d, h, p, m);
        return g !== so && aa(f, Rn(), g), bu;
      }
      function xu(e, t, n, s, i, r, o, a, l, c, u, d, h, p, m, f, g) {
        const y = nn(),
          v = ml(y, e, t, n, s, i, r, o, a, l, c, u, d, h, p, m, f, g);
        return v !== so && aa(y, Rn(), v), xu;
      }
      function _u(e) {
        const t = nn(),
          n = ol(t, e);
        return n !== so && aa(t, Rn(), n), _u;
      }
      function wu(e, t, n) {
        tu(pe, Zc, al(nn(), e, t, n), !0);
      }
      function Cu(e, t, n, s, i) {
        tu(pe, Zc, ll(nn(), e, t, n, s, i), !0);
      }
      function Su(e, t, n, s, i, r, o) {
        tu(pe, Zc, cl(nn(), e, t, n, s, i, r, o), !0);
      }
      function Eu(e, t, n, s, i, r, o, a, l) {
        tu(pe, Zc, ul(nn(), e, t, n, s, i, r, o, a, l), !0);
      }
      function ku(e, t, n, s, i, r, o, a, l, c, u) {
        tu(pe, Zc, dl(nn(), e, t, n, s, i, r, o, a, l, c, u), !0);
      }
      function Ou(e, t, n, s, i, r, o, a, l, c, u, d, h) {
        tu(pe, Zc, hl(nn(), e, t, n, s, i, r, o, a, l, c, u, d, h), !0);
      }
      function Iu(e, t, n, s, i, r, o, a, l, c, u, d, h, p, m) {
        tu(pe, Zc, pl(nn(), e, t, n, s, i, r, o, a, l, c, u, d, h, p, m), !0);
      }
      function Tu(e, t, n, s, i, r, o, a, l, c, u, d, h, p, m, f, g) {
        tu(
          pe,
          Zc,
          ml(nn(), e, t, n, s, i, r, o, a, l, c, u, d, h, p, m, f, g),
          !0
        );
      }
      function Au(e) {
        tu(pe, Zc, ol(nn(), e), !0);
      }
      function Du(e, t, n) {
        Kc(al(nn(), e, t, n));
      }
      function Mu(e, t, n, s, i) {
        Kc(ll(nn(), e, t, n, s, i));
      }
      function Pu(e, t, n, s, i, r, o) {
        Kc(cl(nn(), e, t, n, s, i, r, o));
      }
      function Ru(e, t, n, s, i, r, o, a, l) {
        Kc(ul(nn(), e, t, n, s, i, r, o, a, l));
      }
      function ju(e, t, n, s, i, r, o, a, l, c, u) {
        Kc(dl(nn(), e, t, n, s, i, r, o, a, l, c, u));
      }
      function Nu(e, t, n, s, i, r, o, a, l, c, u, d, h) {
        Kc(hl(nn(), e, t, n, s, i, r, o, a, l, c, u, d, h));
      }
      function Fu(e, t, n, s, i, r, o, a, l, c, u, d, h, p, m) {
        Kc(pl(nn(), e, t, n, s, i, r, o, a, l, c, u, d, h, p, m));
      }
      function Lu(e, t, n, s, i, r, o, a, l, c, u, d, h, p, m, f, g) {
        Kc(ml(nn(), e, t, n, s, i, r, o, a, l, c, u, d, h, p, m, f, g));
      }
      function Vu(e) {
        Kc(ol(nn(), e));
      }
      function Bu(e, t, n, s, i) {
        return eu(e, al(nn(), t, n, s), i, !1), Bu;
      }
      function zu(e, t, n, s, i, r, o) {
        return eu(e, ll(nn(), t, n, s, i, r), o, !1), zu;
      }
      function Hu(e, t, n, s, i, r, o, a, l) {
        return eu(e, cl(nn(), t, n, s, i, r, o, a), l, !1), Hu;
      }
      function Gu(e, t, n, s, i, r, o, a, l, c, u) {
        return eu(e, ul(nn(), t, n, s, i, r, o, a, l, c), u, !1), Gu;
      }
      function Uu(e, t, n, s, i, r, o, a, l, c, u, d, h) {
        return eu(e, dl(nn(), t, n, s, i, r, o, a, l, c, u, d), h, !1), Uu;
      }
      function $u(e, t, n, s, i, r, o, a, l, c, u, d, h, p, m) {
        return (
          eu(e, hl(nn(), t, n, s, i, r, o, a, l, c, u, d, h, p), m, !1), $u
        );
      }
      function qu(e, t, n, s, i, r, o, a, l, c, u, d, h, p, m, f, g) {
        return (
          eu(e, pl(nn(), t, n, s, i, r, o, a, l, c, u, d, h, p, m, f), g, !1),
          qu
        );
      }
      function Wu(e, t, n, s, i, r, o, a, l, c, u, d, h, p, m, f, g, y, v) {
        return (
          eu(
            e,
            ml(nn(), t, n, s, i, r, o, a, l, c, u, d, h, p, m, f, g, y),
            v,
            !1
          ),
          Wu
        );
      }
      function Yu(e, t, n) {
        return eu(e, ol(nn(), t), n, !1), Yu;
      }
      function Qu(e, t, n) {
        const s = nn(),
          i = yn();
        if (tl(s, i, t)) {
          const i = sn(),
            r = Nn();
          Po(i, r, s, e, t, s[11], n, !0);
        }
        return Qu;
      }
      function Ku(e, t, n) {
        const s = nn(),
          i = yn();
        if (tl(s, i, t)) {
          const i = sn(),
            r = Nn();
          Po(i, r, s, e, t, ia(wn(i.data), r, s), n, !0);
        }
        return Ku;
      }
      const Ju = void 0;
      var Xu = [
        "en",
        [["a", "p"], ["AM", "PM"], Ju],
        [["AM", "PM"], Ju, Ju],
        [
          ["S", "M", "T", "W", "T", "F", "S"],
          ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
          ],
          ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
        ],
        Ju,
        [
          ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ],
          [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ],
        ],
        Ju,
        [
          ["B", "A"],
          ["BC", "AD"],
          ["Before Christ", "Anno Domini"],
        ],
        0,
        [6, 0],
        ["M/d/yy", "MMM d, y", "MMMM d, y", "EEEE, MMMM d, y"],
        ["h:mm a", "h:mm:ss a", "h:mm:ss a z", "h:mm:ss a zzzz"],
        ["{1}, {0}", Ju, "{1} 'at' {0}", Ju],
        [
          ".",
          ",",
          ";",
          "%",
          "+",
          "-",
          "E",
          "\xd7",
          "\u2030",
          "\u221e",
          "NaN",
          ":",
        ],
        ["#,##0.###", "#,##0%", "\xa4#,##0.00", "#E0"],
        "USD",
        "$",
        "US Dollar",
        {},
        "ltr",
        function (e) {
          let t = Math.floor(Math.abs(e)),
            n = e.toString().replace(/^[^.]*\.?/, "").length;
          return 1 === t && 0 === n ? 1 : 5;
        },
      ];
      let Zu = {};
      function ed(e, t, n) {
        "string" != typeof t && ((n = t), (t = e[rd.LocaleId])),
          (t = t.toLowerCase().replace(/_/g, "-")),
          (Zu[t] = e),
          n && (Zu[t][rd.ExtraData] = n);
      }
      function td(e) {
        const t = (function (e) {
          return e.toLowerCase().replace(/_/g, "-");
        })(e);
        let n = id(t);
        if (n) return n;
        const s = t.split("-")[0];
        if (((n = id(s)), n)) return n;
        if ("en" === s) return Xu;
        throw new Error(`Missing locale data for the locale "${e}".`);
      }
      function nd(e) {
        return td(e)[rd.CurrencyCode] || null;
      }
      function sd(e) {
        return td(e)[rd.PluralCase];
      }
      function id(e) {
        return (
          e in Zu ||
            (Zu[e] =
              J.ng &&
              J.ng.common &&
              J.ng.common.locales &&
              J.ng.common.locales[e]),
          Zu[e]
        );
      }
      var rd;
      !(function (e) {
        (e[(e.LocaleId = 0)] = "LocaleId"),
          (e[(e.DayPeriodsFormat = 1)] = "DayPeriodsFormat"),
          (e[(e.DayPeriodsStandalone = 2)] = "DayPeriodsStandalone"),
          (e[(e.DaysFormat = 3)] = "DaysFormat"),
          (e[(e.DaysStandalone = 4)] = "DaysStandalone"),
          (e[(e.MonthsFormat = 5)] = "MonthsFormat"),
          (e[(e.MonthsStandalone = 6)] = "MonthsStandalone"),
          (e[(e.Eras = 7)] = "Eras"),
          (e[(e.FirstDayOfWeek = 8)] = "FirstDayOfWeek"),
          (e[(e.WeekendRange = 9)] = "WeekendRange"),
          (e[(e.DateFormat = 10)] = "DateFormat"),
          (e[(e.TimeFormat = 11)] = "TimeFormat"),
          (e[(e.DateTimeFormat = 12)] = "DateTimeFormat"),
          (e[(e.NumberSymbols = 13)] = "NumberSymbols"),
          (e[(e.NumberFormats = 14)] = "NumberFormats"),
          (e[(e.CurrencyCode = 15)] = "CurrencyCode"),
          (e[(e.CurrencySymbol = 16)] = "CurrencySymbol"),
          (e[(e.CurrencyName = 17)] = "CurrencyName"),
          (e[(e.Currencies = 18)] = "Currencies"),
          (e[(e.Directionality = 19)] = "Directionality"),
          (e[(e.PluralCase = 20)] = "PluralCase"),
          (e[(e.ExtraData = 21)] = "ExtraData");
      })(rd || (rd = {}));
      const od = ["zero", "one", "two", "few", "many"];
      const ad = "en-US",
        ld = { marker: "element" },
        cd = { marker: "ICU" };
      var ud;
      !(function (e) {
        (e[(e.SHIFT = 2)] = "SHIFT"),
          (e[(e.APPEND_EAGERLY = 1)] = "APPEND_EAGERLY"),
          (e[(e.COMMENT = 2)] = "COMMENT");
      })(ud || (ud = {}));
      let dd = ad;
      function hd(e) {
        E(e, "Expected localeId to be defined"),
          "string" == typeof e && (dd = e.toLowerCase().replace(/_/g, "-"));
      }
      function pd(e, t, n) {
        const s = t.insertBeforeIndex,
          i = Array.isArray(s) ? s[0] : s;
        return null === i ? Mr(e, 0, n) : Vt(n[i]);
      }
      function md(e, t, n, s, i) {
        const r = t.insertBeforeIndex;
        if (Array.isArray(r)) {
          let o = s,
            a = null;
          if (
            (3 & t.type || ((a = o), (o = i)), null !== o && 0 == (2 & t.flags))
          )
            for (let t = 1; t < r.length; t++) {
              Or(e, o, n[r[t]], a, !1);
            }
        }
      }
      function fd(e, t) {
        if ((e.push(t), e.length > 1))
          for (let n = e.length - 2; n >= 0; n--) {
            const s = e[n];
            gd(s) || (yd(s, t) && null === vd(s) && bd(s, t.index));
          }
      }
      function gd(e) {
        return !(64 & e.type);
      }
      function yd(e, t) {
        return gd(t) || e.index > t.index;
      }
      function vd(e) {
        const t = e.insertBeforeIndex;
        return Array.isArray(t) ? t[0] : t;
      }
      function bd(e, t) {
        const n = e.insertBeforeIndex;
        Array.isArray(n) ? (n[0] = t) : (jr(pd, md), (e.insertBeforeIndex = t));
      }
      function xd(e, t) {
        const n = e.data[t];
        if (null === n || "string" == typeof n) return null;
        const s = n.hasOwnProperty("currentCaseLViewIndex") ? n : n.value;
        return s;
      }
      function _d(e, t, n) {
        const s = bo(e, n, 64, null, null);
        return fd(t, s), s;
      }
      function wd(e, t) {
        const n = t[e.currentCaseLViewIndex];
        return null === n ? n : n < 0 ? ~n : n;
      }
      function Cd(e) {
        return e >>> 17;
      }
      function Sd(e) {
        return (131070 & e) >>> 1;
      }
      let Ed = 0,
        kd = 0;
      function Od(e, t, n, s) {
        const i = n[11];
        let r,
          o = null;
        for (let a = 0; a < t.length; a++) {
          const l = t[a];
          if ("string" == typeof l) {
            const e = t[++a];
            null === n[e] && (n[e] = gr(i, l));
          } else if ("number" == typeof l)
            switch (1 & l) {
              case 0:
                const c = Cd(l);
                let u, d;
                if (
                  (null === o && ((o = c), (r = Ar(i, s))),
                  c === o ? ((u = s), (d = r)) : ((u = null), (d = Vt(n[c]))),
                  null !== d)
                ) {
                  const t = Sd(l),
                    s = n[t];
                  Or(i, d, s, u, !1);
                  const r = xd(e, t);
                  if (null !== r && "object" == typeof r) {
                    const t = wd(r, n);
                    null !== t && Od(e, r.create[t], n, n[r.anchorIdx]);
                  }
                }
                break;
              case 1:
                const h = l >>> 1,
                  p = t[++a],
                  m = t[++a];
                Go(i, Bt(h, n), null, null, p, m, null);
                break;
              default:
                throw new Error(
                  `Unable to determine the type of mutate operation for "${l}"`
                );
            }
          else
            switch (l) {
              case cd:
                const e = t[++a],
                  s = t[++a];
                if (null === n[s]) {
                  Ji((n[s] = vr(i, e)), n);
                }
                break;
              case ld:
                const r = t[++a],
                  o = t[++a];
                if (null === n[o]) {
                  Ji((n[o] = br(i, r, null)), n);
                }
            }
        }
      }
      function Id(e, t, n, s, i) {
        for (let r = 0; r < n.length; r++) {
          const o = n[r],
            a = n[++r];
          if (o & i) {
            let i = "";
            for (let o = r + 1; o <= r + a; o++) {
              const r = n[o];
              if ("string" == typeof r) i += r;
              else if ("number" == typeof r)
                if (r < 0) i += it(t[s - r]);
                else {
                  const a = r >>> 2;
                  switch (3 & r) {
                    case 1:
                      const r = n[++o],
                        l = n[++o],
                        c = e.data[a];
                      "string" == typeof c
                        ? Go(t[11], t[a], null, c, r, i, l)
                        : Po(e, c, t, r, i, t[11], l, !1);
                      break;
                    case 0:
                      const u = t[a];
                      null !== u && yr(t[11], u, i);
                      break;
                    case 2:
                      Ad(e, xd(e, a), t, i);
                      break;
                    case 3:
                      Td(e, xd(e, a), s, t);
                  }
                }
            }
          } else {
            const i = n[r + 1];
            if (i > 0 && 3 == (3 & i)) {
              const n = xd(e, i >>> 2);
              t[n.currentCaseLViewIndex] < 0 && Td(e, n, s, t);
            }
          }
          r += a;
        }
      }
      function Td(e, t, n, s) {
        let i = s[t.currentCaseLViewIndex];
        if (null !== i) {
          let r = Ed;
          i < 0 && ((i = s[t.currentCaseLViewIndex] = ~i), (r = -1)),
            Id(e, s, t.update[i], n, r);
        }
      }
      function Ad(e, t, n, s) {
        const i = (function (e, t) {
          let n = e.cases.indexOf(t);
          if (-1 === n)
            switch (e.type) {
              case 1: {
                const s = (function (e, t) {
                  const n = sd(t)(parseInt(e, 10)),
                    s = od[n];
                  return void 0 !== s ? s : "other";
                })(t, dd);
                (n = e.cases.indexOf(s)),
                  -1 === n && "other" !== s && (n = e.cases.indexOf("other"));
                break;
              }
              case 0:
                n = e.cases.indexOf("other");
            }
          return -1 === n ? null : n;
        })(t, s);
        if (
          wd(t, n) !== i &&
          (Dd(e, t, n),
          (n[t.currentCaseLViewIndex] = null === i ? null : ~i),
          null !== i)
        ) {
          const s = n[t.anchorIdx];
          s && Od(e, t.create[i], n, s);
        }
      }
      function Dd(e, t, n) {
        let s = wd(t, n);
        if (null !== s) {
          const i = t.remove[s];
          for (let t = 0; t < i.length; t++) {
            const s = i[t];
            if (s > 0) {
              const e = Bt(s, n);
              null !== e && Vr(n[11], e);
            } else Dd(e, xd(e, ~s), n);
          }
        }
      }
      function Md() {
        const e = [];
        let t,
          n,
          s = -1;
        function i(e, t) {
          s = 0;
          const i = wd(e, t);
          n = null !== i ? e.remove[i] : je;
        }
        function r() {
          if (s < n.length) {
            const o = n[s++];
            if (o > 0) {
              const e = t[o];
              return e;
            }
            {
              e.push(s, n);
              const a = ~o,
                l = t[1].data[a];
              return i(l, t), r();
            }
          }
          return 0 === e.length ? null : ((n = e.pop()), (s = e.pop()), r());
        }
        return function (n, s) {
          for (t = s; e.length; ) e.pop();
          return i(n.value, s), r;
        };
      }
      const Pd = /\ufffd(\d+):?\d*\ufffd/gi,
        Rd = /({\s*\ufffd\d+:?\d*\ufffd\s*,\s*\S{6}\s*,[\s\S]*})/gi,
        jd = /\ufffd(\d+)\ufffd/,
        Nd = /^\s*(\ufffd\d+:?\d*\ufffd)\s*,\s*(select|plural)\s*,/,
        Fd = /\ufffd\/?\*(\d+:\d+)\ufffd/gi,
        Ld = /\ufffd(\/?[#*]\d+):?\d*\ufffd/gi,
        Vd = /\uE500/g;
      function Bd(e, t, n, s, i, r) {
        const o = ln(),
          a = [],
          l = [],
          c = [[]];
        i = (function (e, t) {
          if (
            (function (e) {
              return -1 === e;
            })(t)
          )
            return $d(e);
          {
            const n = e.indexOf(`:${t}\ufffd`) + 2 + t.toString().length,
              s = e.search(new RegExp(`\ufffd\\/\\*\\d+:${t}\ufffd`));
            return $d(e.substring(n, s));
          }
        })(i, r);
        const u = ((d = i), d.replace(Vd, " ")).split(Ld);
        var d;
        for (let h = 0; h < u.length; h++) {
          let s = u[h];
          if (0 == (1 & h)) {
            const r = Yd(s);
            for (let s = 0; s < r.length; s++) {
              let u = r[s];
              if (0 == (1 & s)) {
                const t = u;
                "" !== t && Hd(e, o, c[0], a, l, n, t);
              } else {
                const s = u;
                if ("object" != typeof s)
                  throw new Error(
                    `Unable to parse ICU expression in "${i}" message.`
                  );
                const r = zd(e, o, c[0], n, a, "", !0).index;
                qd(e, n, l, t, s, r);
              }
            }
          } else {
            const t = 47 === s.charCodeAt(0),
              n =
                (s.charCodeAt(t ? 1 : 0),
                kt + Number.parseInt(s.substring(t ? 2 : 1)));
            if (t) c.shift(), cn(ln(), !1);
            else {
              const t = _d(e, c[0], n);
              c.unshift([]), cn(t, !0);
            }
          }
        }
        e.data[s] = { create: a, update: l };
      }
      function zd(e, t, n, s, i, r, o) {
        const a = xo(e, s, 1, null);
        let l = a << ud.SHIFT,
          c = ln();
        var u;
        t === c && (c = null),
          null === c && (l |= ud.APPEND_EAGERLY),
          o && ((l |= ud.COMMENT), (u = Md), void 0 === cr && (cr = u())),
          i.push(l, null === r ? "" : r);
        const d = bo(e, a, o ? 32 : 1, null === r ? "" : r, null);
        fd(n, d);
        const h = d.index;
        return (
          cn(d, !1),
          null !== c &&
            t !== c &&
            (function (e, t) {
              let n = e.insertBeforeIndex;
              null === n
                ? (jr(pd, md), (n = e.insertBeforeIndex = [null, t]))
                : (S(Array.isArray(n), !0, "Expecting array here"), n.push(t));
            })(c, h),
          d
        );
      }
      function Hd(e, t, n, s, i, r, o) {
        const a = o.match(Pd),
          l = zd(e, t, n, r, s, a ? null : o, !1);
        a && Gd(i, o, l.index);
      }
      function Gd(e, t, n, s, i = null) {
        const r = e.length,
          o = r + 1;
        e.push(null, null);
        const a = r + 2;
        const l = t.split(Pd);
        let c = 0;
        for (let u = 0; u < l.length; u++) {
          const t = l[u];
          if (1 & u) {
            const n = parseInt(t, 10);
            e.push(-1 - n), (c |= Ud(n));
          } else "" !== t && e.push(t);
        }
        return (
          e.push((n << 2) | (s ? 1 : 0)),
          s && e.push(s, i),
          (e[r] = c),
          (e[o] = e.length - a),
          c
        );
      }
      function Ud(e) {
        return 1 << Math.min(e, 31);
      }
      function $d(e) {
        let t,
          n,
          s = "",
          i = 0,
          r = !1;
        for (; null !== (t = Fd.exec(e)); )
          r
            ? t[0] === `\ufffd/*${n}\ufffd` && ((i = t.index), (r = !1))
            : ((s += e.substring(i, t.index + t[0].length)),
              (n = t[1]),
              (r = !0));
        return (s += e.substr(i)), s;
      }
      function qd(e, t, n, s, i, r) {
        let o = 0;
        const a = {
          type: i.type,
          currentCaseLViewIndex: xo(e, t, 1, null),
          anchorIdx: r,
          cases: [],
          create: [],
          remove: [],
          update: [],
        };
        !(function (e, t, n) {
          e.push(Ud(t.mainBinding), 2, -1 - t.mainBinding, (n << 2) | 2);
        })(n, i, r),
          (function (e, t, n) {
            const s = e.data[t];
            null === s ? (e.data[t] = n) : (s.value = n);
          })(e, r, a);
        const l = i.values;
        for (let c = 0; c < l.length; c++) {
          const r = l[c],
            u = [];
          for (let e = 0; e < r.length; e++) {
            const t = r[e];
            if ("string" != typeof t) {
              const n = u.push(t) - 1;
              r[e] = `\x3c!--\ufffd${n}\ufffd--\x3e`;
            }
          }
          o = Qd(e, a, t, n, s, i.cases[c], r.join(""), u) | o;
        }
        o &&
          (function (e, t, n) {
            e.push(t, 1, (n << 2) | 3);
          })(n, o, r);
      }
      function Wd(e) {
        const t = [],
          n = [];
        let s = 1,
          i = 0;
        const r = Yd(
          (e = e.replace(Nd, function (e, t, n) {
            return (
              (s = "select" === n ? 0 : 1), (i = parseInt(t.substr(1), 10)), ""
            );
          }))
        );
        for (let o = 0; o < r.length; ) {
          let e = r[o++].trim();
          1 === s && (e = e.replace(/\s*(?:=)?(\w+)\s*/, "$1")),
            e.length && t.push(e);
          const i = Yd(r[o++]);
          t.length > n.length && n.push(i);
        }
        return { type: s, mainBinding: i, cases: t, values: n };
      }
      function Yd(e) {
        if (!e) return [];
        let t = 0;
        const n = [],
          s = [],
          i = /[{}]/g;
        let r;
        for (i.lastIndex = 0; (r = i.exec(e)); ) {
          const i = r.index;
          if ("}" == r[0]) {
            if ((n.pop(), 0 == n.length)) {
              const n = e.substring(t, i);
              Nd.test(n) ? s.push(Wd(n)) : s.push(n), (t = i + 1);
            }
          } else {
            if (0 == n.length) {
              const n = e.substring(t, i);
              s.push(n), (t = i + 1);
            }
            n.push("{");
          }
        }
        const o = e.substring(t);
        return s.push(o), s;
      }
      function Qd(e, t, n, s, i, r, o, a) {
        const l = [],
          c = [],
          u = [];
        t.cases.push(r), t.create.push(l), t.remove.push(c), t.update.push(u);
        const d = ls(Et()).getInertBodyElement(o),
          h = Ns(d) || d;
        return h ? Kd(e, t, n, s, l, c, u, h, i, a, 0) : 0;
      }
      function Kd(e, t, n, s, i, r, o, a, l, c, u) {
        let d = 0,
          h = a.firstChild;
        for (; h; ) {
          const a = xo(e, n, 1, null);
          switch (h.nodeType) {
            case Node.ELEMENT_NODE:
              const p = h,
                m = p.tagName.toLowerCase();
              if (Cs.hasOwnProperty(m)) {
                Zd(i, ld, m, l, a), (e.data[a] = m);
                const f = p.attributes;
                for (let e = 0; e < f.length; e++) {
                  const t = f.item(e),
                    n = t.name.toLowerCase();
                  !!t.value.match(Pd)
                    ? Is.hasOwnProperty(n) &&
                      (Ss[n]
                        ? Gd(o, t.value, a, t.name, ps)
                        : Es[n]
                        ? Gd(o, t.value, a, t.name, ms)
                        : Gd(o, t.value, a, t.name))
                    : eh(i, a, t);
                }
                (d = Kd(e, t, n, s, i, r, o, h, a, c, u + 1) | d), Jd(r, a, u);
              }
              break;
            case Node.TEXT_NODE:
              const f = h.textContent || "",
                g = f.match(Pd);
              Zd(i, null, g ? "" : f, l, a),
                Jd(r, a, u),
                g && (d = Gd(o, f, a) | d);
              break;
            case Node.COMMENT_NODE:
              const y = jd.exec(h.textContent || "");
              if (y) {
                const t = parseInt(y[1], 10),
                  o = c[t];
                Zd(i, cd, "", l, a), qd(e, n, s, l, o, a), Xd(r, a, u);
              }
          }
          h = h.nextSibling;
        }
        return d;
      }
      function Jd(e, t, n) {
        0 === n && e.push(t);
      }
      function Xd(e, t, n) {
        0 === n && (e.push(~t), e.push(t));
      }
      function Zd(e, t, n, s, i) {
        null !== t && e.push(t), e.push(n, i, 0 | (s << 17) | (i << 1));
      }
      function eh(e, t, n) {
        e.push((t << 1) | 1, n.name, n.value);
      }
      const th = /\[(\ufffd.+?\ufffd?)\]/,
        nh = /\[(\ufffd.+?\ufffd?)\]|(\ufffd\/?\*\d+:\d+\ufffd)/g,
        sh = /({\s*)(VAR_(PLURAL|SELECT)(_\d+)?)(\s*,)/g,
        ih = /{([A-Z0-9_]+)}/g,
        rh = /\ufffdI18N_EXP_(ICU(_\d+)?)\ufffd/g,
        oh = /\/\*/,
        ah = /\d+\:(\d+)/;
      function lh(e, t, n = -1) {
        const s = sn(),
          i = nn(),
          r = kt + e,
          o = Qt(s.consts, t),
          a = ln();
        s.firstCreatePass && Bd(s, null === a ? 0 : a.index, i, r, o, n);
        const l = s.data[r],
          c = kr(s, a === i[6] ? null : a, i),
          u = a && 8 & a.type ? i[a.index] : null;
        !(function (e, t, n, s) {
          const i = e[11];
          for (let r = 0; r < t.length; r++) {
            const o = t[r++],
              a = t[r],
              l = (o & ud.COMMENT) === ud.COMMENT,
              c = (o & ud.APPEND_EAGERLY) === ud.APPEND_EAGERLY,
              u = o >>> ud.SHIFT;
            let d = e[u];
            null === d && (d = e[u] = l ? i.createComment(a) : gr(i, a)),
              c && null !== n && Or(i, n, d, s, !1);
          }
        })(i, l.create, c, u),
          bn(!0);
      }
      function ch() {
        bn(!1);
      }
      function uh(e, t, n) {
        lh(e, t, n), ch();
      }
      function dh(e, t) {
        const n = sn(),
          s = Qt(n.consts, t);
        !(function (e, t, n) {
          const s = on().index,
            i = [];
          if (e.firstCreatePass && null === e.data[t]) {
            for (let e = 0; e < n.length; e += 2) {
              const t = n[e],
                r = n[e + 1];
              if ("" !== r) {
                if (Rd.test(r))
                  throw new Error(
                    `ICU expressions are not supported in attributes. Message: "${r}".`
                  );
                Gd(i, r, s, t);
              }
            }
            e.data[t] = i;
          }
        })(n, e + kt, s);
      }
      function hh(e) {
        const t = nn();
        return tl(t, yn(), e) && (Ed |= 1 << Math.min(kd, 31)), kd++, hh;
      }
      function ph(e) {
        !(function (e, t, n) {
          if (kd > 0) {
            const s = e.data[n];
            Id(e, t, Array.isArray(s) ? s : s.update, fn() - kd - 1, Ed);
          }
          (Ed = 0), (kd = 0);
        })(sn(), nn(), e + kt);
      }
      function mh(e, t = {}) {
        return (function (e, t = {}) {
          let n = e;
          if (th.test(e)) {
            const e = {},
              t = [0];
            n = n.replace(nh, (n, s, i) => {
              const r = s || i,
                o = e[r] || [];
              if (
                (o.length ||
                  (r.split("|").forEach((e) => {
                    const t = e.match(ah),
                      n = t ? parseInt(t[1], 10) : 0,
                      s = oh.test(e);
                    o.push([n, s, e]);
                  }),
                  (e[r] = o)),
                !o.length)
              )
                throw new Error(
                  "i18n postprocess: unmatched placeholder - " + r
                );
              const a = t[t.length - 1];
              let l = 0;
              for (let e = 0; e < o.length; e++)
                if (o[e][0] === a) {
                  l = e;
                  break;
                }
              const [c, u, d] = o[l];
              return u ? t.pop() : a !== c && t.push(c), o.splice(l, 1), d;
            });
          }
          return Object.keys(t).length
            ? ((n = n.replace(sh, (e, n, s, i, r, o) =>
                t.hasOwnProperty(s) ? `${n}${t[s]}${o}` : e
              )),
              (n = n.replace(ih, (e, n) => (t.hasOwnProperty(n) ? t[n] : e))),
              (n = n.replace(rh, (e, n) => {
                if (t.hasOwnProperty(n)) {
                  const s = t[n];
                  if (!s.length)
                    throw new Error(
                      `i18n postprocess: unmatched ICU - ${e} with key: ${n}`
                    );
                  return s.shift();
                }
                return e;
              })),
              n)
            : n;
        })(e, t);
      }
      function fh(e, t, n, s, i) {
        if (((e = ie(e)), Array.isArray(e)))
          for (let r = 0; r < e.length; r++) fh(e[r], t, n, s, i);
        else {
          const r = sn(),
            o = nn();
          let a = Ca(e) ? e : ie(e.provide),
            l = xa(e);
          const c = on(),
            u = 1048575 & c.providerIndexes,
            d = c.directiveStart,
            h = c.providerIndexes >> 20;
          if (Ca(e) || !e.multi) {
            const s = new hi(l, i, tc),
              p = vh(a, t, i ? u : u + h, d);
            -1 === p
              ? (Ii(Si(c, o), r, a),
                gh(r, e, t.length),
                t.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                i && (c.providerIndexes += 1048576),
                n.push(s),
                o.push(s))
              : ((n[p] = s), (o[p] = s));
          } else {
            const p = vh(a, t, u + h, d),
              m = vh(a, t, u, u + h),
              f = p >= 0 && n[p],
              g = m >= 0 && n[m];
            if ((i && !g) || (!i && !f)) {
              Ii(Si(c, o), r, a);
              const u = (function (e, t, n, s, i) {
                const r = new hi(e, n, tc);
                return (
                  (r.multi = []),
                  (r.index = t),
                  (r.componentProviders = 0),
                  yh(r, i, s && !n),
                  r
                );
              })(i ? xh : bh, n.length, i, s, l);
              !i && g && (n[m].providerFactory = u),
                gh(r, e, t.length, 0),
                t.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                i && (c.providerIndexes += 1048576),
                n.push(u),
                o.push(u);
            } else {
              gh(r, e, p > -1 ? p : m, yh(n[i ? m : p], l, !i && s));
            }
            !i && s && g && n[m].componentProviders++;
          }
        }
      }
      function gh(e, t, n, s) {
        const i = Ca(t);
        if (i || t.useClass) {
          const r = (t.useClass || t).prototype.ngOnDestroy;
          if (r) {
            const o = e.destroyHooks || (e.destroyHooks = []);
            if (!i && t.multi) {
              const e = o.indexOf(n);
              -1 === e ? o.push(n, [s, r]) : o[e + 1].push(s, r);
            } else o.push(n, r);
          }
        }
      }
      function yh(e, t, n) {
        return n && e.componentProviders++, e.multi.push(t) - 1;
      }
      function vh(e, t, n, s) {
        for (let i = n; i < s; i++) if (t[i] === e) return i;
        return -1;
      }
      function bh(e, t, n, s) {
        return _h(this.multi, []);
      }
      function xh(e, t, n, s) {
        const i = this.multi;
        let r;
        if (this.providerFactory) {
          const e = this.providerFactory.componentProviders,
            t = Ni(n, n[1], this.providerFactory.index, s);
          (r = t.slice(0, e)), _h(i, r);
          for (let n = e; n < t.length; n++) r.push(t[n]);
        } else (r = []), _h(i, r);
        return r;
      }
      function _h(e, t) {
        for (let n = 0; n < e.length; n++) {
          const s = e[n];
          t.push(s());
        }
        return t;
      }
      function wh(e, t = []) {
        return (n) => {
          n.providersResolver = (n, s) =>
            (function (e, t, n) {
              const s = sn();
              if (s.firstCreatePass) {
                const i = Pt(e);
                fh(n, s.data, s.blueprint, i, !0),
                  fh(t, s.data, s.blueprint, i, !1);
              }
            })(n, s ? s(e) : e, t);
        };
      }
      class Ch {}
      class Sh {}
      function Eh(e) {
        const t = Error(
          `No component factory found for ${w(
            e
          )}. Did you add it to @NgModule.entryComponents?`
        );
        return (t[kh] = e), t;
      }
      const kh = "ngComponent";
      class Oh {}
      Oh.NULL = new (class {
        resolveComponentFactory(e) {
          throw Eh(e);
        }
      })();
      class Ih {
        constructor(e, t, n) {
          (this._parent = t),
            (this._ngModule = n),
            (this._factories = new Map());
          for (let s = 0; s < e.length; s++) {
            const t = e[s];
            this._factories.set(t.componentType, t);
          }
        }
        resolveComponentFactory(e) {
          let t = this._factories.get(e);
          if (
            (!t &&
              this._parent &&
              (t = this._parent.resolveComponentFactory(e)),
            !t)
          )
            throw Eh(e);
          return new Th(t, this._ngModule);
        }
      }
      class Th extends Sh {
        constructor(e, t) {
          super(),
            (this.factory = e),
            (this.ngModule = t),
            (this.selector = e.selector),
            (this.componentType = e.componentType),
            (this.ngContentSelectors = e.ngContentSelectors),
            (this.inputs = e.inputs),
            (this.outputs = e.outputs);
        }
        create(e, t, n, s) {
          return this.factory.create(e, t, n, s || this.ngModule);
        }
      }
      function Ah(...e) {}
      function Dh(e, t) {
        return new Ph(zt(e, t));
      }
      const Mh = function () {
        return Dh(on(), nn());
      };
      class Ph {
        constructor(e) {
          this.nativeElement = e;
        }
      }
      Ph.__NG_ELEMENT_ID__ = Mh;
      new L("Renderer2Interceptor");
      class Rh {}
      class jh {}
      jh.__NG_ELEMENT_ID__ = () => Nh();
      const Nh = function () {
        const e = nn(),
          t = Ut(on().index, e);
        return (function (e) {
          const t = e[11];
          0;
          return t;
        })(It(t) ? t : e);
      };
      class Fh {}
      Fh.ɵprov = T({ token: Fh, providedIn: "root", factory: () => null });
      class Lh {
        constructor(e) {
          (this.full = e),
            (this.major = e.split(".")[0]),
            (this.minor = e.split(".")[1]),
            (this.patch = e.split(".").slice(2).join("."));
        }
      }
      const Vh = new Lh("11.0.2");
      class Bh {
        constructor() {}
        supports(e) {
          return Ja(e);
        }
        create(e) {
          return new Hh(e);
        }
      }
      const zh = (e, t) => t;
      class Hh {
        constructor(e) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = e || zh);
        }
        forEachItem(e) {
          let t;
          for (t = this._itHead; null !== t; t = t._next) e(t);
        }
        forEachOperation(e) {
          let t = this._itHead,
            n = this._removalsHead,
            s = 0,
            i = null;
          for (; t || n; ) {
            const r = !n || (t && t.currentIndex < qh(n, s, i)) ? t : n,
              o = qh(r, s, i),
              a = r.currentIndex;
            if (r === n) s--, (n = n._nextRemoved);
            else if (((t = t._next), null == r.previousIndex)) s++;
            else {
              i || (i = []);
              const e = o - s,
                t = a - s;
              if (e != t) {
                for (let n = 0; n < e; n++) {
                  const s = n < i.length ? i[n] : (i[n] = 0),
                    r = s + n;
                  t <= r && r < e && (i[n] = s + 1);
                }
                i[r.previousIndex] = t - e;
              }
            }
            o !== a && e(r, o, a);
          }
        }
        forEachPreviousItem(e) {
          let t;
          for (t = this._previousItHead; null !== t; t = t._nextPrevious) e(t);
        }
        forEachAddedItem(e) {
          let t;
          for (t = this._additionsHead; null !== t; t = t._nextAdded) e(t);
        }
        forEachMovedItem(e) {
          let t;
          for (t = this._movesHead; null !== t; t = t._nextMoved) e(t);
        }
        forEachRemovedItem(e) {
          let t;
          for (t = this._removalsHead; null !== t; t = t._nextRemoved) e(t);
        }
        forEachIdentityChange(e) {
          let t;
          for (
            t = this._identityChangesHead;
            null !== t;
            t = t._nextIdentityChange
          )
            e(t);
        }
        diff(e) {
          if ((null == e && (e = []), !Ja(e)))
            throw new Error(
              `Error trying to diff '${w(
                e
              )}'. Only arrays and iterables are allowed`
            );
          return this.check(e) ? this : null;
        }
        onDestroy() {}
        check(e) {
          this._reset();
          let t,
            n,
            s,
            i = this._itHead,
            r = !1;
          if (Array.isArray(e)) {
            this.length = e.length;
            for (let t = 0; t < this.length; t++)
              (n = e[t]),
                (s = this._trackByFn(t, n)),
                null !== i && Object.is(i.trackById, s)
                  ? (r && (i = this._verifyReinsertion(i, n, s, t)),
                    Object.is(i.item, n) || this._addIdentityChange(i, n))
                  : ((i = this._mismatch(i, n, s, t)), (r = !0)),
                (i = i._next);
          } else
            (t = 0),
              (function (e, t) {
                if (Array.isArray(e))
                  for (let n = 0; n < e.length; n++) t(e[n]);
                else {
                  const n = e[Ya()]();
                  let s;
                  for (; !(s = n.next()).done; ) t(s.value);
                }
              })(e, (e) => {
                (s = this._trackByFn(t, e)),
                  null !== i && Object.is(i.trackById, s)
                    ? (r && (i = this._verifyReinsertion(i, e, s, t)),
                      Object.is(i.item, e) || this._addIdentityChange(i, e))
                    : ((i = this._mismatch(i, e, s, t)), (r = !0)),
                  (i = i._next),
                  t++;
              }),
              (this.length = t);
          return this._truncate(i), (this.collection = e), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let e;
            for (
              e = this._previousItHead = this._itHead;
              null !== e;
              e = e._next
            )
              e._nextPrevious = e._next;
            for (e = this._additionsHead; null !== e; e = e._nextAdded)
              e.previousIndex = e.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                e = this._movesHead;
              null !== e;
              e = e._nextMoved
            )
              e.previousIndex = e.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(e, t, n, s) {
          let i;
          return (
            null === e ? (i = this._itTail) : ((i = e._prev), this._remove(e)),
            null !==
            (e =
              null === this._linkedRecords
                ? null
                : this._linkedRecords.get(n, s))
              ? (Object.is(e.item, t) || this._addIdentityChange(e, t),
                this._moveAfter(e, i, s))
              : null !==
                (e =
                  null === this._unlinkedRecords
                    ? null
                    : this._unlinkedRecords.get(n, null))
              ? (Object.is(e.item, t) || this._addIdentityChange(e, t),
                this._reinsertAfter(e, i, s))
              : (e = this._addAfter(new Gh(t, n), i, s)),
            e
          );
        }
        _verifyReinsertion(e, t, n, s) {
          let i =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(n, null);
          return (
            null !== i
              ? (e = this._reinsertAfter(i, e._prev, s))
              : e.currentIndex != s &&
                ((e.currentIndex = s), this._addToMoves(e, s)),
            e
          );
        }
        _truncate(e) {
          for (; null !== e; ) {
            const t = e._next;
            this._addToRemovals(this._unlink(e)), (e = t);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(e, t, n) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(e);
          const s = e._prevRemoved,
            i = e._nextRemoved;
          return (
            null === s ? (this._removalsHead = i) : (s._nextRemoved = i),
            null === i ? (this._removalsTail = s) : (i._prevRemoved = s),
            this._insertAfter(e, t, n),
            this._addToMoves(e, n),
            e
          );
        }
        _moveAfter(e, t, n) {
          return (
            this._unlink(e),
            this._insertAfter(e, t, n),
            this._addToMoves(e, n),
            e
          );
        }
        _addAfter(e, t, n) {
          return (
            this._insertAfter(e, t, n),
            null === this._additionsTail
              ? (this._additionsTail = this._additionsHead = e)
              : (this._additionsTail = this._additionsTail._nextAdded = e),
            e
          );
        }
        _insertAfter(e, t, n) {
          const s = null === t ? this._itHead : t._next;
          return (
            (e._next = s),
            (e._prev = t),
            null === s ? (this._itTail = e) : (s._prev = e),
            null === t ? (this._itHead = e) : (t._next = e),
            null === this._linkedRecords && (this._linkedRecords = new $h()),
            this._linkedRecords.put(e),
            (e.currentIndex = n),
            e
          );
        }
        _remove(e) {
          return this._addToRemovals(this._unlink(e));
        }
        _unlink(e) {
          null !== this._linkedRecords && this._linkedRecords.remove(e);
          const t = e._prev,
            n = e._next;
          return (
            null === t ? (this._itHead = n) : (t._next = n),
            null === n ? (this._itTail = t) : (n._prev = t),
            e
          );
        }
        _addToMoves(e, t) {
          return (
            e.previousIndex === t ||
              (null === this._movesTail
                ? (this._movesTail = this._movesHead = e)
                : (this._movesTail = this._movesTail._nextMoved = e)),
            e
          );
        }
        _addToRemovals(e) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new $h()),
            this._unlinkedRecords.put(e),
            (e.currentIndex = null),
            (e._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = e),
                (e._prevRemoved = null))
              : ((e._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = e)),
            e
          );
        }
        _addIdentityChange(e, t) {
          return (
            (e.item = t),
            null === this._identityChangesTail
              ? (this._identityChangesTail = this._identityChangesHead = e)
              : (this._identityChangesTail =
                  this._identityChangesTail._nextIdentityChange =
                    e),
            e
          );
        }
      }
      class Gh {
        constructor(e, t) {
          (this.item = e),
            (this.trackById = t),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class Uh {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(e) {
          null === this._head
            ? ((this._head = this._tail = e),
              (e._nextDup = null),
              (e._prevDup = null))
            : ((this._tail._nextDup = e),
              (e._prevDup = this._tail),
              (e._nextDup = null),
              (this._tail = e));
        }
        get(e, t) {
          let n;
          for (n = this._head; null !== n; n = n._nextDup)
            if (
              (null === t || t <= n.currentIndex) &&
              Object.is(n.trackById, e)
            )
              return n;
          return null;
        }
        remove(e) {
          const t = e._prevDup,
            n = e._nextDup;
          return (
            null === t ? (this._head = n) : (t._nextDup = n),
            null === n ? (this._tail = t) : (n._prevDup = t),
            null === this._head
          );
        }
      }
      class $h {
        constructor() {
          this.map = new Map();
        }
        put(e) {
          const t = e.trackById;
          let n = this.map.get(t);
          n || ((n = new Uh()), this.map.set(t, n)), n.add(e);
        }
        get(e, t) {
          const n = e,
            s = this.map.get(n);
          return s ? s.get(e, t) : null;
        }
        remove(e) {
          const t = e.trackById;
          return this.map.get(t).remove(e) && this.map.delete(t), e;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function qh(e, t, n) {
        const s = e.previousIndex;
        if (null === s) return s;
        let i = 0;
        return n && s < n.length && (i = n[s]), s + t + i;
      }
      class Wh {
        constructor() {}
        supports(e) {
          return e instanceof Map || Xa(e);
        }
        create() {
          return new Yh();
        }
      }
      class Yh {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(e) {
          let t;
          for (t = this._mapHead; null !== t; t = t._next) e(t);
        }
        forEachPreviousItem(e) {
          let t;
          for (t = this._previousMapHead; null !== t; t = t._nextPrevious) e(t);
        }
        forEachChangedItem(e) {
          let t;
          for (t = this._changesHead; null !== t; t = t._nextChanged) e(t);
        }
        forEachAddedItem(e) {
          let t;
          for (t = this._additionsHead; null !== t; t = t._nextAdded) e(t);
        }
        forEachRemovedItem(e) {
          let t;
          for (t = this._removalsHead; null !== t; t = t._nextRemoved) e(t);
        }
        diff(e) {
          if (e) {
            if (!(e instanceof Map || Xa(e)))
              throw new Error(
                `Error trying to diff '${w(
                  e
                )}'. Only maps and objects are allowed`
              );
          } else e = new Map();
          return this.check(e) ? this : null;
        }
        onDestroy() {}
        check(e) {
          this._reset();
          let t = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(e, (e, n) => {
              if (t && t.key === n)
                this._maybeAddToChanges(t, e),
                  (this._appendAfter = t),
                  (t = t._next);
              else {
                const s = this._getOrCreateRecordForKey(n, e);
                t = this._insertBeforeOrAppend(t, s);
              }
            }),
            t)
          ) {
            t._prev && (t._prev._next = null), (this._removalsHead = t);
            for (let e = t; null !== e; e = e._nextRemoved)
              e === this._mapHead && (this._mapHead = null),
                this._records.delete(e.key),
                (e._nextRemoved = e._next),
                (e.previousValue = e.currentValue),
                (e.currentValue = null),
                (e._prev = null),
                (e._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(e, t) {
          if (e) {
            const n = e._prev;
            return (
              (t._next = e),
              (t._prev = n),
              (e._prev = t),
              n && (n._next = t),
              e === this._mapHead && (this._mapHead = t),
              (this._appendAfter = e),
              e
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = t), (t._prev = this._appendAfter))
              : (this._mapHead = t),
            (this._appendAfter = t),
            null
          );
        }
        _getOrCreateRecordForKey(e, t) {
          if (this._records.has(e)) {
            const n = this._records.get(e);
            this._maybeAddToChanges(n, t);
            const s = n._prev,
              i = n._next;
            return (
              s && (s._next = i),
              i && (i._prev = s),
              (n._next = null),
              (n._prev = null),
              n
            );
          }
          const n = new Qh(e);
          return (
            this._records.set(e, n),
            (n.currentValue = t),
            this._addToAdditions(n),
            n
          );
        }
        _reset() {
          if (this.isDirty) {
            let e;
            for (
              this._previousMapHead = this._mapHead, e = this._previousMapHead;
              null !== e;
              e = e._next
            )
              e._nextPrevious = e._next;
            for (e = this._changesHead; null !== e; e = e._nextChanged)
              e.previousValue = e.currentValue;
            for (e = this._additionsHead; null != e; e = e._nextAdded)
              e.previousValue = e.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(e, t) {
          Object.is(t, e.currentValue) ||
            ((e.previousValue = e.currentValue),
            (e.currentValue = t),
            this._addToChanges(e));
        }
        _addToAdditions(e) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = e)
            : ((this._additionsTail._nextAdded = e), (this._additionsTail = e));
        }
        _addToChanges(e) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = e)
            : ((this._changesTail._nextChanged = e), (this._changesTail = e));
        }
        _forEach(e, t) {
          e instanceof Map
            ? e.forEach(t)
            : Object.keys(e).forEach((n) => t(e[n], n));
        }
      }
      class Qh {
        constructor(e) {
          (this.key = e),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      class Kh {
        constructor(e) {
          this.factories = e;
        }
        static create(e, t) {
          if (null != t) {
            const n = t.factories.slice();
            e = e.concat(n);
          }
          return new Kh(e);
        }
        static extend(e) {
          return {
            provide: Kh,
            useFactory: (t) => {
              if (!t)
                throw new Error(
                  "Cannot extend IterableDiffers without a parent injector"
                );
              return Kh.create(e, t);
            },
            deps: [[Kh, new b(), new y()]],
          };
        }
        find(e) {
          const t = this.factories.find((t) => t.supports(e));
          if (null != t) return t;
          throw new Error(
            `Cannot find a differ supporting object '${e}' of type '${
              ((n = e), n.name || typeof n)
            }'`
          );
          var n;
        }
      }
      Kh.ɵprov = T({
        token: Kh,
        providedIn: "root",
        factory: () => new Kh([new Bh()]),
      });
      class Jh {
        constructor(e) {
          this.factories = e;
        }
        static create(e, t) {
          if (t) {
            const n = t.factories.slice();
            e = e.concat(n);
          }
          return new Jh(e);
        }
        static extend(e) {
          return {
            provide: Jh,
            useFactory: (t) => {
              if (!t)
                throw new Error(
                  "Cannot extend KeyValueDiffers without a parent injector"
                );
              return Jh.create(e, t);
            },
            deps: [[Jh, new b(), new y()]],
          };
        }
        find(e) {
          const t = this.factories.find((t) => t.supports(e));
          if (t) return t;
          throw new Error(`Cannot find a differ supporting object '${e}'`);
        }
      }
      function Xh(e, t, n, s, i = !1) {
        for (; null !== n; ) {
          const r = t[n.index];
          if ((null !== r && s.push(Vt(r)), Tt(r)))
            for (let e = Ot; e < r.length; e++) {
              const t = r[e],
                n = t[1].firstChild;
              null !== n && Xh(t[1], t, n, s);
            }
          const o = n.type;
          if (8 & o) Xh(e, t, n.child, s);
          else if (32 & o) {
            const e = ur(n, t);
            let i;
            for (; (i = e()); ) s.push(i);
          } else if (16 & o) {
            const e = t[16],
              i = e[6],
              r = n.projection,
              o = i.projection[r];
            if (Array.isArray(o)) s.push(...o);
            else {
              const t = dr(e);
              Xh(t[1], t, o, s, !0);
            }
          }
          n = i ? n.projectionNext : n.next;
        }
        return s;
      }
      Jh.ɵprov = T({
        token: Jh,
        providedIn: "root",
        factory: () => new Jh([new Wh()]),
      });
      class Zh {
        constructor(e, t) {
          (this._lView = e),
            (this._cdRefInjectingView = t),
            (this._appRef = null),
            (this._viewContainerRef = null);
        }
        get rootNodes() {
          const e = this._lView,
            t = e[1];
          return Xh(t, e, t.firstChild, []);
        }
        get context() {
          return this._lView[8];
        }
        get destroyed() {
          return 256 == (256 & this._lView[2]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._viewContainerRef) {
            const e = this._viewContainerRef.indexOf(this);
            e > -1 && this._viewContainerRef.detach(e),
              (this._viewContainerRef = null);
          }
          Cr(this._lView[1], this._lView);
        }
        onDestroy(e) {
          Do(this._lView[1], this._lView, null, e);
        }
        markForCheck() {
          Jo(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[2] &= -129;
        }
        reattach() {
          this._lView[2] |= 128;
        }
        detectChanges() {
          Zo(this._lView[1], this._lView, this.context);
        }
        checkNoChanges() {
          !(function (e, t, n) {
            pn(!0);
            try {
              Zo(e, t, n);
            } finally {
              pn(!1);
            }
          })(this._lView[1], this._lView, this.context);
        }
        attachToViewContainerRef(e) {
          if (this._appRef)
            throw new Error(
              "This view is already attached directly to the ApplicationRef!"
            );
          this._viewContainerRef = e;
        }
        detachFromAppRef() {
          var e, t;
          (this._appRef = null),
            (e = this._lView[1]),
            (t = this._lView),
            zr(e, t, t[11], 2, null, null);
        }
        attachToAppRef(e) {
          if (this._viewContainerRef)
            throw new Error(
              "This view is already attached to a ViewContainer!"
            );
          this._appRef = e;
        }
      }
      class ep extends Zh {
        constructor(e) {
          super(e), (this._view = e);
        }
        detectChanges() {
          ea(this._view);
        }
        checkNoChanges() {
          !(function (e) {
            pn(!0);
            try {
              ea(e);
            } finally {
              pn(!1);
            }
          })(this._view);
        }
        get context() {
          return null;
        }
      }
      const tp = sp;
      class np {}
      function sp(e = !1) {
        return (function (e, t, n) {
          if (!n && Dt(e)) {
            const n = Ut(e.index, t);
            return new Zh(n, n);
          }
          if (47 & e.type) {
            const e = t[16];
            return new Zh(e, t);
          }
          return null;
        })(on(), nn(), e);
      }
      (np.__NG_ELEMENT_ID__ = tp), (np.__ChangeDetectorRef__ = !0);
      const ip = [new Wh()],
        rp = [new Bh()],
        op = new Kh(rp),
        ap = new Jh(ip),
        lp = function () {
          return hp(on(), nn());
        };
      class cp {}
      cp.__NG_ELEMENT_ID__ = lp;
      const up = cp,
        dp = class extends up {
          constructor(e, t, n) {
            super(),
              (this._declarationLView = e),
              (this._declarationTContainer = t),
              (this.elementRef = n);
          }
          createEmbeddedView(e) {
            const t = this._declarationTContainer.tViews,
              n = yo(
                this._declarationLView,
                t,
                e,
                16,
                null,
                t.declTNode,
                null,
                null,
                null,
                null
              ),
              s = this._declarationLView[this._declarationTContainer.index];
            n[17] = s;
            const i = this._declarationLView[19];
            return (
              null !== i && (n[19] = i.createEmbeddedView(t)),
              _o(t, n, e),
              new Zh(n)
            );
          }
        };
      function hp(e, t) {
        return 4 & e.type ? new dp(t, e, Dh(e, t)) : null;
      }
      class pp {}
      class mp {}
      const fp = function () {
        return _p(on(), nn());
      };
      class gp {}
      gp.__NG_ELEMENT_ID__ = fp;
      const yp = gp,
        vp = class extends yp {
          constructor(e, t, n) {
            super(),
              (this._lContainer = e),
              (this._hostTNode = t),
              (this._hostLView = n);
          }
          get element() {
            return Dh(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new Vi(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const e = Oi(this._hostTNode, this._hostLView);
            if (vi(e)) {
              const t = xi(e, this._hostLView),
                n = bi(e),
                s = t[1].data[n + 8];
              return new Vi(s, t);
            }
            return new Vi(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(e) {
            const t = bp(this._lContainer);
            return (null !== t && t[e]) || null;
          }
          get length() {
            return this._lContainer.length - Ot;
          }
          createEmbeddedView(e, t, n) {
            const s = e.createEmbeddedView(t || {});
            return this.insert(s, n), s;
          }
          createComponent(e, t, n, s, i) {
            const r = n || this.parentInjector;
            if (!i && null == e.ngModule && r) {
              const e = r.get(pp, null);
              e && (i = e);
            }
            const o = e.create(r, s, void 0, i);
            return this.insert(o.hostView, t), o;
          }
          insert(e, t) {
            const n = e._lView,
              s = n[1];
            if (Tt(n[3])) {
              const t = this.indexOf(e);
              if (-1 !== t) this.detach(t);
              else {
                const t = n[3],
                  s = new vp(t, t[6], t[3]);
                s.detach(s.indexOf(e));
              }
            }
            const i = this._adjustIndex(t),
              r = this._lContainer;
            xr(s, n, r, i);
            const o = Lr(i, r),
              a = n[11],
              l = Ar(a, r[7]);
            return (
              null !== l &&
                (function (e, t, n, s, i, r) {
                  (s[0] = i), (s[6] = t), zr(e, s, n, 1, i, r);
                })(s, r[6], a, n, l, o),
              e.attachToViewContainerRef(this),
              ue(xp(r), i, e),
              e
            );
          }
          move(e, t) {
            return this.insert(e, t);
          }
          indexOf(e) {
            const t = bp(this._lContainer);
            return null !== t ? t.indexOf(e) : -1;
          }
          remove(e) {
            const t = this._adjustIndex(e, -1),
              n = wr(this._lContainer, t);
            n && (de(xp(this._lContainer), t), Cr(n[1], n));
          }
          detach(e) {
            const t = this._adjustIndex(e, -1),
              n = wr(this._lContainer, t);
            return n && null != de(xp(this._lContainer), t) ? new Zh(n) : null;
          }
          _adjustIndex(e, t = 0) {
            return null == e ? this.length + t : e;
          }
        };
      function bp(e) {
        return e[8];
      }
      function xp(e) {
        return e[8] || (e[8] = []);
      }
      function _p(e, t) {
        let n;
        const s = t[e.index];
        if (Tt(s)) n = s;
        else {
          let i;
          if (8 & e.type) i = Vt(s);
          else {
            const n = t[11];
            i = n.createComment("");
            const s = zt(e, t);
            Or(
              n,
              Ar(n, s),
              i,
              (function (e, t) {
                return Ft(e) ? e.nextSibling(t) : t.nextSibling;
              })(n, s),
              !1
            );
          }
          (t[e.index] = n = qo(s, t, i, e)), Ko(t, n);
        }
        return new vp(n, e, t);
      }
      function wp(e, t, n, s) {
        let i = `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${t}'. Current value: '${n}'.`;
        return (
          s &&
            (i +=
              " It seems like the view has been created after its parent and its children have been dirty checked. Has it been created in a change detection hook ?"),
          (function (e, t) {
            const n = new Error(e);
            return Cp(n, t), n;
          })(i, e)
        );
      }
      function Cp(e, t) {
        (e.ngDebugContext = t), (e.ngErrorLogger = t.logError.bind(t));
      }
      function Sp(e) {
        return new Error(
          "ViewDestroyedError: Attempt to use a destroyed view: " + e
        );
      }
      function Ep(e, t, n) {
        const s = e.state,
          i = 1792 & s;
        return i === t
          ? ((e.state = (-1793 & s) | n), (e.initIndex = -1), !0)
          : i === n;
      }
      function kp(e, t, n) {
        return (
          (1792 & e.state) === t &&
          e.initIndex <= n &&
          ((e.initIndex = n + 1), !0)
        );
      }
      function Op(e, t) {
        return e.nodes[t];
      }
      function Ip(e, t) {
        return e.nodes[t];
      }
      function Tp(e, t) {
        return e.nodes[t];
      }
      function Ap(e, t) {
        return e.nodes[t];
      }
      function Dp(e, t) {
        return e.nodes[t];
      }
      const Mp = {
          setCurrentNode: void 0,
          createRootView: void 0,
          createEmbeddedView: void 0,
          createComponentView: void 0,
          createNgModuleRef: void 0,
          overrideProvider: void 0,
          overrideComponentView: void 0,
          clearOverrides: void 0,
          checkAndUpdateView: void 0,
          checkNoChangesView: void 0,
          destroyView: void 0,
          resolveDep: void 0,
          createDebugContext: void 0,
          handleEvent: void 0,
          updateDirectives: void 0,
          updateRenderer: void 0,
          dirtyParentQueries: void 0,
        },
        Pp = () => {},
        Rp = new Map();
      function jp(e) {
        let t = Rp.get(e);
        return t || ((t = w(e) + "_" + Rp.size), Rp.set(e, t)), t;
      }
      function Np(e, t, n, s) {
        if (Ka.isWrapped(s)) {
          s = Ka.unwrap(s);
          const i = e.def.nodes[t].bindingIndex + n,
            r = Ka.unwrap(e.oldValues[i]);
          e.oldValues[i] = new Ka(r);
        }
        return s;
      }
      const Fp = "$$undefined",
        Lp = "$$empty";
      function Vp(e) {
        return {
          id: Fp,
          styles: e.styles,
          encapsulation: e.encapsulation,
          data: e.data,
        };
      }
      let Bp = 0;
      function zp(e, t, n, s) {
        const i = e.oldValues;
        return !(!(2 & e.state) && Object.is(i[t.bindingIndex + n], s));
      }
      function Hp(e, t, n, s) {
        return !!zp(e, t, n, s) && ((e.oldValues[t.bindingIndex + n] = s), !0);
      }
      function Gp(e, t, n, s) {
        const i = e.oldValues[t.bindingIndex + n];
        if (1 & e.state || !Qa(i, s)) {
          const r = t.bindings[n].name;
          throw wp(
            Mp.createDebugContext(e, t.nodeIndex),
            `${r}: ${i}`,
            `${r}: ${s}`,
            0 != (1 & e.state)
          );
        }
      }
      function Up(e) {
        let t = e;
        for (; t; )
          2 & t.def.flags && (t.state |= 8),
            (t = t.viewContainerParent || t.parent);
      }
      function $p(e, t) {
        let n = e;
        for (; n && n !== t; )
          (n.state |= 64), (n = n.viewContainerParent || n.parent);
      }
      function qp(e, t, n, s) {
        try {
          const i = e.def.nodes[t];
          return (
            Up(33554432 & i.flags ? Ip(e, t).componentView : e),
            Mp.handleEvent(e, t, n, s)
          );
        } catch (i) {
          e.root.errorHandler.handleError(i);
        }
      }
      function Wp(e) {
        if (e.parent) {
          return Ip(e.parent, e.parentNodeDef.nodeIndex);
        }
        return null;
      }
      function Yp(e) {
        return e.parent ? e.parentNodeDef.parent : null;
      }
      function Qp(e, t) {
        switch (201347067 & t.flags) {
          case 1:
            return Ip(e, t.nodeIndex).renderElement;
          case 2:
            return Op(e, t.nodeIndex).renderText;
        }
      }
      function Kp(e) {
        return !!e.parent && !!(32768 & e.parentNodeDef.flags);
      }
      function Jp(e) {
        return !(!e.parent || 32768 & e.parentNodeDef.flags);
      }
      function Xp(e) {
        return 1 << e % 32;
      }
      function Zp(e) {
        const t = {};
        let n = 0;
        const s = {};
        return (
          e &&
            e.forEach(([e, i]) => {
              "number" == typeof e ? ((t[e] = i), (n |= Xp(e))) : (s[e] = i);
            }),
          { matchedQueries: t, references: s, matchedQueryIds: n }
        );
      }
      function em(e, t) {
        return e.map((e) => {
          let n, s;
          return (
            Array.isArray(e) ? ([s, n] = e) : ((s = 0), (n = e)),
            n &&
              ("function" == typeof n || "object" == typeof n) &&
              t &&
              Object.defineProperty(n, ht, { value: t, configurable: !0 }),
            { flags: s, token: n, tokenKey: jp(n) }
          );
        });
      }
      function tm(e, t, n) {
        let s = n.renderParent;
        return s
          ? 0 == (1 & s.flags) ||
            0 == (33554432 & s.flags) ||
            (s.element.componentRendererType &&
              (s.element.componentRendererType.encapsulation === Pe.ShadowDom ||
                1 === s.element.componentRendererType.encapsulation))
            ? Ip(e, n.renderParent.nodeIndex).renderElement
            : void 0
          : t;
      }
      const nm = new WeakMap();
      function sm(e) {
        let t = nm.get(e);
        return t || ((t = e(() => Pp)), (t.factory = e), nm.set(e, t)), t;
      }
      function im(e, t, n, s, i) {
        3 === t && (n = e.renderer.parentNode(Qp(e, e.def.lastRenderRootNode))),
          rm(e, t, 0, e.def.nodes.length - 1, n, s, i);
      }
      function rm(e, t, n, s, i, r, o) {
        for (let a = n; a <= s; a++) {
          const n = e.def.nodes[a];
          11 & n.flags && am(e, n, t, i, r, o), (a += n.childCount);
        }
      }
      function om(e, t, n, s, i, r) {
        let o = e;
        for (; o && !Kp(o); ) o = o.parent;
        const a = o.parent,
          l = Yp(o),
          c = l.nodeIndex + 1,
          u = l.nodeIndex + l.childCount;
        for (let d = c; d <= u; d++) {
          const e = a.def.nodes[d];
          e.ngContentIndex === t && am(a, e, n, s, i, r), (d += e.childCount);
        }
        if (!a.parent) {
          const o = e.root.projectableNodes[t];
          if (o) for (let t = 0; t < o.length; t++) lm(e, o[t], n, s, i, r);
        }
      }
      function am(e, t, n, s, i, r) {
        if (8 & t.flags) om(e, t.ngContent.index, n, s, i, r);
        else {
          const o = Qp(e, t);
          if (3 === n && 33554432 & t.flags && 48 & t.bindingFlags) {
            if (
              (16 & t.bindingFlags && lm(e, o, n, s, i, r), 32 & t.bindingFlags)
            ) {
              lm(Ip(e, t.nodeIndex).componentView, o, n, s, i, r);
            }
          } else lm(e, o, n, s, i, r);
          if (16777216 & t.flags) {
            const o = Ip(e, t.nodeIndex).viewContainer._embeddedViews;
            for (let e = 0; e < o.length; e++) im(o[e], n, s, i, r);
          }
          1 & t.flags &&
            !t.element.name &&
            rm(e, n, t.nodeIndex + 1, t.nodeIndex + t.childCount, s, i, r);
        }
      }
      function lm(e, t, n, s, i, r) {
        const o = e.renderer;
        switch (n) {
          case 1:
            o.appendChild(s, t);
            break;
          case 2:
            o.insertBefore(s, t, i);
            break;
          case 3:
            o.removeChild(s, t);
            break;
          case 0:
            r.push(t);
        }
      }
      const cm = /^:([^:]+):(.+)$/;
      function um(e) {
        if (":" === e[0]) {
          const t = e.match(cm);
          return [t[1], t[2]];
        }
        return ["", e];
      }
      function dm(e) {
        let t = 0;
        for (let n = 0; n < e.length; n++) t |= e[n].flags;
        return t;
      }
      function hm(e, t) {
        let n = "";
        for (let s = 0; s < 2 * e; s += 2) n = n + t[s] + mm(t[s + 1]);
        return n + t[2 * e];
      }
      function pm(e, t, n, s, i, r, o, a, l, c, u, d, h, p, m, f, g, y, v, b) {
        switch (e) {
          case 1:
            return t + mm(n) + s;
          case 2:
            return t + mm(n) + s + mm(i) + r;
          case 3:
            return t + mm(n) + s + mm(i) + r + mm(o) + a;
          case 4:
            return t + mm(n) + s + mm(i) + r + mm(o) + a + mm(l) + c;
          case 5:
            return (
              t + mm(n) + s + mm(i) + r + mm(o) + a + mm(l) + c + mm(u) + d
            );
          case 6:
            return (
              t +
              mm(n) +
              s +
              mm(i) +
              r +
              mm(o) +
              a +
              mm(l) +
              c +
              mm(u) +
              d +
              mm(h) +
              p
            );
          case 7:
            return (
              t +
              mm(n) +
              s +
              mm(i) +
              r +
              mm(o) +
              a +
              mm(l) +
              c +
              mm(u) +
              d +
              mm(h) +
              p +
              mm(m) +
              f
            );
          case 8:
            return (
              t +
              mm(n) +
              s +
              mm(i) +
              r +
              mm(o) +
              a +
              mm(l) +
              c +
              mm(u) +
              d +
              mm(h) +
              p +
              mm(m) +
              f +
              mm(g) +
              y
            );
          case 9:
            return (
              t +
              mm(n) +
              s +
              mm(i) +
              r +
              mm(o) +
              a +
              mm(l) +
              c +
              mm(u) +
              d +
              mm(h) +
              p +
              mm(m) +
              f +
              mm(g) +
              y +
              mm(v) +
              b
            );
          default:
            throw new Error("Does not support more than 9 expressions");
        }
      }
      function mm(e) {
        return null != e ? e.toString() : "";
      }
      const fm = [],
        gm = {},
        ym = {},
        vm = jp(Ea),
        bm = jp(ca),
        xm = jp(pp);
      function _m(e, t, n, s) {
        n = ie(n);
        return { index: -1, deps: em(s, w(t)), flags: e, token: t, value: n };
      }
      function wm(e) {
        const t = {},
          n = [];
        let s = null;
        for (let i = 0; i < e.length; i++) {
          const r = e[i];
          r.token === da && (s = r.value),
            1073741824 & r.flags && n.push(r.token),
            (r.index = i),
            (t[jp(r.token)] = r);
        }
        return {
          factory: null,
          providersByKey: t,
          providers: e,
          modules: n,
          scope: s,
        };
      }
      function Cm(e, t, n = Ea.THROW_IF_NOT_FOUND) {
        const s = ft(e);
        try {
          if (8 & t.flags) return t.token;
          if ((2 & t.flags && (n = null), 1 & t.flags))
            return e._parent.get(t.token, n);
          const i = t.tokenKey;
          switch (i) {
            case vm:
            case bm:
            case xm:
              return e;
          }
          const r = e._def.providersByKey[i];
          let o;
          if (r) {
            let t = e._providers[r.index];
            return (
              void 0 === t && (t = e._providers[r.index] = Sm(e, r)),
              t === ym ? void 0 : t
            );
          }
          if (
            (o = D(t.token)) &&
            (function (e, t) {
              const n = t.providedIn;
              return (
                null != n &&
                ("any" === n ||
                  n === e._def.scope ||
                  (function (e, t) {
                    return e._def.modules.indexOf(t) > -1;
                  })(e, n))
              );
            })(e, o)
          ) {
            const n = e._providers.length;
            return (
              (e._def.providers[n] = e._def.providersByKey[t.tokenKey] =
                {
                  flags: 5120,
                  value: o.factory,
                  deps: [],
                  index: n,
                  token: t.token,
                }),
              (e._providers[n] = ym),
              (e._providers[n] = Sm(e, e._def.providersByKey[t.tokenKey]))
            );
          }
          return 4 & t.flags ? n : e._parent.get(t.token, n);
        } finally {
          ft(s);
        }
      }
      function Sm(e, t) {
        let n;
        switch (201347067 & t.flags) {
          case 512:
            n = (function (e, t, n) {
              const s = n.length;
              switch (s) {
                case 0:
                  return new t();
                case 1:
                  return new t(Cm(e, n[0]));
                case 2:
                  return new t(Cm(e, n[0]), Cm(e, n[1]));
                case 3:
                  return new t(Cm(e, n[0]), Cm(e, n[1]), Cm(e, n[2]));
                default:
                  const i = [];
                  for (let t = 0; t < s; t++) i[t] = Cm(e, n[t]);
                  return new t(...i);
              }
            })(e, t.value, t.deps);
            break;
          case 1024:
            n = (function (e, t, n) {
              const s = n.length;
              switch (s) {
                case 0:
                  return t();
                case 1:
                  return t(Cm(e, n[0]));
                case 2:
                  return t(Cm(e, n[0]), Cm(e, n[1]));
                case 3:
                  return t(Cm(e, n[0]), Cm(e, n[1]), Cm(e, n[2]));
                default:
                  const i = [];
                  for (let t = 0; t < s; t++) i[t] = Cm(e, n[t]);
                  return t(...i);
              }
            })(e, t.value, t.deps);
            break;
          case 2048:
            n = Cm(e, t.deps[0]);
            break;
          case 256:
            n = t.value;
        }
        return (
          n === ym ||
            null === n ||
            "object" != typeof n ||
            131072 & t.flags ||
            "function" != typeof n.ngOnDestroy ||
            (t.flags |= 131072),
          void 0 === n ? ym : n
        );
      }
      function Em(e, t, n, s) {
        let i = t.viewContainer._embeddedViews;
        null == n && (n = i.length),
          (s.viewContainerParent = e),
          ue(i, n, s),
          (function (e, t) {
            const n = Wp(t);
            if (!n || n === e || 16 & t.state) return;
            t.state |= 16;
            let s = n.template._projectedViews;
            s || (s = n.template._projectedViews = []);
            s.push(t),
              (function (e, t) {
                if (4 & t.flags) return;
                (e.nodeFlags |= 4), (t.flags |= 4);
                let n = t.parent;
                for (; n; ) (n.childFlags |= 4), (n = n.parent);
              })(t.parent.def, t.parentNodeDef);
          })(t, s),
          Mp.dirtyParentQueries(s);
        Om(t, n > 0 ? i[n - 1] : null, s);
      }
      function km(e, t) {
        const n = e.viewContainer._embeddedViews;
        if (((null == t || t >= n.length) && (t = n.length - 1), t < 0))
          return null;
        const s = n[t];
        return (
          (s.viewContainerParent = null),
          de(n, t),
          Mp.dirtyParentQueries(s),
          Im(s),
          s
        );
      }
      function Om(e, t, n) {
        const s = t ? Qp(t, t.def.lastRenderRootNode) : e.renderElement,
          i = n.renderer.parentNode(s),
          r = n.renderer.nextSibling(s);
        im(n, 2, i, r, void 0);
      }
      function Im(e) {
        im(e, 3, null, null, void 0);
      }
      const Tm = {};
      function Am(e, t, n, s, i, r) {
        return new Dm(e, t, n, s, i, r);
      }
      class Dm extends Sh {
        constructor(e, t, n, s, i, r) {
          super(),
            (this.selector = e),
            (this.componentType = t),
            (this._inputs = s),
            (this._outputs = i),
            (this.ngContentSelectors = r),
            (this.viewDefFactory = n);
        }
        get inputs() {
          const e = [],
            t = this._inputs;
          for (let n in t) {
            const s = t[n];
            e.push({ propName: n, templateName: s });
          }
          return e;
        }
        get outputs() {
          const e = [];
          for (let t in this._outputs) {
            const n = this._outputs[t];
            e.push({ propName: t, templateName: n });
          }
          return e;
        }
        create(e, t, n, s) {
          if (!s) throw new Error("ngModule should be provided");
          const i = sm(this.viewDefFactory),
            r = i.nodes[0].element.componentProvider.nodeIndex,
            o = Mp.createRootView(e, t || [], n, i, s, Tm),
            a = Tp(o, r).instance;
          return (
            n &&
              o.renderer.setAttribute(
                Ip(o, 0).renderElement,
                "ng-version",
                Vh.full
              ),
            new Mm(o, new Nm(o), a)
          );
        }
      }
      class Mm extends Ch {
        constructor(e, t, n) {
          super(),
            (this._view = e),
            (this._viewRef = t),
            (this._component = n),
            (this._elDef = this._view.def.nodes[0]),
            (this.hostView = t),
            (this.changeDetectorRef = t),
            (this.instance = n);
        }
        get location() {
          return new Ph(Ip(this._view, this._elDef.nodeIndex).renderElement);
        }
        get injector() {
          return new Bm(this._view, this._elDef);
        }
        get componentType() {
          return this._component.constructor;
        }
        destroy() {
          this._viewRef.destroy();
        }
        onDestroy(e) {
          this._viewRef.onDestroy(e);
        }
      }
      function Pm(e, t, n) {
        return new Rm(e, t, n);
      }
      class Rm {
        constructor(e, t, n) {
          (this._view = e),
            (this._elDef = t),
            (this._data = n),
            (this._embeddedViews = []);
        }
        get element() {
          return new Ph(this._data.renderElement);
        }
        get injector() {
          return new Bm(this._view, this._elDef);
        }
        get parentInjector() {
          let e = this._view,
            t = this._elDef.parent;
          for (; !t && e; ) (t = Yp(e)), (e = e.parent);
          return e ? new Bm(e, t) : new Bm(this._view, null);
        }
        clear() {
          for (let e = this._embeddedViews.length - 1; e >= 0; e--) {
            const t = km(this._data, e);
            Mp.destroyView(t);
          }
        }
        get(e) {
          const t = this._embeddedViews[e];
          if (t) {
            const e = new Nm(t);
            return e.attachToViewContainerRef(this), e;
          }
          return null;
        }
        get length() {
          return this._embeddedViews.length;
        }
        createEmbeddedView(e, t, n) {
          const s = e.createEmbeddedView(t || {});
          return this.insert(s, n), s;
        }
        createComponent(e, t, n, s, i) {
          const r = n || this.parentInjector;
          i || e instanceof Th || (i = r.get(pp));
          const o = e.create(r, s, void 0, i);
          return this.insert(o.hostView, t), o;
        }
        insert(e, t) {
          if (e.destroyed)
            throw new Error(
              "Cannot insert a destroyed View in a ViewContainer!"
            );
          const n = e,
            s = n._view;
          return (
            Em(this._view, this._data, t, s),
            n.attachToViewContainerRef(this),
            e
          );
        }
        move(e, t) {
          if (e.destroyed)
            throw new Error("Cannot move a destroyed View in a ViewContainer!");
          const n = this._embeddedViews.indexOf(e._view);
          return (
            (function (e, t, n) {
              const s = e.viewContainer._embeddedViews,
                i = s[t];
              de(s, t),
                null == n && (n = s.length),
                ue(s, n, i),
                Mp.dirtyParentQueries(i),
                Im(i),
                Om(e, n > 0 ? s[n - 1] : null, i);
            })(this._data, n, t),
            e
          );
        }
        indexOf(e) {
          return this._embeddedViews.indexOf(e._view);
        }
        remove(e) {
          const t = km(this._data, e);
          t && Mp.destroyView(t);
        }
        detach(e) {
          const t = km(this._data, e);
          return t ? new Nm(t) : null;
        }
      }
      function jm(e) {
        return new Nm(e);
      }
      class Nm {
        constructor(e) {
          (this._view = e),
            (this._viewContainerRef = null),
            (this._appRef = null);
        }
        get rootNodes() {
          return (function (e) {
            const t = [];
            return im(e, 0, void 0, void 0, t), t;
          })(this._view);
        }
        get context() {
          return this._view.context;
        }
        get destroyed() {
          return 0 != (128 & this._view.state);
        }
        markForCheck() {
          Up(this._view);
        }
        detach() {
          this._view.state &= -5;
        }
        detectChanges() {
          const e = this._view.root.rendererFactory;
          e.begin && e.begin();
          try {
            Mp.checkAndUpdateView(this._view);
          } finally {
            e.end && e.end();
          }
        }
        checkNoChanges() {
          Mp.checkNoChangesView(this._view);
        }
        reattach() {
          this._view.state |= 4;
        }
        onDestroy(e) {
          this._view.disposables || (this._view.disposables = []),
            this._view.disposables.push(e);
        }
        destroy() {
          this._appRef
            ? this._appRef.detachView(this)
            : this._viewContainerRef &&
              this._viewContainerRef.detach(
                this._viewContainerRef.indexOf(this)
              ),
            Mp.destroyView(this._view);
        }
        detachFromAppRef() {
          (this._appRef = null),
            Im(this._view),
            Mp.dirtyParentQueries(this._view);
        }
        attachToAppRef(e) {
          if (this._viewContainerRef)
            throw new Error(
              "This view is already attached to a ViewContainer!"
            );
          this._appRef = e;
        }
        attachToViewContainerRef(e) {
          if (this._appRef)
            throw new Error(
              "This view is already attached directly to the ApplicationRef!"
            );
          this._viewContainerRef = e;
        }
      }
      function Fm(e, t) {
        return new Lm(e, t);
      }
      class Lm extends cp {
        constructor(e, t) {
          super(), (this._parentView = e), (this._def = t);
        }
        createEmbeddedView(e) {
          return new Nm(
            Mp.createEmbeddedView(
              this._parentView,
              this._def,
              this._def.element.template,
              e
            )
          );
        }
        get elementRef() {
          return new Ph(
            Ip(this._parentView, this._def.nodeIndex).renderElement
          );
        }
      }
      function Vm(e, t) {
        return new Bm(e, t);
      }
      class Bm {
        constructor(e, t) {
          (this.view = e), (this.elDef = t);
        }
        get(e, t = Ea.THROW_IF_NOT_FOUND) {
          const n = !!this.elDef && 0 != (33554432 & this.elDef.flags);
          return Mp.resolveDep(
            this.view,
            this.elDef,
            n,
            { flags: 0, token: e, tokenKey: jp(e) },
            t
          );
        }
      }
      function zm(e, t) {
        const n = e.def.nodes[t];
        if (1 & n.flags) {
          const t = Ip(e, n.nodeIndex);
          return n.element.template ? t.template : t.renderElement;
        }
        if (2 & n.flags) return Op(e, n.nodeIndex).renderText;
        if (20240 & n.flags) return Tp(e, n.nodeIndex).instance;
        throw new Error("Illegal state: read nodeValue for node index " + t);
      }
      function Hm(e, t, n, s) {
        return new Gm(e, t, n, s);
      }
      class Gm {
        constructor(e, t, n, s) {
          (this._moduleType = e),
            (this._parent = t),
            (this._bootstrapComponents = n),
            (this._def = s),
            (this._destroyListeners = []),
            (this._destroyed = !1),
            (this.injector = this),
            (function (e) {
              const t = e._def,
                n = (e._providers = he(t.providers.length));
              for (let s = 0; s < t.providers.length; s++) {
                const i = t.providers[s];
                4096 & i.flags || (void 0 === n[s] && (n[s] = Sm(e, i)));
              }
            })(this);
        }
        get(e, t = Ea.THROW_IF_NOT_FOUND, n = ot.Default) {
          let s = 0;
          return (
            n & ot.SkipSelf ? (s |= 1) : n & ot.Self && (s |= 4),
            Cm(this, { token: e, tokenKey: jp(e), flags: s }, t)
          );
        }
        get instance() {
          return this.get(this._moduleType);
        }
        get componentFactoryResolver() {
          return this.get(Oh);
        }
        destroy() {
          if (this._destroyed)
            throw new Error(
              `The ng module ${w(
                this.instance.constructor
              )} has already been destroyed.`
            );
          (this._destroyed = !0),
            (function (e, t) {
              const n = e._def,
                s = new Set();
              for (let i = 0; i < n.providers.length; i++)
                if (131072 & n.providers[i].flags) {
                  const t = e._providers[i];
                  if (t && t !== ym) {
                    const e = t.ngOnDestroy;
                    "function" != typeof e ||
                      s.has(t) ||
                      (e.apply(t), s.add(t));
                  }
                }
            })(this),
            this._destroyListeners.forEach((e) => e());
        }
        onDestroy(e) {
          this._destroyListeners.push(e);
        }
      }
      const Um = jp(jh),
        $m = jp(Ph),
        qm = jp(gp),
        Wm = jp(cp),
        Ym = jp(np),
        Qm = jp(Ea),
        Km = jp(ca);
      function Jm(e, t, n, s, i, r, o, a) {
        const l = [];
        if (o)
          for (let u in o) {
            const [e, t] = o[u];
            l[e] = {
              flags: 8,
              name: u,
              nonMinifiedName: t,
              ns: null,
              securityContext: null,
              suffix: null,
            };
          }
        const c = [];
        if (a)
          for (let u in a)
            c.push({ type: 1, propName: u, target: null, eventName: a[u] });
        return ef(e, (t |= 16384), n, s, i, i, r, l, c);
      }
      function Xm(e, t, n) {
        return ef(-1, (e |= 16), null, 0, t, t, n);
      }
      function Zm(e, t, n, s, i) {
        return ef(-1, e, t, 0, n, s, i);
      }
      function ef(e, t, n, s, i, r, o, a, l) {
        const { matchedQueries: c, references: u, matchedQueryIds: d } = Zp(n);
        l || (l = []), a || (a = []), (r = ie(r));
        const h = em(o, w(i));
        return {
          nodeIndex: -1,
          parent: null,
          renderParent: null,
          bindingIndex: -1,
          outputIndex: -1,
          checkIndex: e,
          flags: t,
          childFlags: 0,
          directChildFlags: 0,
          childMatchedQueries: 0,
          matchedQueries: c,
          matchedQueryIds: d,
          references: u,
          ngContentIndex: -1,
          childCount: s,
          bindings: a,
          bindingFlags: dm(a),
          outputs: l,
          element: null,
          provider: { token: i, value: r, deps: h },
          text: null,
          query: null,
          ngContent: null,
        };
      }
      function tf(e, t) {
        return of(e, t);
      }
      function nf(e, t) {
        let n = e;
        for (; n.parent && !Kp(n); ) n = n.parent;
        return af(n.parent, Yp(n), !0, t.provider.value, t.provider.deps);
      }
      function sf(e, t) {
        const n = (32768 & t.flags) > 0,
          s = af(e, t.parent, n, t.provider.value, t.provider.deps);
        if (t.outputs.length)
          for (let i = 0; i < t.outputs.length; i++) {
            const n = t.outputs[i],
              r = s[n.propName];
            if (!fc(r))
              throw new Error(
                `@Output ${n.propName} not initialized in '${s.constructor.name}'.`
              );
            {
              const s = r.subscribe(rf(e, t.parent.nodeIndex, n.eventName));
              e.disposables[t.outputIndex + i] = s.unsubscribe.bind(s);
            }
          }
        return s;
      }
      function rf(e, t, n) {
        return (s) => qp(e, t, n, s);
      }
      function of(e, t) {
        const n = (8192 & t.flags) > 0,
          s = t.provider;
        switch (201347067 & t.flags) {
          case 512:
            return af(e, t.parent, n, s.value, s.deps);
          case 1024:
            return (function (e, t, n, s, i) {
              const r = i.length;
              switch (r) {
                case 0:
                  return s();
                case 1:
                  return s(cf(e, t, n, i[0]));
                case 2:
                  return s(cf(e, t, n, i[0]), cf(e, t, n, i[1]));
                case 3:
                  return s(
                    cf(e, t, n, i[0]),
                    cf(e, t, n, i[1]),
                    cf(e, t, n, i[2])
                  );
                default:
                  const o = [];
                  for (let s = 0; s < r; s++) o.push(cf(e, t, n, i[s]));
                  return s(...o);
              }
            })(e, t.parent, n, s.value, s.deps);
          case 2048:
            return cf(e, t.parent, n, s.deps[0]);
          case 256:
            return s.value;
        }
      }
      function af(e, t, n, s, i) {
        const r = i.length;
        switch (r) {
          case 0:
            return new s();
          case 1:
            return new s(cf(e, t, n, i[0]));
          case 2:
            return new s(cf(e, t, n, i[0]), cf(e, t, n, i[1]));
          case 3:
            return new s(
              cf(e, t, n, i[0]),
              cf(e, t, n, i[1]),
              cf(e, t, n, i[2])
            );
          default:
            const o = [];
            for (let s = 0; s < r; s++) o.push(cf(e, t, n, i[s]));
            return new s(...o);
        }
      }
      const lf = {};
      function cf(e, t, n, s, i = Ea.THROW_IF_NOT_FOUND) {
        if (8 & s.flags) return s.token;
        const r = e;
        2 & s.flags && (i = null);
        const o = s.tokenKey;
        o === Ym && (n = !(!t || !t.element.componentView)),
          t && 1 & s.flags && ((n = !1), (t = t.parent));
        let a = e;
        for (; a; ) {
          if (t)
            switch (o) {
              case Um:
                return uf(a, t, n).renderer;
              case $m:
                return new Ph(Ip(a, t.nodeIndex).renderElement);
              case qm:
                return Ip(a, t.nodeIndex).viewContainer;
              case Wm:
                if (t.element.template) return Ip(a, t.nodeIndex).template;
                break;
              case Ym:
                return jm(uf(a, t, n));
              case Qm:
              case Km:
                return Vm(a, t);
              default:
                const e = (
                  n ? t.element.allProviders : t.element.publicProviders
                )[o];
                if (e) {
                  let t = Tp(a, e.nodeIndex);
                  return (
                    t ||
                      ((t = { instance: of(a, e) }),
                      (a.nodes[e.nodeIndex] = t)),
                    t.instance
                  );
                }
            }
          (n = Kp(a)), (t = Yp(a)), (a = a.parent), 4 & s.flags && (a = null);
        }
        const l = r.root.injector.get(s.token, lf);
        return l !== lf || i === lf
          ? l
          : r.root.ngModule.injector.get(s.token, i);
      }
      function uf(e, t, n) {
        let s;
        if (n) s = Ip(e, t.nodeIndex).componentView;
        else for (s = e; s.parent && !Kp(s); ) s = s.parent;
        return s;
      }
      function df(e, t, n, s, i, r) {
        if (32768 & n.flags) {
          const t = Ip(e, n.parent.nodeIndex).componentView;
          2 & t.def.flags && (t.state |= 8);
        }
        const o = n.bindings[s].name;
        if (((t.instance[o] = i), 524288 & n.flags)) {
          r = r || {};
          const t = Ka.unwrap(e.oldValues[n.bindingIndex + s]);
          r[n.bindings[s].nonMinifiedName] = new Zs(t, i, 0 != (2 & e.state));
        }
        return (e.oldValues[n.bindingIndex + s] = i), r;
      }
      function hf(e, t) {
        if (!(e.def.nodeFlags & t)) return;
        const n = e.def.nodes;
        let s = 0;
        for (let i = 0; i < n.length; i++) {
          const r = n[i];
          let o = r.parent;
          for (
            !o && r.flags & t && mf(e, i, r.flags & t, s++),
              0 == (r.childFlags & t) && (i += r.childCount);
            o && 1 & o.flags && i === o.nodeIndex + o.childCount;

          )
            o.directChildFlags & t && (s = pf(e, o, t, s)), (o = o.parent);
        }
      }
      function pf(e, t, n, s) {
        for (let i = t.nodeIndex + 1; i <= t.nodeIndex + t.childCount; i++) {
          const t = e.def.nodes[i];
          t.flags & n && mf(e, i, t.flags & n, s++), (i += t.childCount);
        }
        return s;
      }
      function mf(e, t, n, s) {
        const i = Tp(e, t);
        if (!i) return;
        const r = i.instance;
        r &&
          (Mp.setCurrentNode(e, t),
          1048576 & n && kp(e, 512, s) && r.ngAfterContentInit(),
          2097152 & n && r.ngAfterContentChecked(),
          4194304 & n && kp(e, 768, s) && r.ngAfterViewInit(),
          8388608 & n && r.ngAfterViewChecked(),
          131072 & n && r.ngOnDestroy());
      }
      class ff extends Oh {
        constructor(e) {
          super(), (this.ngModule = e);
        }
        resolveComponentFactory(e) {
          const t = et(e);
          return new vf(t, this.ngModule);
        }
      }
      function gf(e) {
        const t = [];
        for (let n in e)
          if (e.hasOwnProperty(n)) {
            const s = e[n];
            t.push({ propName: s, templateName: n });
          }
        return t;
      }
      const yf = new L("SCHEDULER_TOKEN", {
        providedIn: "root",
        factory: () => nr,
      });
      class vf extends Sh {
        constructor(e, t) {
          super(),
            (this.componentDef = e),
            (this.ngModule = t),
            (this.componentType = e.type),
            (this.selector = e.selectors.map(no).join(",")),
            (this.ngContentSelectors = e.ngContentSelectors
              ? e.ngContentSelectors
              : []),
            (this.isBoundToModule = !!t);
        }
        get inputs() {
          return gf(this.componentDef.inputs);
        }
        get outputs() {
          return gf(this.componentDef.outputs);
        }
        create(e, t, n, s) {
          const i = (s = s || this.ngModule)
              ? (function (e, t) {
                  return {
                    get: (n, s, i) => {
                      const r = e.get(n, lf, i);
                      return r !== lf || s === lf ? r : t.get(n, s, i);
                    },
                  };
                })(e, s.injector)
              : e,
            r = i.get(Rh, Lt),
            o = i.get(Fh, null),
            a = r.createRenderer(null, this.componentDef),
            l = this.componentDef.selectors[0][0] || "div",
            c = n
              ? Ao(a, n, this.componentDef.encapsulation)
              : br(
                  r.createRenderer(null, this.componentDef),
                  l,
                  (function (e) {
                    const t = e.toLowerCase();
                    return "svg" === t ? Rt : "math" === t ? jt : null;
                  })(l)
                ),
            u = this.componentDef.onPush ? 576 : 528,
            d = Na(),
            h = To(0, null, null, 1, 0, null, null, null, null, null),
            p = yo(null, h, d, u, null, null, r, a, o, i);
          let m, f;
          On(p);
          try {
            const e = Ra(c, this.componentDef, p, r, a);
            if (c)
              if (n) pi(a, c, ["ng-version", Vh.full]);
              else {
                const { attrs: e, classes: t } = (function (e) {
                  const t = [],
                    n = [];
                  let s = 1,
                    i = 2;
                  for (; s < e.length; ) {
                    let r = e[s];
                    if ("string" == typeof r)
                      2 === i
                        ? "" !== r && t.push(r, e[++s])
                        : 8 === i && n.push(r);
                    else {
                      if (!Jr(i)) break;
                      i = r;
                    }
                    s++;
                  }
                  return { attrs: t, classes: n };
                })(this.componentDef.selectors[0]);
                e && pi(a, c, e), t && t.length > 0 && Ur(a, c, t.join(" "));
              }
            if (((f = Ht(h, kt)), void 0 !== t)) {
              const e = (f.projection = []);
              for (let n = 0; n < this.ngContentSelectors.length; n++) {
                const s = t[n];
                e.push(null != s ? Array.from(s) : null);
              }
            }
            (m = ja(e, this.componentDef, p, d, [Fa])), _o(h, p, null);
          } finally {
            Mn();
          }
          return new bf(this.componentType, m, Dh(f, p), p, f);
        }
      }
      new ff();
      class bf extends Ch {
        constructor(e, t, n, s, i) {
          super(),
            (this.location = n),
            (this._rootLView = s),
            (this._tNode = i),
            (this.destroyCbs = []),
            (this.instance = t),
            (this.hostView = this.changeDetectorRef = new ep(s)),
            (this.componentType = e);
        }
        get injector() {
          return new Vi(this._tNode, this._rootLView);
        }
        destroy() {
          this.destroyCbs &&
            (this.destroyCbs.forEach((e) => e()),
            (this.destroyCbs = null),
            !this.hostView.destroyed && this.hostView.destroy());
        }
        onDestroy(e) {
          this.destroyCbs && this.destroyCbs.push(e);
        }
      }
      function xf(e, t, n, s) {
        return l(() => {
          const i = e;
          null !== t &&
            (i.hasOwnProperty("decorators") && void 0 !== i.decorators
              ? i.decorators.push(...t)
              : (i.decorators = t)),
            null !== n && (i.ctorParameters = n),
            null !== s &&
              (i.hasOwnProperty("propDecorators") && void 0 !== i.propDecorators
                ? (i.propDecorators = Object.assign(
                    Object.assign({}, i.propDecorators),
                    s
                  ))
                : (i.propDecorators = s));
        });
      }
      const _f = new Map();
      function wf(e, t) {
        const n = _f.get(e);
        Cf(e, n && n.moduleType, t.moduleType), _f.set(e, t);
      }
      function Cf(e, t, n) {
        if (t && t !== n)
          throw new Error(
            `Duplicate module registered for ${e} - ${w(t)} vs ${w(t.name)}`
          );
      }
      class Sf extends pp {
        constructor(e, t) {
          super(),
            (this._parent = t),
            (this._bootstrapComponents = []),
            (this.injector = this),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new ff(this));
          const n = st(e),
            s = e[Be] || null;
          s && hd(s),
            (this._bootstrapComponents = ar(n.bootstrap)),
            (this._r3Injector = ya(
              e,
              t,
              [
                { provide: pp, useValue: this },
                { provide: Oh, useValue: this.componentFactoryResolver },
              ],
              w(e)
            )),
            this._r3Injector._resolveInjectorDefTypes(),
            (this.instance = this.get(e));
        }
        get(e, t = Ea.THROW_IF_NOT_FOUND, n = ot.Default) {
          return e === Ea || e === pp || e === ca
            ? this
            : this._r3Injector.get(e, t, n);
        }
        destroy() {
          const e = this._r3Injector;
          !e.destroyed && e.destroy(),
            this.destroyCbs.forEach((e) => e()),
            (this.destroyCbs = null);
        }
        onDestroy(e) {
          this.destroyCbs.push(e);
        }
      }
      class Ef extends mp {
        constructor(e) {
          super(), (this.moduleType = e);
          null !== st(e) &&
            (function (e) {
              const t = new Set();
              !(function e(n) {
                const s = st(n, !0),
                  i = s.id;
                if (null !== i) {
                  Cf(i, _f.get(i), n), _f.set(i, n);
                }
                const r = ar(s.imports);
                for (const o of r) t.has(o) || (t.add(o), e(o));
              })(e);
            })(e);
        }
        create(e) {
          return new Sf(this.moduleType, e);
        }
      }
      function kf(e, t, n) {
        const s = mn() + e,
          i = nn();
        return i[s] === so ? Za(i, s, n ? t.call(n) : t()) : el(i, s);
      }
      function Of(e, t, n, s) {
        return Ff(nn(), mn(), e, t, n, s);
      }
      function If(e, t, n, s, i) {
        return Lf(nn(), mn(), e, t, n, s, i);
      }
      function Tf(e, t, n, s, i, r) {
        return Vf(nn(), mn(), e, t, n, s, i, r);
      }
      function Af(e, t, n, s, i, r, o) {
        return Bf(nn(), mn(), e, t, n, s, i, r, o);
      }
      function Df(e, t, n, s, i, r, o, a) {
        const l = mn() + e,
          c = nn(),
          u = il(c, l, n, s, i, r);
        return tl(c, l + 4, o) || u
          ? Za(c, l + 5, a ? t.call(a, n, s, i, r, o) : t(n, s, i, r, o))
          : el(c, l + 5);
      }
      function Mf(e, t, n, s, i, r, o, a, l) {
        const c = mn() + e,
          u = nn(),
          d = il(u, c, n, s, i, r);
        return nl(u, c + 4, o, a) || d
          ? Za(u, c + 6, l ? t.call(l, n, s, i, r, o, a) : t(n, s, i, r, o, a))
          : el(u, c + 6);
      }
      function Pf(e, t, n, s, i, r, o, a, l, c) {
        const u = mn() + e,
          d = nn();
        let h = il(d, u, n, s, i, r);
        return sl(d, u + 4, o, a, l) || h
          ? Za(
              d,
              u + 7,
              c ? t.call(c, n, s, i, r, o, a, l) : t(n, s, i, r, o, a, l)
            )
          : el(d, u + 7);
      }
      function Rf(e, t, n, s, i, r, o, a, l, c, u) {
        const d = mn() + e,
          h = nn(),
          p = il(h, d, n, s, i, r);
        return il(h, d + 4, o, a, l, c) || p
          ? Za(
              h,
              d + 8,
              u ? t.call(u, n, s, i, r, o, a, l, c) : t(n, s, i, r, o, a, l, c)
            )
          : el(h, d + 8);
      }
      function jf(e, t, n, s) {
        return zf(nn(), mn(), e, t, n, s);
      }
      function Nf(e, t) {
        const n = e[t];
        return n === so ? void 0 : n;
      }
      function Ff(e, t, n, s, i, r) {
        const o = t + n;
        return tl(e, o, i)
          ? Za(e, o + 1, r ? s.call(r, i) : s(i))
          : Nf(e, o + 1);
      }
      function Lf(e, t, n, s, i, r, o) {
        const a = t + n;
        return nl(e, a, i, r)
          ? Za(e, a + 2, o ? s.call(o, i, r) : s(i, r))
          : Nf(e, a + 2);
      }
      function Vf(e, t, n, s, i, r, o, a) {
        const l = t + n;
        return sl(e, l, i, r, o)
          ? Za(e, l + 3, a ? s.call(a, i, r, o) : s(i, r, o))
          : Nf(e, l + 3);
      }
      function Bf(e, t, n, s, i, r, o, a, l) {
        const c = t + n;
        return il(e, c, i, r, o, a)
          ? Za(e, c + 4, l ? s.call(l, i, r, o, a) : s(i, r, o, a))
          : Nf(e, c + 4);
      }
      function zf(e, t, n, s, i, r) {
        let o = t + n,
          a = !1;
        for (let l = 0; l < i.length; l++) tl(e, o++, i[l]) && (a = !0);
        return a ? Za(e, o, s.apply(r, i)) : Nf(e, o);
      }
      function Hf(e, t) {
        const n = sn();
        let s;
        const i = e + kt;
        n.firstCreatePass
          ? ((s = (function (e, t) {
              if (t)
                for (let n = t.length - 1; n >= 0; n--) {
                  const s = t[n];
                  if (e === s.name) return s;
                }
              throw new Qs("302", `The pipe '${e}' could not be found!`);
            })(t, n.pipeRegistry)),
            (n.data[i] = s),
            s.onDestroy &&
              (n.destroyHooks || (n.destroyHooks = [])).push(i, s.onDestroy))
          : (s = n.data[i]);
        const r = s.factory || (s.factory = Ys(s.type)),
          o = lt(tc);
        try {
          const e = wi(!1),
            t = r();
          return (
            wi(e),
            (function (e, t, n, s) {
              n >= e.data.length &&
                ((e.data[n] = null), (e.blueprint[n] = null)),
                (t[n] = s);
            })(n, nn(), i, t),
            t
          );
        } finally {
          lt(o);
        }
      }
      function Gf(e, t, n) {
        const s = e + kt,
          i = nn(),
          r = Gt(i, s);
        return Qf(
          i,
          Yf(i, s) ? Ff(i, mn(), t, r.transform, n, r) : r.transform(n)
        );
      }
      function Uf(e, t, n, s) {
        const i = e + kt,
          r = nn(),
          o = Gt(r, i);
        return Qf(
          r,
          Yf(r, i) ? Lf(r, mn(), t, o.transform, n, s, o) : o.transform(n, s)
        );
      }
      function $f(e, t, n, s, i) {
        const r = e + kt,
          o = nn(),
          a = Gt(o, r);
        return Qf(
          o,
          Yf(o, r)
            ? Vf(o, mn(), t, a.transform, n, s, i, a)
            : a.transform(n, s, i)
        );
      }
      function qf(e, t, n, s, i, r) {
        const o = e + kt,
          a = nn(),
          l = Gt(a, o);
        return Qf(
          a,
          Yf(a, o)
            ? Bf(a, mn(), t, l.transform, n, s, i, r, l)
            : l.transform(n, s, i, r)
        );
      }
      function Wf(e, t, n) {
        const s = e + kt,
          i = nn(),
          r = Gt(i, s);
        return Qf(
          i,
          Yf(i, s) ? zf(i, mn(), t, r.transform, n, r) : r.transform.apply(r, n)
        );
      }
      function Yf(e, t) {
        return e[1].data[t].pure;
      }
      function Qf(e, t) {
        if (Ka.isWrapped(t)) {
          t = Ka.unwrap(t);
          e[fn()] = so;
        }
        return t;
      }
      class Kf extends s.a {
        constructor(e = !1) {
          super(), (this.__isAsync = e);
        }
        emit(e) {
          super.next(e);
        }
        subscribe(e, t, n) {
          let s,
            r = (e) => null,
            o = () => null;
          e && "object" == typeof e
            ? ((s = this.__isAsync
                ? (t) => {
                    setTimeout(() => e.next(t));
                  }
                : (t) => {
                    e.next(t);
                  }),
              e.error &&
                (r = this.__isAsync
                  ? (t) => {
                      setTimeout(() => e.error(t));
                    }
                  : (t) => {
                      e.error(t);
                    }),
              e.complete &&
                (o = this.__isAsync
                  ? () => {
                      setTimeout(() => e.complete());
                    }
                  : () => {
                      e.complete();
                    }))
            : ((s = this.__isAsync
                ? (t) => {
                    setTimeout(() => e(t));
                  }
                : (t) => {
                    e(t);
                  }),
              t &&
                (r = this.__isAsync
                  ? (e) => {
                      setTimeout(() => t(e));
                    }
                  : (e) => {
                      t(e);
                    }),
              n &&
                (o = this.__isAsync
                  ? () => {
                      setTimeout(() => n());
                    }
                  : () => {
                      n();
                    }));
          const a = super.subscribe(s, r, o);
          return e instanceof i.a && e.add(a), a;
        }
      }
      const Jf = Kf;
      function Xf() {
        return this._results[Ya()]();
      }
      class Zf {
        constructor() {
          (this.dirty = !0),
            (this._results = []),
            (this.changes = new Jf()),
            (this.length = 0);
          const e = Ya(),
            t = Zf.prototype;
          t[e] || (t[e] = Xf);
        }
        map(e) {
          return this._results.map(e);
        }
        filter(e) {
          return this._results.filter(e);
        }
        find(e) {
          return this._results.find(e);
        }
        reduce(e, t) {
          return this._results.reduce(e, t);
        }
        forEach(e) {
          this._results.forEach(e);
        }
        some(e) {
          return this._results.some(e);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(e) {
          (this._results = le(e)),
            (this.dirty = !1),
            (this.length = this._results.length),
            (this.last = this._results[this.length - 1]),
            (this.first = this._results[0]);
        }
        notifyOnChanges() {
          this.changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      class eg {
        constructor(e) {
          (this.queryList = e), (this.matches = null);
        }
        clone() {
          return new eg(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class tg {
        constructor(e = []) {
          this.queries = e;
        }
        createEmbeddedView(e) {
          const t = e.queries;
          if (null !== t) {
            const n =
                null !== e.contentQueries ? e.contentQueries[0] : t.length,
              s = [];
            for (let e = 0; e < n; e++) {
              const n = t.getByIndex(e),
                i = this.queries[n.indexInDeclarationView];
              s.push(i.clone());
            }
            return new tg(s);
          }
          return null;
        }
        insertView(e) {
          this.dirtyQueriesWithMatches(e);
        }
        detachView(e) {
          this.dirtyQueriesWithMatches(e);
        }
        dirtyQueriesWithMatches(e) {
          for (let t = 0; t < this.queries.length; t++)
            null !== bg(e, t).matches && this.queries[t].setDirty();
        }
      }
      class ng {
        constructor(e, t, n, s = null) {
          (this.predicate = e),
            (this.descendants = t),
            (this.isStatic = n),
            (this.read = s);
        }
      }
      class sg {
        constructor(e = []) {
          this.queries = e;
        }
        elementStart(e, t) {
          for (let n = 0; n < this.queries.length; n++)
            this.queries[n].elementStart(e, t);
        }
        elementEnd(e) {
          for (let t = 0; t < this.queries.length; t++)
            this.queries[t].elementEnd(e);
        }
        embeddedTView(e) {
          let t = null;
          for (let n = 0; n < this.length; n++) {
            const s = null !== t ? t.length : 0,
              i = this.getByIndex(n).embeddedTView(e, s);
            i &&
              ((i.indexInDeclarationView = n),
              null !== t ? t.push(i) : (t = [i]));
          }
          return null !== t ? new sg(t) : null;
        }
        template(e, t) {
          for (let n = 0; n < this.queries.length; n++)
            this.queries[n].template(e, t);
        }
        getByIndex(e) {
          return this.queries[e];
        }
        get length() {
          return this.queries.length;
        }
        track(e) {
          this.queries.push(e);
        }
      }
      class ig {
        constructor(e, t = -1) {
          (this.metadata = e),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = t);
        }
        elementStart(e, t) {
          this.isApplyingToNode(t) && this.matchTNode(e, t);
        }
        elementEnd(e) {
          this._declarationNodeIndex === e.index &&
            (this._appliesToNextNode = !1);
        }
        template(e, t) {
          this.elementStart(e, t);
        }
        embeddedTView(e, t) {
          return this.isApplyingToNode(e)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-e.index, t),
              new ig(this.metadata))
            : null;
        }
        isApplyingToNode(e) {
          if (this._appliesToNextNode && !1 === this.metadata.descendants) {
            const t = this._declarationNodeIndex;
            let n = e.parent;
            for (; null !== n && 8 & n.type && n.index !== t; ) n = n.parent;
            return t === (null !== n ? n.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(e, t) {
          const n = this.metadata.predicate;
          if (Array.isArray(n))
            for (let s = 0; s < n.length; s++) {
              const i = n[s];
              this.matchTNodeWithReadOption(e, t, rg(t, i)),
                this.matchTNodeWithReadOption(e, t, ji(t, e, i, !1, !1));
            }
          else
            n === cp
              ? 4 & t.type && this.matchTNodeWithReadOption(e, t, -1)
              : this.matchTNodeWithReadOption(e, t, ji(t, e, n, !1, !1));
        }
        matchTNodeWithReadOption(e, t, n) {
          if (null !== n) {
            const s = this.metadata.read;
            if (null !== s)
              if (s === Ph || s === gp || (s === cp && 4 & t.type))
                this.addMatch(t.index, -2);
              else {
                const n = ji(t, e, s, !1, !1);
                null !== n && this.addMatch(t.index, n);
              }
            else this.addMatch(t.index, n);
          }
        }
        addMatch(e, t) {
          null === this.matches
            ? (this.matches = [e, t])
            : this.matches.push(e, t);
        }
      }
      function rg(e, t) {
        const n = e.localNames;
        if (null !== n)
          for (let s = 0; s < n.length; s += 2) if (n[s] === t) return n[s + 1];
        return null;
      }
      function og(e, t, n, s) {
        return -1 === n
          ? (function (e, t) {
              return 11 & e.type ? Dh(e, t) : 4 & e.type ? hp(e, t) : null;
            })(t, e)
          : -2 === n
          ? (function (e, t, n) {
              if (n === Ph) return Dh(t, e);
              if (n === cp) return hp(t, e);
              if (n === gp) return _p(t, e);
            })(e, t, s)
          : Ni(e, e[1], n, t);
      }
      function ag(e, t, n, s) {
        const i = t[19].queries[s];
        if (null === i.matches) {
          const s = e.data,
            r = n.matches,
            o = [];
          for (let e = 0; e < r.length; e += 2) {
            const i = r[e];
            if (i < 0) o.push(null);
            else {
              const a = s[i];
              o.push(og(t, a, r[e + 1], n.metadata.read));
            }
          }
          i.matches = o;
        }
        return i.matches;
      }
      function lg(e, t, n, s) {
        const i = e.queries.getByIndex(n),
          r = i.matches;
        if (null !== r) {
          const o = ag(e, t, i, n);
          for (let e = 0; e < r.length; e += 2) {
            const n = r[e];
            if (n > 0) s.push(o[e / 2]);
            else {
              const i = r[e + 1],
                o = t[-n];
              for (let e = Ot; e < o.length; e++) {
                const t = o[e];
                t[17] === t[3] && lg(t[1], t, i, s);
              }
              if (null !== o[9]) {
                const e = o[9];
                for (let t = 0; t < e.length; t++) {
                  const n = e[t];
                  lg(n[1], n, i, s);
                }
              }
            }
          }
        }
        return s;
      }
      function cg(e) {
        const t = nn(),
          n = sn(),
          s = Cn();
        Sn(s + 1);
        const i = bg(n, s);
        if (e.dirty && Wt(t) === i.metadata.isStatic) {
          if (null === i.matches) e.reset([]);
          else {
            const r = i.crossesNgTemplate ? lg(n, t, s, []) : ag(n, t, i, s);
            e.reset(r), e.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function ug(e, t, n) {
        hg(sn(), nn(), e, t, n, !0);
      }
      function dg(e, t, n) {
        hg(sn(), nn(), e, t, n, !1);
      }
      function hg(e, t, n, s, i, r) {
        e.firstCreatePass &&
          (vg(e, new ng(n, s, r, i), -1), r && (e.staticViewQueries = !0)),
          yg(e, t);
      }
      function pg(e, t, n, s) {
        fg(sn(), nn(), t, n, s, !1, on(), e);
      }
      function mg(e, t, n, s) {
        fg(sn(), nn(), t, n, s, !0, on(), e);
      }
      function fg(e, t, n, s, i, r, o, a) {
        e.firstCreatePass &&
          (vg(e, new ng(n, s, r, i), o.index),
          (function (e, t) {
            const n = e.contentQueries || (e.contentQueries = []),
              s = n.length ? n[n.length - 1] : -1;
            t !== s && n.push(e.queries.length - 1, t);
          })(e, a),
          r && (e.staticContentQueries = !0)),
          yg(e, t);
      }
      function gg() {
        return (e = nn()), (t = Cn()), e[19].queries[t].queryList;
        var e, t;
      }
      function yg(e, t) {
        const n = new Zf();
        Do(e, t, n, n.destroy),
          null === t[19] && (t[19] = new tg()),
          t[19].queries.push(new eg(n));
      }
      function vg(e, t, n) {
        null === e.queries && (e.queries = new sg()),
          e.queries.track(new ig(t, n));
      }
      function bg(e, t) {
        return e.queries.getByIndex(t);
      }
      function xg(e, t) {
        return hp(e, t);
      }
      function _g(e = ot.Default) {
        const t = sp(!0);
        if (null != t || e & ot.Optional) return t;
        Xs("ChangeDetectorRef");
      }
      const wg = {
        "\u0275\u0275attribute": rl,
        "\u0275\u0275attributeInterpolate1": fl,
        "\u0275\u0275attributeInterpolate2": gl,
        "\u0275\u0275attributeInterpolate3": yl,
        "\u0275\u0275attributeInterpolate4": vl,
        "\u0275\u0275attributeInterpolate5": bl,
        "\u0275\u0275attributeInterpolate6": xl,
        "\u0275\u0275attributeInterpolate7": _l,
        "\u0275\u0275attributeInterpolate8": wl,
        "\u0275\u0275attributeInterpolateV": Cl,
        "\u0275\u0275defineComponent": Ue,
        "\u0275\u0275defineDirective": Xe,
        "\u0275\u0275defineInjectable": T,
        "\u0275\u0275defineInjector": A,
        "\u0275\u0275defineNgModule": Qe,
        "\u0275\u0275definePipe": Ze,
        "\u0275\u0275directiveInject": tc,
        "\u0275\u0275getFactoryOf": Bi,
        "\u0275\u0275getInheritedFactory": zi,
        "\u0275\u0275inject": yt,
        "\u0275\u0275injectAttribute": nc,
        "\u0275\u0275invalidFactory": sc,
        "\u0275\u0275invalidFactoryDep": vt,
        "\u0275\u0275injectPipeChangeDetectorRef": _g,
        "\u0275\u0275templateRefExtractor": xg,
        "\u0275\u0275NgOnChangesFeature": ei,
        "\u0275\u0275ProvidersFeature": wh,
        "\u0275\u0275CopyDefinitionFeature": qa,
        "\u0275\u0275InheritDefinitionFeature": Va,
        "\u0275\u0275nextContext": _c,
        "\u0275\u0275namespaceHTML": Vn,
        "\u0275\u0275namespaceMathML": Ln,
        "\u0275\u0275namespaceSVG": Fn,
        "\u0275\u0275enableBindings": en,
        "\u0275\u0275disableBindings": tn,
        "\u0275\u0275elementStart": ac,
        "\u0275\u0275elementEnd": lc,
        "\u0275\u0275element": cc,
        "\u0275\u0275elementContainerStart": uc,
        "\u0275\u0275elementContainerEnd": dc,
        "\u0275\u0275elementContainer": hc,
        "\u0275\u0275pureFunction0": kf,
        "\u0275\u0275pureFunction1": Of,
        "\u0275\u0275pureFunction2": If,
        "\u0275\u0275pureFunction3": Tf,
        "\u0275\u0275pureFunction4": Af,
        "\u0275\u0275pureFunction5": Df,
        "\u0275\u0275pureFunction6": Mf,
        "\u0275\u0275pureFunction7": Pf,
        "\u0275\u0275pureFunction8": Rf,
        "\u0275\u0275pureFunctionV": jf,
        "\u0275\u0275getCurrentView": pc,
        "\u0275\u0275restoreView": rn,
        "\u0275\u0275listener": gc,
        "\u0275\u0275projection": Sc,
        "\u0275\u0275syntheticHostProperty": Ku,
        "\u0275\u0275syntheticHostListener": yc,
        "\u0275\u0275pipeBind1": Gf,
        "\u0275\u0275pipeBind2": Uf,
        "\u0275\u0275pipeBind3": $f,
        "\u0275\u0275pipeBind4": qf,
        "\u0275\u0275pipeBindV": Wf,
        "\u0275\u0275projectionDef": Cc,
        "\u0275\u0275hostProperty": Qu,
        "\u0275\u0275property": ic,
        "\u0275\u0275propertyInterpolate": Ec,
        "\u0275\u0275propertyInterpolate1": kc,
        "\u0275\u0275propertyInterpolate2": Oc,
        "\u0275\u0275propertyInterpolate3": Ic,
        "\u0275\u0275propertyInterpolate4": Tc,
        "\u0275\u0275propertyInterpolate5": Ac,
        "\u0275\u0275propertyInterpolate6": Dc,
        "\u0275\u0275propertyInterpolate7": Mc,
        "\u0275\u0275propertyInterpolate8": Pc,
        "\u0275\u0275propertyInterpolateV": Rc,
        "\u0275\u0275pipe": Hf,
        "\u0275\u0275queryRefresh": cg,
        "\u0275\u0275viewQuery": dg,
        "\u0275\u0275staticViewQuery": ug,
        "\u0275\u0275staticContentQuery": mg,
        "\u0275\u0275loadQuery": gg,
        "\u0275\u0275contentQuery": pg,
        "\u0275\u0275reference": El,
        "\u0275\u0275classMap": Xc,
        "\u0275\u0275classMapInterpolate1": wu,
        "\u0275\u0275classMapInterpolate2": Cu,
        "\u0275\u0275classMapInterpolate3": Su,
        "\u0275\u0275classMapInterpolate4": Eu,
        "\u0275\u0275classMapInterpolate5": ku,
        "\u0275\u0275classMapInterpolate6": Ou,
        "\u0275\u0275classMapInterpolate7": Iu,
        "\u0275\u0275classMapInterpolate8": Tu,
        "\u0275\u0275classMapInterpolateV": Au,
        "\u0275\u0275styleMap": Kc,
        "\u0275\u0275styleMapInterpolate1": Du,
        "\u0275\u0275styleMapInterpolate2": Mu,
        "\u0275\u0275styleMapInterpolate3": Pu,
        "\u0275\u0275styleMapInterpolate4": Ru,
        "\u0275\u0275styleMapInterpolate5": ju,
        "\u0275\u0275styleMapInterpolate6": Nu,
        "\u0275\u0275styleMapInterpolate7": Fu,
        "\u0275\u0275styleMapInterpolate8": Lu,
        "\u0275\u0275styleMapInterpolateV": Vu,
        "\u0275\u0275styleProp": Yc,
        "\u0275\u0275stylePropInterpolate1": Bu,
        "\u0275\u0275stylePropInterpolate2": zu,
        "\u0275\u0275stylePropInterpolate3": Hu,
        "\u0275\u0275stylePropInterpolate4": Gu,
        "\u0275\u0275stylePropInterpolate5": Uu,
        "\u0275\u0275stylePropInterpolate6": $u,
        "\u0275\u0275stylePropInterpolate7": qu,
        "\u0275\u0275stylePropInterpolate8": Wu,
        "\u0275\u0275stylePropInterpolateV": Yu,
        "\u0275\u0275classProp": Qc,
        "\u0275\u0275advance": io,
        "\u0275\u0275template": Sl,
        "\u0275\u0275text": du,
        "\u0275\u0275textInterpolate": hu,
        "\u0275\u0275textInterpolate1": pu,
        "\u0275\u0275textInterpolate2": mu,
        "\u0275\u0275textInterpolate3": fu,
        "\u0275\u0275textInterpolate4": gu,
        "\u0275\u0275textInterpolate5": yu,
        "\u0275\u0275textInterpolate6": vu,
        "\u0275\u0275textInterpolate7": bu,
        "\u0275\u0275textInterpolate8": xu,
        "\u0275\u0275textInterpolateV": _u,
        "\u0275\u0275i18n": uh,
        "\u0275\u0275i18nAttributes": dh,
        "\u0275\u0275i18nExp": hh,
        "\u0275\u0275i18nStart": lh,
        "\u0275\u0275i18nEnd": ch,
        "\u0275\u0275i18nApply": ph,
        "\u0275\u0275i18nPostprocess": mh,
        "\u0275\u0275resolveWindow": sr,
        "\u0275\u0275resolveDocument": ir,
        "\u0275\u0275resolveBody": rr,
        "\u0275\u0275setComponentScope": $e,
        "\u0275\u0275setNgModuleScope": Ke,
        "\u0275\u0275sanitizeHtml": Ls,
        "\u0275\u0275sanitizeStyle": Vs,
        "\u0275\u0275sanitizeResourceUrl": zs,
        "\u0275\u0275sanitizeScript": Hs,
        "\u0275\u0275sanitizeUrl": Bs,
        "\u0275\u0275sanitizeUrlOrResourceUrl": qs,
        "\u0275\u0275trustConstantHtml": Gs,
        "\u0275\u0275trustConstantScript": Us,
        "\u0275\u0275trustConstantResourceUrl": $s,
      };
      let Cg = null;
      const Sg = [],
        Eg = [];
      let kg = !1;
      function Og(e) {
        return Array.isArray(e) ? e.every(Og) : !!ie(e);
      }
      new Map(), new Map();
      function Ig(e, t) {
        const n = le(t.declarations || Sg),
          s = Ag(e);
        n.forEach((t) => {
          if (t.hasOwnProperty(Ne)) {
            Tg(et(t), s);
          } else
            t.hasOwnProperty(Fe) ||
              t.hasOwnProperty(Le) ||
              (t.ngSelectorScope = e);
        });
      }
      function Tg(e, t) {
        (e.directiveDefs = () =>
          Array.from(t.compilation.directives)
            .map((e) => (e.hasOwnProperty(Ne) ? et(e) : tt(e)))
            .filter((e) => !!e)),
          (e.pipeDefs = () =>
            Array.from(t.compilation.pipes).map((e) => nt(e))),
          (e.schemas = t.schemas),
          (e.tView = null);
      }
      function Ag(e) {
        if (!Mg(e))
          throw new Error(
            e.name + " does not have a module def (\u0275mod property)"
          );
        const t = st(e);
        if (null !== t.transitiveCompileScopes)
          return t.transitiveCompileScopes;
        const n = {
          schemas: t.schemas || null,
          compilation: { directives: new Set(), pipes: new Set() },
          exported: { directives: new Set(), pipes: new Set() },
        };
        return (
          ar(t.imports).forEach((e) => {
            const t = e;
            if (!Mg(t))
              throw new Error(
                `Importing ${t.name} which does not have a \u0275mod property`
              );
            const s = Ag(t);
            s.exported.directives.forEach((e) =>
              n.compilation.directives.add(e)
            ),
              s.exported.pipes.forEach((e) => n.compilation.pipes.add(e));
          }),
          ar(t.declarations).forEach((e) => {
            nt(e)
              ? n.compilation.pipes.add(e)
              : n.compilation.directives.add(e);
          }),
          ar(t.exports).forEach((e) => {
            const t = e;
            if (Mg(t)) {
              const e = Ag(t);
              e.exported.directives.forEach((e) => {
                n.compilation.directives.add(e), n.exported.directives.add(e);
              }),
                e.exported.pipes.forEach((e) => {
                  n.compilation.pipes.add(e), n.exported.pipes.add(e);
                });
            } else
              nt(t) ? n.exported.pipes.add(t) : n.exported.directives.add(t);
          }),
          (t.transitiveCompileScopes = n),
          n
        );
      }
      function Dg(e) {
        return (function (e) {
          return void 0 !== e.ngModule;
        })(e)
          ? e.ngModule
          : e;
      }
      function Mg(e) {
        return !!st(e);
      }
      let Pg = 0;
      function Rg(e, t) {
        let n = null;
        Ng(e, t || {}),
          Object.defineProperty(e, Fe, {
            get: () => {
              if (null === n) {
                const s = jg(e, t || {});
                n = te().compileDirective(wg, s.sourceMapUrl, s.metadata);
              }
              return n;
            },
            configurable: !1,
          });
      }
      function jg(e, t) {
        const n = e && e.name,
          s = `ng:///${n}/\u0275dir.js`,
          i = te(),
          r = Lg(e, t);
        return (
          (r.typeSourceSpan = i.createParseSourceSpan("Directive", n, s)),
          r.usesInheritance && Vg(e),
          { metadata: r, sourceMapUrl: s }
        );
      }
      function Ng(e, t) {
        let n = null;
        Object.defineProperty(e, ze, {
          get: () => {
            if (null === n) {
              const s = jg(e, t),
                i = te();
              n = i.compileFactory(
                wg,
                `ng:///${e.name}/\u0275fac.js`,
                Object.assign(Object.assign({}, s.metadata), {
                  injectFn: "directiveInject",
                  target: i.R3FactoryTarget.Directive,
                })
              );
            }
            return n;
          },
          configurable: !1,
        });
      }
      function Fg(e) {
        return Object.getPrototypeOf(e.prototype) === Object.prototype;
      }
      function Lg(e, t) {
        const n = Ee(),
          s = n.ownPropMetadata(e);
        return {
          name: e.name,
          type: e,
          typeArgumentCount: 0,
          selector: void 0 !== t.selector ? t.selector : null,
          deps: ke(e),
          host: t.host || Re,
          propMetadata: s,
          inputs: t.inputs || je,
          outputs: t.outputs || je,
          queries: zg(e, s, Hg),
          lifecycle: { usesOnChanges: n.hasLifecycleHook(e, "ngOnChanges") },
          typeSourceSpan: null,
          usesInheritance: !Fg(e),
          exportAs: ((i = t.exportAs), void 0 === i ? null : $g(i)),
          providers: t.providers || null,
          viewQueries: zg(e, s, Gg),
        };
        var i;
      }
      function Vg(e) {
        const t = Object.prototype;
        let n = Object.getPrototypeOf(e.prototype).constructor;
        for (; n && n !== t; )
          tt(n) || et(n) || !Wg(n) || Rg(n, null),
            (n = Object.getPrototypeOf(n));
      }
      function Bg(e, t) {
        return {
          propertyName: e,
          predicate: ((n = t.selector), "string" == typeof n ? $g(n) : ie(n)),
          descendants: t.descendants,
          first: t.first,
          read: t.read ? t.read : null,
          static: !!t.static,
        };
        var n;
      }
      function zg(e, t, n) {
        const s = [];
        for (const i in t)
          if (t.hasOwnProperty(i)) {
            const r = t[i];
            r.forEach((t) => {
              if (n(t)) {
                if (!t.selector)
                  throw new Error(
                    `Can't construct a query for the property "${i}" of "${rt(
                      e
                    )}" since the query selector wasn't defined.`
                  );
                if (r.some(Ug))
                  throw new Error(
                    "Cannot combine @Input decorators with query decorators"
                  );
                s.push(Bg(i, t));
              }
            });
          }
        return s;
      }
      function Hg(e) {
        const t = e.ngMetadataName;
        return "ContentChild" === t || "ContentChildren" === t;
      }
      function Gg(e) {
        const t = e.ngMetadataName;
        return "ViewChild" === t || "ViewChildren" === t;
      }
      function Ug(e) {
        return "Input" === e.ngMetadataName;
      }
      function $g(e) {
        return e.split(",").map((e) => e.trim());
      }
      const qg = [
        "ngOnChanges",
        "ngOnInit",
        "ngOnDestroy",
        "ngDoCheck",
        "ngAfterViewInit",
        "ngAfterViewChecked",
        "ngAfterContentInit",
        "ngAfterContentChecked",
      ];
      function Wg(e) {
        const t = Ee();
        if (qg.some((n) => t.hasLifecycleHook(e, n))) return !0;
        const n = t.propMetadata(e);
        for (const s in n) {
          const e = n[s];
          for (let t = 0; t < e.length; t++) {
            const n = e[t],
              s = n.ngMetadataName;
            if (
              Ug(n) ||
              Hg(n) ||
              Gg(n) ||
              "Output" === s ||
              "HostBinding" === s ||
              "HostListener" === s
            )
              return !0;
          }
        }
        return !1;
      }
      function Yg(e, t) {
        return {
          type: e,
          typeArgumentCount: 0,
          name: e.name,
          deps: ke(e),
          pipeName: t.name,
          pure: void 0 === t.pure || t.pure,
        };
      }
      const Qg = h(
          "Directive",
          (e = {}) => e,
          void 0,
          void 0,
          (e, t) => sy(e, t)
        ),
        Kg = h(
          "Component",
          (e = {}) => Object.assign({ changeDetection: $.Default }, e),
          Qg,
          void 0,
          (e, t) => ny(e, t)
        ),
        Jg = h(
          "Pipe",
          (e) => Object.assign({ pure: !0 }, e),
          void 0,
          void 0,
          (e, t) => iy(e, t)
        ),
        Xg = f("Input", (e) => ({ bindingPropertyName: e })),
        Zg = f("Output", (e) => ({ bindingPropertyName: e })),
        ey = f("HostBinding", (e) => ({ hostPropertyName: e })),
        ty = f("HostListener", (e, t) => ({ eventName: e, args: t })),
        ny = function (e, t) {
          let n = null;
          !(function (e, t) {
            De(t) && (Te.set(e, t), Ae.add(e));
          })(e, t),
            Ng(e, t),
            Object.defineProperty(e, Ne, {
              get: () => {
                if (null === n) {
                  const s = te();
                  if (De(t)) {
                    const n = [`Component '${e.name}' is not resolved:`];
                    throw (
                      (t.templateUrl &&
                        n.push(" - templateUrl: " + t.templateUrl),
                      t.styleUrls &&
                        t.styleUrls.length &&
                        n.push(" - styleUrls: " + JSON.stringify(t.styleUrls)),
                      n.push(
                        "Did you run and wait for 'resolveComponentResources()'?"
                      ),
                      new Error(n.join("\n")))
                    );
                  }
                  const i = Cg;
                  let r = t.preserveWhitespaces;
                  void 0 === r &&
                    (r =
                      null !== i &&
                      void 0 !== i.preserveWhitespaces &&
                      i.preserveWhitespaces);
                  let o = t.encapsulation;
                  void 0 === o &&
                    (o =
                      null !== i && void 0 !== i.defaultEncapsulation
                        ? i.defaultEncapsulation
                        : Pe.Emulated);
                  const a = t.templateUrl || `ng:///${e.name}/template.html`,
                    l = Object.assign(Object.assign({}, Lg(e, t)), {
                      typeSourceSpan: s.createParseSourceSpan(
                        "Component",
                        e.name,
                        a
                      ),
                      template: t.template || "",
                      preserveWhitespaces: r,
                      styles: t.styles || je,
                      animations: t.animations,
                      directives: [],
                      changeDetection: t.changeDetection,
                      pipes: new Map(),
                      encapsulation: o,
                      interpolation: t.interpolation,
                      viewProviders: t.viewProviders || null,
                    });
                  Pg++;
                  try {
                    l.usesInheritance && Vg(e),
                      (n = s.compileComponent(wg, a, l));
                  } finally {
                    Pg--;
                  }
                  if (
                    (0 === Pg &&
                      (function () {
                        if (!kg) {
                          kg = !0;
                          try {
                            for (let e = Eg.length - 1; e >= 0; e--) {
                              const { moduleType: t, ngModule: n } = Eg[e];
                              n.declarations &&
                                n.declarations.every(Og) &&
                                (Eg.splice(e, 1), Ig(t, n));
                            }
                          } finally {
                            kg = !1;
                          }
                        }
                      })(),
                    void 0 !== e.ngSelectorScope)
                  ) {
                    const t = Ag(e.ngSelectorScope);
                    Tg(n, t);
                  }
                }
                return n;
              },
              configurable: !1,
            });
        },
        sy = Rg,
        iy = function (e, t) {
          let n = null,
            s = null;
          Object.defineProperty(e, ze, {
            get: () => {
              if (null === s) {
                const n = Yg(e, t),
                  i = te();
                s = i.compileFactory(
                  wg,
                  `ng:///${n.name}/\u0275fac.js`,
                  Object.assign(Object.assign({}, n), {
                    injectFn: "directiveInject",
                    target: i.R3FactoryTarget.Pipe,
                  })
                );
              }
              return s;
            },
            configurable: !1,
          }),
            Object.defineProperty(e, Le, {
              get: () => {
                if (null === n) {
                  const s = Yg(e, t);
                  n = te().compilePipe(wg, `ng:///${s.name}/\u0275pipe.js`, s);
                }
                return n;
              },
              configurable: !1,
            });
        },
        ry = h(
          "NgModule",
          (e) => e,
          void 0,
          void 0,
          (e, t) => oy(e, t)
        );
      const oy = function (e, t = {}) {
          !(function (e, t, n = !1) {
            const s = le(t.declarations || Sg);
            let i = null;
            Object.defineProperty(e, Ve, {
              configurable: !0,
              get: () => (
                null === i &&
                  ((i = te().compileNgModule(
                    wg,
                    `ng:///${e.name}/\u0275mod.js`,
                    {
                      type: e,
                      bootstrap: le(t.bootstrap || Sg).map(ie),
                      declarations: s.map(ie),
                      imports: le(t.imports || Sg)
                        .map(ie)
                        .map(Dg),
                      exports: le(t.exports || Sg)
                        .map(ie)
                        .map(Dg),
                      schemas: t.schemas ? le(t.schemas) : null,
                      id: t.id || null,
                    }
                  )),
                  i.schemas || (i.schemas = [])),
                i
              ),
            });
            let r = null;
            Object.defineProperty(e, j, {
              get: () => {
                if (null === r) {
                  const n = {
                    name: e.name,
                    type: e,
                    deps: ke(e),
                    providers: t.providers || Sg,
                    imports: [
                      (t.imports || Sg).map(ie),
                      (t.exports || Sg).map(ie),
                    ],
                  };
                  r = te().compileInjector(
                    wg,
                    `ng:///${e.name}/\u0275inj.js`,
                    n
                  );
                }
                return r;
              },
              configurable: !1,
            });
          })(e, t),
            (function (e, t) {
              Eg.push({ moduleType: e, ngModule: t });
            })(e, t);
        },
        ay = new L("Application Initializer");
      class ly {
        constructor(e) {
          (this.appInits = e),
            (this.resolve = Ah),
            (this.reject = Ah),
            (this.initialized = !1),
            (this.done = !1),
            (this.donePromise = new Promise((e, t) => {
              (this.resolve = e), (this.reject = t);
            }));
        }
        runInitializers() {
          if (this.initialized) return;
          const e = [],
            t = () => {
              (this.done = !0), this.resolve();
            };
          if (this.appInits)
            for (let n = 0; n < this.appInits.length; n++) {
              const t = this.appInits[n]();
              mc(t) && e.push(t);
            }
          Promise.all(e)
            .then(() => {
              t();
            })
            .catch((e) => {
              this.reject(e);
            }),
            0 === e.length && t(),
            (this.initialized = !0);
        }
      }
      (ly.ɵfac = function (e) {
        return new (e || ly)(yt(ay, 8));
      }),
        (ly.ɵprov = T({ token: ly, factory: ly.ɵfac })),
        (ly.ctorParameters = () => [
          { type: Array, decorators: [{ type: g, args: [ay] }, { type: y }] },
        ]);
      const cy = new L("AppId");
      const uy = {
        provide: cy,
        useFactory: function () {
          return `${dy()}${dy()}${dy()}`;
        },
        deps: [],
      };
      function dy() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const hy = new L("Platform Initializer"),
        py = new L("Platform ID"),
        my = new L("appBootstrapListener"),
        fy = new L("Application Packages Root URL");
      class gy {
        log(e) {
          console.log(e);
        }
        warn(e) {
          console.warn(e);
        }
      }
      (gy.ɵfac = function (e) {
        return new (e || gy)();
      }),
        (gy.ɵprov = T({ token: gy, factory: gy.ɵfac }));
      const yy = new L("LocaleId"),
        vy = new L("DefaultCurrencyCode"),
        by = new L("Translations"),
        xy = new L("TranslationsFormat");
      var _y;
      !(function (e) {
        (e[(e.Error = 0)] = "Error"),
          (e[(e.Warning = 1)] = "Warning"),
          (e[(e.Ignore = 2)] = "Ignore");
      })(_y || (_y = {}));
      class wy {
        constructor(e, t) {
          (this.ngModuleFactory = e), (this.componentFactories = t);
        }
      }
      const Cy = function (e) {
          return new Ef(e);
        },
        Sy = Cy,
        Ey = function (e) {
          return Promise.resolve(Cy(e));
        },
        ky = function (e) {
          const t = Cy(e),
            n = ar(st(e).declarations).reduce((e, t) => {
              const n = et(t);
              return n && e.push(new vf(n)), e;
            }, []);
          return new wy(t, n);
        },
        Oy = ky,
        Iy = function (e) {
          return Promise.resolve(ky(e));
        };
      class Ty {
        constructor() {
          (this.compileModuleSync = Sy),
            (this.compileModuleAsync = Ey),
            (this.compileModuleAndAllComponentsSync = Oy),
            (this.compileModuleAndAllComponentsAsync = Iy);
        }
        clearCache() {}
        clearCacheFor(e) {}
        getModuleId(e) {}
      }
      (Ty.ɵfac = function (e) {
        return new (e || Ty)();
      }),
        (Ty.ɵprov = T({ token: Ty, factory: Ty.ɵfac }));
      const Ay = new L("compilerOptions");
      class Dy {}
      const My = Promise.resolve(0);
      function Py(e) {
        "undefined" == typeof Zone
          ? My.then(() => {
              e && e.apply(null, null);
            })
          : Zone.current.scheduleMicroTask("scheduleMicrotask", e);
      }
      class Ry {
        constructor({
          enableLongStackTrace: e = !1,
          shouldCoalesceEventChangeDetection: t = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new Jf(!1)),
            (this.onMicrotaskEmpty = new Jf(!1)),
            (this.onStable = new Jf(!1)),
            (this.onError = new Jf(!1)),
            "undefined" == typeof Zone)
          )
            throw new Error("In this configuration Angular requires Zone.js");
          Zone.assertZonePatched();
          const n = this;
          (n._nesting = 0),
            (n._outer = n._inner = Zone.current),
            Zone.TaskTrackingZoneSpec &&
              (n._inner = n._inner.fork(new Zone.TaskTrackingZoneSpec())),
            e &&
              Zone.longStackTraceZoneSpec &&
              (n._inner = n._inner.fork(Zone.longStackTraceZoneSpec)),
            (n.shouldCoalesceEventChangeDetection = t),
            (n.lastRequestAnimationFrameId = -1),
            (n.nativeRequestAnimationFrame = (function () {
              let e = J.requestAnimationFrame,
                t = J.cancelAnimationFrame;
              if ("undefined" != typeof Zone && e && t) {
                const n = e[Zone.__symbol__("OriginalDelegate")];
                n && (e = n);
                const s = t[Zone.__symbol__("OriginalDelegate")];
                s && (t = s);
              }
              return {
                nativeRequestAnimationFrame: e,
                nativeCancelAnimationFrame: t,
              };
            })().nativeRequestAnimationFrame),
            (function (e) {
              const t = () => {
                  !(function (e) {
                    if (-1 !== e.lastRequestAnimationFrameId) return;
                    (e.lastRequestAnimationFrameId =
                      e.nativeRequestAnimationFrame.call(J, () => {
                        e.fakeTopEventTask ||
                          (e.fakeTopEventTask = Zone.root.scheduleEventTask(
                            "fakeTopEventTask",
                            () => {
                              (e.lastRequestAnimationFrameId = -1),
                                Ly(e),
                                Fy(e);
                            },
                            void 0,
                            () => {},
                            () => {}
                          )),
                          e.fakeTopEventTask.invoke();
                      })),
                      Ly(e);
                  })(e);
                },
                n =
                  !!e.shouldCoalesceEventChangeDetection &&
                  e.nativeRequestAnimationFrame &&
                  t;
              e._inner = e._inner.fork({
                name: "angular",
                properties: { isAngularZone: !0, maybeDelayChangeDetection: n },
                onInvokeTask: (t, s, i, r, o, a) => {
                  try {
                    return Vy(e), t.invokeTask(i, r, o, a);
                  } finally {
                    n && "eventTask" === r.type && n(), By(e);
                  }
                },
                onInvoke: (t, n, s, i, r, o, a) => {
                  try {
                    return Vy(e), t.invoke(s, i, r, o, a);
                  } finally {
                    By(e);
                  }
                },
                onHasTask: (t, n, s, i) => {
                  t.hasTask(s, i),
                    n === s &&
                      ("microTask" == i.change
                        ? ((e._hasPendingMicrotasks = i.microTask),
                          Ly(e),
                          Fy(e))
                        : "macroTask" == i.change &&
                          (e.hasPendingMacrotasks = i.macroTask));
                },
                onHandleError: (t, n, s, i) => (
                  t.handleError(s, i),
                  e.runOutsideAngular(() => e.onError.emit(i)),
                  !1
                ),
              });
            })(n);
        }
        static isInAngularZone() {
          return !0 === Zone.current.get("isAngularZone");
        }
        static assertInAngularZone() {
          if (!Ry.isInAngularZone())
            throw new Error("Expected to be in Angular Zone, but it is not!");
        }
        static assertNotInAngularZone() {
          if (Ry.isInAngularZone())
            throw new Error("Expected to not be in Angular Zone, but it is!");
        }
        run(e, t, n) {
          return this._inner.run(e, t, n);
        }
        runTask(e, t, n, s) {
          const i = this._inner,
            r = i.scheduleEventTask("NgZoneEvent: " + s, e, Ny, jy, jy);
          try {
            return i.runTask(r, t, n);
          } finally {
            i.cancelTask(r);
          }
        }
        runGuarded(e, t, n) {
          return this._inner.runGuarded(e, t, n);
        }
        runOutsideAngular(e) {
          return this._outer.run(e);
        }
      }
      function jy() {}
      const Ny = {};
      function Fy(e) {
        if (0 == e._nesting && !e.hasPendingMicrotasks && !e.isStable)
          try {
            e._nesting++, e.onMicrotaskEmpty.emit(null);
          } finally {
            if ((e._nesting--, !e.hasPendingMicrotasks))
              try {
                e.runOutsideAngular(() => e.onStable.emit(null));
              } finally {
                e.isStable = !0;
              }
          }
      }
      function Ly(e) {
        e._hasPendingMicrotasks ||
        (e.shouldCoalesceEventChangeDetection &&
          -1 !== e.lastRequestAnimationFrameId)
          ? (e.hasPendingMicrotasks = !0)
          : (e.hasPendingMicrotasks = !1);
      }
      function Vy(e) {
        e._nesting++,
          e.isStable && ((e.isStable = !1), e.onUnstable.emit(null));
      }
      function By(e) {
        e._nesting--, Fy(e);
      }
      class zy {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new Jf()),
            (this.onMicrotaskEmpty = new Jf()),
            (this.onStable = new Jf()),
            (this.onError = new Jf());
        }
        run(e, t, n) {
          return e.apply(t, n);
        }
        runGuarded(e, t, n) {
          return e.apply(t, n);
        }
        runOutsideAngular(e) {
          return e();
        }
        runTask(e, t, n, s) {
          return e.apply(t, n);
        }
      }
      class Hy {
        constructor(e) {
          (this._ngZone = e),
            (this._pendingCount = 0),
            (this._isZoneStable = !0),
            (this._didWork = !1),
            (this._callbacks = []),
            (this.taskTrackingZone = null),
            this._watchAngularEvents(),
            e.run(() => {
              this.taskTrackingZone =
                "undefined" == typeof Zone
                  ? null
                  : Zone.current.get("TaskTrackingZone");
            });
        }
        _watchAngularEvents() {
          this._ngZone.onUnstable.subscribe({
            next: () => {
              (this._didWork = !0), (this._isZoneStable = !1);
            },
          }),
            this._ngZone.runOutsideAngular(() => {
              this._ngZone.onStable.subscribe({
                next: () => {
                  Ry.assertNotInAngularZone(),
                    Py(() => {
                      (this._isZoneStable = !0), this._runCallbacksIfReady();
                    });
                },
              });
            });
        }
        increasePendingRequestCount() {
          return (
            (this._pendingCount += 1), (this._didWork = !0), this._pendingCount
          );
        }
        decreasePendingRequestCount() {
          if (((this._pendingCount -= 1), this._pendingCount < 0))
            throw new Error("pending async requests below zero");
          return this._runCallbacksIfReady(), this._pendingCount;
        }
        isStable() {
          return (
            this._isZoneStable &&
            0 === this._pendingCount &&
            !this._ngZone.hasPendingMacrotasks
          );
        }
        _runCallbacksIfReady() {
          if (this.isStable())
            Py(() => {
              for (; 0 !== this._callbacks.length; ) {
                let e = this._callbacks.pop();
                clearTimeout(e.timeoutId), e.doneCb(this._didWork);
              }
              this._didWork = !1;
            });
          else {
            let e = this.getPendingTasks();
            (this._callbacks = this._callbacks.filter(
              (t) =>
                !t.updateCb || !t.updateCb(e) || (clearTimeout(t.timeoutId), !1)
            )),
              (this._didWork = !0);
          }
        }
        getPendingTasks() {
          return this.taskTrackingZone
            ? this.taskTrackingZone.macroTasks.map((e) => ({
                source: e.source,
                creationLocation: e.creationLocation,
                data: e.data,
              }))
            : [];
        }
        addCallback(e, t, n) {
          let s = -1;
          t &&
            t > 0 &&
            (s = setTimeout(() => {
              (this._callbacks = this._callbacks.filter(
                (e) => e.timeoutId !== s
              )),
                e(this._didWork, this.getPendingTasks());
            }, t)),
            this._callbacks.push({ doneCb: e, timeoutId: s, updateCb: n });
        }
        whenStable(e, t, n) {
          if (n && !this.taskTrackingZone)
            throw new Error(
              'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/dist/task-tracking.js" loaded?'
            );
          this.addCallback(e, t, n), this._runCallbacksIfReady();
        }
        getPendingRequestCount() {
          return this._pendingCount;
        }
        findProviders(e, t, n) {
          return [];
        }
      }
      (Hy.ɵfac = function (e) {
        return new (e || Hy)(yt(Ry));
      }),
        (Hy.ɵprov = T({ token: Hy, factory: Hy.ɵfac })),
        (Hy.ctorParameters = () => [{ type: Ry }]);
      class Gy {
        constructor() {
          (this._applications = new Map()), qy.addToWindow(this);
        }
        registerApplication(e, t) {
          this._applications.set(e, t);
        }
        unregisterApplication(e) {
          this._applications.delete(e);
        }
        unregisterAllApplications() {
          this._applications.clear();
        }
        getTestability(e) {
          return this._applications.get(e) || null;
        }
        getAllTestabilities() {
          return Array.from(this._applications.values());
        }
        getAllRootElements() {
          return Array.from(this._applications.keys());
        }
        findTestabilityInTree(e, t = !0) {
          return qy.findTestabilityInTree(this, e, t);
        }
      }
      (Gy.ɵfac = function (e) {
        return new (e || Gy)();
      }),
        (Gy.ɵprov = T({ token: Gy, factory: Gy.ɵfac })),
        (Gy.ctorParameters = () => []);
      function Uy(e) {
        qy = e;
      }
      let $y,
        qy = new (class {
          addToWindow(e) {}
          findTestabilityInTree(e, t, n) {
            return null;
          }
        })(),
        Wy = function (e, t, n) {
          const s = new Ef(n);
          if ("undefined" != typeof ngJitMode && !ngJitMode)
            return Promise.resolve(s);
          const i = e.get(Ay, []).concat(t);
          if (
            ((function (e) {
              if (null !== Cg) {
                if (e.defaultEncapsulation !== Cg.defaultEncapsulation) return;
                if (e.preserveWhitespaces !== Cg.preserveWhitespaces) return;
              }
              Cg = e;
            })({
              defaultEncapsulation: iv(i.map((e) => e.defaultEncapsulation)),
              preserveWhitespaces: iv(i.map((e) => e.preserveWhitespaces)),
            }),
            (function () {
              return 0 === Te.size;
            })())
          )
            return Promise.resolve(s);
          const r = (function (e) {
            const t = [];
            return e.forEach((e) => e && t.push(...e)), t;
          })(i.map((e) => e.providers));
          if (0 === r.length) return Promise.resolve(s);
          const o = te(),
            a = Ea.create({ providers: r }).get(o.ResourceLoader);
          return Ie((e) => Promise.resolve(a.get(e))).then(() => s);
        };
      let Yy = function () {},
        Qy = function (e) {
          return e.isBoundToModule;
        };
      const Ky = new L("AllowMultipleToken");
      class Jy {
        constructor(e, t) {
          (this.name = e), (this.token = t);
        }
      }
      function Xy(e, t, n = []) {
        const s = "Platform: " + t,
          i = new L(s);
        return (t = []) => {
          let r = Zy();
          if (!r || r.injector.get(Ky, !1))
            if (e) e(n.concat(t).concat({ provide: i, useValue: !0 }));
            else {
              const e = n
                .concat(t)
                .concat(
                  { provide: i, useValue: !0 },
                  { provide: da, useValue: "platform" }
                );
              !(function (e) {
                if ($y && !$y.destroyed && !$y.injector.get(Ky, !1))
                  throw new Error(
                    "There can be only one platform. Destroy the previous one to create a new one."
                  );
                Yy(), ($y = e.get(ev));
                const t = e.get(hy, null);
                t && t.forEach((e) => e());
              })(Ea.create({ providers: e, name: s }));
            }
          return (function (e) {
            const t = Zy();
            if (!t) throw new Error("No platform exists!");
            if (!t.injector.get(e, null))
              throw new Error(
                "A platform with a different configuration has been created. Please destroy it first."
              );
            return t;
          })(i);
        };
      }
      function Zy() {
        return $y && !$y.destroyed ? $y : null;
      }
      class ev {
        constructor(e) {
          (this._injector = e),
            (this._modules = []),
            (this._destroyListeners = []),
            (this._destroyed = !1);
        }
        bootstrapModuleFactory(e, t) {
          const n = (function (e, t) {
              let n;
              n =
                "noop" === e
                  ? new zy()
                  : ("zone.js" === e ? void 0 : e) ||
                    new Ry({
                      enableLongStackTrace: os(),
                      shouldCoalesceEventChangeDetection: t,
                    });
              return n;
            })(t ? t.ngZone : void 0, (t && t.ngZoneEventCoalescing) || !1),
            s = [{ provide: Ry, useValue: n }];
          return n.run(() => {
            const t = Ea.create({
                providers: s,
                parent: this.injector,
                name: e.moduleType.name,
              }),
              i = e.create(t),
              r = i.injector.get($i, null);
            if (!r)
              throw new Error(
                "No ErrorHandler. Is platform module (BrowserModule) included?"
              );
            return (
              i.onDestroy(() => sv(this._modules, i)),
              n.runOutsideAngular(() =>
                n.onError.subscribe({
                  next: (e) => {
                    r.handleError(e);
                  },
                })
              ),
              (function (e, t, n) {
                try {
                  const s = n();
                  return mc(s)
                    ? s.catch((n) => {
                        throw (t.runOutsideAngular(() => e.handleError(n)), n);
                      })
                    : s;
                } catch (s) {
                  throw (t.runOutsideAngular(() => e.handleError(s)), s);
                }
              })(r, n, () => {
                const e = i.injector.get(ly);
                return (
                  e.runInitializers(),
                  e.donePromise.then(() => {
                    hd(i.injector.get(yy, ad) || ad);
                    return this._moduleDoBootstrap(i), i;
                  })
                );
              })
            );
          });
        }
        bootstrapModule(e, t = []) {
          const n = tv({}, t);
          return Wy(this.injector, n, e).then((e) =>
            this.bootstrapModuleFactory(e, n)
          );
        }
        _moduleDoBootstrap(e) {
          const t = e.injector.get(nv);
          if (e._bootstrapComponents.length > 0)
            e._bootstrapComponents.forEach((e) => t.bootstrap(e));
          else {
            if (!e.instance.ngDoBootstrap)
              throw new Error(
                `The module ${w(
                  e.instance.constructor
                )} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.`
              );
            e.instance.ngDoBootstrap(t);
          }
          this._modules.push(e);
        }
        onDestroy(e) {
          this._destroyListeners.push(e);
        }
        get injector() {
          return this._injector;
        }
        destroy() {
          if (this._destroyed)
            throw new Error("The platform has already been destroyed!");
          this._modules.slice().forEach((e) => e.destroy()),
            this._destroyListeners.forEach((e) => e()),
            (this._destroyed = !0);
        }
        get destroyed() {
          return this._destroyed;
        }
      }
      function tv(e, t) {
        return (e = Array.isArray(t)
          ? t.reduce(tv, e)
          : Object.assign(Object.assign({}, e), t));
      }
      (ev.ɵfac = function (e) {
        return new (e || ev)(yt(Ea));
      }),
        (ev.ɵprov = T({ token: ev, factory: ev.ɵfac })),
        (ev.ctorParameters = () => [{ type: Ea }]);
      class nv {
        constructor(e, t, n, s, i, l) {
          (this._zone = e),
            (this._console = t),
            (this._injector = n),
            (this._exceptionHandler = s),
            (this._componentFactoryResolver = i),
            (this._initStatus = l),
            (this._bootstrapListeners = []),
            (this._views = []),
            (this._runningTick = !1),
            (this._enforceNoNewChanges = !1),
            (this._stable = !0),
            (this.componentTypes = []),
            (this.components = []),
            (this._enforceNoNewChanges = os()),
            this._zone.onMicrotaskEmpty.subscribe({
              next: () => {
                this._zone.run(() => {
                  this.tick();
                });
              },
            });
          const c = new r.a((e) => {
              (this._stable =
                this._zone.isStable &&
                !this._zone.hasPendingMacrotasks &&
                !this._zone.hasPendingMicrotasks),
                this._zone.runOutsideAngular(() => {
                  e.next(this._stable), e.complete();
                });
            }),
            u = new r.a((e) => {
              let t;
              this._zone.runOutsideAngular(() => {
                t = this._zone.onStable.subscribe(() => {
                  Ry.assertNotInAngularZone(),
                    Py(() => {
                      this._stable ||
                        this._zone.hasPendingMacrotasks ||
                        this._zone.hasPendingMicrotasks ||
                        ((this._stable = !0), e.next(!0));
                    });
                });
              });
              const n = this._zone.onUnstable.subscribe(() => {
                Ry.assertInAngularZone(),
                  this._stable &&
                    ((this._stable = !1),
                    this._zone.runOutsideAngular(() => {
                      e.next(!1);
                    }));
              });
              return () => {
                t.unsubscribe(), n.unsubscribe();
              };
            });
          this.isStable = Object(o.a)(c, u.pipe(Object(a.a)()));
        }
        bootstrap(e, t) {
          if (!this._initStatus.done)
            throw new Error(
              "Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module."
            );
          let n;
          (n =
            e instanceof Sh
              ? e
              : this._componentFactoryResolver.resolveComponentFactory(e)),
            this.componentTypes.push(n.componentType);
          const s = Qy(n) ? void 0 : this._injector.get(pp),
            i = t || n.selector,
            r = n.create(Ea.NULL, [], i, s);
          r.onDestroy(() => {
            this._unloadComponent(r);
          });
          const o = r.injector.get(Hy, null);
          return (
            o &&
              r.injector
                .get(Gy)
                .registerApplication(r.location.nativeElement, o),
            this._loadComponent(r),
            os() &&
              this._console.log(
                "Angular is running in development mode. Call enableProdMode() to enable production mode."
              ),
            r
          );
        }
        tick() {
          if (this._runningTick)
            throw new Error("ApplicationRef.tick is called recursively");
          try {
            this._runningTick = !0;
            for (let e of this._views) e.detectChanges();
            if (this._enforceNoNewChanges)
              for (let e of this._views) e.checkNoChanges();
          } catch (e) {
            this._zone.runOutsideAngular(() =>
              this._exceptionHandler.handleError(e)
            );
          } finally {
            this._runningTick = !1;
          }
        }
        attachView(e) {
          const t = e;
          this._views.push(t), t.attachToAppRef(this);
        }
        detachView(e) {
          const t = e;
          sv(this._views, t), t.detachFromAppRef();
        }
        _loadComponent(e) {
          this.attachView(e.hostView), this.tick(), this.components.push(e);
          this._injector
            .get(my, [])
            .concat(this._bootstrapListeners)
            .forEach((t) => t(e));
        }
        _unloadComponent(e) {
          this.detachView(e.hostView), sv(this.components, e);
        }
        ngOnDestroy() {
          this._views.slice().forEach((e) => e.destroy());
        }
        get viewCount() {
          return this._views.length;
        }
      }
      function sv(e, t) {
        const n = e.indexOf(t);
        n > -1 && e.splice(n, 1);
      }
      function iv(e) {
        for (let t = e.length - 1; t >= 0; t--)
          if (void 0 !== e[t]) return e[t];
      }
      (nv.ɵfac = function (e) {
        return new (e || nv)(yt(Ry), yt(gy), yt(Ea), yt($i), yt(Oh), yt(ly));
      }),
        (nv.ɵprov = T({ token: nv, factory: nv.ɵfac })),
        (nv.ctorParameters = () => [
          { type: Ry },
          { type: gy },
          { type: Ea },
          { type: $i },
          { type: Oh },
          { type: ly },
        ]);
      class rv {}
      class ov {}
      const av = { factoryPathPrefix: "", factoryPathSuffix: ".ngfactory" };
      class lv {
        constructor(e, t) {
          (this._compiler = e), (this._config = t || av);
        }
        load(e) {
          return this.loadAndCompile(e);
        }
        loadAndCompile(e) {
          let [t, s] = e.split("#");
          return (
            void 0 === s && (s = "default"),
            n("zn8P")(t)
              .then((e) => e[s])
              .then((e) => cv(e, t, s))
              .then((e) => this._compiler.compileModuleAsync(e))
          );
        }
        loadFactory(e) {
          let [t, s] = e.split("#"),
            i = "NgFactory";
          return (
            void 0 === s && ((s = "default"), (i = "")),
            n("zn8P")(
              this._config.factoryPathPrefix +
                t +
                this._config.factoryPathSuffix
            )
              .then((e) => e[s + i])
              .then((e) => cv(e, t, s))
          );
        }
      }
      function cv(e, t, n) {
        if (!e) throw new Error(`Cannot find '${n}' in '${t}'`);
        return e;
      }
      (lv.ɵfac = function (e) {
        return new (e || lv)(yt(Ty), yt(ov, 8));
      }),
        (lv.ɵprov = T({ token: lv, factory: lv.ɵfac })),
        (lv.ctorParameters = () => [
          { type: Ty },
          { type: ov, decorators: [{ type: y }] },
        ]);
      class uv {
        constructor(e, t) {
          (this.name = e), (this.callback = t);
        }
      }
      class dv {
        constructor(e, t, n) {
          (this.listeners = []),
            (this.parent = null),
            (this._debugContext = n),
            (this.nativeNode = e),
            t && t instanceof hv && t.addChild(this);
        }
        get injector() {
          return this._debugContext.injector;
        }
        get componentInstance() {
          return this._debugContext.component;
        }
        get context() {
          return this._debugContext.context;
        }
        get references() {
          return this._debugContext.references;
        }
        get providerTokens() {
          return this._debugContext.providerTokens;
        }
      }
      class hv extends dv {
        constructor(e, t, n) {
          super(e, t, n),
            (this.properties = {}),
            (this.attributes = {}),
            (this.classes = {}),
            (this.styles = {}),
            (this.childNodes = []),
            (this.nativeElement = e);
        }
        addChild(e) {
          e && (this.childNodes.push(e), (e.parent = this));
        }
        removeChild(e) {
          const t = this.childNodes.indexOf(e);
          -1 !== t && ((e.parent = null), this.childNodes.splice(t, 1));
        }
        insertChildrenAfter(e, t) {
          const n = this.childNodes.indexOf(e);
          -1 !== n &&
            (this.childNodes.splice(n + 1, 0, ...t),
            t.forEach((t) => {
              t.parent && t.parent.removeChild(t), (e.parent = this);
            }));
        }
        insertBefore(e, t) {
          const n = this.childNodes.indexOf(e);
          -1 === n
            ? this.addChild(t)
            : (t.parent && t.parent.removeChild(t),
              (t.parent = this),
              this.childNodes.splice(n, 0, t));
        }
        query(e) {
          return this.queryAll(e)[0] || null;
        }
        queryAll(e) {
          const t = [];
          return pv(this, e, t), t;
        }
        queryAllNodes(e) {
          const t = [];
          return mv(this, e, t), t;
        }
        get children() {
          return this.childNodes.filter((e) => e instanceof hv);
        }
        triggerEventHandler(e, t) {
          this.listeners.forEach((n) => {
            n.name == e && n.callback(t);
          });
        }
      }
      function pv(e, t, n) {
        e.childNodes.forEach((e) => {
          e instanceof hv && (t(e) && n.push(e), pv(e, t, n));
        });
      }
      function mv(e, t, n) {
        e instanceof hv &&
          e.childNodes.forEach((e) => {
            t(e) && n.push(e), e instanceof hv && mv(e, t, n);
          });
      }
      class fv {
        constructor(e) {
          this.nativeNode = e;
        }
        get parent() {
          const e = this.nativeNode.parentNode;
          return e ? new gv(e) : null;
        }
        get injector() {
          return Ta(this.nativeNode);
        }
        get componentInstance() {
          const e = this.nativeNode;
          return e && (ka(e) || Ia(e));
        }
        get context() {
          return ka(this.nativeNode) || Oa(this.nativeNode);
        }
        get listeners() {
          return Da(this.nativeNode).filter((e) => "dom" === e.type);
        }
        get references() {
          return (function (e) {
            const t = Aa(e, !1);
            return null === t
              ? {}
              : (void 0 === t.localRefs &&
                  (t.localRefs = (function (e, t) {
                    const n = e[1].data[t];
                    if (n && n.localNames) {
                      const t = {};
                      let s = n.index + 1;
                      for (let i = 0; i < n.localNames.length; i += 2)
                        (t[n.localNames[i]] = e[s]), s++;
                      return t;
                    }
                    return null;
                  })(t.lView, t.nodeIndex)),
                t.localRefs || {});
          })(this.nativeNode);
        }
        get providerTokens() {
          return (function (e) {
            const t = Aa(e, !1);
            if (null === t) return [];
            const n = t.lView[1],
              s = n.data[t.nodeIndex],
              i = [],
              r = 1048575 & s.providerIndexes,
              o = s.directiveEnd;
            for (let l = r; l < o; l++) {
              let e = n.data[l];
              void 0 !== (a = e).type &&
                void 0 !== a.template &&
                void 0 !== a.declaredInputs &&
                (e = e.type),
                i.push(e);
            }
            var a;
            return i;
          })(this.nativeNode);
        }
      }
      class gv extends fv {
        constructor(e) {
          super(e);
        }
        get nativeElement() {
          return this.nativeNode.nodeType == Node.ELEMENT_NODE
            ? this.nativeNode
            : null;
        }
        get name() {
          try {
            const e = Aa(this.nativeNode),
              t = e.lView[1].data;
            return t[e.nodeIndex].value;
          } catch (e) {
            return this.nativeNode.nodeName;
          }
        }
        get properties() {
          const e = Aa(this.nativeNode, !1);
          if (null == e) return {};
          const t = e.lView,
            n = t[1].data,
            s = n[e.nodeIndex],
            i = {};
          return (
            (function (e, t) {
              if (e) {
                let n = Object.getPrototypeOf(e);
                const s = Node.prototype;
                for (; null !== n && n !== s; ) {
                  const s = Object.getOwnPropertyDescriptors(n);
                  for (let n in s)
                    if (!n.startsWith("__") && !n.startsWith("on")) {
                      const s = e[n];
                      yv(s) && (t[n] = s);
                    }
                  n = Object.getPrototypeOf(n);
                }
              }
            })(this.nativeElement, i),
            (function (e, t, n, s) {
              let i = t.propertyBindings;
              if (null !== i)
                for (let r = 0; r < i.length; r++) {
                  const t = i[r],
                    o = s[t].split(or),
                    a = o[0];
                  if (o.length > 1) {
                    let s = o[1];
                    for (let e = 1; e < o.length - 1; e++)
                      s += it(n[t + e - 1]) + o[e + 1];
                    e[a] = s;
                  } else e[a] = n[t];
                }
            })(i, s, t, n),
            i
          );
        }
        get attributes() {
          const e = {},
            t = this.nativeElement;
          if (!t) return e;
          const n = Aa(t, !1);
          if (null == n) return {};
          const s = n.lView[1].data[n.nodeIndex].attrs,
            i = [];
          if (s) {
            let t = 0;
            for (; t < s.length; ) {
              const n = s[t];
              if ("string" != typeof n) break;
              const r = s[t + 1];
              (e[n] = r), i.push(n.toLowerCase()), (t += 2);
            }
          }
          const r = t.attributes;
          for (let o = 0; o < r.length; o++) {
            const t = r[o],
              n = t.name.toLowerCase();
            -1 === i.indexOf(n) && (e[n] = t.value);
          }
          return e;
        }
        get styles() {
          return this.nativeElement && this.nativeElement.style
            ? this.nativeElement.style
            : {};
        }
        get classes() {
          const e = {},
            t = this.nativeElement.className;
          return (
            (t && "string" != typeof t
              ? t.baseVal.split(" ")
              : t.split(" ")
            ).forEach((t) => (e[t] = !0)),
            e
          );
        }
        get childNodes() {
          const e = this.nativeNode.childNodes,
            t = [];
          for (let n = 0; n < e.length; n++) {
            const s = e[n];
            t.push(Ev(s));
          }
          return t;
        }
        get children() {
          const e = this.nativeElement;
          if (!e) return [];
          const t = e.children,
            n = [];
          for (let s = 0; s < t.length; s++) {
            const e = t[s];
            n.push(Ev(e));
          }
          return n;
        }
        query(e) {
          return this.queryAll(e)[0] || null;
        }
        queryAll(e) {
          const t = [];
          return vv(this, e, t, !0), t;
        }
        queryAllNodes(e) {
          const t = [];
          return vv(this, e, t, !1), t;
        }
        triggerEventHandler(e, t) {
          const n = this.nativeNode,
            s = [];
          this.listeners.forEach((i) => {
            if (i.name === e) {
              const e = i.callback;
              e.call(n, t), s.push(e);
            }
          }),
            "function" == typeof n.eventListeners &&
              n.eventListeners(e).forEach((e) => {
                if (-1 !== e.toString().indexOf("__ngUnwrap__")) {
                  const i = e("__ngUnwrap__");
                  return -1 === s.indexOf(i) && i.call(n, t);
                }
              });
        }
      }
      function yv(e) {
        return (
          "string" == typeof e ||
          "boolean" == typeof e ||
          "number" == typeof e ||
          null === e
        );
      }
      function vv(e, t, n, s) {
        const i = Aa(e.nativeNode, !1);
        if (null !== i) {
          bv(i.lView[1].data[i.nodeIndex], i.lView, t, n, s, e.nativeNode);
        } else wv(e.nativeNode, t, n, s);
      }
      function bv(e, t, n, s, i, r) {
        const o = (function (e, t) {
          const n = null === e ? -1 : e.index;
          if (-1 !== n) {
            return Vt(t[n]);
          }
          return null;
        })(e, t);
        if (11 & e.type) {
          if ((_v(o, n, s, i, r), Dt(e))) {
            const o = Ut(e.index, t);
            o && o[1].firstChild && bv(o[1].firstChild, o, n, s, i, r);
          } else e.child && bv(e.child, t, n, s, i, r), o && wv(o, n, s, i);
          const a = t[e.index];
          Tt(a) && xv(a, n, s, i, r);
        } else if (4 & e.type) {
          const o = t[e.index];
          _v(o[7], n, s, i, r), xv(o, n, s, i, r);
        } else if (16 & e.type) {
          const o = t[16],
            a = o[6].projection[e.projection];
          if (Array.isArray(a)) for (let e of a) _v(e, n, s, i, r);
          else if (a) {
            const e = o[3];
            bv(e[1].data[a.index], e, n, s, i, r);
          }
        } else e.child && bv(e.child, t, n, s, i, r);
        if (r !== o) {
          const o = 4 & e.flags ? e.projectionNext : e.next;
          o && bv(o, t, n, s, i, r);
        }
      }
      function xv(e, t, n, s, i) {
        for (let r = Ot; r < e.length; r++) {
          const o = e[r],
            a = o[1].firstChild;
          a && bv(a, o, t, n, s, i);
        }
      }
      function _v(e, t, n, s, i) {
        if (i !== e) {
          const i = kv(e);
          if (!i) return;
          ((s && i instanceof gv && t(i) && -1 === n.indexOf(i)) ||
            (!s && t(i) && -1 === n.indexOf(i))) &&
            n.push(i);
        }
      }
      function wv(e, t, n, s) {
        const i = e.childNodes,
          r = i.length;
        for (let o = 0; o < r; o++) {
          const e = i[o],
            r = kv(e);
          r &&
            (((s && r instanceof gv && t(r) && -1 === n.indexOf(r)) ||
              (!s && t(r) && -1 === n.indexOf(r))) &&
              n.push(r),
            wv(e, t, n, s));
        }
      }
      const Cv = new Map();
      const Sv = "__ng_debug__";
      function Ev(e) {
        return e instanceof Node
          ? (e.hasOwnProperty(Sv) ||
              (e.__ng_debug__ =
                e.nodeType == Node.ELEMENT_NODE ? new gv(e) : new fv(e)),
            e.__ng_debug__)
          : null;
      }
      const kv = Ev;
      const Ov = function (e) {
        return null;
      };
      function Iv(e) {
        Cv.set(e.nativeNode, e);
      }
      const Tv = Xy(null, "core", [
        { provide: py, useValue: "unknown" },
        { provide: ev, deps: [Ea] },
        { provide: Gy, deps: [] },
        { provide: gy, deps: [] },
      ]);
      const Av = [
        { provide: nv, useClass: nv, deps: [Ry, gy, Ea, $i, Oh, ly] },
        {
          provide: yf,
          deps: [Ry],
          useFactory: function (e) {
            let t = [];
            return (
              e.onStable.subscribe(() => {
                for (; t.length; ) t.pop()();
              }),
              function (e) {
                t.push(e);
              }
            );
          },
        },
        { provide: ly, useClass: ly, deps: [[new y(), ay]] },
        { provide: Ty, useClass: Ty, deps: [] },
        uy,
        {
          provide: Kh,
          useFactory: function () {
            return op;
          },
          deps: [],
        },
        {
          provide: Jh,
          useFactory: function () {
            return ap;
          },
          deps: [],
        },
        {
          provide: yy,
          useFactory: function (e) {
            return (
              hd(
                (e =
                  e ||
                  ("undefined" != typeof $localize && $localize.locale) ||
                  ad)
              ),
              e
            );
          },
          deps: [[new g(yy), new y(), new b()]],
        },
        { provide: vy, useValue: "USD" },
      ];
      class Dv {
        constructor(e) {}
      }
      function Mv(e, t, n, s, i, r) {
        e |= 1;
        const { matchedQueries: o, references: a, matchedQueryIds: l } = Zp(t);
        return {
          nodeIndex: -1,
          parent: null,
          renderParent: null,
          bindingIndex: -1,
          outputIndex: -1,
          flags: e,
          checkIndex: -1,
          childFlags: 0,
          directChildFlags: 0,
          childMatchedQueries: 0,
          matchedQueries: o,
          matchedQueryIds: l,
          references: a,
          ngContentIndex: n,
          childCount: s,
          bindings: [],
          bindingFlags: 0,
          outputs: [],
          element: {
            ns: null,
            name: null,
            attrs: null,
            template: r ? sm(r) : null,
            componentProvider: null,
            componentView: null,
            componentRendererType: null,
            publicProviders: null,
            allProviders: null,
            handleEvent: i || Pp,
          },
          provider: null,
          text: null,
          query: null,
          ngContent: null,
        };
      }
      function Pv(e, t, n, s, i, r, o = [], a, l, c, u, d) {
        c || (c = Pp);
        const { matchedQueries: h, references: p, matchedQueryIds: m } = Zp(n);
        let f = null,
          g = null;
        r && ([f, g] = um(r)), (a = a || []);
        const y = [];
        for (let x = 0; x < a.length; x++) {
          const [e, t, n] = a[x],
            [s, i] = um(t);
          let r = void 0,
            o = void 0;
          switch (15 & e) {
            case 4:
              o = n;
              break;
            case 1:
            case 8:
              r = n;
          }
          y[x] = {
            flags: e,
            ns: s,
            name: i,
            nonMinifiedName: i,
            securityContext: r,
            suffix: o,
          };
        }
        l = l || [];
        const v = [];
        for (let x = 0; x < l.length; x++) {
          const [e, t] = l[x];
          v[x] = { type: 0, target: e, eventName: t, propName: null };
        }
        const b = (o = o || []).map(([e, t]) => {
          const [n, s] = um(e);
          return [n, s, t];
        });
        return (
          (d = (function (e) {
            if (e && e.id === Fp) {
              const t =
                (null != e.encapsulation && e.encapsulation !== Pe.None) ||
                e.styles.length ||
                Object.keys(e.data).length;
              e.id = t ? "c" + Bp++ : Lp;
            }
            return e && e.id === Lp && (e = null), e || null;
          })(d)),
          u && (t |= 33554432),
          {
            nodeIndex: -1,
            parent: null,
            renderParent: null,
            bindingIndex: -1,
            outputIndex: -1,
            checkIndex: e,
            flags: (t |= 1),
            childFlags: 0,
            directChildFlags: 0,
            childMatchedQueries: 0,
            matchedQueries: h,
            matchedQueryIds: m,
            references: p,
            ngContentIndex: s,
            childCount: i,
            bindings: y,
            bindingFlags: dm(y),
            outputs: v,
            element: {
              ns: f,
              name: g,
              attrs: b,
              template: null,
              componentProvider: null,
              componentView: u || null,
              componentRendererType: d,
              publicProviders: null,
              allProviders: null,
              handleEvent: c || Pp,
            },
            provider: null,
            text: null,
            query: null,
            ngContent: null,
          }
        );
      }
      function Rv(e, t, n) {
        const s = n.element,
          i = e.root.selectorOrNode,
          r = e.renderer;
        let o;
        if (e.parent || !i) {
          o = s.name ? r.createElement(s.name, s.ns) : r.createComment("");
          const i = tm(e, t, n);
          i && r.appendChild(i, o);
        } else {
          const e =
            !!s.componentRendererType &&
            s.componentRendererType.encapsulation === Pe.ShadowDom;
          o = r.selectRootElement(i, e);
        }
        if (s.attrs)
          for (let a = 0; a < s.attrs.length; a++) {
            const [e, t, n] = s.attrs[a];
            r.setAttribute(o, t, n, e);
          }
        return o;
      }
      function jv(e, t, n, s) {
        for (let o = 0; o < n.outputs.length; o++) {
          const a = n.outputs[o],
            l = Nv(
              e,
              n.nodeIndex,
              ((i = a.target), (r = a.eventName), i ? `${i}:${r}` : r)
            );
          let c = a.target,
            u = e;
          "component" === a.target && ((c = null), (u = t));
          const d = u.renderer.listen(c || s, a.eventName, l);
          e.disposables[n.outputIndex + o] = d;
        }
        var i, r;
      }
      function Nv(e, t, n) {
        return (s) => qp(e, t, n, s);
      }
      function Fv(e, t, n, s) {
        if (!Hp(e, t, n, s)) return !1;
        const i = t.bindings[n],
          r = Ip(e, t.nodeIndex),
          o = r.renderElement,
          a = i.name;
        switch (15 & i.flags) {
          case 1:
            !(function (e, t, n, s, i, r) {
              const o = t.securityContext;
              let a = o ? e.root.sanitizer.sanitize(o, r) : r;
              a = null != a ? a.toString() : null;
              const l = e.renderer;
              null != r
                ? l.setAttribute(n, i, a, s)
                : l.removeAttribute(n, i, s);
            })(e, i, o, i.ns, a, s);
            break;
          case 2:
            !(function (e, t, n, s) {
              const i = e.renderer;
              s ? i.addClass(t, n) : i.removeClass(t, n);
            })(e, o, a, s);
            break;
          case 4:
            !(function (e, t, n, s, i) {
              let r = e.root.sanitizer.sanitize(Fs.STYLE, i);
              if (null != r) {
                r = r.toString();
                const e = t.suffix;
                null != e && (r += e);
              } else r = null;
              const o = e.renderer;
              null != r ? o.setStyle(n, s, r) : o.removeStyle(n, s);
            })(e, i, o, a, s);
            break;
          case 8:
            !(function (e, t, n, s, i) {
              const r = t.securityContext;
              let o = r ? e.root.sanitizer.sanitize(r, i) : i;
              e.renderer.setProperty(n, s, o);
            })(
              33554432 & t.flags && 32 & i.flags ? r.componentView : e,
              i,
              o,
              a,
              s
            );
        }
        return !0;
      }
      function Lv(e, t, n) {
        let s = [];
        for (let i in n) {
          const e = n[i];
          s.push({ propName: i, bindingType: e });
        }
        return {
          nodeIndex: -1,
          parent: null,
          renderParent: null,
          bindingIndex: -1,
          outputIndex: -1,
          checkIndex: -1,
          flags: e,
          childFlags: 0,
          directChildFlags: 0,
          childMatchedQueries: 0,
          ngContentIndex: -1,
          matchedQueries: {},
          matchedQueryIds: 0,
          references: {},
          childCount: 0,
          bindings: [],
          bindingFlags: 0,
          outputs: [],
          element: null,
          provider: null,
          text: null,
          query: { id: t, filterId: Xp(t), bindings: s },
          ngContent: null,
        };
      }
      function Vv(e) {
        const t = e.def.nodeMatchedQueries;
        for (; e.parent && Jp(e); ) {
          let n = e.parentNodeDef;
          e = e.parent;
          const s = n.nodeIndex + n.childCount;
          for (let i = 0; i <= s; i++) {
            const s = e.def.nodes[i];
            67108864 & s.flags &&
              536870912 & s.flags &&
              (s.query.filterId & t) === s.query.filterId &&
              Dp(e, i).setDirty(),
              (!(1 & s.flags && i + s.childCount < n.nodeIndex) &&
                67108864 & s.childFlags &&
                536870912 & s.childFlags) ||
                (i += s.childCount);
          }
        }
        if (134217728 & e.def.nodeFlags)
          for (let n = 0; n < e.def.nodes.length; n++) {
            const t = e.def.nodes[n];
            134217728 & t.flags && 536870912 & t.flags && Dp(e, n).setDirty(),
              (n += t.childCount);
          }
      }
      function Bv(e, t) {
        const n = Dp(e, t.nodeIndex);
        if (!n.dirty) return;
        let s,
          i = void 0;
        if (67108864 & t.flags) {
          const n = t.parent.parent;
          (i = zv(e, n.nodeIndex, n.nodeIndex + n.childCount, t.query, [])),
            (s = Tp(e, t.parent.nodeIndex).instance);
        } else
          134217728 & t.flags &&
            ((i = zv(e, 0, e.def.nodes.length - 1, t.query, [])),
            (s = e.component));
        n.reset(i);
        const r = t.query.bindings;
        let o = !1;
        for (let a = 0; a < r.length; a++) {
          const e = r[a];
          let t;
          switch (e.bindingType) {
            case 0:
              t = n.first;
              break;
            case 1:
              (t = n), (o = !0);
          }
          s[e.propName] = t;
        }
        o && n.notifyOnChanges();
      }
      function zv(e, t, n, s, i) {
        for (let r = t; r <= n; r++) {
          const t = e.def.nodes[r],
            n = t.matchedQueries[s.id];
          if (
            (null != n && i.push(Hv(e, t, n)),
            1 & t.flags &&
              t.element.template &&
              (t.element.template.nodeMatchedQueries & s.filterId) ===
                s.filterId)
          ) {
            const n = Ip(e, r);
            if (
              ((t.childMatchedQueries & s.filterId) === s.filterId &&
                (zv(e, r + 1, r + t.childCount, s, i), (r += t.childCount)),
              16777216 & t.flags)
            ) {
              const e = n.viewContainer._embeddedViews;
              for (let t = 0; t < e.length; t++) {
                const r = e[t],
                  o = Wp(r);
                o && o === n && zv(r, 0, r.def.nodes.length - 1, s, i);
              }
            }
            const o = n.template._projectedViews;
            if (o)
              for (let e = 0; e < o.length; e++) {
                const t = o[e];
                zv(t, 0, t.def.nodes.length - 1, s, i);
              }
          }
          (t.childMatchedQueries & s.filterId) !== s.filterId &&
            (r += t.childCount);
        }
        return i;
      }
      function Hv(e, t, n) {
        if (null != n)
          switch (n) {
            case 1:
              return Ip(e, t.nodeIndex).renderElement;
            case 0:
              return new Ph(Ip(e, t.nodeIndex).renderElement);
            case 2:
              return Ip(e, t.nodeIndex).template;
            case 3:
              return Ip(e, t.nodeIndex).viewContainer;
            case 4:
              return Tp(e, t.nodeIndex).instance;
          }
      }
      function Gv(e, t) {
        return {
          nodeIndex: -1,
          parent: null,
          renderParent: null,
          bindingIndex: -1,
          outputIndex: -1,
          checkIndex: -1,
          flags: 8,
          childFlags: 0,
          directChildFlags: 0,
          childMatchedQueries: 0,
          matchedQueries: {},
          matchedQueryIds: 0,
          references: {},
          ngContentIndex: e,
          childCount: 0,
          bindings: [],
          bindingFlags: 0,
          outputs: [],
          element: null,
          provider: null,
          text: null,
          query: null,
          ngContent: { index: t },
        };
      }
      function Uv(e, t, n) {
        const s = tm(e, t, n);
        if (!s) return;
        om(e, n.ngContent.index, 1, s, null, void 0);
      }
      function $v(e, t) {
        return Yv(128, e, he(t + 1));
      }
      function qv(e, t) {
        return Yv(32, e, he(t));
      }
      function Wv(e, t) {
        const n = Object.keys(t),
          s = n.length,
          i = [];
        for (let r = 0; r < s; r++) {
          const e = n[r];
          t[e];
          i.push(e);
        }
        return Yv(64, e, i);
      }
      function Yv(e, t, n) {
        const s = [];
        for (let i = 0; i < n.length; i++) {
          const e = n[i];
          s.push({
            flags: 8,
            name: e,
            ns: null,
            nonMinifiedName: e,
            securityContext: null,
            suffix: null,
          });
        }
        return {
          nodeIndex: -1,
          parent: null,
          renderParent: null,
          bindingIndex: -1,
          outputIndex: -1,
          checkIndex: t,
          flags: e,
          childFlags: 0,
          directChildFlags: 0,
          childMatchedQueries: 0,
          matchedQueries: {},
          matchedQueryIds: 0,
          references: {},
          ngContentIndex: -1,
          childCount: 0,
          bindings: s,
          bindingFlags: dm(s),
          outputs: [],
          element: null,
          provider: null,
          text: null,
          query: null,
          ngContent: null,
        };
      }
      function Qv(e, t, n) {
        const s = [];
        for (let i = 1; i < n.length; i++)
          s[i - 1] = {
            flags: 8,
            name: null,
            ns: null,
            nonMinifiedName: null,
            securityContext: null,
            suffix: n[i],
          };
        return {
          nodeIndex: -1,
          parent: null,
          renderParent: null,
          bindingIndex: -1,
          outputIndex: -1,
          checkIndex: e,
          flags: 2,
          childFlags: 0,
          directChildFlags: 0,
          childMatchedQueries: 0,
          matchedQueries: {},
          matchedQueryIds: 0,
          references: {},
          ngContentIndex: t,
          childCount: 0,
          bindings: s,
          bindingFlags: 8,
          outputs: [],
          element: null,
          provider: null,
          text: { prefix: n[0] },
          query: null,
          ngContent: null,
        };
      }
      function Kv(e, t, n) {
        let s;
        const i = e.renderer;
        s = i.createText(n.text.prefix);
        const r = tm(e, t, n);
        return r && i.appendChild(r, s), { renderText: s };
      }
      function Jv(e, t) {
        return (null != e ? e.toString() : "") + t.suffix;
      }
      function Xv(e, t, n, s) {
        let i = 0,
          r = 0,
          o = 0,
          a = 0,
          l = 0,
          c = null,
          u = null,
          d = !1,
          h = !1,
          p = null;
        for (let m = 0; m < t.length; m++) {
          const e = t[m];
          if (
            ((e.nodeIndex = m),
            (e.parent = c),
            (e.bindingIndex = i),
            (e.outputIndex = r),
            (e.renderParent = u),
            (o |= e.flags),
            (l |= e.matchedQueryIds),
            e.element)
          ) {
            const t = e.element;
            (t.publicProviders = c
              ? c.element.publicProviders
              : Object.create(null)),
              (t.allProviders = t.publicProviders),
              (d = !1),
              (h = !1),
              e.element.template &&
                (l |= e.element.template.nodeMatchedQueries);
          }
          if (
            (eb(c, e, t.length),
            (i += e.bindings.length),
            (r += e.outputs.length),
            !u && 3 & e.flags && (p = e),
            20224 & e.flags)
          ) {
            d ||
              ((d = !0),
              (c.element.publicProviders = Object.create(
                c.element.publicProviders
              )),
              (c.element.allProviders = c.element.publicProviders));
            const t = 0 != (8192 & e.flags),
              n = 0 != (32768 & e.flags);
            !t || n
              ? (c.element.publicProviders[jp(e.provider.token)] = e)
              : (h ||
                  ((h = !0),
                  (c.element.allProviders = Object.create(
                    c.element.publicProviders
                  ))),
                (c.element.allProviders[jp(e.provider.token)] = e)),
              n && (c.element.componentProvider = e);
          }
          if (
            (c
              ? ((c.childFlags |= e.flags),
                (c.directChildFlags |= e.flags),
                (c.childMatchedQueries |= e.matchedQueryIds),
                e.element &&
                  e.element.template &&
                  (c.childMatchedQueries |=
                    e.element.template.nodeMatchedQueries))
              : (a |= e.flags),
            e.childCount > 0)
          )
            (c = e), Zv(e) || (u = e);
          else
            for (; c && m === c.nodeIndex + c.childCount; ) {
              const e = c.parent;
              e &&
                ((e.childFlags |= c.childFlags),
                (e.childMatchedQueries |= c.childMatchedQueries)),
                (c = e),
                (u = c && Zv(c) ? c.renderParent : c);
            }
        }
        return {
          factory: null,
          nodeFlags: o,
          rootNodeFlags: a,
          nodeMatchedQueries: l,
          flags: e,
          nodes: t,
          updateDirectives: n || Pp,
          updateRenderer: s || Pp,
          handleEvent: (e, n, s, i) => t[n].element.handleEvent(e, s, i),
          bindingCount: i,
          outputCount: r,
          lastRenderRootNode: p,
        };
      }
      function Zv(e) {
        return 0 != (1 & e.flags) && null === e.element.name;
      }
      function eb(e, t, n) {
        const s = t.element && t.element.template;
        if (s) {
          if (!s.lastRenderRootNode)
            throw new Error(
              "Illegal State: Embedded templates without nodes are not allowed!"
            );
          if (s.lastRenderRootNode && 16777216 & s.lastRenderRootNode.flags)
            throw new Error(
              `Illegal State: Last root node of a template can't have embedded views, at index ${t.nodeIndex}!`
            );
        }
        if (20224 & t.flags) {
          if (0 == (1 & (e ? e.flags : 0)))
            throw new Error(
              `Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index ${t.nodeIndex}!`
            );
        }
        if (t.query) {
          if (67108864 & t.flags && (!e || 0 == (16384 & e.flags)))
            throw new Error(
              `Illegal State: Content Query nodes need to be children of directives, at index ${t.nodeIndex}!`
            );
          if (134217728 & t.flags && e)
            throw new Error(
              `Illegal State: View Query nodes have to be top level nodes, at index ${t.nodeIndex}!`
            );
        }
        if (t.childCount) {
          const s = e ? e.nodeIndex + e.childCount : n - 1;
          if (t.nodeIndex <= s && t.nodeIndex + t.childCount > s)
            throw new Error(
              `Illegal State: childCount of node leads outside of parent, at index ${t.nodeIndex}!`
            );
        }
      }
      function tb(e, t, n, s) {
        const i = ib(e.root, e.renderer, e, t, n);
        return rb(i, e.component, s), ob(i), i;
      }
      function nb(e, t, n) {
        const s = ib(e, e.renderer, null, null, t);
        return rb(s, n, n), ob(s), s;
      }
      function sb(e, t, n, s) {
        const i = t.element.componentRendererType;
        let r;
        return (
          (r = i
            ? e.root.rendererFactory.createRenderer(s, i)
            : e.root.renderer),
          ib(e.root, r, e, t.element.componentProvider, n)
        );
      }
      function ib(e, t, n, s, i) {
        const r = new Array(i.nodes.length),
          o = i.outputCount ? new Array(i.outputCount) : null;
        return {
          def: i,
          parent: n,
          viewContainerParent: null,
          parentNodeDef: s,
          context: null,
          component: null,
          nodes: r,
          state: 13,
          root: e,
          renderer: t,
          oldValues: new Array(i.bindingCount),
          disposables: o,
          initIndex: -1,
        };
      }
      function rb(e, t, n) {
        (e.component = t), (e.context = n);
      }
      function ob(e) {
        let t;
        if (Kp(e)) {
          const n = e.parentNodeDef;
          t = Ip(e.parent, n.parent.nodeIndex).renderElement;
        }
        const n = e.def,
          s = e.nodes;
        for (let i = 0; i < n.nodes.length; i++) {
          const r = n.nodes[i];
          let o;
          switch ((Mp.setCurrentNode(e, i), 201347067 & r.flags)) {
            case 1:
              const n = Rv(e, t, r);
              let a = void 0;
              if (33554432 & r.flags) {
                const t = sm(r.element.componentView);
                a = Mp.createComponentView(e, r, t, n);
              }
              jv(e, a, r, n),
                (o = {
                  renderElement: n,
                  componentView: a,
                  viewContainer: null,
                  template: r.element.template ? Fm(e, r) : void 0,
                }),
                16777216 & r.flags && (o.viewContainer = Pm(e, r, o));
              break;
            case 2:
              o = Kv(e, t, r);
              break;
            case 512:
            case 1024:
            case 2048:
            case 256:
              if (((o = s[i]), !(o || 4096 & r.flags))) {
                o = { instance: tf(e, r) };
              }
              break;
            case 16:
              o = { instance: nf(e, r) };
              break;
            case 16384:
              if (((o = s[i]), !o)) {
                o = { instance: sf(e, r) };
              }
              if (32768 & r.flags) {
                rb(
                  Ip(e, r.parent.nodeIndex).componentView,
                  o.instance,
                  o.instance
                );
              }
              break;
            case 32:
            case 64:
            case 128:
              o = { value: void 0 };
              break;
            case 67108864:
            case 134217728:
              o = new Zf();
              break;
            case 8:
              Uv(e, t, r), (o = void 0);
          }
          s[i] = o;
        }
        fb(e, mb.CreateViewNodes), bb(e, 201326592, 268435456, 0);
      }
      function ab(e) {
        ub(e),
          Mp.updateDirectives(e, 1),
          gb(e, mb.CheckNoChanges),
          Mp.updateRenderer(e, 1),
          fb(e, mb.CheckNoChanges),
          (e.state &= -97);
      }
      function lb(e) {
        1 & e.state ? ((e.state &= -2), (e.state |= 2)) : (e.state &= -3),
          Ep(e, 0, 256),
          ub(e),
          Mp.updateDirectives(e, 0),
          gb(e, mb.CheckAndUpdate),
          bb(e, 67108864, 536870912, 0);
        let t = Ep(e, 256, 512);
        hf(e, 2097152 | (t ? 1048576 : 0)),
          Mp.updateRenderer(e, 0),
          fb(e, mb.CheckAndUpdate),
          bb(e, 134217728, 536870912, 0),
          (t = Ep(e, 512, 768)),
          hf(e, 8388608 | (t ? 4194304 : 0)),
          2 & e.def.flags && (e.state &= -9),
          (e.state &= -97),
          Ep(e, 768, 1024);
      }
      function cb(e, t, n, s, i, r, o, a, l, c, u, d, h) {
        return 0 === n
          ? (function (e, t, n, s, i, r, o, a, l, c, u, d) {
              switch (201347067 & t.flags) {
                case 1:
                  return (function (e, t, n, s, i, r, o, a, l, c, u, d) {
                    const h = t.bindings.length;
                    let p = !1;
                    return (
                      h > 0 && Fv(e, t, 0, n) && (p = !0),
                      h > 1 && Fv(e, t, 1, s) && (p = !0),
                      h > 2 && Fv(e, t, 2, i) && (p = !0),
                      h > 3 && Fv(e, t, 3, r) && (p = !0),
                      h > 4 && Fv(e, t, 4, o) && (p = !0),
                      h > 5 && Fv(e, t, 5, a) && (p = !0),
                      h > 6 && Fv(e, t, 6, l) && (p = !0),
                      h > 7 && Fv(e, t, 7, c) && (p = !0),
                      h > 8 && Fv(e, t, 8, u) && (p = !0),
                      h > 9 && Fv(e, t, 9, d) && (p = !0),
                      p
                    );
                  })(e, t, n, s, i, r, o, a, l, c, u, d);
                case 2:
                  return (function (e, t, n, s, i, r, o, a, l, c, u, d) {
                    let h = !1;
                    const p = t.bindings,
                      m = p.length;
                    if (
                      (m > 0 && Hp(e, t, 0, n) && (h = !0),
                      m > 1 && Hp(e, t, 1, s) && (h = !0),
                      m > 2 && Hp(e, t, 2, i) && (h = !0),
                      m > 3 && Hp(e, t, 3, r) && (h = !0),
                      m > 4 && Hp(e, t, 4, o) && (h = !0),
                      m > 5 && Hp(e, t, 5, a) && (h = !0),
                      m > 6 && Hp(e, t, 6, l) && (h = !0),
                      m > 7 && Hp(e, t, 7, c) && (h = !0),
                      m > 8 && Hp(e, t, 8, u) && (h = !0),
                      m > 9 && Hp(e, t, 9, d) && (h = !0),
                      h)
                    ) {
                      let h = t.text.prefix;
                      m > 0 && (h += Jv(n, p[0])),
                        m > 1 && (h += Jv(s, p[1])),
                        m > 2 && (h += Jv(i, p[2])),
                        m > 3 && (h += Jv(r, p[3])),
                        m > 4 && (h += Jv(o, p[4])),
                        m > 5 && (h += Jv(a, p[5])),
                        m > 6 && (h += Jv(l, p[6])),
                        m > 7 && (h += Jv(c, p[7])),
                        m > 8 && (h += Jv(u, p[8])),
                        m > 9 && (h += Jv(d, p[9]));
                      const f = Op(e, t.nodeIndex).renderText;
                      e.renderer.setValue(f, h);
                    }
                    return h;
                  })(e, t, n, s, i, r, o, a, l, c, u, d);
                case 16384:
                  return (function (e, t, n, s, i, r, o, a, l, c, u, d) {
                    const h = Tp(e, t.nodeIndex),
                      p = h.instance;
                    let m = !1,
                      f = void 0;
                    const g = t.bindings.length;
                    return (
                      g > 0 &&
                        zp(e, t, 0, n) &&
                        ((m = !0), (f = df(e, h, t, 0, n, f))),
                      g > 1 &&
                        zp(e, t, 1, s) &&
                        ((m = !0), (f = df(e, h, t, 1, s, f))),
                      g > 2 &&
                        zp(e, t, 2, i) &&
                        ((m = !0), (f = df(e, h, t, 2, i, f))),
                      g > 3 &&
                        zp(e, t, 3, r) &&
                        ((m = !0), (f = df(e, h, t, 3, r, f))),
                      g > 4 &&
                        zp(e, t, 4, o) &&
                        ((m = !0), (f = df(e, h, t, 4, o, f))),
                      g > 5 &&
                        zp(e, t, 5, a) &&
                        ((m = !0), (f = df(e, h, t, 5, a, f))),
                      g > 6 &&
                        zp(e, t, 6, l) &&
                        ((m = !0), (f = df(e, h, t, 6, l, f))),
                      g > 7 &&
                        zp(e, t, 7, c) &&
                        ((m = !0), (f = df(e, h, t, 7, c, f))),
                      g > 8 &&
                        zp(e, t, 8, u) &&
                        ((m = !0), (f = df(e, h, t, 8, u, f))),
                      g > 9 &&
                        zp(e, t, 9, d) &&
                        ((m = !0), (f = df(e, h, t, 9, d, f))),
                      f && p.ngOnChanges(f),
                      65536 & t.flags &&
                        kp(e, 256, t.nodeIndex) &&
                        p.ngOnInit(),
                      262144 & t.flags && p.ngDoCheck(),
                      m
                    );
                  })(e, t, n, s, i, r, o, a, l, c, u, d);
                case 32:
                case 64:
                case 128:
                  return (function (e, t, n, s, i, r, o, a, l, c, u, d) {
                    const h = t.bindings;
                    let p = !1;
                    const m = h.length;
                    if (
                      (m > 0 && Hp(e, t, 0, n) && (p = !0),
                      m > 1 && Hp(e, t, 1, s) && (p = !0),
                      m > 2 && Hp(e, t, 2, i) && (p = !0),
                      m > 3 && Hp(e, t, 3, r) && (p = !0),
                      m > 4 && Hp(e, t, 4, o) && (p = !0),
                      m > 5 && Hp(e, t, 5, a) && (p = !0),
                      m > 6 && Hp(e, t, 6, l) && (p = !0),
                      m > 7 && Hp(e, t, 7, c) && (p = !0),
                      m > 8 && Hp(e, t, 8, u) && (p = !0),
                      m > 9 && Hp(e, t, 9, d) && (p = !0),
                      p)
                    ) {
                      const p = Ap(e, t.nodeIndex);
                      let f;
                      switch (201347067 & t.flags) {
                        case 32:
                          (f = []),
                            m > 0 && f.push(n),
                            m > 1 && f.push(s),
                            m > 2 && f.push(i),
                            m > 3 && f.push(r),
                            m > 4 && f.push(o),
                            m > 5 && f.push(a),
                            m > 6 && f.push(l),
                            m > 7 && f.push(c),
                            m > 8 && f.push(u),
                            m > 9 && f.push(d);
                          break;
                        case 64:
                          (f = {}),
                            m > 0 && (f[h[0].name] = n),
                            m > 1 && (f[h[1].name] = s),
                            m > 2 && (f[h[2].name] = i),
                            m > 3 && (f[h[3].name] = r),
                            m > 4 && (f[h[4].name] = o),
                            m > 5 && (f[h[5].name] = a),
                            m > 6 && (f[h[6].name] = l),
                            m > 7 && (f[h[7].name] = c),
                            m > 8 && (f[h[8].name] = u),
                            m > 9 && (f[h[9].name] = d);
                          break;
                        case 128:
                          const e = n;
                          switch (m) {
                            case 1:
                              f = e.transform(n);
                              break;
                            case 2:
                              f = e.transform(s);
                              break;
                            case 3:
                              f = e.transform(s, i);
                              break;
                            case 4:
                              f = e.transform(s, i, r);
                              break;
                            case 5:
                              f = e.transform(s, i, r, o);
                              break;
                            case 6:
                              f = e.transform(s, i, r, o, a);
                              break;
                            case 7:
                              f = e.transform(s, i, r, o, a, l);
                              break;
                            case 8:
                              f = e.transform(s, i, r, o, a, l, c);
                              break;
                            case 9:
                              f = e.transform(s, i, r, o, a, l, c, u);
                              break;
                            case 10:
                              f = e.transform(s, i, r, o, a, l, c, u, d);
                          }
                      }
                      p.value = f;
                    }
                    return p;
                  })(e, t, n, s, i, r, o, a, l, c, u, d);
                default:
                  throw "unreachable";
              }
            })(e, t, s, i, r, o, a, l, c, u, d, h)
          : (function (e, t, n) {
              switch (201347067 & t.flags) {
                case 1:
                  return (function (e, t, n) {
                    let s = !1;
                    for (let i = 0; i < n.length; i++)
                      Fv(e, t, i, n[i]) && (s = !0);
                    return s;
                  })(e, t, n);
                case 2:
                  return (function (e, t, n) {
                    const s = t.bindings;
                    let i = !1;
                    for (let r = 0; r < n.length; r++)
                      Hp(e, t, r, n[r]) && (i = !0);
                    if (i) {
                      let i = "";
                      for (let e = 0; e < n.length; e++) i += Jv(n[e], s[e]);
                      i = t.text.prefix + i;
                      const r = Op(e, t.nodeIndex).renderText;
                      e.renderer.setValue(r, i);
                    }
                    return i;
                  })(e, t, n);
                case 16384:
                  return (function (e, t, n) {
                    const s = Tp(e, t.nodeIndex),
                      i = s.instance;
                    let r = !1,
                      o = void 0;
                    for (let a = 0; a < n.length; a++)
                      zp(e, t, a, n[a]) &&
                        ((r = !0), (o = df(e, s, t, a, n[a], o)));
                    return (
                      o && i.ngOnChanges(o),
                      65536 & t.flags &&
                        kp(e, 256, t.nodeIndex) &&
                        i.ngOnInit(),
                      262144 & t.flags && i.ngDoCheck(),
                      r
                    );
                  })(e, t, n);
                case 32:
                case 64:
                case 128:
                  return (function (e, t, n) {
                    const s = t.bindings;
                    let i = !1;
                    for (let r = 0; r < n.length; r++)
                      Hp(e, t, r, n[r]) && (i = !0);
                    if (i) {
                      const i = Ap(e, t.nodeIndex);
                      let r;
                      switch (201347067 & t.flags) {
                        case 32:
                          r = n;
                          break;
                        case 64:
                          r = {};
                          for (let i = 0; i < n.length; i++)
                            r[s[i].name] = n[i];
                          break;
                        case 128:
                          const e = n[0],
                            t = n.slice(1);
                          r = e.transform(...t);
                      }
                      i.value = r;
                    }
                    return i;
                  })(e, t, n);
                default:
                  throw "unreachable";
              }
            })(e, t, s);
      }
      function ub(e) {
        const t = e.def;
        if (4 & t.nodeFlags)
          for (let n = 0; n < t.nodes.length; n++) {
            const s = t.nodes[n];
            if (4 & s.flags) {
              const t = Ip(e, n).template._projectedViews;
              if (t)
                for (let n = 0; n < t.length; n++) {
                  const s = t[n];
                  (s.state |= 32), $p(s, e);
                }
            } else 0 == (4 & s.childFlags) && (n += s.childCount);
          }
      }
      function db(e, t, n, s, i, r, o, a, l, c, u, d, h) {
        return (
          0 === n
            ? (function (e, t, n, s, i, r, o, a, l, c, u, d) {
                const h = t.bindings.length;
                h > 0 && Gp(e, t, 0, n);
                h > 1 && Gp(e, t, 1, s);
                h > 2 && Gp(e, t, 2, i);
                h > 3 && Gp(e, t, 3, r);
                h > 4 && Gp(e, t, 4, o);
                h > 5 && Gp(e, t, 5, a);
                h > 6 && Gp(e, t, 6, l);
                h > 7 && Gp(e, t, 7, c);
                h > 8 && Gp(e, t, 8, u);
                h > 9 && Gp(e, t, 9, d);
              })(e, t, s, i, r, o, a, l, c, u, d, h)
            : (function (e, t, n) {
                for (let s = 0; s < n.length; s++) Gp(e, t, s, n[s]);
              })(e, t, s),
          !1
        );
      }
      function hb(e, t) {
        if (Dp(e, t.nodeIndex).dirty)
          throw wp(
            Mp.createDebugContext(e, t.nodeIndex),
            `Query ${t.query.id} not dirty`,
            `Query ${t.query.id} dirty`,
            0 != (1 & e.state)
          );
      }
      function pb(e) {
        if (!(128 & e.state)) {
          if (
            (gb(e, mb.Destroy), fb(e, mb.Destroy), hf(e, 131072), e.disposables)
          )
            for (let t = 0; t < e.disposables.length; t++) e.disposables[t]();
          !(function (e) {
            if (!(16 & e.state)) return;
            const t = Wp(e);
            if (t) {
              const n = t.template._projectedViews;
              n && (de(n, n.indexOf(e)), Mp.dirtyParentQueries(e));
            }
          })(e),
            e.renderer.destroyNode &&
              (function (e) {
                const t = e.def.nodes.length;
                for (let n = 0; n < t; n++) {
                  const t = e.def.nodes[n];
                  1 & t.flags
                    ? e.renderer.destroyNode(Ip(e, n).renderElement)
                    : 2 & t.flags
                    ? e.renderer.destroyNode(Op(e, n).renderText)
                    : (67108864 & t.flags || 134217728 & t.flags) &&
                      Dp(e, n).destroy();
                }
              })(e),
            Kp(e) && e.renderer.destroy(),
            (e.state |= 128);
        }
      }
      var mb;
      function fb(e, t) {
        const n = e.def;
        if (33554432 & n.nodeFlags)
          for (let s = 0; s < n.nodes.length; s++) {
            const i = n.nodes[s];
            33554432 & i.flags
              ? yb(Ip(e, s).componentView, t)
              : 0 == (33554432 & i.childFlags) && (s += i.childCount);
          }
      }
      function gb(e, t) {
        const n = e.def;
        if (16777216 & n.nodeFlags)
          for (let s = 0; s < n.nodes.length; s++) {
            const i = n.nodes[s];
            if (16777216 & i.flags) {
              const n = Ip(e, s).viewContainer._embeddedViews;
              for (let e = 0; e < n.length; e++) yb(n[e], t);
            } else 0 == (16777216 & i.childFlags) && (s += i.childCount);
          }
      }
      function yb(e, t) {
        const n = e.state;
        switch (t) {
          case mb.CheckNoChanges:
            0 == (128 & n) &&
              (12 == (12 & n)
                ? ab(e)
                : 64 & n && vb(e, mb.CheckNoChangesProjectedViews));
            break;
          case mb.CheckNoChangesProjectedViews:
            0 == (128 & n) && (32 & n ? ab(e) : 64 & n && vb(e, t));
            break;
          case mb.CheckAndUpdate:
            0 == (128 & n) &&
              (12 == (12 & n)
                ? lb(e)
                : 64 & n && vb(e, mb.CheckAndUpdateProjectedViews));
            break;
          case mb.CheckAndUpdateProjectedViews:
            0 == (128 & n) && (32 & n ? lb(e) : 64 & n && vb(e, t));
            break;
          case mb.Destroy:
            pb(e);
            break;
          case mb.CreateViewNodes:
            ob(e);
        }
      }
      function vb(e, t) {
        gb(e, t), fb(e, t);
      }
      function bb(e, t, n, s) {
        if (!(e.def.nodeFlags & t && e.def.nodeFlags & n)) return;
        const i = e.def.nodes.length;
        for (let r = 0; r < i; r++) {
          const i = e.def.nodes[r];
          if (i.flags & t && i.flags & n)
            switch ((Mp.setCurrentNode(e, i.nodeIndex), s)) {
              case 0:
                Bv(e, i);
                break;
              case 1:
                hb(e, i);
            }
          (i.childFlags & t && i.childFlags & n) || (r += i.childCount);
        }
      }
      (Dv.ɵmod = Qe({ type: Dv })),
        (Dv.ɵinj = A({
          factory: function (e) {
            return new (e || Dv)(yt(nv));
          },
          providers: Av,
        })),
        (Dv.ctorParameters = () => [{ type: nv }]),
        (function (e) {
          (e[(e.CreateViewNodes = 0)] = "CreateViewNodes"),
            (e[(e.CheckNoChanges = 1)] = "CheckNoChanges"),
            (e[(e.CheckNoChangesProjectedViews = 2)] =
              "CheckNoChangesProjectedViews"),
            (e[(e.CheckAndUpdate = 3)] = "CheckAndUpdate"),
            (e[(e.CheckAndUpdateProjectedViews = 4)] =
              "CheckAndUpdateProjectedViews"),
            (e[(e.Destroy = 5)] = "Destroy");
        })(mb || (mb = {}));
      let xb = !1;
      function _b() {
        if (xb) return;
        xb = !0;
        const e = os()
          ? {
              setCurrentNode: Ub,
              createRootView: Cb,
              createEmbeddedView: Eb,
              createComponentView: kb,
              createNgModuleRef: Ob,
              overrideProvider: Db,
              overrideComponentView: Mb,
              clearOverrides: Pb,
              checkAndUpdateView: Fb,
              checkNoChangesView: Lb,
              destroyView: Vb,
              createDebugContext: (e, t) => new Xb(e, t),
              handleEvent: $b,
              updateDirectives: qb,
              updateRenderer: Wb,
            }
          : {
              setCurrentNode: () => {},
              createRootView: wb,
              createEmbeddedView: tb,
              createComponentView: sb,
              createNgModuleRef: Hm,
              overrideProvider: Pp,
              overrideComponentView: Pp,
              clearOverrides: Pp,
              checkAndUpdateView: lb,
              checkNoChangesView: ab,
              destroyView: pb,
              createDebugContext: (e, t) => new Xb(e, t),
              handleEvent: (e, t, n, s) => e.def.handleEvent(e, t, n, s),
              updateDirectives: (e, t) =>
                e.def.updateDirectives(0 === t ? jb : Nb, e),
              updateRenderer: (e, t) =>
                e.def.updateRenderer(0 === t ? jb : Nb, e),
            };
        (Mp.setCurrentNode = e.setCurrentNode),
          (Mp.createRootView = e.createRootView),
          (Mp.createEmbeddedView = e.createEmbeddedView),
          (Mp.createComponentView = e.createComponentView),
          (Mp.createNgModuleRef = e.createNgModuleRef),
          (Mp.overrideProvider = e.overrideProvider),
          (Mp.overrideComponentView = e.overrideComponentView),
          (Mp.clearOverrides = e.clearOverrides),
          (Mp.checkAndUpdateView = e.checkAndUpdateView),
          (Mp.checkNoChangesView = e.checkNoChangesView),
          (Mp.destroyView = e.destroyView),
          (Mp.resolveDep = cf),
          (Mp.createDebugContext = e.createDebugContext),
          (Mp.handleEvent = e.handleEvent),
          (Mp.updateDirectives = e.updateDirectives),
          (Mp.updateRenderer = e.updateRenderer),
          (Mp.dirtyParentQueries = Vv);
      }
      function wb(e, t, n, s, i, r) {
        const o = i.injector.get(Rh);
        return nb(Sb(e, i, o, t, n), s, r);
      }
      function Cb(e, t, n, s, i, r) {
        const o = i.injector.get(Rh),
          a = Sb(e, i, new nx(o), t, n),
          l = Rb(s);
        return ex(Bb.create, nb, null, [a, l, r]);
      }
      function Sb(e, t, n, s, i) {
        const r = t.injector.get(Fh),
          o = t.injector.get($i),
          a = n.createRenderer(null, null);
        return {
          ngModule: t,
          injector: e,
          projectableNodes: s,
          selectorOrNode: i,
          sanitizer: r,
          rendererFactory: n,
          renderer: a,
          errorHandler: o,
        };
      }
      function Eb(e, t, n, s) {
        const i = Rb(n);
        return ex(Bb.create, tb, null, [e, t, i, s]);
      }
      function kb(e, t, n, s) {
        const i = Ab.get(t.element.componentProvider.provider.token);
        return (n = i || Rb(n)), ex(Bb.create, sb, null, [e, t, n, s]);
      }
      function Ob(e, t, n, s) {
        return Hm(
          e,
          t,
          n,
          (function (e) {
            const { hasOverrides: t, hasDeprecatedOverrides: n } = s(e);
            if (!t) return e;
            return i((e = e.factory(() => Pp))), e;
            function s(e) {
              let t = !1,
                n = !1;
              return (
                0 === Ib.size ||
                  (e.providers.forEach((e) => {
                    const s = Ib.get(e.token);
                    3840 & e.flags &&
                      s &&
                      ((t = !0), (n = n || s.deprecatedBehavior));
                  }),
                  e.modules.forEach((e) => {
                    Tb.forEach((s, i) => {
                      D(i).providedIn === e &&
                        ((t = !0), (n = n || s.deprecatedBehavior));
                    });
                  })),
                { hasOverrides: t, hasDeprecatedOverrides: n }
              );
            }
            function i(e) {
              for (let t = 0; t < e.providers.length; t++) {
                const s = e.providers[t];
                n && (s.flags |= 4096);
                const i = Ib.get(s.token);
                i &&
                  ((s.flags = (-3841 & s.flags) | i.flags),
                  (s.deps = em(i.deps)),
                  (s.value = i.value));
              }
              if (Tb.size > 0) {
                let t = new Set(e.modules);
                Tb.forEach((s, i) => {
                  if (t.has(D(i).providedIn)) {
                    let t = {
                      token: i,
                      flags: s.flags | (n ? 4096 : 0),
                      deps: em(s.deps),
                      value: s.value,
                      index: e.providers.length,
                    };
                    e.providers.push(t), (e.providersByKey[jp(i)] = t);
                  }
                });
              }
            }
          })(s)
        );
      }
      const Ib = new Map(),
        Tb = new Map(),
        Ab = new Map();
      function Db(e) {
        let t;
        Ib.set(e.token, e),
          "function" == typeof e.token &&
            (t = D(e.token)) &&
            "function" == typeof t.providedIn &&
            Tb.set(e.token, e);
      }
      function Mb(e, t) {
        const n = sm(t.viewDefFactory);
        const s = sm(n.nodes[0].element.componentView);
        Ab.set(e, s);
      }
      function Pb() {
        Ib.clear(), Tb.clear(), Ab.clear();
      }
      function Rb(e) {
        if (0 === Ib.size) return e;
        const t = (function (e) {
          const t = [];
          let n = null;
          for (let s = 0; s < e.nodes.length; s++) {
            const i = e.nodes[s];
            1 & i.flags && (n = i),
              n &&
                3840 & i.flags &&
                Ib.has(i.provider.token) &&
                (t.push(n.nodeIndex), (n = null));
          }
          return t;
        })(e);
        if (0 === t.length) return e;
        e = e.factory(() => Pp);
        for (let s = 0; s < t.length; s++) n(e, t[s]);
        return e;
        function n(e, t) {
          for (let n = t + 1; n < e.nodes.length; n++) {
            const t = e.nodes[n];
            if (1 & t.flags) return;
            if (3840 & t.flags) {
              const e = t.provider,
                n = Ib.get(e.token);
              n &&
                ((t.flags = (-3841 & t.flags) | n.flags),
                (e.deps = em(n.deps)),
                (e.value = n.value));
            }
          }
        }
      }
      function jb(e, t, n, s, i, r, o, a, l, c, u, d, h) {
        const p = e.def.nodes[t];
        return (
          cb(e, p, n, s, i, r, o, a, l, c, u, d, h),
          224 & p.flags ? Ap(e, t).value : void 0
        );
      }
      function Nb(e, t, n, s, i, r, o, a, l, c, u, d, h) {
        const p = e.def.nodes[t];
        return (
          db(e, p, n, s, i, r, o, a, l, c, u, d, h),
          224 & p.flags ? Ap(e, t).value : void 0
        );
      }
      function Fb(e) {
        return ex(Bb.detectChanges, lb, null, [e]);
      }
      function Lb(e) {
        return ex(Bb.checkNoChanges, ab, null, [e]);
      }
      function Vb(e) {
        return ex(Bb.destroy, pb, null, [e]);
      }
      var Bb;
      let zb, Hb, Gb;
      function Ub(e, t) {
        (Hb = e), (Gb = t);
      }
      function $b(e, t, n, s) {
        return (
          Ub(e, t), ex(Bb.handleEvent, e.def.handleEvent, null, [e, t, n, s])
        );
      }
      function qb(e, t) {
        if (128 & e.state) throw Sp(Bb[zb]);
        return (
          Ub(e, Kb(e, 0)),
          e.def.updateDirectives(function (e, n, s, ...i) {
            const r = e.def.nodes[n];
            0 === t ? Yb(e, r, s, i) : Qb(e, r, s, i);
            16384 & r.flags && Ub(e, Kb(e, n));
            return 224 & r.flags ? Ap(e, r.nodeIndex).value : void 0;
          }, e)
        );
      }
      function Wb(e, t) {
        if (128 & e.state) throw Sp(Bb[zb]);
        return (
          Ub(e, Jb(e, 0)),
          e.def.updateRenderer(function (e, n, s, ...i) {
            const r = e.def.nodes[n];
            0 === t ? Yb(e, r, s, i) : Qb(e, r, s, i);
            3 & r.flags && Ub(e, Jb(e, n));
            return 224 & r.flags ? Ap(e, r.nodeIndex).value : void 0;
          }, e)
        );
      }
      function Yb(e, t, n, s) {
        if (cb(e, t, n, ...s)) {
          const i = 1 === n ? s[0] : s;
          if (16384 & t.flags) {
            const n = {};
            for (let e = 0; e < t.bindings.length; e++) {
              const s = t.bindings[e],
                r = i[e];
              8 & s.flags && (n[qi(s.nonMinifiedName)] = Yi(r));
            }
            const s = t.parent,
              r = Ip(e, s.nodeIndex).renderElement;
            if (s.element.name)
              for (let t in n) {
                const s = n[t];
                null != s
                  ? e.renderer.setAttribute(r, t, s)
                  : e.renderer.removeAttribute(r, t);
              }
            else
              e.renderer.setValue(r, "bindings=" + JSON.stringify(n, null, 2));
          }
        }
      }
      function Qb(e, t, n, s) {
        db(e, t, n, ...s);
      }
      function Kb(e, t) {
        for (let n = t; n < e.def.nodes.length; n++) {
          const t = e.def.nodes[n];
          if (16384 & t.flags && t.bindings && t.bindings.length) return n;
        }
        return null;
      }
      function Jb(e, t) {
        for (let n = t; n < e.def.nodes.length; n++) {
          const t = e.def.nodes[n];
          if (3 & t.flags && t.bindings && t.bindings.length) return n;
        }
        return null;
      }
      !(function (e) {
        (e[(e.create = 0)] = "create"),
          (e[(e.detectChanges = 1)] = "detectChanges"),
          (e[(e.checkNoChanges = 2)] = "checkNoChanges"),
          (e[(e.destroy = 3)] = "destroy"),
          (e[(e.handleEvent = 4)] = "handleEvent");
      })(Bb || (Bb = {}));
      class Xb {
        constructor(e, t) {
          (this.view = e),
            (this.nodeIndex = t),
            null == t && (this.nodeIndex = t = 0),
            (this.nodeDef = e.def.nodes[t]);
          let n = this.nodeDef,
            s = e;
          for (; n && 0 == (1 & n.flags); ) n = n.parent;
          if (!n) for (; !n && s; ) (n = Yp(s)), (s = s.parent);
          (this.elDef = n), (this.elView = s);
        }
        get elOrCompView() {
          return (
            Ip(this.elView, this.elDef.nodeIndex).componentView || this.view
          );
        }
        get injector() {
          return Vm(this.elView, this.elDef);
        }
        get component() {
          return this.elOrCompView.component;
        }
        get context() {
          return this.elOrCompView.context;
        }
        get providerTokens() {
          const e = [];
          if (this.elDef)
            for (
              let t = this.elDef.nodeIndex + 1;
              t <= this.elDef.nodeIndex + this.elDef.childCount;
              t++
            ) {
              const n = this.elView.def.nodes[t];
              20224 & n.flags && e.push(n.provider.token), (t += n.childCount);
            }
          return e;
        }
        get references() {
          const e = {};
          if (this.elDef) {
            Zb(this.elView, this.elDef, e);
            for (
              let t = this.elDef.nodeIndex + 1;
              t <= this.elDef.nodeIndex + this.elDef.childCount;
              t++
            ) {
              const n = this.elView.def.nodes[t];
              20224 & n.flags && Zb(this.elView, n, e), (t += n.childCount);
            }
          }
          return e;
        }
        get componentRenderElement() {
          const e = (function (e) {
            for (; e && !Kp(e); ) e = e.parent;
            if (e.parent) return Ip(e.parent, Yp(e).nodeIndex);
            return null;
          })(this.elOrCompView);
          return e ? e.renderElement : void 0;
        }
        get renderNode() {
          return 2 & this.nodeDef.flags
            ? Qp(this.view, this.nodeDef)
            : Qp(this.elView, this.elDef);
        }
        logError(e, ...t) {
          let n, s;
          2 & this.nodeDef.flags
            ? ((n = this.view.def), (s = this.nodeDef.nodeIndex))
            : ((n = this.elView.def), (s = this.elDef.nodeIndex));
          const i = (function (e, t) {
            let n = -1;
            for (let s = 0; s <= t; s++) {
              3 & e.nodes[s].flags && n++;
            }
            return n;
          })(n, s);
          let r = -1;
          n.factory(() => (r++, r === i ? e.error.bind(e, ...t) : Pp)),
            r < i &&
              (e.error(
                "Illegal state: the ViewDefinitionFactory did not call the logger!"
              ),
              e.error(...t));
        }
      }
      function Zb(e, t, n) {
        for (let s in t.references) n[s] = Hv(e, t, t.references[s]);
      }
      function ex(e, t, n, s) {
        const i = zb,
          r = Hb,
          o = Gb;
        try {
          zb = e;
          const a = t.apply(n, s);
          return (Hb = r), (Gb = o), (zb = i), a;
        } catch (a) {
          if (Hi(a) || !Hb) throw a;
          throw (function (e, t) {
            return (
              e instanceof Error || (e = new Error(e.toString())), Cp(e, t), e
            );
          })(a, tx());
        }
      }
      function tx() {
        return Hb ? new Xb(Hb, Gb) : null;
      }
      class nx {
        constructor(e) {
          this.delegate = e;
        }
        createRenderer(e, t) {
          return new sx(this.delegate.createRenderer(e, t));
        }
        begin() {
          this.delegate.begin && this.delegate.begin();
        }
        end() {
          this.delegate.end && this.delegate.end();
        }
        whenRenderingDone() {
          return this.delegate.whenRenderingDone
            ? this.delegate.whenRenderingDone()
            : Promise.resolve(null);
        }
      }
      class sx {
        constructor(e) {
          (this.delegate = e),
            (this.debugContextFactory = tx),
            (this.data = this.delegate.data);
        }
        createDebugContext(e) {
          return this.debugContextFactory(e);
        }
        destroyNode(e) {
          const t = kv(e);
          !(function (e) {
            Cv.delete(e.nativeNode);
          })(t),
            t instanceof dv && (t.listeners.length = 0),
            this.delegate.destroyNode && this.delegate.destroyNode(e);
        }
        destroy() {
          this.delegate.destroy();
        }
        createElement(e, t) {
          const n = this.delegate.createElement(e, t),
            s = this.createDebugContext(n);
          if (s) {
            const t = new hv(n, null, s);
            (t.name = e), Iv(t);
          }
          return n;
        }
        createComment(e) {
          const t = this.delegate.createComment(e),
            n = this.createDebugContext(t);
          return n && Iv(new dv(t, null, n)), t;
        }
        createText(e) {
          const t = this.delegate.createText(e),
            n = this.createDebugContext(t);
          return n && Iv(new dv(t, null, n)), t;
        }
        appendChild(e, t) {
          const n = kv(e),
            s = kv(t);
          n && s && n instanceof hv && n.addChild(s),
            this.delegate.appendChild(e, t);
        }
        insertBefore(e, t, n, s) {
          const i = kv(e),
            r = kv(t),
            o = kv(n);
          i && r && i instanceof hv && i.insertBefore(o, r),
            this.delegate.insertBefore(e, t, n, s);
        }
        removeChild(e, t) {
          const n = kv(e),
            s = kv(t);
          n && s && n instanceof hv && n.removeChild(s),
            this.delegate.removeChild(e, t);
        }
        selectRootElement(e, t) {
          const n = this.delegate.selectRootElement(e, t),
            s = tx();
          return s && Iv(new hv(n, null, s)), n;
        }
        setAttribute(e, t, n, s) {
          const i = kv(e);
          if (i && i instanceof hv) {
            const e = s ? s + ":" + t : t;
            i.attributes[e] = n;
          }
          this.delegate.setAttribute(e, t, n, s);
        }
        removeAttribute(e, t, n) {
          const s = kv(e);
          if (s && s instanceof hv) {
            const e = n ? n + ":" + t : t;
            s.attributes[e] = null;
          }
          this.delegate.removeAttribute(e, t, n);
        }
        addClass(e, t) {
          const n = kv(e);
          n && n instanceof hv && (n.classes[t] = !0),
            this.delegate.addClass(e, t);
        }
        removeClass(e, t) {
          const n = kv(e);
          n && n instanceof hv && (n.classes[t] = !1),
            this.delegate.removeClass(e, t);
        }
        setStyle(e, t, n, s) {
          const i = kv(e);
          i && i instanceof hv && (i.styles[t] = n),
            this.delegate.setStyle(e, t, n, s);
        }
        removeStyle(e, t, n) {
          const s = kv(e);
          s && s instanceof hv && (s.styles[t] = null),
            this.delegate.removeStyle(e, t, n);
        }
        setProperty(e, t, n) {
          const s = kv(e);
          s && s instanceof hv && (s.properties[t] = n),
            this.delegate.setProperty(e, t, n);
        }
        listen(e, t, n) {
          if ("string" != typeof e) {
            const s = kv(e);
            s && s.listeners.push(new uv(t, n));
          }
          return this.delegate.listen(e, t, n);
        }
        parentNode(e) {
          return this.delegate.parentNode(e);
        }
        nextSibling(e) {
          return this.delegate.nextSibling(e);
        }
        setValue(e, t) {
          return this.delegate.setValue(e, t);
        }
      }
      function ix(e, t, n) {
        return new rx(e, t, n);
      }
      class rx extends mp {
        constructor(e, t, n) {
          super(),
            (this.moduleType = e),
            (this._bootstrapComponents = t),
            (this._ngModuleDefFactory = n);
        }
        create(e) {
          _b();
          const t = (function (e) {
            const t = Array.from(e.providers),
              n = Array.from(e.modules),
              s = {};
            for (const i in e.providersByKey) s[i] = e.providersByKey[i];
            return {
              factory: e.factory,
              scope: e.scope,
              providers: t,
              modules: n,
              providersByKey: s,
            };
          })(sm(this._ngModuleDefFactory));
          return Mp.createNgModuleRef(
            this.moduleType,
            e || Ea.NULL,
            this._bootstrapComponents,
            t
          );
        }
      }
    },
    gRHU: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var s = n("2fFW"),
        i = n("NJ4a");
      const r = {
        closed: !0,
        next(e) {},
        error(e) {
          if (s.a.useDeprecatedSynchronousErrorHandling) throw e;
          Object(i.a)(e);
        },
        complete() {},
      };
    },
    itXk: function (e, t, n) {
      "use strict";
      n.d(t, "b", function () {
        return c;
      }),
        n.d(t, "a", function () {
          return u;
        });
      var s = n("z+Ro"),
        i = n("DH7j"),
        r = n("l7GE"),
        o = n("ZUHj"),
        a = n("yCtX");
      const l = {};
      function c(...e) {
        let t = void 0,
          n = void 0;
        return (
          Object(s.a)(e[e.length - 1]) && (n = e.pop()),
          "function" == typeof e[e.length - 1] && (t = e.pop()),
          1 === e.length && Object(i.a)(e[0]) && (e = e[0]),
          Object(a.a)(e, n).lift(new u(t))
        );
      }
      class u {
        constructor(e) {
          this.resultSelector = e;
        }
        call(e, t) {
          return t.subscribe(new d(e, this.resultSelector));
        }
      }
      class d extends r.a {
        constructor(e, t) {
          super(e),
            (this.resultSelector = t),
            (this.active = 0),
            (this.values = []),
            (this.observables = []);
        }
        _next(e) {
          this.values.push(l), this.observables.push(e);
        }
        _complete() {
          const e = this.observables,
            t = e.length;
          if (0 === t) this.destination.complete();
          else {
            (this.active = t), (this.toRespond = t);
            for (let n = 0; n < t; n++) {
              const t = e[n];
              this.add(Object(o.a)(this, t, void 0, n));
            }
          }
        }
        notifyComplete(e) {
          0 == (this.active -= 1) && this.destination.complete();
        }
        notifyNext(e, t, n) {
          const s = this.values,
            i = s[n],
            r = this.toRespond
              ? i === l
                ? --this.toRespond
                : this.toRespond
              : 0;
          (s[n] = t),
            0 === r &&
              (this.resultSelector
                ? this._tryResultSelector(s)
                : this.destination.next(s.slice()));
        }
        _tryResultSelector(e) {
          let t;
          try {
            t = this.resultSelector.apply(this, e);
          } catch (n) {
            return void this.destination.error(n);
          }
          this.destination.next(t);
        }
      }
    },
    iydT: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, "HomeModule", function () {
          return F;
        });
      var s,
        i = n("mrSG"),
        r = n("FpXt"),
        o = n("fXoL"),
        a = n("ofXK"),
        l = n("0Pcf"),
        c = n("beVS"),
        u = n("NFeN"),
        d = n("bTqV"),
        h = n("XhcP"),
        p = n("Wp6s"),
        m = n("/t3+"),
        f = n("bSwM"),
        g = n("kmnG"),
        y = n("qFsG"),
        v = n("YUcS"),
        b = n("R0Ic");
      !(function (e) {
        (e.Scale = "scale"),
          (e.Fade = "fade"),
          (e.Flip = "flip"),
          (e.JackInTheBox = "jackInTheBox");
      })(s || (s = {}));
      const x = Object(b.g)([
          Object(b.l)({ opacity: 0, transform: "scale(0.5)" }),
          Object(b.e)(
            "{{time}} cubic-bezier(0.785, 0.135, 0.15, 0.86)",
            Object(b.l)({ opacity: 1, transform: "scale(1)" })
          ),
        ]),
        _ = Object(b.g)([
          Object(b.e)(
            "{{time}} cubic-bezier(0.785, 0.135, 0.15, 0.86)",
            Object(b.l)({ opacity: 0, transform: "scale(0.5)" })
          ),
        ]),
        w = Object(b.g)([
          Object(b.l)({ opacity: 0 }),
          Object(b.e)(
            "{{time}} cubic-bezier(0.785, 0.135, 0.15, 0.86)",
            Object(b.l)({ opacity: 1 })
          ),
        ]),
        C = Object(b.g)([
          Object(b.e)(
            "{{time}} cubic-bezier(0.785, 0.135, 0.15, 0.86)",
            Object(b.l)({ opacity: 0 })
          ),
        ]),
        S = Object(b.g)([
          Object(b.e)(
            "{{time}} cubic-bezier(0.785, 0.135, 0.15, 0.86)",
            Object(b.h)([
              Object(b.l)({
                opacity: 1,
                transform: "perspective(400px) rotate3d(1, 0, 0, 90deg)",
                offset: 0,
              }),
              Object(b.l)({ transform: "perspective(400px)", offset: 1 }),
            ])
          ),
        ]),
        E = Object(b.g)([]),
        k = Object(b.g)([
          Object(b.e)(
            "{{time}} ease-in",
            Object(b.h)([
              Object(b.l)({
                animationFillMode: "forwards",
                transform: "scale(0.1) rotate(30deg)",
                transformOrigin: "center bottom",
                offset: 0,
              }),
              Object(b.l)({ transform: "rotate(-10deg)", offset: 0.5 }),
              Object(b.l)({ transform: "rotate(3deg)", offset: 0.7 }),
              Object(b.l)({ transform: "perspective(400px)", offset: 1 }),
            ])
          ),
        ]),
        O = Object(b.g)([]);
      let I = class {
        constructor() {
          (this.showVideo = !1),
            (this.animationType = s.Fade),
            (this.slides = [
              [
                {
                  headline: "Reviewed by Harvard University",
                  src: "assets/images/harvard-logo.png",
                  alt: "Harvard Business School",
                },
                {
                  headline: "Best product of the Year by IDA Awards 2018",
                  src: "assets/images/ida-awards-logo.png",
                  alt: "IDA AWARDS EDUCATION",
                },
              ],
              [
                {
                  headline: "2-4x proven gain in learning outcome",
                  src: "assets/images/J-pal_Logo.png",
                  alt: "J PAL",
                },
                {
                  headline: "Applauded by Stanford Social Innovation Review",
                  src: "assets/images/Stanford_Logo.png",
                  alt: "Standford Social Innovation Review",
                },
              ],
            ]),
            (this.slides1 = [
              {
                img: "assets/images/harvard-logo.png",
                text: "Reviewed by Harvard University",
                alt: "Harvard Business School",
              },
              {
                img: "assets/images/ida-awards-logo.png",
                text: "Best product of the Year by IDA Awards 2018",
                alt: "IDA AWARDS EDUCATION",
              },
              {
                img: "assets/images/J-pal_Logo.png",
                text: "2-4x proven gain in learning outcome",
                alt: "J PAL",
              },
              {
                img: "assets/images/Stanford_Logo.png",
                text: "Applauded by Stanford Social Innovation Review",
                alt: "Standford Social Innovation Review",
              },
            ]);
        }
        ngOnInit() {}
      };
      (I.ctorParameters = () => []),
        (I = Object(i.a)(
          [
            Object(o.n)({
              selector: "app-intro-cover",
              template:
                '<div class="introContainer">\n    <div class="introCover">\n        <mat-card class="introCard">\n            <div class="introContent" [ngStyle.xs]="{\'margin\':\'0px\',\'padding\':\'0px\' }">\n                <div class="introSection" fxLayout.xs="column" fxLayout="row">\n                    <div fxFlex="45" class="learnInfo">\n                        <h1>\n                        <div class="introMainInfo" [ngStyle.xs]="{\'font-size\':\'40px\'}">\n                            \x3c!-- <h1> --\x3e\n                            <div><span class="text2">Personalised Effective Learning</span> with<br> Ei Mindspark</div>\n                            <div class="font-size">Maths <span class="text2">|</span> English <span class="text2">|</span> Science</div>\n                            \x3c!-- <div class="">\n                                <span>Class 1-10</span>\n                                <span>Class 1-10</span>\n                                <span>Class 1-10</span>\n                            </div> --\x3e\n                            \x3c!-- <div class="grid-container">\n                                <div class="grid-item">Maths</div>\n                                <div class="grid-item">|</div>\n                                <div class="grid-item">English</div>  \n                                <div class="grid-item">|</div>\n                                <div class="grid-item">Science</div>  \n                              </div> --\x3e\n                            <div class="grid-container">\n                                <div class="grid-item">Class 1-10</div>\n                                <div class="grid-item">Class 4-9</div>\n                                <div class="grid-item">Class 6-10</div>  \n                              </div>\n                            \x3c!-- </h1> --\x3e\n                        </div>\n                        </h1>\n                        <div class="introInfo" [ngStyle.xs]="{\'margin\':\'4% 0%\'}">Ei Mindspark is a personalised learning software that allows children to effectively advance at their own pace. Every day, Ei Mindspark delivers over 2 million questions, and the data collected is used to enhance the child\'s learning pathway.\n                            <br>\n                            <br>\n                            Independent evaluations by J-PAL, IDinsight and Gray Matters have demonstrated learning outcomes to improve dramatically.\n\n                            \x3c!-- <br><span class="fontBold">Class 1-10 Maths</span>\n                            <br><span class="fontBold"> Class 4-9 English</span>\n                            <br><span class="fontBold"> Class 6-8 Science</span> --\x3e\n                        </div>\n                    </div>\n                    <div fxHide fxShow.xs [ngStyle.xs]="{\'max-width\':\'100%\',\'margin\':\'2px 0px 40px 0\' }" mat-button\n                        class="freeTrial" routerLink="/free-trial">Start Free Trial</div>\n                    <div fxHide fxShow.xs mat-button class="purchaseBtn" routerLink="/subscription">Buy Now</div>\n                    <div class="videoSection">\n                        <div class="videoContainer" (click)="showVideo=true" *ngIf="showVideo==false">\n                            <img loading="lazy" [ngStyle.xs]="{\'width\':\'100%\'}" class="introImage"\n                                src="assets/images/intro-logo.svg" alt="Mindspark"/>\n                            <div class="playBtn">\n                                <img class="playIcon" loading="lazy" src="assets/images/play-icon.svg" alt="Mindspark" />\n                            </div>\n                        </div>\n                        <div class="iframeContainer" *ngIf="showVideo==true">\n                            <iframe width=100%; height=285px; src="https://www.youtube.com/embed/hvHyVgZhJqc?autoplay=1"\n                                allow=\'autoplay\' allowfullscreen></iframe>\n                        </div>\n                    </div>\n                </div>\n                <div fxLayout="row">\n                    <div fxHide.xs="true" mat-button class="freeTrial" routerLink="/free-trial">Start Free Trial</div>\n                    <div fxHide.xs="true" mat-button class="purchaseBtn" routerLink="/subscription">Buy Now</div>\n                </div>\n                <div class="slickCarousal">\n\n                    <div fxHide.xs="true" class="awards">\n                        <div *ngFor="let slide of slides1" fxLayout="row" class="carouselItem">\n                            <div> <img loading="lazy" class="schoolSymbol" src="{{ slide.img }}" alt="{{ slide.alt }}"></div>\n                            <div class="schoolInfo">{{ slide.text}}</div>\n                        </div>\n                    </div>\n                    <app-awards-carousel fxHide fxShow.xs [slides]="slides" [animationType]="animationType">\n                    </app-awards-carousel>\n\n                </div>\n            </div>\n        </mat-card>\n    </div>\n</div>',
              styles: [
                ".introContainer {\n  display: flex;\n  justify-content: center;\n}\n\n.introCover {\n  width: 1302px;\n}\n\n.schoolSymbol {\n  height: 52px;\n  max-width: 80px;\n  object-fit: contain;\n}\n\n.introCard {\n  margin-top: 4%;\n  background: #e0f2fd;\n  border-radius: 10px;\n}\n\n.introImage {\n  width: 100%;\n  cursor: pointer;\n}\n\n.playBtn {\n  height: 83px;\n  width: 84px;\n  background-color: #212121;\n  border-radius: 16px;\n  position: absolute;\n  bottom: 15px;\n  right: 15px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.playIcon {\n  width: 22px;\n  height: 26px;\n}\n\n.videoContainer:hover {\n  transform: scale(1.01);\n}\n\n.introContent {\n  margin: 15px 15px 15px 50px;\n  padding: 25px 0px;\n}\n\n.introSection {\n  justify-content: space-around;\n}\n\n.videoSection {\n  margin-left: 40px;\n  margin-top: 20px;\n  width: 100%;\n}\n\n.introInfo {\n  margin: 4% 29% 0 0;\n  width: 100%;\n  font-size: 16px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.5;\n  letter-spacing: normal;\n  text-align: left;\n  color: #46494b;\n}\n\n.learnInfo {\n  font-size: 50px;\n  margin: 20px 20px 20px 0px;\n  font-weight: bold;\n  line-height: 1.18;\n  text-align: left;\n}\n\n.learnInfo .text2 {\n  color: var(--maroon-color);\n}\n\n.videoContainer {\n  background-color: white;\n  padding: 22px;\n  border-radius: 24px;\n  margin-right: 30px;\n  position: relative;\n  cursor: pointer;\n  min-height: 200px;\n  transition: all 0.2s ease-in-out;\n}\n\n.freeTrial {\n  margin: 33px 0px 61px 0;\n  padding: 18px 32px;\n}\n\n.purchaseBtn {\n  margin: 33px 0px 61px 20px;\n  padding: 18px 32px;\n  border: solid 1px #212121;\n  border-radius: 30px;\n  font-size: 16px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: center;\n  color: #212121;\n  cursor: pointer;\n}\n\n.purchaseBtn:hover {\n  background-color: #f0f3f4d6;\n}\n\n.schoolInfo {\n  max-width: 135px;\n  height: 34px;\n  margin: 9px 0 9px 15px;\n  font-size: 12px;\n  font-weight: 500;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.42;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n  margin-left: 15px;\n}\n\n.slickCarousal {\n  margin: 10px 0px;\n}\n\niframe {\n  height: 285px;\n}\n\n.iframeContainer {\n  max-width: 529px;\n}\n\n.awards {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n}\n\n@media only screen and (max-width: 800px) {\n  .introCover {\n    width: 100%;\n  }\n\n  .introCard {\n    border-radius: 0px;\n  }\n\n  iframe {\n    height: 100%;\n  }\n\n  .playIcon {\n    width: 14px;\n    height: 17px;\n  }\n\n  .videoContainer {\n    margin-right: 0px;\n  }\n\n  .playBtn {\n    height: 53px;\n    width: 54px;\n  }\n\n  .purchaseBtn {\n    margin: 0px 0px 24px 0px;\n  }\n\n  .videoSection {\n    margin-left: 0px;\n    margin-bottom: 20px;\n  }\n\n  .schoolInfo {\n    height: 100%;\n  }\n\n  .schoolSymbol {\n    max-width: 70px;\n  }\n\n  .introInfo {\n    text-align: justify;\n  }\n}\n\n.font-size {\n  font-size: 44px;\n}\n\n.text3 {\n  font-size: 16px;\n}\n\n.introMainInfo {\n  font-size: 48px;\n  margin: 20px 20px 20px 0px;\n  font-weight: bold;\n  line-height: 1.18;\n  text-align: left;\n}\n\n.grid-container {\n  display: grid;\n  grid-template-columns: 167px 188px auto;\n}\n\n.grid-item {\n  font-size: 20px;\n  text-align: left;\n}\n\n@media only screen and (max-width: 600px) {\n  .font-size {\n    font-size: 25px !important;\n  }\n\n  .grid-container {\n    grid-template-columns: auto auto auto !important;\n  }\n\n  .grid-item {\n    font-size: 14px !important;\n  }\n}",
              ],
            }),
          ],
          I
        ));
      let T = class {
        constructor() {
          (this.subjects = ["Maths", "English"]),
            (this.model = { subject: "Maths" }),
            (this.mathsData = {
              subjectTittle:
                "The most proven personalised math programme for your child",
              info: "Mindspark is a computer-based, online self-learning tool that helps children improve their Maths skills.It allows each child to follow a learning path that is based on his or her needs",
            }),
            (this.englishData = {
              subjectTittle:
                "The most proven personalised English programme for your child",
              info: "Mindspark is a computer-based, online self-learning tool that helps children improve their English skills.It allows each child to follow a learning path that is based on his or her needs",
            });
        }
        slickInit() {
          console.log("slick initialized");
        }
        breakpoint() {
          console.log("breakpoint");
        }
        afterChange() {
          console.log("afterChange");
        }
        beforeChange() {
          console.log("beforeChange");
        }
        ngOnInit() {
          this.data = this.mathsData;
        }
        selectSubject(e) {
          (this.model.subject = e),
            console.log(this.mathsData.subjectTittle),
            "Maths" === e
              ? ((this.data = this.mathsData), console.log())
              : (this.data = this.englishData);
        }
      };
      (T.ctorParameters = () => []),
        (T = Object(i.a)(
          [
            Object(o.n)({
              selector: "app-subject-wise",
              template:
                '<div class="subjectContainer">\n    <div class="subjectCover">\n        <mat-card class="subjectCard">\n            <div class="roleSelection">\n                <label *ngFor="let option of subjects; let i = index">\n                    <input type="radio" name="subject" (click)="selectSubject(option)"\n                        [checked]="option === model.subject"><span class="option" [ngStyle.xs]="{\'font-size\':\'18px\',\'padding\':\'12px 20px\'}">{{option}}</span>\n                </label>\n            </div>\n            \x3c!-- *ngIf="model.subject===\'Maths\'; else english"  --\x3e\n            <div class="studentDetail">\n                <div fxLayout.xs="column" fxLayout="row">\n                    <div fxFlex="60">\n                        <div class="subjectImage" [ngStyle.xs]="{\'margin\':\'38px 69px 24px 69px\'}">\n                            <img loading="lazy" src="assets/images/subject.svg" alt="triangle and circle icon" />\n                        </div>\n                        <div  class="subjectTittle" [ngStyle.xs]="{\'font-size\':\'24px\',\'margin\':\'36px 9px 24px 9px\'}">\n                            \x3c!-- The most proven personalised math programme for your child --\x3e\n                            {{data.subjectTittle}}\n                        </div>\n                        <div class="info" [ngStyle.xs]="{\'margin\':\'0px 9px\'}">\n                            \x3c!-- Mindspark is a computer-based, online self-learning tool that helps children improve their Maths skills.It allows each child to follow a learning path that is based on his or her needs --\x3e\n                            {{data.info}}\n                        </div>\n                    </div>\n                    <div class="benefitList" fxFlex="40" [ngStyle.xs]="{\'margin\': \'0px\'}">\n                        <div class="icon" fxLayout="row">\n                            <div class="iconImage">\n                                <img loading="lazy" src="assets/images/tick.svg" alt="tick symbol" />\n                            </div>\n                            <div class="iconDetail">\n                                Urges children to ask questions, develop conceptual understanding and love the subject\n                            </div>\n                        </div>\n                        <div class="icon" fxLayout="row">\n                            <div class="iconImage">\n                                <img loading="lazy" src="assets/images/tick.svg" alt="tick symbol" />\n                            </div>\n                            <div class="iconDetail">\n                                Helps educators plan lessons and adopt effective methodologies that aid learning\n                            </div>\n                        </div>\n                        <div class="icon" fxLayout="row">\n                            <div class="iconImage">\n                                <img loading="lazy" src="assets/images/tick.svg" alt="tick symbol" />\n                            </div>\n                            <div class="iconDetail">\n                                Aligned with different curriculam\n                            </div>\n                        </div>\n                        <div class="subjectButton" fxLayout.xs="column" fxLayout="row">\n                            <div mat-button [ngStyle.xs]="{\'width\': \'100%\',\'margin\':\'16px 0px\'}" class="moreBenefit" routerLink="/">See More Benefit<span class="arrow"><img loading="lazy" src="assets/images/path.svg" alt="right arrow mark"/></span>\n                            </div>\n                            <div mat-button [ngStyle.xs]="{\'width\': \'100%\',\'margin\':\'12px 0px\'}" class="freeTrial" routerLink="/">Start Free Trial</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        \n        </mat-card>\n    </div>\n</div>',
              styles: [
                ".roleSelection {\n  background-color: #ffffff;\n}\n\n.subjectContainer {\n  display: flex;\n  justify-content: center;\n}\n\n.subjectCard {\n  margin-top: 4%;\n  border-radius: 24px;\n  background-color: #f5f5f5;\n  padding: 53px 20px 0px 20px;\n}\n\n.subjectCover {\n  width: 1302px;\n}\n\ninput[type=radio]:checked + span {\n  background-color: #ffffff !important;\n  cursor: pointer;\n  /* height: 3px; */\n  padding: 13px 59px;\n  border: solid 2px #a01e21;\n  color: #a01e21;\n  border-radius: 29px;\n}\n\ninput[type=radio]:focus + span,\ninput:hover + span {\n  opacity: 0.7;\n}\n\ninput[type=radio] {\n  visibility: hidden;\n}\n\n.option {\n  padding: 49px;\n  opacity: 0.8;\n  font-family: Manrope;\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1.38;\n  text-align: center;\n  color: #212121;\n  cursor: pointer;\n}\n\nlabel {\n  margin-bottom: 0rem;\n  margin-left: -11px;\n}\n\n.subjectImage {\n  margin: 4px 24px 24px 100px;\n  object-fit: contain;\n}\n\n.subjectTittle {\n  margin: 36px 78px 24px 98px;\n  font-size: 32px;\n  font-weight: bold;\n  line-height: 1.38;\n  text-align: left;\n  color: #212121;\n}\n\n.iconDetail {\n  margin: 0px 15px;\n  font-family: Manrope;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 1.38;\n  text-align: left;\n  color: #212121;\n  width: 420px;\n}\n\n.benefitList {\n  margin: 97px 40px 50px 40px;\n}\n\n.icon {\n  margin: 46px 21px;\n}\n\n.info {\n  margin: 36px 173px 24px 98px;\n}\n\n.moreBenefit {\n  width: 197px;\n  padding: 18px;\n  border-radius: 30px;\n  border: solid 1px #d3d3d3;\n  text-align: center;\n  font-weight: bold;\n}\n\n.arrow {\n  padding: 10px;\n}\n\n.freeTrial {\n  padding: 18px 40px;\n}\n\n.subjectButton {\n  margin-left: 35ox;\n}\n\n@media screen and (max-width: 1302px) and (min-width: 768px) {\n  .subjectCover {\n    width: 100%;\n  }\n}\n\n@media only screen and (max-width: 767px) {\n  .subjectCover {\n    width: 100%;\n  }\n\n  .subjectCard {\n    border-radius: 0px;\n    padding: 40px 20px;\n  }\n}",
              ],
            }),
          ],
          T
        ));
      let A = class {
        constructor() {
          (this.schools = ["Schools", "Governments", "International"]),
            (this.activeTab = "Schools"),
            (this.animationType = s.Fade),
            (this.slides = {
              Schools: [
                [
                  [
                    {
                      img: "assets/images/school1.jpg",
                      alt: "Basava International School",
                    },
                    {
                      img: "assets/images/school2.jpg",
                      alt: "The Shishukunj International School",
                    },
                  ],
                  [
                    { img: "assets/images/school3.png", alt: "Campion School" },
                    {
                      img: "assets/images/school4.jpg",
                      alt: "Delhi Public School",
                    },
                  ],
                  [
                    { img: "assets/images/school5.jpg", alt: "Euro school" },
                    {
                      img: "assets/images/school6.jpg",
                      alt: "tejasvinavadhitamastu",
                    },
                  ],
                  [
                    {
                      img: "assets/images/school7.jpg",
                      alt: "Seth M R Jaipuria Schools",
                    },
                    {
                      img: "assets/images/school8.jpg",
                      alt: "Silveroaks International School",
                    },
                  ],
                  [
                    {
                      img: "assets/images/school9.jpg",
                      alt: "The Galaxy School, Wadi",
                    },
                    {
                      img: "assets/images/school10.jpg",
                      alt: "South Point School",
                    },
                  ],
                ],
                [
                  [
                    { img: "assets/images/school3.png", alt: "Campion School" },
                    {
                      img: "assets/images/school4.jpg",
                      alt: "Delhi Public School",
                    },
                  ],
                  [
                    { img: "assets/images/school5.jpg", alt: "Euro school" },
                    {
                      img: "assets/images/school6.jpg",
                      alt: "tejasvinavadhitamastu",
                    },
                  ],
                  [
                    {
                      img: "assets/images/school7.jpg",
                      alt: "Seth M R Jaipuria Schools",
                    },
                    {
                      img: "assets/images/school8.jpg",
                      alt: "Silveroaks International School",
                    },
                  ],
                  [
                    {
                      img: "assets/images/school9.jpg",
                      alt: "The Galaxy School, Wadi",
                    },
                    {
                      img: "assets/images/school10.jpg",
                      alt: "South Point School",
                    },
                  ],
                  [
                    {
                      img: "assets/images/school11.jpg",
                      alt: "tejasvinavadhitamastu",
                    },
                    {
                      img: "assets/images/school12.png",
                      alt: "Santa maria international school",
                    },
                  ],
                ],
              ],
              Governments: [
                [
                  [
                    { img: "assets/images/government1.jpg", alt: "Mindspark" },
                    {
                      img: "assets/images/government2.jpg",
                      alt: "Bhutan Flag",
                    },
                  ],
                  [
                    {
                      img: "assets/images/government3.jpg",
                      alt: "Government of Rajasthan",
                    },
                    {
                      img: "assets/images/government4.jpg",
                      alt: "Uttar Pradesh Madhyamik Shiksha Parishad",
                    },
                  ],
                  [
                    { img: "assets/images/government5.jpg", alt: "Mindspark" },
                    { img: "assets/images/government6.jpg", alt: "Mindspark" },
                  ],
                  [
                    {
                      img: "assets/images/government7.jpg",
                      alt: "Bihar Education Project",
                    },
                    {
                      img: "assets/images/government8.jpg",
                      alt: "Government of Andhra Pradesh",
                    },
                  ],
                  [
                    {
                      img: "assets/images/government9.jpg",
                      alt: "Gujarat Secondary and Higher Secondary Education Board",
                    },
                    {
                      img: "assets/images/government10.jpg",
                      alt: "Central Board of Secondary Education",
                    },
                  ],
                ],
              ],
              International: [
                [
                  [
                    { img: "assets/images/international1.jpg", alt: "GOOGLE" },
                    {
                      img: "assets/images/international2.jpg",
                      alt: "MACARTHUR FOUNDATION",
                    },
                  ],
                  [
                    {
                      img: "assets/images/international3.jpg",
                      alt: "MILLENNIUM ALLIANCE",
                    },
                    {
                      img: "assets/images/international4.jpg",
                      alt: "MICHAEL & SUSAN DELL FOUNDATION",
                    },
                  ],
                  [
                    {
                      img: "assets/images/international5.jpg",
                      alt: "HEWLETT FOUNDATION",
                    },
                    {
                      img: "assets/images/international6.jpg",
                      alt: "USAID INDIA",
                    },
                  ],
                  [
                    {
                      img: "assets/images/international7.jpg",
                      alt: "Global Innovation Fund",
                    },
                    { img: "assets/images/international8.jpg", alt: "Unicef" },
                  ],
                  [
                    {
                      img: "assets/images/international9.jpg",
                      alt: "Young Lives",
                    },
                    {
                      img: "assets/images/international10.jpg",
                      alt: "The World Bank",
                    },
                  ],
                ],
                [
                  [
                    {
                      img: "assets/images/international2.jpg",
                      alt: "MACARTHUR FOUNDATION",
                    },
                    {
                      img: "assets/images/international3.jpg",
                      alt: "MILLENNIUM ALLIANCE",
                    },
                  ],
                  [
                    {
                      img: "assets/images/international4.jpg",
                      alt: "MICHAEL & SUSAN DELL FOUNDATION",
                    },
                    {
                      img: "assets/images/international5.jpg",
                      alt: "HEWLETT FOUNDATION",
                    },
                  ],
                  [
                    {
                      img: "assets/images/international6.jpg",
                      alt: "USAID INDIA",
                    },
                    {
                      img: "assets/images/international7.jpg",
                      alt: "Global Innovation Fund",
                    },
                  ],
                  [
                    { img: "assets/images/international8.jpg", alt: "Unicef" },
                    {
                      img: "assets/images/international9.jpg",
                      alt: "Young Lives",
                    },
                  ],
                  [
                    {
                      img: "assets/images/international10.jpg",
                      alt: "The World Bank",
                    },
                    { img: "assets/images/international11.jpg", alt: "J PAL" },
                  ],
                ],
              ],
            }),
            (this.slides2 = {
              Schools: [
                [
                  [
                    {
                      img: "assets/images/school1.jpg",
                      alt: "Basava International School",
                    },
                    {
                      img: "assets/images/school2.jpg",
                      alt: "The Shishukunj International School",
                    },
                  ],
                  [
                    { img: "assets/images/school3.png", alt: "Campion School" },
                    {
                      img: "assets/images/school4.jpg",
                      alt: "Delhi Public School",
                    },
                  ],
                ],
                [
                  [
                    { img: "assets/images/school5.jpg", alt: "Euro school" },
                    {
                      img: "assets/images/school6.jpg",
                      alt: "tejasvinavadhitamastu",
                    },
                  ],
                  [
                    {
                      img: "assets/images/school7.jpg",
                      alt: "Seth M R Jaipuria Schools",
                    },
                    {
                      img: "assets/images/school8.jpg",
                      alt: "Silveroaks International School",
                    },
                  ],
                ],
                [
                  [
                    {
                      img: "assets/images/international9.jpg",
                      alt: "Young Lives",
                    },
                    {
                      img: "assets/images/international10.jpg",
                      alt: "The World Bank",
                    },
                  ],
                  [
                    {
                      img: "assets/images/school11.jpg",
                      alt: "tejasvinavadhitamastu",
                    },
                    {
                      img: "assets/images/school12.png",
                      alt: "Santa maria international school",
                    },
                  ],
                ],
              ],
              Governments: [
                [
                  [
                    { img: "assets/images/government1.jpg", alt: "Mindspark" },
                    {
                      img: "assets/images/government2.jpg",
                      alt: "Bhutan Flag",
                    },
                  ],
                  [
                    {
                      img: "assets/images/government3.jpg",
                      alt: "Government of Rajasthan",
                    },
                    {
                      img: "assets/images/government4.jpg",
                      alt: "Uttar Pradesh Madhyamik Shiksha Parishad",
                    },
                  ],
                ],
                [
                  [
                    { img: "assets/images/government5.jpg", alt: "Mindspark" },
                    { img: "assets/images/government6.jpg", alt: "Mindspark" },
                  ],
                  [
                    {
                      img: "assets/images/government7.jpg",
                      alt: "Bihar Education Project",
                    },
                    {
                      img: "assets/images/government8.jpg",
                      alt: "Government of Andhra Pradesh",
                    },
                  ],
                ],
                [
                  [
                    {
                      img: "assets/images/government9.jpg",
                      alt: "Gujarat Secondary and Higher Secondary Education Board",
                    },
                    {
                      img: "assets/images/government10.jpg",
                      alt: "Central Board of Secondary Education",
                    },
                  ],
                  [
                    { img: "assets/images/government1.jpg", alt: "Mindspark" },
                    {
                      img: "assets/images/government2.jpg",
                      alt: "Bhutan Flag",
                    },
                  ],
                ],
              ],
              International: [
                [
                  [
                    { img: "assets/images/international1.jpg", alt: "GOOGLE" },
                    {
                      img: "assets/images/international2.jpg",
                      alt: "MACARTHUR FOUNDATION",
                    },
                  ],
                  [
                    {
                      img: "assets/images/international3.jpg",
                      alt: "MILLENNIUM ALLIANCE",
                    },
                    {
                      img: "assets/images/international4.jpg",
                      alt: "MICHAEL & SUSAN DELL FOUNDATION",
                    },
                  ],
                ],
                [
                  [
                    {
                      img: "assets/images/international5.jpg",
                      alt: "HEWLETT FOUNDATION",
                    },
                    {
                      img: "assets/images/international6.jpg",
                      alt: "USAID INDIA",
                    },
                  ],
                  [
                    {
                      img: "assets/images/international7.jpg",
                      alt: "Global Innovation Fund",
                    },
                    { img: "assets/images/international8.jpg", alt: "Unicef" },
                  ],
                ],
                [
                  [
                    {
                      img: "assets/images/international9.jpg",
                      alt: "Young Lives",
                    },
                    {
                      img: "assets/images/international10.jpg",
                      alt: "The World Bank",
                    },
                  ],
                  [
                    { img: "assets/images/international11.jpg", alt: "J PAL" },
                    {
                      img: "assets/images/international4.jpg",
                      alt: "MICHAEL & SUSAN DELL FOUNDATION",
                    },
                  ],
                ],
              ],
            });
        }
        ngOnInit() {}
        selectTab(e) {
          this.activeTab = e;
        }
      };
      (A.ctorParameters = () => []),
        (A.propDecorators = {
          slickComponent: [{ type: o.mb, args: ["slickModal"] }],
        }),
        (A = Object(i.a)(
          [
            Object(o.n)({
              selector: "app-school-wise",
              template:
                '<div class="schoolwiseContainer">\n    <div class="schoolwiseCover">\n        <div fxLayoutAlign="center center" class="schoolImage">\n            <img loading="lazy" src="assets/images/school.svg" alt="school building icon" />\n        </div>\n        <div class="schoolContainer">\n            <mat-card class="schoolCard" [ngStyle.xs]="{\'margin\':\'0px\'}">\n                <div class="roleSelection">\n                    <label *ngFor="let option of schools; let i = index">\n                        <input type="radio" name="school" (click)="selectTab(option)"\n                            [checked]="option === activeTab"><span class="option" [ngStyle.xs]="{\'font-size\':\'14px\',\'padding\':\'13px\'}">{{option}}</span>\n                    </label>\n                </div>\n\n                <div *ngIf="activeTab === \'Schools\'">\n                    <app-school-carousel fxHide.xs="true" [slides]="slides[\'Schools\']" [animationType]="animationType"></app-school-carousel>\n                    <app-school-carousel fxHide fxShow.xs [showArrow]="true" [hideDot]="true" [slides]="slides2[\'Schools\']" [animationType]="animationType"></app-school-carousel>\n                </div>\n\n                <div *ngIf="activeTab === \'Governments\'">\n                    <app-school-carousel fxHide.xs="true" [slides]="slides[\'Governments\']" [hideDot]="true" [animationType]="animationType"></app-school-carousel>\n                    <app-school-carousel fxHide fxShow.xs [showArrow]="true" [hideDot]="true" [slides]="slides2[\'Governments\']"  [animationType]="animationType"></app-school-carousel>\n                </div>\n\n                <div *ngIf="activeTab === \'International\'">\n                    <app-school-carousel fxHide.xs="true" [slides]="slides[\'International\']" [animationType]="animationType"></app-school-carousel>\n                    <app-school-carousel fxHide fxShow.xs [showArrow]="true" [hideDot]="true" [slides]="slides2[\'International\']"  [animationType]="animationType"></app-school-carousel>\n                </div>\n            </mat-card>\n        </div>\n\n    </div>\n</div>',
              styles: [
                ".schoolwiseContainer {\n  display: flex;\n  justify-content: center;\n}\n\n.roleSelection {\n  background-color: #ffffff;\n}\n\n.schoolwiseCover {\n  width: 1302px;\n  margin: 0px;\n}\n\n.schoolSlide {\n  height: 54px;\n}\n\n.schoolCard {\n  border-radius: 24px;\n  background-color: #f5f5f5;\n  padding: 60px 20px 20px 20px;\n}\n\ninput[type=radio]:checked + span {\n  background-color: #ffffff !important;\n  cursor: pointer;\n  /* height: 3px; */\n  padding: 13px 39px;\n  border: solid 2px #a01e21;\n  color: #a01e21;\n  border-radius: 29px;\n}\n\ninput[type=radio]:focus + span,\ninput:hover + span {\n  opacity: 0.7;\n}\n\ninput[type=radio] {\n  visibility: hidden;\n}\n\n.option {\n  padding: 50px;\n  opacity: 0.8;\n  font-family: Manrope;\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1.38;\n  text-align: center;\n  color: #212121;\n  cursor: pointer;\n}\n\nlabel {\n  margin-bottom: 0rem;\n  margin-left: -11px;\n}\n\n.schoolItem {\n  padding: 16px 8px;\n  background-color: #ffff;\n  border-radius: 12px;\n  margin-bottom: 8px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-right: 24px;\n}\n\n::ng-deep .slick-dots li button:before {\n  font-size: 14px;\n}\n\n::ng-deep .slick-slide {\n  outline: none;\n}\n\n.carousel {\n  margin: 60px 0px;\n}\n\n@media only screen and (max-width: 767px) {\n  .schoolSlide {\n    width: 80px;\n    object-fit: scale-down;\n  }\n\n  .schoolSymbols {\n    place-content: start;\n  }\n\n  .schoolwiseCover {\n    width: 100%;\n  }\n\n  .schoolCard {\n    border-radius: 0px;\n    padding: 40px 0px;\n  }\n}",
              ],
            }),
          ],
          A
        ));
      let D = class {
        constructor() {}
        ngOnInit() {}
      };
      (D.ctorParameters = () => []),
        (D = Object(i.a)(
          [
            Object(o.n)({
              selector: "app-plan",
              template:
                '<div class="planContainer">\n    <mat-card class="planCard">\n        <div class="partnerTittle" [ngStyle.xs]="{\'text-align\':\'left\'}">\n            <div class="planHead">Plan</div>\n            <div class="planText">A world class Maths experience just at $18 a day</div>\n        </div>\n        <div fxLayoutGap="25px" fxLayoutGap.xs="0px" fxLayoutAlign="center start" fxLayout="row wrap" class="paymentCard" [ngStyle.xs]="{\'margin\':\'21px 0px\'}">\n            <mat-card  [routerLink]="[\'/subscription\']"class="payCard">\n                <div class="payCardTitle" [ngStyle.xs]="{\'text-align\':\'left\'}">Free Trial</div>\n                <div class="payCardText" [ngStyle.xs]="{\'text-align\':\'left\',\'margin\': \'14px 14px\' }">14days free trial <br> No credit card required.</div>\n                <div fxHide.xs="true" class="payCardButton"> Start Trial</div>\n            </mat-card>\n            <mat-card fxLayout.xs="row" class="payCard">\n                <div fxFlex.xs="50">\n                    <div class="payCardTitle">3 months</div>\n                    <div fxLayoutAlign="center center" class="payGreen"><span class="planAmount"> Save \u20b91301</span></div>\n                    <div fxHide.xs="true" class="payCardText">Proin ac quam et lectus vestibulum blandit. </div>\n                </div>\n                <div fxFlex.xs="50" [ngStyle.xs]="{\'margin\':\'5px 0px\'}">\n                    <div class="payCross"><span class="strikethrough"> \u20b93000</span></div>\n                    <div class="payActual">\u20b91699</div>\n                </div>\n                <div fxHide.xs="true" class="freeTrial">Buy Now</div>\n            </mat-card>\n            <mat-card fxLayout.xs="row" class="payCard">\n                <div fxFlex.xs="50">\n                    <div class="payCardTitle">6 months</div>\n                    <div fxLayoutAlign="center center" class="payGreen"><span class="planAmount"> Save \u20b93001</span></div>\n                    <div fxHide.xs="true" class="payCardText">Proin ac quam et lectus vestibulum blandit. </div>\n                </div>\n                <div fxFlex.xs="50" [ngStyle.xs]="{\'margin\':\'10px 0px\'}">\n                    <div class="payCross"><span class="strikethrough"> \u20b96000</span></div>\n                    <div class="payActual">\u20b92999</div>\n                </div>\n                <div fxHide.xs="true" class="freeTrial">Buy Now</div>\n            </mat-card>\n            <mat-card fxLayout.xs="row" class="payCard">\n                <div fxFlex.xs="50">\n                    <div class="payCardTitle">12 months</div>\n                    <div fxLayoutAlign="center center" class="payGreen"><span class="planAmount"> Save \u20b97001</span></div>\n                    <div fxHide.xs="true" class="payCardText">Proin ac quam et lectus vestibulum blandit. </div>\n                </div>\n                <div fxFlex.xs="50" [ngStyle.xs]="{\'margin\':\'10px 0px\'}">\n                    <div class="payCross"><span class="strikethrough"> \u20b912000</span></div>\n                    <div class="payActual">\u20b94999</div>\n                </div>\n                <div fxHide.xs="true" class="freeTrial">Buy Now</div>\n            </mat-card>\n        </div>\n    </mat-card>\n</div>',
              styles: [
                '.planContainer {\n  display: flex;\n  justify-content: center;\n}\n\n.planCard {\n  width: 1302px;\n  border-radius: 24px;\n  background-color: #f5f5f5;\n  padding: 60px 20px 60px 20px;\n}\n\n.planHead {\n  font-size: 36px;\n  font-weight: bold;\n  text-align: center;\n  color: #212121;\n}\n\n.planText {\n  width: 284px;\n  font-size: 16px;\n  text-align: center;\n  color: #46494b;\n  margin: auto;\n}\n\n.payCard {\n  width: 247px;\n  padding: 44px 30px;\n  margin-bottom: 20px;\n}\n\n.payCardTitle {\n  height: 33px;\n  font-size: 24px;\n  font-weight: bold;\n  line-height: 1.38;\n  text-align: center;\n  color: #212121;\n  margin: 0px 10px;\n}\n\n.payCardText {\n  width: 192px;\n  height: 45px;\n  margin: 46px 0 60px;\n  font-family: Manrope;\n  font-size: 14px;\n  line-height: 1.36;\n  letter-spacing: 0.28px;\n  text-align: center;\n  color: #46494b;\n}\n\n.payCardButton {\n  width: 148px;\n  margin: 60px 22px 0;\n  padding: 18px 36px 16px;\n  border-radius: 30px;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);\n  border: solid 1px rgba(244, 124, 48, 0.29);\n  background-image: linear-gradient(247deg, #46494b 114%, #0e0f0f -6%);\n  color: #ffff;\n}\n\n.payGreen {\n  width: 113px;\n  height: 29px;\n  margin: 6px 40px 40px 39px;\n  border-radius: 15px;\n  background-color: #a5d170;\n}\n\n.planAmount {\n  font-size: 13px;\n  font-weight: bold;\n  line-height: 1.38;\n  text-align: center;\n  color: #ffffff;\n  text-align: center;\n}\n\n.payCross {\n  opacity: 0.8;\n  font-family: Manrope;\n  font-size: 16px;\n  line-height: 1.38;\n  text-align: center;\n  color: #212121;\n}\n\n.payActual {\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1.38;\n  text-align: center;\n  color: #212121;\n}\n\n.payCardButton {\n  border-radius: 30px;\n  text-align: center;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);\n  border: solid 1px rgba(244, 124, 48, 0.29);\n  background-image: linear-gradient(247deg, #46494b 114%, #0e0f0f -6%);\n}\n\n.freeTrial {\n  margin: 23px 29px 2px 29px;\n  padding: 9px 9px;\n}\n\n.strikethrough {\n  position: relative;\n  position: relative;\n  width: 50px;\n  margin: auto;\n}\n\n.strikethrough:before {\n  position: absolute;\n  content: "";\n  left: 0;\n  top: 50%;\n  right: 0;\n  border-top: 1px solid;\n  border-color: inherit;\n  transform: rotate(-10deg);\n  color: red;\n}\n\n.paymentCard {\n  margin: 52px;\n}\n\n@media only screen and (max-width: 767px) {\n  .planCard {\n    width: 100%;\n    border-radius: 0px;\n    padding-bottom: 20px;\n  }\n\n  .payCard {\n    width: 100%;\n    border-radius: 20px;\n    margin-bottom: 20px;\n    padding: 20px;\n    box-shadow: 0 2px 6px 0 rgba(0, 0, 0, 0.1);\n  }\n\n  .payCardTitle {\n    text-align: left;\n  }\n\n  .payGreen {\n    margin: 10px 0px;\n  }\n}',
              ],
            }),
          ],
          D
        ));
      let M = class {
        constructor() {}
        ngOnInit() {}
      };
      (M.ctorParameters = () => []),
        (M = Object(i.a)(
          [
            Object(o.n)({
              selector: "app-contact-detail",
              template:
                '<div class="contactDetail" [ngStyle.xs]="{\'margin\': \'100px 12px\'}">\n    <div class="contactTittle">\n        <div class="contactHead">Still unsure?</div>\n        <div class="contactInfo">You should leverage the expertise of our consultation team.</div>\n    </div>\n    <div class="contactInput" [ngStyle.xs]="{\'width\': \'100%\',\'padding\':\' 17px 2px 2px 19px\'}">\n        <div fxLayout="row" fxLayout.xs="column">\n            <div fxFlex="60" fxLayout="row">\n                <input value="+91" class="countryCode" matInput placeholder="Enter your phone">\n                <span class="vertical" [ngStyle.xs]="{\'margin\': \'3px\'}"></span>\n                <input matInput class="phoneNumber" placeholder="Enter your phone number">\n            </div>\n\n            <div fxFlex="40" mat-button class="buttonContact">\n                <span class="contactText"> Talk to us</span>\n            </div>\n        </div>\n    </div>\n\n</div>',
              styles: [
                ".contactHead {\n  font-size: 36px;\n  font-weight: bold;\n  text-align: center;\n  color: #212121;\n}\n\n.contactInfo {\n  font-size: 14px;\n  line-height: 1.36;\n  letter-spacing: 0.28px;\n  text-align: center;\n  color: #46494b;\n}\n\n.contactDetail {\n  margin: 50px 20px;\n}\n\n.contactInput {\n  width: 478px;\n  height: 60px;\n  margin: 30px auto;\n  padding: 2px 2px 2px 19px;\n  border-radius: 30px;\n  background-color: #f5f5f5;\n}\n\n.phone {\n  display: inline-block;\n}\n\n.buttonContact {\n  width: 183px;\n  height: 56px;\n  margin: 0px;\n  padding: 18px 37px 16px;\n  border-radius: 28px;\n  background-image: linear-gradient(242deg, #28a7df 96%, #2860df 19%);\n  text-align: center;\n}\n\n.contactText {\n  font-family: Manrope;\n  font-size: 16px;\n  font-weight: bold;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: center;\n  color: #ffffff;\n}\n\n.countryCode {\n  width: 29px;\n  border: 0;\n  background-color: #f5f5f5;\n}\n\n.phoneNumber {\n  width: 350px;\n  border: 0;\n  background-color: #f5f5f5;\n}\n\n.vertical {\n  border-left: solid 0.5px #707070;\n  margin: 11px;\n  color: #707070;\n}\n\ninput:focus {\n  outline: none;\n}\n\n@media only screen and (max-width: 767px) {\n  .buttonContact {\n    margin: 50px 0px;\n    width: 100%;\n    text-align: center;\n    padding: 14px 10px;\n    background-image: linear-gradient(257deg, #28a7df 95%, #2860df 22%);\n  }\n}",
              ],
            }),
          ],
          M
        ));
      let P = class {
        constructor() {}
        ngOnInit() {}
      };
      (P.ctorParameters = () => []),
        (P = Object(i.a)(
          [
            Object(o.n)({
              selector: "app-ei-info",
              template:
                '<div class="infoContainer">\n    <div class="infoWrapper">\n        <div class="infoImage" [ngStyle.xs]="{\'margin\':\'-106px 0px\', \'padding-top\': \'131px\'}">\n            <img class="infoTopImage" loading="lazy" src="assets/images/img6.svg" alt="Virtual Video icon" />\n        </div>\n        <mat-card class="eiInfo" [ngStyle.xs]="{\'margin\':\'10px 0px\'}">\n\n            <div>\n                <img loading="lazy" class="eiLogo" src="assets/images/ei-mindspark-maroon-full.svg" alt="Ei"\n                    [ngStyle.xs]="{\'margin\':\'147px 46px 0px 53px\'}" />\n            </div>\n            <div class="eiContent" fxLayout="row " fxLayout.xs="column" [ngStyle.xs]="{\'padding\':\'26px 9px\'}">\n                <div fxFlex="50" class="infoLeft">\n                    <p class="infoDetail" [ngStyle.xs]="{\'font-size\':\'16px\'}"> Educational Initiatives (EI) is an edtech\n                        company that leverages the twin levers of cutting-edge research and technology-based solutions\n                        approach to revolutionise how children engaged in the K-12 education space learn. </p>\n                    <div fxHide.xs="true" mat-button class="learnInfo" routerLink="/">\n                        <a href="https://www.ei-india.com" target="_blank" class="learnMoreItem">Learn More</a><span\n                            class="arrow">\n                            <img loading="lazy" src="assets/images/path.svg" alt="right arrow mark"/></span></div>\n                </div>\n                <div fxFlex="50" class="infoRight">\n\n                    <p class="infoEI">\n                        Our vision is to create a world in which children everywhere learn with understanding. Our goal\n                        is to reach a multitude of children across different strata of society, irrespective of the kind\n                        of education they are receiving today or the curriculum they\n                        are following.</p>\n\n                        <div  fxHide.lg="true" mat-button class="learnInfo" routerLink="/">\n                            <a href="https://www.ei-india.com" target="_blank" class="learnMoreItem">Learn More</a><span\n                                class="arrow">\n                                <img loading="lazy" src="assets/images/path.svg" alt="right arrow mark"/></span></div>\n                </div>\n            </div>\n\n        </mat-card>\n\n    </div>\n</div>',
              styles: [
                ".infoContainer {\n  display: flex;\n  justify-content: center;\n}\n\n.infoWrapper {\n  width: 1302px;\n}\n\n.infoImage {\n  text-align: center;\n  text-align: center;\n  z-index: 5;\n  margin: -60px 0px;\n  position: relative;\n  padding-top: 85px;\n}\n\n.infoTopImage {\n  max-width: 220px;\n}\n\n.eiInfo {\n  border-radius: 24px;\n  background-color: #f5f5f5;\n  margin: 10px 10px;\n}\n\n.infoDetail {\n  margin: 50px 73px 53px 0;\n  font-size: 16px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.5;\n  letter-spacing: normal;\n  text-align: left;\n  color: #46494b;\n}\n\n.infoEI {\n  font-size: 16px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.5;\n  letter-spacing: normal;\n  text-align: left;\n  color: #46494b;\n}\n\n.learnInfo {\n  width: 200px;\n  margin: 40px 0px 0 0px;\n  padding: 8px 0px;\n  border-radius: 30px;\n  border: solid 1px #d3d3d3;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n}\n\n.learnMoreItem {\n  font-size: 16px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.19;\n  letter-spacing: normal;\n  text-align: center;\n  color: #212121;\n}\n\n.learnInfo:hover {\n  background-color: #ffffff;\n}\n\n.infoTitle {\n  height: 88px;\n  margin: 58px 195px 0px 0;\n  font-family: Manrope;\n  font-size: 32px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n}\n\n.infoRight {\n  margin: 47px 0px 0px 0;\n  font-family: Manrope;\n  font-size: 16px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.5;\n  letter-spacing: normal;\n  text-align: left;\n  color: #46494b;\n}\n\n.arrow {\n  padding: 10px;\n}\n\n.eiContent {\n  padding: 17px 63px;\n}\n\n.eiLogo {\n  margin: 60px 46px 0px 53px;\n  width: 177px;\n}\n\n@media only screen and (max-width: 767px) {\n  .infoDetail {\n    width: 100%;\n    margin: 11px 0px 0px 0;\n    text-align: justify;\n  }\n\n  .infoContainer {\n    overflow: hidden;\n  }\n\n  .mat-card {\n    padding: 16px 3px;\n  }\n\n  .eiInfo {\n    border-radius: 0px;\n  }\n\n  .infoWrapper {\n    width: 100%;\n  }\n}",
              ],
            }),
          ],
          P
        ));
      let R = class {
        constructor() {}
        ngOnInit() {}
      };
      (R.ctorParameters = () => []),
        (R = Object(i.a)(
          [
            Object(o.n)({
              selector: "app-email-card",
              template:
                '<div class="emailContainer">\n    <div class="emailWrapper">\n        <mat-card class="emailCard">\n\n            <div fxLayout.xs="column" fxLayout="row">\n                <div fxHide.xs="true" class="circleImage" fxFlex="10"> <img loading="lazy" src="assets/images/left-circle.svg" alt="circle symbol" /></div>\n                <div fxHide fxShow.xs="true" class="" fxFlex="10" [ngStyle.xs]="{\'margin\': \'0px 21px\'}"> <img loading="lazy" src="assets/images/emailMobile.svg" alt="circle symbol" /></div>\n                <div class="emailText" fxFlex.xs="100" fxFlex="40">Ready to get started?</div>\n                <div fxFlex.xs="100" fxFlex="50">\n                    <div fxLayout.xs="column" fxLayout="row">\n\n                        <div class="emailCard">\n                            <input matInput type="email" class="email" placeholder="Enter your phone number" [ngStyle.xs]="{\'margin\': \'1px 38px\'}">\n                        </div>\n\n\n                        <div mat-button class="freeTrial" [ngStyle.xs]="{\'width\':\'82%\',\'margin\':\'25px auto\'}">\n                            <span class="contactText"> Start Free Trial</span>\n                        </div>\n\n                    </div>\n\n                </div>\n\n            </div>\n            <div class="downCircle"> <img loading="lazy" src="assets/images/down-circle.svg" alt="half circle image" /></div>\n        </mat-card>\n    </div>\n</div>',
              styles: [
                ".emailContainer {\n  display: flex;\n  justify-content: center;\n  margin-top: 60px;\n}\n\n.emailWrapper {\n  width: 1302px;\n}\n\n.emailCard {\n  margin: 41px 0 42px;\n  /* padding: 18px 147.4px 0px 0; */\n  border-radius: 24px;\n  background-color: #fff7d6;\n}\n\n.emailText {\n  font-family: Manrope;\n  font-size: 24px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.38;\n  letter-spacing: normal;\n  text-align: center;\n  color: #212121;\n  margin: auto;\n}\n\ninput {\n  border-radius: 25px;\n  padding: 13px;\n  width: 248px;\n  border: none;\n}\n\ninput:focus {\n  outline: none;\n}\n\n.freeTrial {\n  width: 25%;\n  margin: 41px 0px 61px -31px;\n  padding: 11px 14px 13px 14px;\n}\n\n.circleImage {\n  margin: auto;\n}\n\n.mat-card {\n  padding: 0px;\n}\n\n.downCircle {\n  position: absolute;\n  bottom: 0;\n  right: 15%;\n}\n\n@media only screen and (max-width: 767px) {\n  .emailWrapper {\n    width: 100%;\n  }\n\n  .emailCard {\n    border-radius: 0px;\n    margin-top: 0px;\n  }\n\n  .emailContainer {\n    margin-top: 0px;\n  }\n}",
              ],
            }),
          ],
          R
        ));
      let j = class {
        constructor() {
          (this.slides = []),
            (this.animationType = s.Scale),
            (this.currentSlide = 0);
        }
        ngOnInit() {}
        onPreviousClick() {
          const e = this.currentSlide - 1;
          (this.currentSlide = e < 0 ? this.slides.length - 1 : e),
            console.log(
              "previous clicked, new current slide is: ",
              this.currentSlide
            );
        }
        onNextClick() {
          const e = this.currentSlide + 1;
          (this.currentSlide = e === this.slides.length ? 0 : e),
            console.log(
              "next clicked, new current slide is: ",
              this.currentSlide
            );
        }
      };
      (j.ctorParameters = () => []),
        (j.propDecorators = {
          slides: [{ type: o.G }],
          animationType: [{ type: o.G }],
        }),
        (j = Object(i.a)(
          [
            Object(o.n)({
              selector: "app-awards-carousel",
              template:
                '\x3c!-- carousel --\x3e\n<div class="carousel">\n    <ng-container *ngFor="let slide of slides; let i = index">\n        <div *ngIf="i === currentSlide" class="slide" [@slideAnimation]="animationType">\n            <div class="slideContainer">\n                <div fxLayout="row" class="carouselItem">\n                    <div> <img loading="lazy" class="schoolSymbol" src="{{ slide[0].src }}" alt="{{ slide[0].alt }}"></div>\n                    <div class="schoolInfo">{{ slide[0].headline}}</div>\n                </div> \n                <div fxLayout="row" class="carouselItem">\n                    <div> <img loading="lazy" class="schoolSymbol" src="{{ slide[1].src }}" alt="{{ slide[1].alt }}"></div>\n                    <div class="schoolInfo">{{ slide[1].headline}}</div>\n                </div> \n            </div>\n        </div>\n    </ng-container>\n</div>\n<div class="carousel_nav">\n    <button (click)="onPreviousClick()" class="carousel_indicator" [ngClass]="{current_slide: currentSlide === 0}">\n    </button>\n    <button (click)="onNextClick()" class="carousel_indicator" [ngClass]="{current_slide: currentSlide === 1}">\n    </button>\n</div>\n',
              animations: [
                Object(b.n)("slideAnimation", [
                  Object(b.m)("void => scale", [
                    Object(b.o)(x, { params: { time: "500ms" } }),
                  ]),
                  Object(b.m)("scale => void", [
                    Object(b.o)(_, { params: { time: "500ms" } }),
                  ]),
                  Object(b.m)("void => fade", [
                    Object(b.o)(w, { params: { time: "500ms" } }),
                  ]),
                  Object(b.m)("fade => void", [
                    Object(b.o)(C, { params: { time: "500ms" } }),
                  ]),
                  Object(b.m)("void => flip", [
                    Object(b.o)(S, { params: { time: "500ms" } }),
                  ]),
                  Object(b.m)("flip => void", [
                    Object(b.o)(E, { params: { time: "500ms" } }),
                  ]),
                  Object(b.m)("void => jackInTheBox", [
                    Object(b.o)(k, { params: { time: "700ms" } }),
                  ]),
                  Object(b.m)("jackInTheBox => void", [
                    Object(b.o)(O, { params: { time: "700ms" } }),
                  ]),
                ]),
              ],
              styles: [
                ":host {\n  flex: 1;\n}\n\n.carousel {\n  position: relative;\n  height: 80px;\n  width: 100%;\n  overflow: hidden;\n  border-radius: 0.5em;\n}\n\n.slide {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  border-radius: 0.5em;\n}\n\n.schoolSymbol {\n  height: 52px;\n  max-width: 70px;\n  object-fit: contain;\n}\n\n.schoolInfo {\n  max-width: 135px;\n  height: 34px;\n  margin: 9px 0 9px 15px;\n  font-size: 12px;\n  font-weight: 500;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.42;\n  letter-spacing: normal;\n  text-align: left;\n  color: #212121;\n  margin-left: 15px;\n}\n\n.slideContainer {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 10px;\n}\n\n.carousel_indicator {\n  border: 0;\n  border-radius: 50%;\n  width: 15px;\n  height: 15px;\n  background: rgba(0, 0, 0, 0.3);\n  margin: 0 12px;\n}\n\n.carousel_nav {\n  display: flex;\n  justify-content: center;\n}\n\n.current_slide {\n  background: black;\n}\n\n.control {\n  border: none;\n  background-color: transparent;\n  outline: 0;\n  position: absolute;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 0.5em;\n  color: white;\n  font-weight: bold;\n  font-size: 3em;\n  -webkit-user-select: none;\n          user-select: none;\n  height: 100%;\n  opacity: 80%;\n  transition: opacity 150ms cubic-bezier(0.25, 0.46, 0.45, 0.84);\n  /* Position the buttons */\n}\n\n.control:hover, .control:focus {\n  opacity: 1;\n}\n\n.control.next {\n  right: 0;\n}\n\n.control.prev {\n  left: 0;\n}\n\n/* style the arrows */\n\n.arrow {\n  display: block;\n  border-left: 0.1em solid white;\n  border-bottom: 0.1em solid white;\n  width: 0.5em;\n  height: 0.5em;\n}\n\n.arrow.left {\n  transform: rotate(45deg);\n}\n\n.arrow.right {\n  transform: rotate(225deg);\n}",
              ],
            }),
          ],
          j
        ));
      let N = class {
        constructor() {
          (this.slides = []),
            (this.animationType = s.Scale),
            (this.hideDot = !1),
            (this.showArrow = !1),
            (this.currentSlide = 0);
        }
        ngOnInit() {}
        onPreviousClick() {
          const e = this.currentSlide - 1;
          (this.currentSlide = e < 0 ? this.slides.length - 1 : e),
            console.log(
              "previous clicked, new current slide is: ",
              this.currentSlide
            );
        }
        onNextClick() {
          const e = this.currentSlide + 1;
          (this.currentSlide = e === this.slides.length ? 0 : e),
            console.log(
              "next clicked, new current slide is: ",
              this.currentSlide
            );
        }
      };
      (N.ctorParameters = () => []),
        (N.propDecorators = {
          slides: [{ type: o.G }],
          animationType: [{ type: o.G }],
          hideDot: [{ type: o.G, args: ["hideDot"] }],
          showArrow: [{ type: o.G, args: ["showArrow"] }],
        }),
        (N = Object(i.a)(
          [
            Object(o.n)({
              selector: "app-school-carousel",
              template:
                '\x3c!-- carousel --\x3e\n<div class="carousel">\n    <ng-container *ngFor="let slide of slides; let i = index">\n        <div *ngIf="i === currentSlide" class="slide" [@slideAnimation]="animationType">\n            <div *ngIf="!isMobile" class="slideContainer">\n                <div class="cardContainer" *ngFor="let card of slide">\n                    <div fxLayout="row wrap" fxLayoutAlign="center center" class="schoolSymbols">\n                        <div class="schoolItem">\n                            <img class="schoolSlide" loading="lazy" src="{{card[0].img}}" alt="{{card[0].alt}}" />\n                        </div>\n                    </div>\n                    <div fxLayout="row wrap" fxLayoutAlign="center center" class="schoolSymbols">\n                        <div class="schoolItem">\n                            <img class="schoolSlide" loading="lazy" src="{{card[1].img}}" alt="{{card[1].alt}}" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n</div>\n<div *ngIf=\'!hideDot\' class="carousel_nav">\n    <button (click)="onPreviousClick()" class="carousel_indicator" [ngClass]="{current_slide: currentSlide === 0}">\n    </button>\n    <button (click)="onNextClick()" class="carousel_indicator" [ngClass]="{current_slide: currentSlide === 1}">\n    </button>\n</div>\n\n<div *ngIf="showArrow" class="carousel_xs_nav">\n    <div class="xs_nav_item" (click)="onPreviousClick()" >\n        <img class="arrow_icon" loading="lazy" alt="left arrow mark" src="assets/images/prev.svg"/>\n    </div>\n    <div class="xs_nav_item" (click)="onNextClick()">\n        <img  class="arrow_icon" loading="lazy" alt="right arrow mark" src="assets/images/next.svg"/>\n    </div>\n</div>',
              animations: [
                Object(b.n)("slideAnimation", [
                  Object(b.m)("void => scale", [
                    Object(b.o)(x, { params: { time: "500ms" } }),
                  ]),
                  Object(b.m)("scale => void", [
                    Object(b.o)(_, { params: { time: "500ms" } }),
                  ]),
                  Object(b.m)("void => fade", [
                    Object(b.o)(w, { params: { time: "500ms" } }),
                  ]),
                  Object(b.m)("fade => void", [
                    Object(b.o)(C, { params: { time: "500ms" } }),
                  ]),
                  Object(b.m)("void => flip", [
                    Object(b.o)(S, { params: { time: "500ms" } }),
                  ]),
                  Object(b.m)("flip => void", [
                    Object(b.o)(E, { params: { time: "500ms" } }),
                  ]),
                  Object(b.m)("void => jackInTheBox", [
                    Object(b.o)(k, { params: { time: "700ms" } }),
                  ]),
                  Object(b.m)("jackInTheBox => void", [
                    Object(b.o)(O, { params: { time: "700ms" } }),
                  ]),
                ]),
              ],
              styles: [
                ":host {\n  flex: 1;\n}\n\n.carousel {\n  position: relative;\n  margin-top: 24px;\n  height: 190px;\n  width: 100%;\n  overflow: hidden;\n  border-radius: 0.5em;\n}\n\n.slide {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  border-radius: 0.5em;\n}\n\n.slideContainer {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  column-gap: 10px;\n}\n\n.carousel_indicator {\n  border: 0;\n  border-radius: 50%;\n  width: 15px;\n  height: 15px;\n  background: rgba(0, 0, 0, 0.3);\n  margin: 0 12px;\n}\n\n.carousel_nav {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n.carousel_xs_nav {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n.arrow_icon {\n  height: 34px;\n  padding: 8px 12px;\n}\n\n.schoolSlide {\n  height: 54px;\n}\n\n.xs_nav_item {\n  cursor: pointer;\n}\n\n.schoolItem {\n  padding: 16px 8px;\n  background-color: #ffff;\n  border-radius: 12px;\n  margin-bottom: 8px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-right: 24px;\n}\n\n.current_slide {\n  background: black;\n}\n\n.control {\n  border: none;\n  background-color: transparent;\n  outline: 0;\n  position: absolute;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 0.5em;\n  color: white;\n  font-weight: bold;\n  font-size: 3em;\n  -webkit-user-select: none;\n          user-select: none;\n  height: 100%;\n  opacity: 80%;\n  transition: opacity 150ms cubic-bezier(0.25, 0.46, 0.45, 0.84);\n  /* Position the buttons */\n}\n\n.control:hover, .control:focus {\n  opacity: 1;\n}\n\n.control.next {\n  right: 0;\n}\n\n.control.prev {\n  left: 0;\n}\n\n/* style the arrows */\n\n.arrow {\n  display: block;\n  border-left: 0.1em solid white;\n  border-bottom: 0.1em solid white;\n  width: 0.5em;\n  height: 0.5em;\n}\n\n.arrow.left {\n  transform: rotate(45deg);\n}\n\n.arrow.right {\n  transform: rotate(225deg);\n}\n\n@media only screen and (max-width: 767px) {\n  .slideContainer {\n    grid-template-columns: 1fr 1fr;\n    margin-left: 20px;\n  }\n}",
              ],
            }),
          ],
          N
        ));
      let F = class {};
      F = Object(i.a)(
        [
          Object(o.L)({
            declarations: [l.a, I, T, A, D, M, P, R, j, N],
            imports: [
              a.b,
              r.a,
              c.c,
              v.a,
              u.a,
              y.a,
              g.d,
              d.a,
              h.a,
              m.a,
              p.a,
              f.a,
            ],
          }),
        ],
        F
      );
    },
    jCJ1: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return p;
      }),
        n.d(t, "b", function () {
          return b;
        });
      var s = n("fXoL"),
        i = n("ofXK"),
        r = n("LRne"),
        o = n("2Vo4"),
        a = n("XNiG"),
        l = n("3Pt+");
      const c = {
          loadScript: function (e, t, n, s, i) {
            window.ng2recaptchaloaded = () => {
              t(grecaptcha);
            };
            const r = document.createElement("script");
            r.innerHTML = "";
            const o = s || "https://www.google.com/recaptcha/api.js";
            (r.src = `${o}?render=${e}&onload=ng2recaptchaloaded${n}`),
              i && (r.nonce = i),
              (r.async = !0),
              (r.defer = !0),
              document.head.appendChild(r);
          },
        },
        u = new s.E("recaptcha-language"),
        d = new s.E("recaptcha-base-url"),
        h = new s.E("recaptcha-nonce-tag"),
        p = new s.E("recaptcha-settings"),
        m = new s.E("recaptcha-v3-site-key");
      class f {
        constructor(e, t, n, s, o) {
          (this.platformId = e),
            (this.language = t),
            (this.baseUrl = n),
            (this.nonce = s),
            (this.v3SiteKey = o),
            this.init(),
            (this.ready = Object(i.z)(this.platformId)
              ? f.ready.asObservable()
              : Object(r.a)());
        }
        init() {
          if (!f.ready && Object(i.z)(this.platformId)) {
            const e = new o.a(null);
            f.ready = e;
            const t = this.language ? "&hl=" + this.language : "",
              n = this.v3SiteKey || "explicit";
            c.loadScript(n, (t) => e.next(t), t, this.baseUrl, this.nonce);
          }
        }
      }
      (f.ɵfac = function (e) {
        return new (e || f)(
          s.Yc(s.U),
          s.Yc(u, 8),
          s.Yc(d, 8),
          s.Yc(h, 8),
          s.Yc(m, 8)
        );
      }),
        (f.ɵprov = s.Ic({ token: f, factory: f.ɵfac })),
        (f.ready = null),
        (f.ctorParameters = () => [
          { type: Object, decorators: [{ type: s.C, args: [s.U] }] },
          {
            type: String,
            decorators: [{ type: s.R }, { type: s.C, args: [u] }],
          },
          {
            type: String,
            decorators: [{ type: s.R }, { type: s.C, args: [d] }],
          },
          {
            type: String,
            decorators: [{ type: s.R }, { type: s.C, args: [h] }],
          },
          {
            type: String,
            decorators: [{ type: s.R }, { type: s.C, args: [m] }],
          },
        ]);
      let g = 0;
      class y {
        constructor(e, t, n, i) {
          (this.elementRef = e),
            (this.loader = t),
            (this.zone = n),
            (this.id = "ngrecaptcha-" + g++),
            (this.errorMode = "default"),
            (this.resolved = new s.x()),
            (this.error = new s.x()),
            i &&
              ((this.siteKey = i.siteKey),
              (this.theme = i.theme),
              (this.type = i.type),
              (this.size = i.size),
              (this.badge = i.badge));
        }
        ngAfterViewInit() {
          this.subscription = this.loader.ready.subscribe((e) => {
            null != e &&
              e.render instanceof Function &&
              ((this.grecaptcha = e), this.renderRecaptcha());
          });
        }
        ngOnDestroy() {
          this.grecaptchaReset(),
            this.subscription && this.subscription.unsubscribe();
        }
        execute() {
          "invisible" === this.size &&
            (null != this.widget
              ? this.grecaptcha.execute(this.widget)
              : (this.executeRequested = !0));
        }
        reset() {
          null != this.widget &&
            (this.grecaptcha.getResponse(this.widget) &&
              this.resolved.emit(null),
            this.grecaptchaReset());
        }
        get __unsafe_widgetValue() {
          return null != this.widget
            ? this.grecaptcha.getResponse(this.widget)
            : null;
        }
        expired() {
          this.resolved.emit(null);
        }
        errored(e) {
          this.error.emit(e);
        }
        captchaResponseCallback(e) {
          this.resolved.emit(e);
        }
        grecaptchaReset() {
          null != this.widget &&
            this.zone.runOutsideAngular(() =>
              this.grecaptcha.reset(this.widget)
            );
        }
        renderRecaptcha() {
          const e = {
            badge: this.badge,
            callback: (e) => {
              this.zone.run(() => this.captchaResponseCallback(e));
            },
            "expired-callback": () => {
              this.zone.run(() => this.expired());
            },
            sitekey: this.siteKey,
            size: this.size,
            tabindex: this.tabIndex,
            theme: this.theme,
            type: this.type,
          };
          "handled" === this.errorMode &&
            (e["error-callback"] = (...e) => {
              this.zone.run(() => this.errored(e));
            }),
            (this.widget = this.grecaptcha.render(
              this.elementRef.nativeElement,
              e
            )),
            !0 === this.executeRequested &&
              ((this.executeRequested = !1), this.execute());
        }
      }
      (y.ɵfac = function (e) {
        return new (e || y)(s.Mc(s.v), s.Mc(f), s.Mc(s.Q), s.Mc(p, 8));
      }),
        (y.ɵcmp = s.Gc({
          type: y,
          selectors: [["re-captcha"]],
          hostVars: 1,
          hostBindings: function (e, t) {
            2 & e && s.Ac("id", t.id);
          },
          inputs: {
            id: "id",
            errorMode: "errorMode",
            siteKey: "siteKey",
            theme: "theme",
            type: "type",
            size: "size",
            badge: "badge",
            tabIndex: "tabIndex",
          },
          outputs: { resolved: "resolved", error: "error" },
          exportAs: ["reCaptcha"],
          decls: 0,
          vars: 0,
          template: function (e, t) {},
          encapsulation: 2,
        })),
        (y.ctorParameters = () => [
          { type: s.v },
          { type: f },
          { type: s.Q },
          {
            type: void 0,
            decorators: [{ type: s.R }, { type: s.C, args: [p] }],
          },
        ]),
        (y.propDecorators = {
          id: [{ type: s.G }, { type: s.z, args: ["attr.id"] }],
          siteKey: [{ type: s.G }],
          theme: [{ type: s.G }],
          type: [{ type: s.G }],
          size: [{ type: s.G }],
          tabIndex: [{ type: s.G }],
          badge: [{ type: s.G }],
          errorMode: [{ type: s.G }],
          resolved: [{ type: s.S }],
          error: [{ type: s.S }],
        });
      class v {}
      (v.ɵmod = s.Kc({ type: v })),
        (v.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || v)();
          },
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(v, { declarations: [y], exports: [y] });
      class b {}
      (b.ɵmod = s.Kc({ type: b })),
        (b.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || b)();
          },
          providers: [f],
          imports: [[v]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(b, { imports: [v], exports: [y] });
      class x {
        constructor(e, t, n, s, r, o) {
          (this.onLoadComplete = (e) => {
            (this.grecaptcha = e),
              this.actionBacklog &&
                this.actionBacklog.length > 0 &&
                (this.actionBacklog.forEach(([e, t]) =>
                  this.executeActionWithSubject(e, t)
                ),
                (this.actionBacklog = void 0));
          }),
            (this.zone = e),
            (this.isBrowser = Object(i.z)(n)),
            (this.siteKey = t),
            (this.nonce = r),
            (this.language = o),
            (this.baseUrl = s),
            this.init();
        }
        get onExecute() {
          return (
            this.onExecuteSubject ||
              ((this.onExecuteSubject = new a.a()),
              (this.onExecuteObservable =
                this.onExecuteSubject.asObservable())),
            this.onExecuteObservable
          );
        }
        get onExecuteError() {
          return (
            this.onExecuteErrorSubject ||
              ((this.onExecuteErrorSubject = new a.a()),
              (this.onExecuteErrorObservable =
                this.onExecuteErrorSubject.asObservable())),
            this.onExecuteErrorObservable
          );
        }
        execute(e) {
          const t = new a.a();
          return (
            this.isBrowser &&
              (this.grecaptcha
                ? this.executeActionWithSubject(e, t)
                : (this.actionBacklog || (this.actionBacklog = []),
                  this.actionBacklog.push([e, t]))),
            t.asObservable()
          );
        }
        executeActionWithSubject(e, t) {
          const n = (n) => {
            this.zone.run(() => {
              t.error(n),
                this.onExecuteErrorSubject &&
                  this.onExecuteErrorSubject.next({ action: e, error: n });
            });
          };
          this.zone.runOutsideAngular(() => {
            try {
              this.grecaptcha.execute(this.siteKey, { action: e }).then((n) => {
                this.zone.run(() => {
                  t.next(n),
                    t.complete(),
                    this.onExecuteSubject &&
                      this.onExecuteSubject.next({ action: e, token: n });
                });
              }, n);
            } catch (s) {
              n(s);
            }
          });
        }
        init() {
          if (this.isBrowser)
            if ("grecaptcha" in window) this.grecaptcha = grecaptcha;
            else {
              const e = this.language ? "&hl=" + this.language : "";
              c.loadScript(
                this.siteKey,
                this.onLoadComplete,
                e,
                this.baseUrl,
                this.nonce
              );
            }
        }
      }
      (x.ɵfac = function (e) {
        return new (e || x)(
          s.Yc(s.Q),
          s.Yc(m),
          s.Yc(s.U),
          s.Yc(d, 8),
          s.Yc(h, 8),
          s.Yc(u, 8)
        );
      }),
        (x.ɵprov = s.Ic({ token: x, factory: x.ɵfac })),
        (x.ctorParameters = () => [
          { type: s.Q },
          { type: String, decorators: [{ type: s.C, args: [m] }] },
          { type: Object, decorators: [{ type: s.C, args: [s.U] }] },
          {
            type: String,
            decorators: [{ type: s.R }, { type: s.C, args: [d] }],
          },
          {
            type: String,
            decorators: [{ type: s.R }, { type: s.C, args: [h] }],
          },
          {
            type: String,
            decorators: [{ type: s.R }, { type: s.C, args: [u] }],
          },
        ]);
      class _ {}
      (_.ɵmod = s.Kc({ type: _ })),
        (_.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || _)();
          },
          providers: [x],
        }));
      class w {
        constructor(e) {
          (this.host = e), (this.requiresControllerReset = !1);
        }
        writeValue(e) {
          e
            ? this.host.__unsafe_widgetValue !== e &&
              !1 === Boolean(this.host.__unsafe_widgetValue) &&
              (this.requiresControllerReset = !0)
            : this.host.reset();
        }
        registerOnChange(e) {
          (this.onChange = e),
            this.requiresControllerReset &&
              ((this.requiresControllerReset = !1), this.onChange(null));
        }
        registerOnTouched(e) {
          this.onTouched = e;
        }
        onResolve(e) {
          this.onChange && this.onChange(e), this.onTouched && this.onTouched();
        }
      }
      (w.ɵfac = function (e) {
        return new (e || w)(s.Mc(y));
      }),
        (w.ɵdir = s.Hc({
          type: w,
          selectors: [
            ["re-captcha", "formControlName", ""],
            ["re-captcha", "formControl", ""],
            ["re-captcha", "ngModel", ""],
          ],
          hostBindings: function (e, t) {
            1 & e &&
              s.cd("resolved", function (e) {
                return t.onResolve(e);
              });
          },
          features: [
            s.yc([
              { multi: !0, provide: l.h, useExisting: Object(s.sb)(() => w) },
            ]),
          ],
        })),
        (w.ctorParameters = () => [{ type: y }]),
        (w.propDecorators = {
          onResolve: [{ type: s.A, args: ["resolved", ["$event"]] }],
        });
      class C {}
      (C.ɵmod = s.Kc({ type: C })),
        (C.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || C)();
          },
          imports: [[l.f, v]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(C, {
            declarations: function () {
              return [w];
            },
            imports: function () {
              return [l.f, v];
            },
            exports: function () {
              return [w];
            },
          });
    },
    jZKg: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var s = n("HDdC"),
        i = n("quSY");
      function r(e, t) {
        return new s.a((n) => {
          const s = new i.a();
          let r = 0;
          return (
            s.add(
              t.schedule(function () {
                r !== e.length
                  ? (n.next(e[r++]), n.closed || s.add(this.schedule()))
                  : n.complete();
              })
            ),
            s
          );
        });
      }
    },
    jhN1: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return X;
      }),
        n.d(t, "b", function () {
          return $;
        }),
        n.d(t, "c", function () {
          return O;
        }),
        n.d(t, "d", function () {
          return Q;
        });
      var s = n("ofXK"),
        i = n("fXoL");
      class r extends s.B {
        constructor() {
          super();
        }
        supportsDOMEvents() {
          return !0;
        }
      }
      (() => {
        if (i.Xb.Node) i.Xb.Node.prototype.contains;
      })();
      class o extends r {
        static makeCurrent() {
          Object(s.F)(new o());
        }
        getProperty(e, t) {
          return e[t];
        }
        log(e) {
          window.console && window.console.log && window.console.log(e);
        }
        logGroup(e) {
          window.console && window.console.group && window.console.group(e);
        }
        logGroupEnd() {
          window.console &&
            window.console.groupEnd &&
            window.console.groupEnd();
        }
        onAndCancel(e, t, n) {
          return (
            e.addEventListener(t, n, !1),
            () => {
              e.removeEventListener(t, n, !1);
            }
          );
        }
        dispatchEvent(e, t) {
          e.dispatchEvent(t);
        }
        remove(e) {
          return e.parentNode && e.parentNode.removeChild(e), e;
        }
        getValue(e) {
          return e.value;
        }
        createElement(e, t) {
          return (t = t || this.getDefaultDocument()).createElement(e);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument("fakeTitle");
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(e) {
          return e.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(e) {
          return e instanceof DocumentFragment;
        }
        getGlobalEventTarget(e, t) {
          return "window" === t
            ? window
            : "document" === t
            ? e
            : "body" === t
            ? e.body
            : null;
        }
        getHistory() {
          return window.history;
        }
        getLocation() {
          return window.location;
        }
        getBaseHref(e) {
          const t = (function () {
            if (!l && ((l = document.querySelector("base")), !l)) return null;
            return l.getAttribute("href");
          })();
          return null == t
            ? null
            : (function (e) {
                a || (a = document.createElement("a"));
                return (
                  a.setAttribute("href", e),
                  "/" === a.pathname.charAt(0) ? a.pathname : "/" + a.pathname
                );
              })(t);
        }
        resetBaseElement() {
          l = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        performanceNow() {
          return window.performance && window.performance.now
            ? window.performance.now()
            : new Date().getTime();
        }
        supportsCookies() {
          return !0;
        }
        getCookie(e) {
          return Object(s.E)(document.cookie, e);
        }
      }
      let a,
        l = null;
      const c = new i.E("TRANSITION_ID");
      const u = [
        {
          provide: i.d,
          useFactory: function (e, t, n) {
            return () => {
              n.get(i.e).donePromise.then(() => {
                const n = Object(s.D)();
                Array.prototype.slice
                  .apply(t.querySelectorAll("style[ng-transition]"))
                  .filter((t) => t.getAttribute("ng-transition") === e)
                  .forEach((e) => n.remove(e));
              });
            };
          },
          deps: [c, s.c, i.F],
          multi: !0,
        },
      ];
      class d {
        static init() {
          Object(i.wb)(new d());
        }
        addToWindow(e) {
          (i.Xb.getAngularTestability = (t, n = !0) => {
            const s = e.findTestabilityInTree(t, n);
            if (null == s)
              throw new Error("Could not find testability for element.");
            return s;
          }),
            (i.Xb.getAllAngularTestabilities = () => e.getAllTestabilities()),
            (i.Xb.getAllAngularRootElements = () => e.getAllRootElements());
          i.Xb.frameworkStabilizers || (i.Xb.frameworkStabilizers = []),
            i.Xb.frameworkStabilizers.push((e) => {
              const t = i.Xb.getAllAngularTestabilities();
              let n = t.length,
                s = !1;
              const r = function (t) {
                (s = s || t), n--, 0 == n && e(s);
              };
              t.forEach(function (e) {
                e.whenStable(r);
              });
            });
        }
        findTestabilityInTree(e, t, n) {
          if (null == t) return null;
          const i = e.getTestability(t);
          return null != i
            ? i
            : n
            ? Object(s.D)().isShadowRoot(t)
              ? this.findTestabilityInTree(e, t.host, !0)
              : this.findTestabilityInTree(e, t.parentElement, !0)
            : null;
        }
      }
      function h(e, t) {
        if ("undefined" == typeof COMPILED || !COMPILED) {
          (i.Xb.ng = i.Xb.ng || {})[e] = t;
        }
      }
      const p = { ApplicationRef: i.g, NgZone: i.Q };
      function m(e) {
        return Object(i.Tb)(e);
      }
      i.d, i.P, new i.R();
      const f = [],
        g = new i.E("EventManagerPlugins");
      class y {
        constructor(e, t) {
          (this._zone = t),
            (this._eventNameToPlugin = new Map()),
            e.forEach((e) => (e.manager = this)),
            (this._plugins = e.slice().reverse());
        }
        addEventListener(e, t, n) {
          return this._findPluginFor(t).addEventListener(e, t, n);
        }
        addGlobalEventListener(e, t, n) {
          return this._findPluginFor(t).addGlobalEventListener(e, t, n);
        }
        getZone() {
          return this._zone;
        }
        _findPluginFor(e) {
          const t = this._eventNameToPlugin.get(e);
          if (t) return t;
          const n = this._plugins;
          for (let s = 0; s < n.length; s++) {
            const t = n[s];
            if (t.supports(e)) return this._eventNameToPlugin.set(e, t), t;
          }
          throw new Error("No event manager plugin found for event " + e);
        }
      }
      (y.ɵfac = function (e) {
        return new (e || y)(i.Yc(g), i.Yc(i.Q));
      }),
        (y.ɵprov = i.Ic({ token: y, factory: y.ɵfac })),
        (y.ctorParameters = () => [
          { type: Array, decorators: [{ type: i.C, args: [g] }] },
          { type: i.Q },
        ]);
      class v {
        constructor(e) {
          this._doc = e;
        }
        addGlobalEventListener(e, t, n) {
          const i = Object(s.D)().getGlobalEventTarget(this._doc, e);
          if (!i)
            throw new Error(`Unsupported event target ${i} for event ${t}`);
          return this.addEventListener(i, t, n);
        }
      }
      class b {
        constructor() {
          this._stylesSet = new Set();
        }
        addStyles(e) {
          const t = new Set();
          e.forEach((e) => {
            this._stylesSet.has(e) || (this._stylesSet.add(e), t.add(e));
          }),
            this.onStylesAdded(t);
        }
        onStylesAdded(e) {}
        getAllStyles() {
          return Array.from(this._stylesSet);
        }
      }
      (b.ɵfac = function (e) {
        return new (e || b)();
      }),
        (b.ɵprov = i.Ic({ token: b, factory: b.ɵfac }));
      class x extends b {
        constructor(e) {
          super(),
            (this._doc = e),
            (this._hostNodes = new Set()),
            (this._styleNodes = new Set()),
            this._hostNodes.add(e.head);
        }
        _addStylesToHost(e, t) {
          e.forEach((e) => {
            const n = this._doc.createElement("style");
            (n.textContent = e), this._styleNodes.add(t.appendChild(n));
          });
        }
        addHost(e) {
          this._addStylesToHost(this._stylesSet, e), this._hostNodes.add(e);
        }
        removeHost(e) {
          this._hostNodes.delete(e);
        }
        onStylesAdded(e) {
          this._hostNodes.forEach((t) => this._addStylesToHost(e, t));
        }
        ngOnDestroy() {
          this._styleNodes.forEach((e) => Object(s.D)().remove(e));
        }
      }
      (x.ɵfac = function (e) {
        return new (e || x)(i.Yc(s.c));
      }),
        (x.ɵprov = i.Ic({ token: x, factory: x.ɵfac })),
        (x.ctorParameters = () => [
          { type: void 0, decorators: [{ type: i.C, args: [s.c] }] },
        ]);
      const _ = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: "http://www.w3.org/1999/xhtml",
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
        },
        w = /%COMP%/g,
        C = "_nghost-%COMP%",
        S = "_ngcontent-%COMP%";
      function E(e, t, n) {
        for (let s = 0; s < t.length; s++) {
          let i = t[s];
          Array.isArray(i) ? E(e, i, n) : ((i = i.replace(w, e)), n.push(i));
        }
        return n;
      }
      function k(e) {
        return (t) => {
          if ("__ngUnwrap__" === t) return e;
          !1 === e(t) && (t.preventDefault(), (t.returnValue = !1));
        };
      }
      class O {
        constructor(e, t, n) {
          (this.eventManager = e),
            (this.sharedStylesHost = t),
            (this.appId = n),
            (this.rendererByCompId = new Map()),
            (this.defaultRenderer = new I(e));
        }
        createRenderer(e, t) {
          if (!e || !t) return this.defaultRenderer;
          switch (t.encapsulation) {
            case i.pb.Emulated: {
              let n = this.rendererByCompId.get(t.id);
              return (
                n ||
                  ((n = new T(
                    this.eventManager,
                    this.sharedStylesHost,
                    t,
                    this.appId
                  )),
                  this.rendererByCompId.set(t.id, n)),
                n.applyToHost(e),
                n
              );
            }
            case 1:
            case i.pb.ShadowDom:
              return new A(this.eventManager, this.sharedStylesHost, e, t);
            default:
              if (!this.rendererByCompId.has(t.id)) {
                const e = E(t.id, t.styles, []);
                this.sharedStylesHost.addStyles(e),
                  this.rendererByCompId.set(t.id, this.defaultRenderer);
              }
              return this.defaultRenderer;
          }
        }
        begin() {}
        end() {}
      }
      (O.ɵfac = function (e) {
        return new (e || O)(i.Yc(y), i.Yc(x), i.Yc(i.c));
      }),
        (O.ɵprov = i.Ic({ token: O, factory: O.ɵfac })),
        (O.ctorParameters = () => [
          { type: y },
          { type: x },
          { type: String, decorators: [{ type: i.C, args: [i.c] }] },
        ]);
      class I {
        constructor(e) {
          (this.eventManager = e), (this.data = Object.create(null));
        }
        destroy() {}
        createElement(e, t) {
          return t
            ? document.createElementNS(_[t] || t, e)
            : document.createElement(e);
        }
        createComment(e) {
          return document.createComment(e);
        }
        createText(e) {
          return document.createTextNode(e);
        }
        appendChild(e, t) {
          e.appendChild(t);
        }
        insertBefore(e, t, n) {
          e && e.insertBefore(t, n);
        }
        removeChild(e, t) {
          e && e.removeChild(t);
        }
        selectRootElement(e, t) {
          let n = "string" == typeof e ? document.querySelector(e) : e;
          if (!n)
            throw new Error(`The selector "${e}" did not match any elements`);
          return t || (n.textContent = ""), n;
        }
        parentNode(e) {
          return e.parentNode;
        }
        nextSibling(e) {
          return e.nextSibling;
        }
        setAttribute(e, t, n, s) {
          if (s) {
            t = s + ":" + t;
            const i = _[s];
            i ? e.setAttributeNS(i, t, n) : e.setAttribute(t, n);
          } else e.setAttribute(t, n);
        }
        removeAttribute(e, t, n) {
          if (n) {
            const s = _[n];
            s ? e.removeAttributeNS(s, t) : e.removeAttribute(`${n}:${t}`);
          } else e.removeAttribute(t);
        }
        addClass(e, t) {
          e.classList.add(t);
        }
        removeClass(e, t) {
          e.classList.remove(t);
        }
        setStyle(e, t, n, s) {
          s & (i.ab.DashCase | i.ab.Important)
            ? e.style.setProperty(t, n, s & i.ab.Important ? "important" : "")
            : (e.style[t] = n);
        }
        removeStyle(e, t, n) {
          n & i.ab.DashCase ? e.style.removeProperty(t) : (e.style[t] = "");
        }
        setProperty(e, t, n) {
          e[t] = n;
        }
        setValue(e, t) {
          e.nodeValue = t;
        }
        listen(e, t, n) {
          return "string" == typeof e
            ? this.eventManager.addGlobalEventListener(e, t, k(n))
            : this.eventManager.addEventListener(e, t, k(n));
        }
      }
      "@".charCodeAt(0);
      class T extends I {
        constructor(e, t, n, s) {
          super(e), (this.component = n);
          const i = E(s + "-" + n.id, n.styles, []);
          var r;
          t.addStyles(i),
            (this.contentAttr = ((r = s + "-" + n.id), S.replace(w, r))),
            (this.hostAttr = (function (e) {
              return C.replace(w, e);
            })(s + "-" + n.id));
        }
        applyToHost(e) {
          super.setAttribute(e, this.hostAttr, "");
        }
        createElement(e, t) {
          const n = super.createElement(e, t);
          return super.setAttribute(n, this.contentAttr, ""), n;
        }
      }
      class A extends I {
        constructor(e, t, n, s) {
          super(e),
            (this.sharedStylesHost = t),
            (this.hostEl = n),
            (this.shadowRoot = n.attachShadow({ mode: "open" })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const i = E(s.id, s.styles, []);
          for (let r = 0; r < i.length; r++) {
            const e = document.createElement("style");
            (e.textContent = i[r]), this.shadowRoot.appendChild(e);
          }
        }
        nodeOrShadowRoot(e) {
          return e === this.hostEl ? this.shadowRoot : e;
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
        appendChild(e, t) {
          return super.appendChild(this.nodeOrShadowRoot(e), t);
        }
        insertBefore(e, t, n) {
          return super.insertBefore(this.nodeOrShadowRoot(e), t, n);
        }
        removeChild(e, t) {
          return super.removeChild(this.nodeOrShadowRoot(e), t);
        }
        parentNode(e) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(e))
          );
        }
      }
      class D extends v {
        constructor(e) {
          super(e);
        }
        supports(e) {
          return !0;
        }
        addEventListener(e, t, n) {
          return (
            e.addEventListener(t, n, !1),
            () => this.removeEventListener(e, t, n)
          );
        }
        removeEventListener(e, t, n) {
          return e.removeEventListener(t, n);
        }
      }
      (D.ɵfac = function (e) {
        return new (e || D)(i.Yc(s.c));
      }),
        (D.ɵprov = i.Ic({ token: D, factory: D.ɵfac })),
        (D.ctorParameters = () => [
          { type: void 0, decorators: [{ type: i.C, args: [s.c] }] },
        ]);
      const M = {
          pan: !0,
          panstart: !0,
          panmove: !0,
          panend: !0,
          pancancel: !0,
          panleft: !0,
          panright: !0,
          panup: !0,
          pandown: !0,
          pinch: !0,
          pinchstart: !0,
          pinchmove: !0,
          pinchend: !0,
          pinchcancel: !0,
          pinchin: !0,
          pinchout: !0,
          press: !0,
          pressup: !0,
          rotate: !0,
          rotatestart: !0,
          rotatemove: !0,
          rotateend: !0,
          rotatecancel: !0,
          swipe: !0,
          swipeleft: !0,
          swiperight: !0,
          swipeup: !0,
          swipedown: !0,
          tap: !0,
        },
        P = new i.E("HammerGestureConfig"),
        R = new i.E("HammerLoader");
      class j {
        constructor() {
          (this.events = []), (this.overrides = {});
        }
        buildHammer(e) {
          const t = new Hammer(e, this.options);
          t.get("pinch").set({ enable: !0 }),
            t.get("rotate").set({ enable: !0 });
          for (const n in this.overrides) t.get(n).set(this.overrides[n]);
          return t;
        }
      }
      (j.ɵfac = function (e) {
        return new (e || j)();
      }),
        (j.ɵprov = i.Ic({ token: j, factory: j.ɵfac }));
      class N extends v {
        constructor(e, t, n, s) {
          super(e), (this._config = t), (this.console = n), (this.loader = s);
        }
        supports(e) {
          return (
            !(!M.hasOwnProperty(e.toLowerCase()) && !this.isCustomEvent(e)) &&
            (!(!window.Hammer && !this.loader) ||
              (this.console.warn(
                `The "${e}" event cannot be bound because Hammer.JS is not loaded and no custom loader has been specified.`
              ),
              !1))
          );
        }
        addEventListener(e, t, n) {
          const s = this.manager.getZone();
          if (((t = t.toLowerCase()), !window.Hammer && this.loader)) {
            let s = !1,
              i = () => {
                s = !0;
              };
            return (
              this.loader()
                .then(() => {
                  if (!window.Hammer)
                    return (
                      this.console.warn(
                        "The custom HAMMER_LOADER completed, but Hammer.JS is not present."
                      ),
                      void (i = () => {})
                    );
                  s || (i = this.addEventListener(e, t, n));
                })
                .catch(() => {
                  this.console.warn(
                    `The "${t}" event cannot be bound because the custom Hammer.JS loader failed.`
                  ),
                    (i = () => {});
                }),
              () => {
                i();
              }
            );
          }
          return s.runOutsideAngular(() => {
            const i = this._config.buildHammer(e),
              r = function (e) {
                s.runGuarded(function () {
                  n(e);
                });
              };
            return (
              i.on(t, r),
              () => {
                i.off(t, r), "function" == typeof i.destroy && i.destroy();
              }
            );
          });
        }
        isCustomEvent(e) {
          return this._config.events.indexOf(e) > -1;
        }
      }
      (N.ɵfac = function (e) {
        return new (e || N)(i.Yc(s.c), i.Yc(P), i.Yc(i.yb), i.Yc(R, 8));
      }),
        (N.ɵprov = i.Ic({ token: N, factory: N.ɵfac })),
        (N.ctorParameters = () => [
          { type: void 0, decorators: [{ type: i.C, args: [s.c] }] },
          { type: j, decorators: [{ type: i.C, args: [P] }] },
          { type: i.yb },
          {
            type: void 0,
            decorators: [{ type: i.R }, { type: i.C, args: [R] }],
          },
        ]);
      const F = [
          {
            provide: g,
            useClass: N,
            multi: !0,
            deps: [s.c, P, i.yb, [new i.R(), R]],
          },
          { provide: P, useClass: j, deps: [] },
        ],
        L = [];
      class V {}
      (V.ɵmod = i.Kc({ type: V })),
        (V.ɵinj = i.Jc({
          factory: function (e) {
            return new (e || V)();
          },
          providers: F,
        }));
      const B = ["alt", "control", "meta", "shift"],
        z = {
          "\b": "Backspace",
          "\t": "Tab",
          "\x7f": "Delete",
          "\x1b": "Escape",
          Del: "Delete",
          Esc: "Escape",
          Left: "ArrowLeft",
          Right: "ArrowRight",
          Up: "ArrowUp",
          Down: "ArrowDown",
          Menu: "ContextMenu",
          Scroll: "ScrollLock",
          Win: "OS",
        },
        H = {
          A: "1",
          B: "2",
          C: "3",
          D: "4",
          E: "5",
          F: "6",
          G: "7",
          H: "8",
          I: "9",
          J: "*",
          K: "+",
          M: "-",
          N: ".",
          O: "/",
          "`": "0",
          "\x90": "NumLock",
        },
        G = {
          alt: (e) => e.altKey,
          control: (e) => e.ctrlKey,
          meta: (e) => e.metaKey,
          shift: (e) => e.shiftKey,
        };
      class U extends v {
        constructor(e) {
          super(e);
        }
        supports(e) {
          return null != U.parseEventName(e);
        }
        addEventListener(e, t, n) {
          const i = U.parseEventName(t),
            r = U.eventCallback(i.fullKey, n, this.manager.getZone());
          return this.manager
            .getZone()
            .runOutsideAngular(() =>
              Object(s.D)().onAndCancel(e, i.domEventName, r)
            );
        }
        static parseEventName(e) {
          const t = e.toLowerCase().split("."),
            n = t.shift();
          if (0 === t.length || ("keydown" !== n && "keyup" !== n)) return null;
          const s = U._normalizeKey(t.pop());
          let i = "";
          if (
            (B.forEach((e) => {
              const n = t.indexOf(e);
              n > -1 && (t.splice(n, 1), (i += e + "."));
            }),
            (i += s),
            0 != t.length || 0 === s.length)
          )
            return null;
          const r = {};
          return (r.domEventName = n), (r.fullKey = i), r;
        }
        static getEventFullKey(e) {
          let t = "",
            n = (function (e) {
              let t = e.key;
              if (null == t) {
                if (((t = e.keyIdentifier), null == t)) return "Unidentified";
                t.startsWith("U+") &&
                  ((t = String.fromCharCode(parseInt(t.substring(2), 16))),
                  3 === e.location && H.hasOwnProperty(t) && (t = H[t]));
              }
              return z[t] || t;
            })(e);
          return (
            (n = n.toLowerCase()),
            " " === n ? (n = "space") : "." === n && (n = "dot"),
            B.forEach((s) => {
              if (s != n) {
                (0, G[s])(e) && (t += s + ".");
              }
            }),
            (t += n),
            t
          );
        }
        static eventCallback(e, t, n) {
          return (s) => {
            U.getEventFullKey(s) === e && n.runGuarded(() => t(s));
          };
        }
        static _normalizeKey(e) {
          switch (e) {
            case "esc":
              return "escape";
            default:
              return e;
          }
        }
      }
      (U.ɵfac = function (e) {
        return new (e || U)(i.Yc(s.c));
      }),
        (U.ɵprov = i.Ic({ token: U, factory: U.ɵfac })),
        (U.ctorParameters = () => [
          { type: void 0, decorators: [{ type: i.C, args: [s.c] }] },
        ]);
      class $ {}
      function q(e) {
        return new W(e.get(s.c));
      }
      ($.ɵfac = function (e) {
        return new (e || $)();
      }),
        ($.ɵprov = Object(i.Ic)({
          factory: function () {
            return Object(i.Yc)(W);
          },
          token: $,
          providedIn: "root",
        }));
      class W extends $ {
        constructor(e) {
          super(), (this._doc = e);
        }
        sanitize(e, t) {
          if (null == t) return null;
          switch (e) {
            case i.cb.NONE:
              return t;
            case i.cb.HTML:
              return Object(i.Gb)(t, "HTML")
                ? Object(i.uc)(t)
                : Object(i.Eb)(this._doc, String(t));
            case i.cb.STYLE:
              return Object(i.Gb)(t, "Style") ? Object(i.uc)(t) : t;
            case i.cb.SCRIPT:
              if (Object(i.Gb)(t, "Script")) return Object(i.uc)(t);
              throw new Error("unsafe value used in a script context");
            case i.cb.URL:
              Object(i.Wb)(t);
              return Object(i.Gb)(t, "URL")
                ? Object(i.uc)(t)
                : Object(i.Fb)(String(t));
            case i.cb.RESOURCE_URL:
              if (Object(i.Gb)(t, "ResourceURL")) return Object(i.uc)(t);
              throw new Error(
                "unsafe value used in a resource URL context (see http://g.co/ng/security#xss)"
              );
            default:
              throw new Error(
                `Unexpected SecurityContext ${e} (see http://g.co/ng/security#xss)`
              );
          }
        }
        bypassSecurityTrustHtml(e) {
          return Object(i.Ib)(e);
        }
        bypassSecurityTrustStyle(e) {
          return Object(i.Lb)(e);
        }
        bypassSecurityTrustScript(e) {
          return Object(i.Kb)(e);
        }
        bypassSecurityTrustUrl(e) {
          return Object(i.Mb)(e);
        }
        bypassSecurityTrustResourceUrl(e) {
          return Object(i.Jb)(e);
        }
      }
      (W.ɵfac = function (e) {
        return new (e || W)(i.Yc(s.c));
      }),
        (W.ɵprov = Object(i.Ic)({
          factory: function () {
            return q(Object(i.Yc)(i.B));
          },
          token: W,
          providedIn: "root",
        })),
        (W.ctorParameters = () => [
          { type: void 0, decorators: [{ type: i.C, args: [s.c] }] },
        ]);
      const Y = s.C,
        Q = [
          { provide: i.U, useValue: Y },
          {
            provide: i.V,
            useValue: function () {
              o.makeCurrent(), d.init();
            },
            multi: !0,
          },
          {
            provide: s.c,
            useFactory: function () {
              return Object(i.qc)(document), document;
            },
            deps: [],
          },
        ],
        K = (i.bb, s.c, []),
        J =
          (Object(i.qb)(i.vb, "browser", Q),
          [
            K,
            { provide: i.Bb, useValue: "root" },
            {
              provide: i.w,
              useFactory: function () {
                return new i.w();
              },
              deps: [],
            },
            { provide: g, useClass: D, multi: !0, deps: [s.c, i.Q, i.U] },
            { provide: g, useClass: U, multi: !0, deps: [s.c] },
            L,
            { provide: O, useClass: O, deps: [y, x, i.c] },
            { provide: i.Z, useExisting: O },
            { provide: b, useExisting: x },
            { provide: x, useClass: x, deps: [s.c] },
            { provide: i.jb, useClass: i.jb, deps: [i.Q] },
            { provide: y, useClass: y, deps: [g, i.Q] },
            f,
          ]);
      class X {
        constructor(e) {
          if (e)
            throw new Error(
              "BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead."
            );
        }
        static withServerTransition(e) {
          return {
            ngModule: X,
            providers: [
              { provide: i.c, useValue: e.appId },
              { provide: c, useExisting: i.c },
              u,
            ],
          };
        }
      }
      function Z() {
        return new ee(Object(i.Yc)(s.c));
      }
      (X.ɵmod = i.Kc({ type: X })),
        (X.ɵinj = i.Jc({
          factory: function (e) {
            return new (e || X)(i.Yc(X, 12));
          },
          providers: J,
          imports: [s.b, i.f],
        })),
        (X.ctorParameters = () => [
          {
            type: X,
            decorators: [
              { type: i.R },
              { type: i.eb },
              { type: i.C, args: [X] },
            ],
          },
        ]),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          i.wd(X, {
            exports: function () {
              return [s.b, i.f];
            },
          });
      class ee {
        constructor(e) {
          (this._doc = e), (this._dom = Object(s.D)());
        }
        addTag(e, t = !1) {
          return e ? this._getOrCreateElement(e, t) : null;
        }
        addTags(e, t = !1) {
          return e
            ? e.reduce(
                (e, n) => (n && e.push(this._getOrCreateElement(n, t)), e),
                []
              )
            : [];
        }
        getTag(e) {
          return (e && this._doc.querySelector(`meta[${e}]`)) || null;
        }
        getTags(e) {
          if (!e) return [];
          const t = this._doc.querySelectorAll(`meta[${e}]`);
          return t ? [].slice.call(t) : [];
        }
        updateTag(e, t) {
          if (!e) return null;
          t = t || this._parseSelector(e);
          const n = this.getTag(t);
          return n
            ? this._setMetaElementAttributes(e, n)
            : this._getOrCreateElement(e, !0);
        }
        removeTag(e) {
          this.removeTagElement(this.getTag(e));
        }
        removeTagElement(e) {
          e && this._dom.remove(e);
        }
        _getOrCreateElement(e, t = !1) {
          if (!t) {
            const t = this._parseSelector(e),
              n = this.getTag(t);
            if (n && this._containsAttributes(e, n)) return n;
          }
          const n = this._dom.createElement("meta");
          this._setMetaElementAttributes(e, n);
          return this._doc.getElementsByTagName("head")[0].appendChild(n), n;
        }
        _setMetaElementAttributes(e, t) {
          return Object.keys(e).forEach((n) => t.setAttribute(n, e[n])), t;
        }
        _parseSelector(e) {
          const t = e.name ? "name" : "property";
          return `${t}="${e[t]}"`;
        }
        _containsAttributes(e, t) {
          return Object.keys(e).every((n) => t.getAttribute(n) === e[n]);
        }
      }
      function te() {
        return new ne(Object(i.Yc)(s.c));
      }
      (ee.ɵfac = function (e) {
        return new (e || ee)(i.Yc(s.c));
      }),
        (ee.ɵprov = Object(i.Ic)({
          factory: Z,
          token: ee,
          providedIn: "root",
        })),
        (ee.ctorParameters = () => [
          { type: void 0, decorators: [{ type: i.C, args: [s.c] }] },
        ]);
      class ne {
        constructor(e) {
          this._doc = e;
        }
        getTitle() {
          return this._doc.title;
        }
        setTitle(e) {
          this._doc.title = e || "";
        }
      }
      (ne.ɵfac = function (e) {
        return new (e || ne)(i.Yc(s.c));
      }),
        (ne.ɵprov = Object(i.Ic)({
          factory: te,
          token: ne,
          providedIn: "root",
        })),
        (ne.ctorParameters = () => [
          { type: void 0, decorators: [{ type: i.C, args: [s.c] }] },
        ]);
      "undefined" != typeof window && window;
      class se {
        constructor() {
          (this.store = {}), (this.onSerializeCallbacks = {});
        }
        static init(e) {
          const t = new se();
          return (t.store = e), t;
        }
        get(e, t) {
          return void 0 !== this.store[e] ? this.store[e] : t;
        }
        set(e, t) {
          this.store[e] = t;
        }
        remove(e) {
          delete this.store[e];
        }
        hasKey(e) {
          return this.store.hasOwnProperty(e);
        }
        onSerialize(e, t) {
          this.onSerializeCallbacks[e] = t;
        }
        toJson() {
          for (const t in this.onSerializeCallbacks)
            if (this.onSerializeCallbacks.hasOwnProperty(t))
              try {
                this.store[t] = this.onSerializeCallbacks[t]();
              } catch (e) {
                console.warn("Exception in onSerialize callback: ", e);
              }
          return JSON.stringify(this.store);
        }
      }
      function ie(e, t) {
        const n = e.getElementById(t + "-state");
        let s = {};
        if (n && n.textContent)
          try {
            s = JSON.parse(
              (function (e) {
                const t = {
                  "&a;": "&",
                  "&q;": '"',
                  "&s;": "'",
                  "&l;": "<",
                  "&g;": ">",
                };
                return e.replace(/&[^;]+;/g, (e) => t[e]);
              })(n.textContent)
            );
          } catch (i) {
            console.warn(
              "Exception while restoring TransferState for app " + t,
              i
            );
          }
        return se.init(s);
      }
      (se.ɵfac = function (e) {
        return new (e || se)();
      }),
        (se.ɵprov = i.Ic({ token: se, factory: se.ɵfac }));
      class re {}
      (re.ɵmod = i.Kc({ type: re })),
        (re.ɵinj = i.Jc({
          factory: function (e) {
            return new (e || re)();
          },
          providers: [{ provide: se, useFactory: ie, deps: [s.c, i.c] }],
        }));
      new i.lb("11.0.2");
    },
    kJWO: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      const s =
        ("function" == typeof Symbol && Symbol.observable) || "@@observable";
    },
    kmnG: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return J;
      }),
        n.d(t, "b", function () {
          return X;
        }),
        n.d(t, "c", function () {
          return L;
        }),
        n.d(t, "d", function () {
          return Z;
        });
      var s = n("GU7r"),
        i = n("ofXK"),
        r = n("fXoL"),
        o = n("FKr1"),
        a = n("cH1L"),
        l = n("8LU1"),
        c = n("XNiG"),
        u = n("VRyK"),
        d = n("xgIS"),
        h = n("JX91"),
        p = n("1G5W"),
        m = n("IzEk"),
        f = n("R0Ic"),
        g = n("nLfN"),
        y = n("R1ws");
      const v = ["underline"],
        b = ["connectionContainer"],
        x = ["inputContainer"],
        _ = ["label"];
      function w(e, t) {
        1 & e &&
          (r.Pc(0),
          r.Rc(1, "div", 14),
          r.Nc(2, "div", 15),
          r.Nc(3, "div", 16),
          r.Nc(4, "div", 17),
          r.Qc(),
          r.Rc(5, "div", 18),
          r.Nc(6, "div", 15),
          r.Nc(7, "div", 16),
          r.Nc(8, "div", 17),
          r.Qc(),
          r.Oc());
      }
      function C(e, t) {
        1 & e && (r.Rc(0, "div", 19), r.jd(1, 1), r.Qc());
      }
      function S(e, t) {
        if (
          (1 & e &&
            (r.Pc(0), r.jd(1, 2), r.Rc(2, "span"), r.Ed(3), r.Qc(), r.Oc()),
          2 & e)
        ) {
          const e = r.gd(2);
          r.zc(3), r.Fd(e._control.placeholder);
        }
      }
      function E(e, t) {
        1 & e && r.jd(0, 3, ["*ngSwitchCase", "true"]);
      }
      function k(e, t) {
        1 & e && (r.Rc(0, "span", 23), r.Ed(1, " *"), r.Qc());
      }
      function O(e, t) {
        if (1 & e) {
          const e = r.Sc();
          r.Rc(0, "label", 20, 21),
            r.cd("cdkObserveContent", function () {
              r.ud(e);
              return r.gd().updateOutlineGap();
            }),
            r.Cd(2, S, 4, 1, "ng-container", 12),
            r.Cd(3, E, 1, 0, "ng-content", 12),
            r.Cd(4, k, 2, 0, "span", 22),
            r.Qc();
        }
        if (2 & e) {
          const e = r.gd();
          r.Ec("mat-empty", e._control.empty && !e._shouldAlwaysFloat())(
            "mat-form-field-empty",
            e._control.empty && !e._shouldAlwaysFloat()
          )("mat-accent", "accent" == e.color)("mat-warn", "warn" == e.color),
            r.ld("cdkObserveContentDisabled", "outline" != e.appearance)(
              "id",
              e._labelId
            )("ngSwitch", e._hasLabel()),
            r.Ac("for", e._control.id)("aria-owns", e._control.id),
            r.zc(2),
            r.ld("ngSwitchCase", !1),
            r.zc(1),
            r.ld("ngSwitchCase", !0),
            r.zc(1),
            r.ld(
              "ngIf",
              !e.hideRequiredMarker &&
                e._control.required &&
                !e._control.disabled
            );
        }
      }
      function I(e, t) {
        1 & e && (r.Rc(0, "div", 24), r.jd(1, 4), r.Qc());
      }
      function T(e, t) {
        if (
          (1 & e && (r.Rc(0, "div", 25, 26), r.Nc(2, "span", 27), r.Qc()),
          2 & e)
        ) {
          const e = r.gd();
          r.zc(2),
            r.Ec("mat-accent", "accent" == e.color)(
              "mat-warn",
              "warn" == e.color
            );
        }
      }
      function A(e, t) {
        if ((1 & e && (r.Rc(0, "div"), r.jd(1, 5), r.Qc()), 2 & e)) {
          const e = r.gd();
          r.ld("@transitionMessages", e._subscriptAnimationState);
        }
      }
      function D(e, t) {
        if ((1 & e && (r.Rc(0, "div", 31), r.Ed(1), r.Qc()), 2 & e)) {
          const e = r.gd(2);
          r.ld("id", e._hintLabelId), r.zc(1), r.Fd(e.hintLabel);
        }
      }
      function M(e, t) {
        if (
          (1 & e &&
            (r.Rc(0, "div", 28),
            r.Cd(1, D, 2, 2, "div", 29),
            r.jd(2, 6),
            r.Nc(3, "div", 30),
            r.jd(4, 7),
            r.Qc()),
          2 & e)
        ) {
          const e = r.gd();
          r.ld("@transitionMessages", e._subscriptAnimationState),
            r.zc(1),
            r.ld("ngIf", e.hintLabel);
        }
      }
      const P = [
        "*",
        [["", "matPrefix", ""]],
        [["mat-placeholder"]],
        [["mat-label"]],
        [["", "matSuffix", ""]],
        [["mat-error"]],
        [["mat-hint", 3, "align", "end"]],
        [["mat-hint", "align", "end"]],
      ];
      let R = 0;
      const j = new r.E("MatError");
      class N {
        constructor() {
          this.id = "mat-error-" + R++;
        }
      }
      (N.ɵfac = function (e) {
        return new (e || N)();
      }),
        (N.ɵdir = r.Hc({
          type: N,
          selectors: [["mat-error"]],
          hostAttrs: ["role", "alert", 1, "mat-error"],
          hostVars: 1,
          hostBindings: function (e, t) {
            2 & e && r.Ac("id", t.id);
          },
          inputs: { id: "id" },
          features: [r.yc([{ provide: j, useExisting: N }])],
        })),
        (N.propDecorators = { id: [{ type: r.G }] });
      const F = {
        transitionMessages: Object(f.n)("transitionMessages", [
          Object(f.k)(
            "enter",
            Object(f.l)({ opacity: 1, transform: "translateY(0%)" })
          ),
          Object(f.m)("void => enter", [
            Object(f.l)({ opacity: 0, transform: "translateY(-100%)" }),
            Object(f.e)("300ms cubic-bezier(0.55, 0, 0.55, 0.2)"),
          ]),
        ]),
      };
      class L {}
      (L.ɵfac = function (e) {
        return new (e || L)();
      }),
        (L.ɵdir = r.Hc({ type: L }));
      let V = 0;
      const B = new r.E("MatHint");
      class z {
        constructor() {
          (this.align = "start"), (this.id = "mat-hint-" + V++);
        }
      }
      (z.ɵfac = function (e) {
        return new (e || z)();
      }),
        (z.ɵdir = r.Hc({
          type: z,
          selectors: [["mat-hint"]],
          hostAttrs: [1, "mat-hint"],
          hostVars: 4,
          hostBindings: function (e, t) {
            2 & e &&
              (r.Ac("id", t.id)("align", null),
              r.Ec("mat-form-field-hint-end", "end" === t.align));
          },
          inputs: { align: "align", id: "id" },
          features: [r.yc([{ provide: B, useExisting: z }])],
        })),
        (z.propDecorators = { align: [{ type: r.G }], id: [{ type: r.G }] });
      class H {}
      (H.ɵfac = function (e) {
        return new (e || H)();
      }),
        (H.ɵdir = r.Hc({ type: H, selectors: [["mat-label"]] }));
      class G {}
      (G.ɵfac = function (e) {
        return new (e || G)();
      }),
        (G.ɵdir = r.Hc({ type: G, selectors: [["mat-placeholder"]] }));
      const U = new r.E("MatPrefix");
      class $ {}
      ($.ɵfac = function (e) {
        return new (e || $)();
      }),
        ($.ɵdir = r.Hc({
          type: $,
          selectors: [["", "matPrefix", ""]],
          features: [r.yc([{ provide: U, useExisting: $ }])],
        }));
      const q = new r.E("MatSuffix");
      class W {}
      (W.ɵfac = function (e) {
        return new (e || W)();
      }),
        (W.ɵdir = r.Hc({
          type: W,
          selectors: [["", "matSuffix", ""]],
          features: [r.yc([{ provide: q, useExisting: W }])],
        }));
      let Y = 0;
      const Q = Object(o.k)(
          class {
            constructor(e) {
              this._elementRef = e;
            }
          },
          "primary"
        ),
        K = new r.E("MAT_FORM_FIELD_DEFAULT_OPTIONS"),
        J = new r.E("MatFormField");
      class X extends Q {
        constructor(e, t, n, s, i, r, o, a) {
          super(e),
            (this._elementRef = e),
            (this._changeDetectorRef = t),
            (this._dir = s),
            (this._defaults = i),
            (this._platform = r),
            (this._ngZone = o),
            (this._outlineGapCalculationNeededImmediately = !1),
            (this._outlineGapCalculationNeededOnStable = !1),
            (this._destroyed = new c.a()),
            (this._showAlwaysAnimate = !1),
            (this._subscriptAnimationState = ""),
            (this._hintLabel = ""),
            (this._hintLabelId = "mat-hint-" + Y++),
            (this._labelId = "mat-form-field-label-" + Y++),
            (this.floatLabel = this._getDefaultFloatLabelState()),
            (this._animationsEnabled = "NoopAnimations" !== a),
            (this.appearance = i && i.appearance ? i.appearance : "legacy"),
            (this._hideRequiredMarker =
              !(!i || null == i.hideRequiredMarker) && i.hideRequiredMarker);
        }
        get appearance() {
          return this._appearance;
        }
        set appearance(e) {
          const t = this._appearance;
          (this._appearance =
            e || (this._defaults && this._defaults.appearance) || "legacy"),
            "outline" === this._appearance &&
              t !== e &&
              (this._outlineGapCalculationNeededOnStable = !0);
        }
        get hideRequiredMarker() {
          return this._hideRequiredMarker;
        }
        set hideRequiredMarker(e) {
          this._hideRequiredMarker = Object(l.b)(e);
        }
        _shouldAlwaysFloat() {
          return "always" === this.floatLabel && !this._showAlwaysAnimate;
        }
        _canLabelFloat() {
          return "never" !== this.floatLabel;
        }
        get hintLabel() {
          return this._hintLabel;
        }
        set hintLabel(e) {
          (this._hintLabel = e), this._processHints();
        }
        get floatLabel() {
          return "legacy" !== this.appearance && "never" === this._floatLabel
            ? "auto"
            : this._floatLabel;
        }
        set floatLabel(e) {
          e !== this._floatLabel &&
            ((this._floatLabel = e || this._getDefaultFloatLabelState()),
            this._changeDetectorRef.markForCheck());
        }
        get _control() {
          return (
            this._explicitFormFieldControl ||
            this._controlNonStatic ||
            this._controlStatic
          );
        }
        set _control(e) {
          this._explicitFormFieldControl = e;
        }
        getLabelId() {
          return this._hasFloatingLabel() ? this._labelId : null;
        }
        getConnectedOverlayOrigin() {
          return this._connectionContainerRef || this._elementRef;
        }
        ngAfterContentInit() {
          this._validateControlChild();
          const e = this._control;
          e.controlType &&
            this._elementRef.nativeElement.classList.add(
              "mat-form-field-type-" + e.controlType
            ),
            e.stateChanges.pipe(Object(h.a)(null)).subscribe(() => {
              this._validatePlaceholders(),
                this._syncDescribedByIds(),
                this._changeDetectorRef.markForCheck();
            }),
            e.ngControl &&
              e.ngControl.valueChanges &&
              e.ngControl.valueChanges
                .pipe(Object(p.a)(this._destroyed))
                .subscribe(() => this._changeDetectorRef.markForCheck()),
            this._ngZone.runOutsideAngular(() => {
              this._ngZone.onStable
                .pipe(Object(p.a)(this._destroyed))
                .subscribe(() => {
                  this._outlineGapCalculationNeededOnStable &&
                    this.updateOutlineGap();
                });
            }),
            Object(u.a)(
              this._prefixChildren.changes,
              this._suffixChildren.changes
            ).subscribe(() => {
              (this._outlineGapCalculationNeededOnStable = !0),
                this._changeDetectorRef.markForCheck();
            }),
            this._hintChildren.changes.pipe(Object(h.a)(null)).subscribe(() => {
              this._processHints(), this._changeDetectorRef.markForCheck();
            }),
            this._errorChildren.changes
              .pipe(Object(h.a)(null))
              .subscribe(() => {
                this._syncDescribedByIds(),
                  this._changeDetectorRef.markForCheck();
              }),
            this._dir &&
              this._dir.change
                .pipe(Object(p.a)(this._destroyed))
                .subscribe(() => {
                  "function" == typeof requestAnimationFrame
                    ? this._ngZone.runOutsideAngular(() => {
                        requestAnimationFrame(() => this.updateOutlineGap());
                      })
                    : this.updateOutlineGap();
                });
        }
        ngAfterContentChecked() {
          this._validateControlChild(),
            this._outlineGapCalculationNeededImmediately &&
              this.updateOutlineGap();
        }
        ngAfterViewInit() {
          (this._subscriptAnimationState = "enter"),
            this._changeDetectorRef.detectChanges();
        }
        ngOnDestroy() {
          this._destroyed.next(), this._destroyed.complete();
        }
        _shouldForward(e) {
          const t = this._control ? this._control.ngControl : null;
          return t && t[e];
        }
        _hasPlaceholder() {
          return !!(
            (this._control && this._control.placeholder) ||
            this._placeholderChild
          );
        }
        _hasLabel() {
          return !(!this._labelChildNonStatic && !this._labelChildStatic);
        }
        _shouldLabelFloat() {
          return (
            this._canLabelFloat() &&
            ((this._control && this._control.shouldLabelFloat) ||
              this._shouldAlwaysFloat())
          );
        }
        _hideControlPlaceholder() {
          return (
            ("legacy" === this.appearance && !this._hasLabel()) ||
            (this._hasLabel() && !this._shouldLabelFloat())
          );
        }
        _hasFloatingLabel() {
          return (
            this._hasLabel() ||
            ("legacy" === this.appearance && this._hasPlaceholder())
          );
        }
        _getDisplayedMessages() {
          return this._errorChildren &&
            this._errorChildren.length > 0 &&
            this._control.errorState
            ? "error"
            : "hint";
        }
        _animateAndLockLabel() {
          this._hasFloatingLabel() &&
            this._canLabelFloat() &&
            (this._animationsEnabled &&
              this._label &&
              ((this._showAlwaysAnimate = !0),
              Object(d.a)(this._label.nativeElement, "transitionend")
                .pipe(Object(m.a)(1))
                .subscribe(() => {
                  this._showAlwaysAnimate = !1;
                })),
            (this.floatLabel = "always"),
            this._changeDetectorRef.markForCheck());
        }
        _validatePlaceholders() {
          this._control.placeholder && this._placeholderChild, 0;
        }
        _processHints() {
          this._validateHints(), this._syncDescribedByIds();
        }
        _validateHints() {
          this._hintChildren, 0;
        }
        _getDefaultFloatLabelState() {
          return (this._defaults && this._defaults.floatLabel) || "auto";
        }
        _syncDescribedByIds() {
          if (this._control) {
            let e = [];
            if (
              (this._control.userAriaDescribedBy &&
                "string" == typeof this._control.userAriaDescribedBy &&
                e.push(...this._control.userAriaDescribedBy.split(" ")),
              "hint" === this._getDisplayedMessages())
            ) {
              const t = this._hintChildren
                  ? this._hintChildren.find((e) => "start" === e.align)
                  : null,
                n = this._hintChildren
                  ? this._hintChildren.find((e) => "end" === e.align)
                  : null;
              t ? e.push(t.id) : this._hintLabel && e.push(this._hintLabelId),
                n && e.push(n.id);
            } else
              this._errorChildren &&
                e.push(...this._errorChildren.map((e) => e.id));
            this._control.setDescribedByIds(e);
          }
        }
        _validateControlChild() {
          this._control, 0;
        }
        updateOutlineGap() {
          const e = this._label ? this._label.nativeElement : null;
          if (
            "outline" !== this.appearance ||
            !e ||
            !e.children.length ||
            !e.textContent.trim()
          )
            return;
          if (!this._platform.isBrowser) return;
          if (!this._isAttachedToDOM())
            return void (this._outlineGapCalculationNeededImmediately = !0);
          let t = 0,
            n = 0;
          const s = this._connectionContainerRef.nativeElement,
            i = s.querySelectorAll(".mat-form-field-outline-start"),
            r = s.querySelectorAll(".mat-form-field-outline-gap");
          if (this._label && this._label.nativeElement.children.length) {
            const i = s.getBoundingClientRect();
            if (0 === i.width && 0 === i.height)
              return (
                (this._outlineGapCalculationNeededOnStable = !0),
                void (this._outlineGapCalculationNeededImmediately = !1)
              );
            const r = this._getStartEnd(i),
              o = e.children,
              a = this._getStartEnd(o[0].getBoundingClientRect());
            let l = 0;
            for (let e = 0; e < o.length; e++) l += o[e].offsetWidth;
            (t = Math.abs(a - r) - 5), (n = l > 0 ? 0.75 * l + 10 : 0);
          }
          for (let o = 0; o < i.length; o++) i[o].style.width = t + "px";
          for (let o = 0; o < r.length; o++) r[o].style.width = n + "px";
          this._outlineGapCalculationNeededOnStable =
            this._outlineGapCalculationNeededImmediately = !1;
        }
        _getStartEnd(e) {
          return this._dir && "rtl" === this._dir.value ? e.right : e.left;
        }
        _isAttachedToDOM() {
          const e = this._elementRef.nativeElement;
          if (e.getRootNode) {
            const t = e.getRootNode();
            return t && t !== e;
          }
          return document.documentElement.contains(e);
        }
      }
      (X.ɵfac = function (e) {
        return new (e || X)(
          r.Mc(r.v),
          r.Mc(r.k),
          r.Mc(r.v),
          r.Mc(a.b, 8),
          r.Mc(K, 8),
          r.Mc(g.a),
          r.Mc(r.Q),
          r.Mc(y.a, 8)
        );
      }),
        (X.ɵcmp = r.Gc({
          type: X,
          selectors: [["mat-form-field"]],
          contentQueries: function (e, t, n) {
            if (
              (1 & e &&
                (r.Fc(n, L, !0),
                r.xd(n, L, !0),
                r.Fc(n, H, !0),
                r.xd(n, H, !0),
                r.Fc(n, G, !0),
                r.Fc(n, j, !0),
                r.Fc(n, B, !0),
                r.Fc(n, U, !0),
                r.Fc(n, q, !0)),
              2 & e)
            ) {
              let e;
              r.sd((e = r.dd())) && (t._controlNonStatic = e.first),
                r.sd((e = r.dd())) && (t._controlStatic = e.first),
                r.sd((e = r.dd())) && (t._labelChildNonStatic = e.first),
                r.sd((e = r.dd())) && (t._labelChildStatic = e.first),
                r.sd((e = r.dd())) && (t._placeholderChild = e.first),
                r.sd((e = r.dd())) && (t._errorChildren = e),
                r.sd((e = r.dd())) && (t._hintChildren = e),
                r.sd((e = r.dd())) && (t._prefixChildren = e),
                r.sd((e = r.dd())) && (t._suffixChildren = e);
            }
          },
          viewQuery: function (e, t) {
            if (
              (1 & e && (r.Id(v, !0), r.yd(b, !0), r.Id(x, !0), r.Id(_, !0)),
              2 & e)
            ) {
              let e;
              r.sd((e = r.dd())) && (t.underlineRef = e.first),
                r.sd((e = r.dd())) && (t._connectionContainerRef = e.first),
                r.sd((e = r.dd())) && (t._inputContainerRef = e.first),
                r.sd((e = r.dd())) && (t._label = e.first);
            }
          },
          hostAttrs: [1, "mat-form-field"],
          hostVars: 44,
          hostBindings: function (e, t) {
            2 & e &&
              r.Ec(
                "mat-form-field-appearance-standard",
                "standard" == t.appearance
              )("mat-form-field-appearance-fill", "fill" == t.appearance)(
                "mat-form-field-appearance-outline",
                "outline" == t.appearance
              )("mat-form-field-appearance-legacy", "legacy" == t.appearance)(
                "mat-form-field-invalid",
                t._control.errorState
              )("mat-form-field-can-float", t._canLabelFloat())(
                "mat-form-field-should-float",
                t._shouldLabelFloat()
              )("mat-form-field-has-label", t._hasFloatingLabel())(
                "mat-form-field-hide-placeholder",
                t._hideControlPlaceholder()
              )("mat-form-field-disabled", t._control.disabled)(
                "mat-form-field-autofilled",
                t._control.autofilled
              )("mat-focused", t._control.focused)(
                "mat-accent",
                "accent" == t.color
              )("mat-warn", "warn" == t.color)(
                "ng-untouched",
                t._shouldForward("untouched")
              )("ng-touched", t._shouldForward("touched"))(
                "ng-pristine",
                t._shouldForward("pristine")
              )("ng-dirty", t._shouldForward("dirty"))(
                "ng-valid",
                t._shouldForward("valid")
              )("ng-invalid", t._shouldForward("invalid"))(
                "ng-pending",
                t._shouldForward("pending")
              )("_mat-animation-noopable", !t._animationsEnabled);
          },
          inputs: {
            color: "color",
            floatLabel: "floatLabel",
            appearance: "appearance",
            hideRequiredMarker: "hideRequiredMarker",
            hintLabel: "hintLabel",
          },
          exportAs: ["matFormField"],
          features: [r.yc([{ provide: J, useExisting: X }]), r.wc],
          ngContentSelectors: [
            "*",
            "[matPrefix]",
            "mat-placeholder",
            "mat-label",
            "[matSuffix]",
            "mat-error",
            "mat-hint:not([align='end'])",
            "mat-hint[align='end']",
          ],
          decls: 15,
          vars: 8,
          consts: [
            [1, "mat-form-field-wrapper"],
            [1, "mat-form-field-flex", 3, "click"],
            ["connectionContainer", ""],
            [4, "ngIf"],
            ["class", "mat-form-field-prefix", 4, "ngIf"],
            [1, "mat-form-field-infix"],
            ["inputContainer", ""],
            [1, "mat-form-field-label-wrapper"],
            [
              "class",
              "mat-form-field-label",
              3,
              "cdkObserveContentDisabled",
              "id",
              "mat-empty",
              "mat-form-field-empty",
              "mat-accent",
              "mat-warn",
              "ngSwitch",
              "cdkObserveContent",
              4,
              "ngIf",
            ],
            ["class", "mat-form-field-suffix", 4, "ngIf"],
            ["class", "mat-form-field-underline", 4, "ngIf"],
            [1, "mat-form-field-subscript-wrapper", 3, "ngSwitch"],
            [4, "ngSwitchCase"],
            ["class", "mat-form-field-hint-wrapper", 4, "ngSwitchCase"],
            [1, "mat-form-field-outline"],
            [1, "mat-form-field-outline-start"],
            [1, "mat-form-field-outline-gap"],
            [1, "mat-form-field-outline-end"],
            [1, "mat-form-field-outline", "mat-form-field-outline-thick"],
            [1, "mat-form-field-prefix"],
            [
              1,
              "mat-form-field-label",
              3,
              "cdkObserveContentDisabled",
              "id",
              "ngSwitch",
              "cdkObserveContent",
            ],
            ["label", ""],
            [
              "class",
              "mat-placeholder-required mat-form-field-required-marker",
              "aria-hidden",
              "true",
              4,
              "ngIf",
            ],
            [
              "aria-hidden",
              "true",
              1,
              "mat-placeholder-required",
              "mat-form-field-required-marker",
            ],
            [1, "mat-form-field-suffix"],
            [1, "mat-form-field-underline"],
            ["underline", ""],
            [1, "mat-form-field-ripple"],
            [1, "mat-form-field-hint-wrapper"],
            ["class", "mat-hint", 3, "id", 4, "ngIf"],
            [1, "mat-form-field-hint-spacer"],
            [1, "mat-hint", 3, "id"],
          ],
          template: function (e, t) {
            1 & e &&
              (r.kd(P),
              r.Rc(0, "div", 0),
              r.Rc(1, "div", 1, 2),
              r.cd("click", function (e) {
                return (
                  t._control.onContainerClick && t._control.onContainerClick(e)
                );
              }),
              r.Cd(3, w, 9, 0, "ng-container", 3),
              r.Cd(4, C, 2, 0, "div", 4),
              r.Rc(5, "div", 5, 6),
              r.jd(7),
              r.Rc(8, "span", 7),
              r.Cd(9, O, 5, 16, "label", 8),
              r.Qc(),
              r.Qc(),
              r.Cd(10, I, 2, 0, "div", 9),
              r.Qc(),
              r.Cd(11, T, 3, 4, "div", 10),
              r.Rc(12, "div", 11),
              r.Cd(13, A, 2, 1, "div", 12),
              r.Cd(14, M, 5, 2, "div", 13),
              r.Qc(),
              r.Qc()),
              2 & e &&
                (r.zc(3),
                r.ld("ngIf", "outline" == t.appearance),
                r.zc(1),
                r.ld("ngIf", t._prefixChildren.length),
                r.zc(5),
                r.ld("ngIf", t._hasFloatingLabel()),
                r.zc(1),
                r.ld("ngIf", t._suffixChildren.length),
                r.zc(1),
                r.ld("ngIf", "outline" != t.appearance),
                r.zc(1),
                r.ld("ngSwitch", t._getDisplayedMessages()),
                r.zc(1),
                r.ld("ngSwitchCase", "error"),
                r.zc(1),
                r.ld("ngSwitchCase", "hint"));
          },
          directives: [i.k, i.m, i.n, s.a],
          styles: [
            ".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\n",
            '.mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:"";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\n',
            '.mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:" ";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\n',
            ".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\n",
            ".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\n",
            ".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\n",
          ],
          encapsulation: 2,
          data: { animation: [F.transitionMessages] },
          changeDetection: 0,
        })),
        (X.ctorParameters = () => [
          { type: r.v },
          { type: r.k },
          { type: void 0, decorators: [{ type: r.C, args: [r.v] }] },
          { type: a.b, decorators: [{ type: r.R }] },
          {
            type: void 0,
            decorators: [{ type: r.R }, { type: r.C, args: [K] }],
          },
          { type: g.a },
          { type: r.Q },
          {
            type: String,
            decorators: [{ type: r.R }, { type: r.C, args: [y.a] }],
          },
        ]),
        (X.propDecorators = {
          appearance: [{ type: r.G }],
          hideRequiredMarker: [{ type: r.G }],
          hintLabel: [{ type: r.G }],
          floatLabel: [{ type: r.G }],
          underlineRef: [{ type: r.mb, args: ["underline"] }],
          _connectionContainerRef: [
            { type: r.mb, args: ["connectionContainer", { static: !0 }] },
          ],
          _inputContainerRef: [{ type: r.mb, args: ["inputContainer"] }],
          _label: [{ type: r.mb, args: ["label"] }],
          _controlNonStatic: [{ type: r.r, args: [L] }],
          _controlStatic: [{ type: r.r, args: [L, { static: !0 }] }],
          _labelChildNonStatic: [{ type: r.r, args: [H] }],
          _labelChildStatic: [{ type: r.r, args: [H, { static: !0 }] }],
          _placeholderChild: [{ type: r.r, args: [G] }],
          _errorChildren: [{ type: r.s, args: [j, { descendants: !0 }] }],
          _hintChildren: [{ type: r.s, args: [B, { descendants: !0 }] }],
          _prefixChildren: [{ type: r.s, args: [U, { descendants: !0 }] }],
          _suffixChildren: [{ type: r.s, args: [q, { descendants: !0 }] }],
        });
      class Z {}
      (Z.ɵmod = r.Kc({ type: Z })),
        (Z.ɵinj = r.Jc({
          factory: function (e) {
            return new (e || Z)();
          },
          imports: [[i.b, o.d, s.c], o.d],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          r.wd(Z, {
            declarations: function () {
              return [N, X, z, H, G, $, W];
            },
            imports: function () {
              return [i.b, o.d, s.c];
            },
            exports: function () {
              return [o.d, N, X, z, H, G, $, W];
            },
          });
    },
    l7GE: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      var s = n("7o/Q");
      class i extends s.a {
        notifyNext(e, t, n, s, i) {
          this.destination.next(t);
        }
        notifyError(e, t) {
          this.destination.error(e);
        }
        notifyComplete(e) {
          this.destination.complete();
        }
      }
    },
    lJxs: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      var s = n("7o/Q");
      function i(e, t) {
        return function (n) {
          if ("function" != typeof e)
            throw new TypeError(
              "argument is not a function. Are you looking for `mapTo()`?"
            );
          return n.lift(new r(e, t));
        };
      }
      class r {
        constructor(e, t) {
          (this.project = e), (this.thisArg = t);
        }
        call(e, t) {
          return t.subscribe(new o(e, this.project, this.thisArg));
        }
      }
      class o extends s.a {
        constructor(e, t, n) {
          super(e),
            (this.project = t),
            (this.count = 0),
            (this.thisArg = n || this);
        }
        _next(e) {
          let t;
          try {
            t = this.project.call(this.thisArg, e, this.count++);
          } catch (n) {
            return void this.destination.error(n);
          }
          this.destination.next(t);
        }
      }
    },
    mrSG: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      function s(e, t, n, s) {
        var i,
          r = arguments.length,
          o =
            r < 3
              ? t
              : null === s
              ? (s = Object.getOwnPropertyDescriptor(t, n))
              : s;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          o = Reflect.decorate(e, t, n, s);
        else
          for (var a = e.length - 1; a >= 0; a--)
            (i = e[a]) &&
              (o = (r < 3 ? i(o) : r > 3 ? i(t, n, o) : i(t, n)) || o);
        return r > 3 && o && Object.defineProperty(t, n, o), o;
      }
      Object.create;
      Object.create;
    },
    n6bG: function (e, t, n) {
      "use strict";
      function s(e) {
        return "function" == typeof e;
      }
      n.d(t, "a", function () {
        return s;
      });
    },
    nLfN: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return a;
      }),
        n.d(t, "b", function () {
          return l;
        }),
        n.d(t, "c", function () {
          return v;
        }),
        n.d(t, "d", function () {
          return y;
        }),
        n.d(t, "e", function () {
          return u;
        }),
        n.d(t, "f", function () {
          return f;
        }),
        n.d(t, "g", function () {
          return g;
        });
      var s = n("fXoL"),
        i = n("ofXK");
      let r, o;
      try {
        r = "undefined" != typeof Intl && Intl.v8BreakIterator;
      } catch (b) {
        r = !1;
      }
      class a {
        constructor(e) {
          (this._platformId = e),
            (this.isBrowser = this._platformId
              ? Object(i.z)(this._platformId)
              : "object" == typeof document && !!document),
            (this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent)),
            (this.TRIDENT =
              this.isBrowser && /(msie|trident)/i.test(navigator.userAgent)),
            (this.BLINK =
              this.isBrowser &&
              !(!window.chrome && !r) &&
              "undefined" != typeof CSS &&
              !this.EDGE &&
              !this.TRIDENT),
            (this.WEBKIT =
              this.isBrowser &&
              /AppleWebKit/i.test(navigator.userAgent) &&
              !this.BLINK &&
              !this.EDGE &&
              !this.TRIDENT),
            (this.IOS =
              this.isBrowser &&
              /iPad|iPhone|iPod/.test(navigator.userAgent) &&
              !("MSStream" in window)),
            (this.FIREFOX =
              this.isBrowser &&
              /(firefox|minefield)/i.test(navigator.userAgent)),
            (this.ANDROID =
              this.isBrowser &&
              /android/i.test(navigator.userAgent) &&
              !this.TRIDENT),
            (this.SAFARI =
              this.isBrowser &&
              /safari/i.test(navigator.userAgent) &&
              this.WEBKIT);
        }
      }
      (a.ɵfac = function (e) {
        return new (e || a)(s.Yc(s.U));
      }),
        (a.ɵprov = Object(s.Ic)({
          factory: function () {
            return new a(Object(s.Yc)(s.U));
          },
          token: a,
          providedIn: "root",
        })),
        (a.ctorParameters = () => [
          { type: Object, decorators: [{ type: s.C, args: [s.U] }] },
        ]);
      class l {}
      (l.ɵmod = s.Kc({ type: l })),
        (l.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || l)();
          },
        }));
      const c = [
        "color",
        "button",
        "checkbox",
        "date",
        "datetime-local",
        "email",
        "file",
        "hidden",
        "image",
        "month",
        "number",
        "password",
        "radio",
        "range",
        "reset",
        "search",
        "submit",
        "tel",
        "text",
        "time",
        "url",
        "week",
      ];
      function u() {
        if (o) return o;
        if ("object" != typeof document || !document)
          return (o = new Set(c)), o;
        let e = document.createElement("input");
        return (
          (o = new Set(
            c.filter((t) => (e.setAttribute("type", t), e.type === t))
          )),
          o
        );
      }
      let d, h, p, m;
      function f(e) {
        return (function () {
          if (null == d && "undefined" != typeof window)
            try {
              window.addEventListener(
                "test",
                null,
                Object.defineProperty({}, "passive", { get: () => (d = !0) })
              );
            } finally {
              d = d || !1;
            }
          return d;
        })()
          ? e
          : !!e.capture;
      }
      function g() {
        if (null == p)
          if (
            (("object" == typeof document && document) || (p = !1),
            "scrollBehavior" in document.documentElement.style)
          )
            p = !0;
          else {
            const e = Element.prototype.scrollTo;
            p = !!e && !/\{\s*\[native code\]\s*\}/.test(e.toString());
          }
        return p;
      }
      function y() {
        if ("object" != typeof document || !document) return 0;
        if (null == h) {
          const e = document.createElement("div"),
            t = e.style;
          (e.dir = "rtl"),
            (t.width = "1px"),
            (t.overflow = "auto"),
            (t.visibility = "hidden"),
            (t.pointerEvents = "none"),
            (t.position = "absolute");
          const n = document.createElement("div"),
            s = n.style;
          (s.width = "2px"),
            (s.height = "1px"),
            e.appendChild(n),
            document.body.appendChild(e),
            (h = 0),
            0 === e.scrollLeft &&
              ((e.scrollLeft = 1), (h = 0 === e.scrollLeft ? 1 : 2)),
            e.parentNode.removeChild(e);
        }
        return h;
      }
      function v(e) {
        if (
          (function () {
            if (null == m) {
              const e = "undefined" != typeof document ? document.head : null;
              m = !(!e || (!e.createShadowRoot && !e.attachShadow));
            }
            return m;
          })()
        ) {
          const t = e.getRootNode ? e.getRootNode() : null;
          if (
            "undefined" != typeof ShadowRoot &&
            ShadowRoot &&
            t instanceof ShadowRoot
          )
            return t;
        }
        return null;
      }
    },
    nYR2: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var s = n("7o/Q"),
        i = n("quSY");
      function r(e) {
        return (t) => t.lift(new o(e));
      }
      class o {
        constructor(e) {
          this.callback = e;
        }
        call(e, t) {
          return t.subscribe(new a(e, this.callback));
        }
      }
      class a extends s.a {
        constructor(e, t) {
          super(e), this.add(new i.a(t));
        }
      }
    },
    ngJS: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      const s = (e) => (t) => {
        for (let n = 0, s = e.length; n < s && !t.closed; n++) t.next(e[n]);
        t.complete();
      };
    },
    ofXK: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return x;
      }),
        n.d(t, "b", function () {
          return ot;
        }),
        n.d(t, "c", function () {
          return l;
        }),
        n.d(t, "d", function () {
          return T;
        }),
        n.d(t, "e", function () {
          return w;
        }),
        n.d(t, "f", function () {
          return d;
        }),
        n.d(t, "g", function () {
          return C;
        }),
        n.d(t, "h", function () {
          return v;
        }),
        n.d(t, "i", function () {
          return Ce;
        }),
        n.d(t, "j", function () {
          return ke;
        }),
        n.d(t, "k", function () {
          return Ie;
        }),
        n.d(t, "l", function () {
          return Fe;
        }),
        n.d(t, "m", function () {
          return Me;
        }),
        n.d(t, "n", function () {
          return Pe;
        }),
        n.d(t, "o", function () {
          return Re;
        }),
        n.d(t, "p", function () {
          return Le;
        }),
        n.d(t, "q", function () {
          return _;
        }),
        n.d(t, "r", function () {
          return tt;
        }),
        n.d(t, "s", function () {
          return c;
        }),
        n.d(t, "t", function () {
          return A;
        }),
        n.d(t, "u", function () {
          return ut;
        }),
        n.d(t, "v", function () {
          return Z;
        }),
        n.d(t, "w", function () {
          return j;
        }),
        n.d(t, "x", function () {
          return R;
        }),
        n.d(t, "y", function () {
          return N;
        }),
        n.d(t, "z", function () {
          return lt;
        }),
        n.d(t, "A", function () {
          return ct;
        }),
        n.d(t, "B", function () {
          return a;
        }),
        n.d(t, "C", function () {
          return at;
        }),
        n.d(t, "D", function () {
          return r;
        }),
        n.d(t, "E", function () {
          return we;
        }),
        n.d(t, "F", function () {
          return o;
        });
      var s = n("fXoL");
      let i = null;
      function r() {
        return i;
      }
      function o(e) {
        i || (i = e);
      }
      class a {}
      const l = new s.E("DocumentToken");
      class c {}
      function u() {
        return Object(s.Yc)(h);
      }
      (c.ɵfac = function (e) {
        return new (e || c)();
      }),
        (c.ɵprov = Object(s.Ic)({
          factory: u,
          token: c,
          providedIn: "platform",
        }));
      const d = new s.E("Location Initialized");
      class h extends c {
        constructor(e) {
          super(), (this._doc = e), this._init();
        }
        _init() {
          (this.location = r().getLocation()),
            (this._history = r().getHistory());
        }
        getBaseHrefFromDOM() {
          return r().getBaseHref(this._doc);
        }
        onPopState(e) {
          r()
            .getGlobalEventTarget(this._doc, "window")
            .addEventListener("popstate", e, !1);
        }
        onHashChange(e) {
          r()
            .getGlobalEventTarget(this._doc, "window")
            .addEventListener("hashchange", e, !1);
        }
        get href() {
          return this.location.href;
        }
        get protocol() {
          return this.location.protocol;
        }
        get hostname() {
          return this.location.hostname;
        }
        get port() {
          return this.location.port;
        }
        get pathname() {
          return this.location.pathname;
        }
        get search() {
          return this.location.search;
        }
        get hash() {
          return this.location.hash;
        }
        set pathname(e) {
          this.location.pathname = e;
        }
        pushState(e, t, n) {
          p() ? this._history.pushState(e, t, n) : (this.location.hash = n);
        }
        replaceState(e, t, n) {
          p() ? this._history.replaceState(e, t, n) : (this.location.hash = n);
        }
        forward() {
          this._history.forward();
        }
        back() {
          this._history.back();
        }
        getState() {
          return this._history.state;
        }
      }
      function p() {
        return !!window.history.pushState;
      }
      function m() {
        return new h(Object(s.Yc)(l));
      }
      function f(e, t) {
        if (0 == e.length) return t;
        if (0 == t.length) return e;
        let n = 0;
        return (
          e.endsWith("/") && n++,
          t.startsWith("/") && n++,
          2 == n ? e + t.substring(1) : 1 == n ? e + t : e + "/" + t
        );
      }
      function g(e) {
        const t = e.match(/#|\?|$/),
          n = (t && t.index) || e.length,
          s = n - ("/" === e[n - 1] ? 1 : 0);
        return e.slice(0, s) + e.slice(n);
      }
      function y(e) {
        return e && "?" !== e[0] ? "?" + e : e;
      }
      (h.ɵfac = function (e) {
        return new (e || h)(s.Yc(l));
      }),
        (h.ɵprov = Object(s.Ic)({
          factory: m,
          token: h,
          providedIn: "platform",
        })),
        (h.ctorParameters = () => [
          { type: void 0, decorators: [{ type: s.C, args: [l] }] },
        ]);
      class v {}
      function b(e) {
        const t = Object(s.Yc)(l).location;
        return new _(Object(s.Yc)(c), (t && t.origin) || "");
      }
      (v.ɵfac = function (e) {
        return new (e || v)();
      }),
        (v.ɵprov = Object(s.Ic)({ factory: b, token: v, providedIn: "root" }));
      const x = new s.E("appBaseHref");
      class _ extends v {
        constructor(e, t) {
          if (
            (super(),
            (this._platformLocation = e),
            null == t && (t = this._platformLocation.getBaseHrefFromDOM()),
            null == t)
          )
            throw new Error(
              "No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document."
            );
          this._baseHref = t;
        }
        onPopState(e) {
          this._platformLocation.onPopState(e),
            this._platformLocation.onHashChange(e);
        }
        getBaseHref() {
          return this._baseHref;
        }
        prepareExternalUrl(e) {
          return f(this._baseHref, e);
        }
        path(e = !1) {
          const t =
              this._platformLocation.pathname +
              y(this._platformLocation.search),
            n = this._platformLocation.hash;
          return n && e ? `${t}${n}` : t;
        }
        pushState(e, t, n, s) {
          const i = this.prepareExternalUrl(n + y(s));
          this._platformLocation.pushState(e, t, i);
        }
        replaceState(e, t, n, s) {
          const i = this.prepareExternalUrl(n + y(s));
          this._platformLocation.replaceState(e, t, i);
        }
        forward() {
          this._platformLocation.forward();
        }
        back() {
          this._platformLocation.back();
        }
      }
      (_.ɵfac = function (e) {
        return new (e || _)(s.Yc(c), s.Yc(x, 8));
      }),
        (_.ɵprov = s.Ic({ token: _, factory: _.ɵfac })),
        (_.ctorParameters = () => [
          { type: c },
          {
            type: String,
            decorators: [{ type: s.R }, { type: s.C, args: [x] }],
          },
        ]);
      class w extends v {
        constructor(e, t) {
          super(),
            (this._platformLocation = e),
            (this._baseHref = ""),
            null != t && (this._baseHref = t);
        }
        onPopState(e) {
          this._platformLocation.onPopState(e),
            this._platformLocation.onHashChange(e);
        }
        getBaseHref() {
          return this._baseHref;
        }
        path(e = !1) {
          let t = this._platformLocation.hash;
          return null == t && (t = "#"), t.length > 0 ? t.substring(1) : t;
        }
        prepareExternalUrl(e) {
          const t = f(this._baseHref, e);
          return t.length > 0 ? "#" + t : t;
        }
        pushState(e, t, n, s) {
          let i = this.prepareExternalUrl(n + y(s));
          0 == i.length && (i = this._platformLocation.pathname),
            this._platformLocation.pushState(e, t, i);
        }
        replaceState(e, t, n, s) {
          let i = this.prepareExternalUrl(n + y(s));
          0 == i.length && (i = this._platformLocation.pathname),
            this._platformLocation.replaceState(e, t, i);
        }
        forward() {
          this._platformLocation.forward();
        }
        back() {
          this._platformLocation.back();
        }
      }
      (w.ɵfac = function (e) {
        return new (e || w)(s.Yc(c), s.Yc(x, 8));
      }),
        (w.ɵprov = s.Ic({ token: w, factory: w.ɵfac })),
        (w.ctorParameters = () => [
          { type: c },
          {
            type: String,
            decorators: [{ type: s.R }, { type: s.C, args: [x] }],
          },
        ]);
      class C {
        constructor(e, t) {
          (this._subject = new s.x()),
            (this._urlChangeListeners = []),
            (this._platformStrategy = e);
          const n = this._platformStrategy.getBaseHref();
          (this._platformLocation = t),
            (this._baseHref = g(E(n))),
            this._platformStrategy.onPopState((e) => {
              this._subject.emit({
                url: this.path(!0),
                pop: !0,
                state: e.state,
                type: e.type,
              });
            });
        }
        path(e = !1) {
          return this.normalize(this._platformStrategy.path(e));
        }
        getState() {
          return this._platformLocation.getState();
        }
        isCurrentPathEqualTo(e, t = "") {
          return this.path() == this.normalize(e + y(t));
        }
        normalize(e) {
          return C.stripTrailingSlash(
            (function (e, t) {
              return e && t.startsWith(e) ? t.substring(e.length) : t;
            })(this._baseHref, E(e))
          );
        }
        prepareExternalUrl(e) {
          return (
            e && "/" !== e[0] && (e = "/" + e),
            this._platformStrategy.prepareExternalUrl(e)
          );
        }
        go(e, t = "", n = null) {
          this._platformStrategy.pushState(n, "", e, t),
            this._notifyUrlChangeListeners(
              this.prepareExternalUrl(e + y(t)),
              n
            );
        }
        replaceState(e, t = "", n = null) {
          this._platformStrategy.replaceState(n, "", e, t),
            this._notifyUrlChangeListeners(
              this.prepareExternalUrl(e + y(t)),
              n
            );
        }
        forward() {
          this._platformStrategy.forward();
        }
        back() {
          this._platformStrategy.back();
        }
        onUrlChange(e) {
          this._urlChangeListeners.push(e),
            this._urlChangeSubscription ||
              (this._urlChangeSubscription = this.subscribe((e) => {
                this._notifyUrlChangeListeners(e.url, e.state);
              }));
        }
        _notifyUrlChangeListeners(e = "", t) {
          this._urlChangeListeners.forEach((n) => n(e, t));
        }
        subscribe(e, t, n) {
          return this._subject.subscribe({ next: e, error: t, complete: n });
        }
      }
      function S() {
        return new C(Object(s.Yc)(v), Object(s.Yc)(c));
      }
      function E(e) {
        return e.replace(/\/index.html$/, "");
      }
      (C.ɵfac = function (e) {
        return new (e || C)(s.Yc(v), s.Yc(c));
      }),
        (C.normalizeQueryParams = y),
        (C.joinWithSlash = f),
        (C.stripTrailingSlash = g),
        (C.ɵprov = Object(s.Ic)({ factory: S, token: C, providedIn: "root" })),
        (C.ctorParameters = () => [{ type: v }, { type: c }]);
      const k = {
        ADP: [void 0, void 0, 0],
        AFN: [void 0, void 0, 0],
        ALL: [void 0, void 0, 0],
        AMD: [void 0, void 0, 2],
        AOA: [void 0, "Kz"],
        ARS: [void 0, "$"],
        AUD: ["A$", "$"],
        BAM: [void 0, "KM"],
        BBD: [void 0, "$"],
        BDT: [void 0, "\u09f3"],
        BHD: [void 0, void 0, 3],
        BIF: [void 0, void 0, 0],
        BMD: [void 0, "$"],
        BND: [void 0, "$"],
        BOB: [void 0, "Bs"],
        BRL: ["R$"],
        BSD: [void 0, "$"],
        BWP: [void 0, "P"],
        BYN: [void 0, "\u0440.", 2],
        BYR: [void 0, void 0, 0],
        BZD: [void 0, "$"],
        CAD: ["CA$", "$", 2],
        CHF: [void 0, void 0, 2],
        CLF: [void 0, void 0, 4],
        CLP: [void 0, "$", 0],
        CNY: ["CN\xa5", "\xa5"],
        COP: [void 0, "$", 2],
        CRC: [void 0, "\u20a1", 2],
        CUC: [void 0, "$"],
        CUP: [void 0, "$"],
        CZK: [void 0, "K\u010d", 2],
        DJF: [void 0, void 0, 0],
        DKK: [void 0, "kr", 2],
        DOP: [void 0, "$"],
        EGP: [void 0, "E\xa3"],
        ESP: [void 0, "\u20a7", 0],
        EUR: ["\u20ac"],
        FJD: [void 0, "$"],
        FKP: [void 0, "\xa3"],
        GBP: ["\xa3"],
        GEL: [void 0, "\u20be"],
        GIP: [void 0, "\xa3"],
        GNF: [void 0, "FG", 0],
        GTQ: [void 0, "Q"],
        GYD: [void 0, "$", 2],
        HKD: ["HK$", "$"],
        HNL: [void 0, "L"],
        HRK: [void 0, "kn"],
        HUF: [void 0, "Ft", 2],
        IDR: [void 0, "Rp", 2],
        ILS: ["\u20aa"],
        INR: ["\u20b9"],
        IQD: [void 0, void 0, 0],
        IRR: [void 0, void 0, 0],
        ISK: [void 0, "kr", 0],
        ITL: [void 0, void 0, 0],
        JMD: [void 0, "$"],
        JOD: [void 0, void 0, 3],
        JPY: ["\xa5", void 0, 0],
        KHR: [void 0, "\u17db"],
        KMF: [void 0, "CF", 0],
        KPW: [void 0, "\u20a9", 0],
        KRW: ["\u20a9", void 0, 0],
        KWD: [void 0, void 0, 3],
        KYD: [void 0, "$"],
        KZT: [void 0, "\u20b8"],
        LAK: [void 0, "\u20ad", 0],
        LBP: [void 0, "L\xa3", 0],
        LKR: [void 0, "Rs"],
        LRD: [void 0, "$"],
        LTL: [void 0, "Lt"],
        LUF: [void 0, void 0, 0],
        LVL: [void 0, "Ls"],
        LYD: [void 0, void 0, 3],
        MGA: [void 0, "Ar", 0],
        MGF: [void 0, void 0, 0],
        MMK: [void 0, "K", 0],
        MNT: [void 0, "\u20ae", 2],
        MRO: [void 0, void 0, 0],
        MUR: [void 0, "Rs", 2],
        MXN: ["MX$", "$"],
        MYR: [void 0, "RM"],
        NAD: [void 0, "$"],
        NGN: [void 0, "\u20a6"],
        NIO: [void 0, "C$"],
        NOK: [void 0, "kr", 2],
        NPR: [void 0, "Rs"],
        NZD: ["NZ$", "$"],
        OMR: [void 0, void 0, 3],
        PHP: [void 0, "\u20b1"],
        PKR: [void 0, "Rs", 2],
        PLN: [void 0, "z\u0142"],
        PYG: [void 0, "\u20b2", 0],
        RON: [void 0, "lei"],
        RSD: [void 0, void 0, 0],
        RUB: [void 0, "\u20bd"],
        RUR: [void 0, "\u0440."],
        RWF: [void 0, "RF", 0],
        SBD: [void 0, "$"],
        SEK: [void 0, "kr", 2],
        SGD: [void 0, "$"],
        SHP: [void 0, "\xa3"],
        SLL: [void 0, void 0, 0],
        SOS: [void 0, void 0, 0],
        SRD: [void 0, "$"],
        SSP: [void 0, "\xa3"],
        STD: [void 0, void 0, 0],
        STN: [void 0, "Db"],
        SYP: [void 0, "\xa3", 0],
        THB: [void 0, "\u0e3f"],
        TMM: [void 0, void 0, 0],
        TND: [void 0, void 0, 3],
        TOP: [void 0, "T$"],
        TRL: [void 0, void 0, 0],
        TRY: [void 0, "\u20ba"],
        TTD: [void 0, "$"],
        TWD: ["NT$", "$", 2],
        TZS: [void 0, void 0, 2],
        UAH: [void 0, "\u20b4"],
        UGX: [void 0, void 0, 0],
        USD: ["$"],
        UYI: [void 0, void 0, 0],
        UYU: [void 0, "$"],
        UYW: [void 0, void 0, 4],
        UZS: [void 0, void 0, 2],
        VEF: [void 0, "Bs", 2],
        VND: ["\u20ab", void 0, 0],
        VUV: [void 0, void 0, 0],
        XAF: ["FCFA", void 0, 0],
        XCD: ["EC$", "$"],
        XOF: ["CFA", void 0, 0],
        XPF: ["CFPF", void 0, 0],
        XXX: ["\xa4"],
        YER: [void 0, void 0, 0],
        ZAR: [void 0, "R"],
        ZMK: [void 0, void 0, 0],
        ZMW: [void 0, "ZK"],
        ZWD: [void 0, void 0, 0],
      };
      var O, I, T, A, D, M, P;
      function R(e, t, n) {
        const i = Object(s.Sb)(e),
          r = U([i[s.Cb.DayPeriodsFormat], i[s.Cb.DayPeriodsStandalone]], t);
        return U(r, n);
      }
      function j(e, t, n) {
        const i = Object(s.Sb)(e),
          r = U([i[s.Cb.DaysFormat], i[s.Cb.DaysStandalone]], t);
        return U(r, n);
      }
      function N(e, t, n) {
        const i = Object(s.Sb)(e),
          r = U([i[s.Cb.MonthsFormat], i[s.Cb.MonthsStandalone]], t);
        return U(r, n);
      }
      function F(e, t) {
        return U(Object(s.Sb)(e)[s.Cb.DateFormat], t);
      }
      function L(e, t) {
        return U(Object(s.Sb)(e)[s.Cb.TimeFormat], t);
      }
      function V(e, t) {
        return U(Object(s.Sb)(e)[s.Cb.DateTimeFormat], t);
      }
      function B(e, t) {
        const n = Object(s.Sb)(e),
          i = n[s.Cb.NumberSymbols][t];
        if (void 0 === i) {
          if (t === M.CurrencyDecimal) return n[s.Cb.NumberSymbols][M.Decimal];
          if (t === M.CurrencyGroup) return n[s.Cb.NumberSymbols][M.Group];
        }
        return i;
      }
      function z(e, t) {
        return Object(s.Sb)(e)[s.Cb.NumberFormats][t];
      }
      !(function (e) {
        (e[(e.Decimal = 0)] = "Decimal"),
          (e[(e.Percent = 1)] = "Percent"),
          (e[(e.Currency = 2)] = "Currency"),
          (e[(e.Scientific = 3)] = "Scientific");
      })(O || (O = {})),
        (function (e) {
          (e[(e.Zero = 0)] = "Zero"),
            (e[(e.One = 1)] = "One"),
            (e[(e.Two = 2)] = "Two"),
            (e[(e.Few = 3)] = "Few"),
            (e[(e.Many = 4)] = "Many"),
            (e[(e.Other = 5)] = "Other");
        })(I || (I = {})),
        (function (e) {
          (e[(e.Format = 0)] = "Format"),
            (e[(e.Standalone = 1)] = "Standalone");
        })(T || (T = {})),
        (function (e) {
          (e[(e.Narrow = 0)] = "Narrow"),
            (e[(e.Abbreviated = 1)] = "Abbreviated"),
            (e[(e.Wide = 2)] = "Wide"),
            (e[(e.Short = 3)] = "Short");
        })(A || (A = {})),
        (function (e) {
          (e[(e.Short = 0)] = "Short"),
            (e[(e.Medium = 1)] = "Medium"),
            (e[(e.Long = 2)] = "Long"),
            (e[(e.Full = 3)] = "Full");
        })(D || (D = {})),
        (function (e) {
          (e[(e.Decimal = 0)] = "Decimal"),
            (e[(e.Group = 1)] = "Group"),
            (e[(e.List = 2)] = "List"),
            (e[(e.PercentSign = 3)] = "PercentSign"),
            (e[(e.PlusSign = 4)] = "PlusSign"),
            (e[(e.MinusSign = 5)] = "MinusSign"),
            (e[(e.Exponential = 6)] = "Exponential"),
            (e[(e.SuperscriptingExponent = 7)] = "SuperscriptingExponent"),
            (e[(e.PerMille = 8)] = "PerMille"),
            (e[(e[1 / 0] = 9)] = "Infinity"),
            (e[(e.NaN = 10)] = "NaN"),
            (e[(e.TimeSeparator = 11)] = "TimeSeparator"),
            (e[(e.CurrencyDecimal = 12)] = "CurrencyDecimal"),
            (e[(e.CurrencyGroup = 13)] = "CurrencyGroup");
        })(M || (M = {})),
        (function (e) {
          (e[(e.Sunday = 0)] = "Sunday"),
            (e[(e.Monday = 1)] = "Monday"),
            (e[(e.Tuesday = 2)] = "Tuesday"),
            (e[(e.Wednesday = 3)] = "Wednesday"),
            (e[(e.Thursday = 4)] = "Thursday"),
            (e[(e.Friday = 5)] = "Friday"),
            (e[(e.Saturday = 6)] = "Saturday");
        })(P || (P = {}));
      const H = s.Vb;
      function G(e) {
        if (!e[s.Cb.ExtraData])
          throw new Error(
            `Missing extra locale data for the locale "${
              e[s.Cb.LocaleId]
            }". Use "registerLocaleData" to load new data. See the "I18n guide" on angular.io to know more.`
          );
      }
      function U(e, t) {
        for (let n = t; n > -1; n--) if (void 0 !== e[n]) return e[n];
        throw new Error("Locale data API: locale data undefined");
      }
      function $(e) {
        const [t, n] = e.split(":");
        return { hours: +t, minutes: +n };
      }
      function q(e, t, n = "en") {
        const i =
            (function (e) {
              return Object(s.Sb)(e)[s.Cb.Currencies];
            })(n)[e] ||
            k[e] ||
            [],
          r = i[1];
        return "narrow" === t && "string" == typeof r ? r : i[0] || e;
      }
      const W =
          /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/,
        Y = {},
        Q =
          /((?:[^GyYMLwWdEabBhHmsSzZO']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|Y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\s\S]*)/;
      var K, J, X;
      function Z(e, t, n, s) {
        let i = (function (e) {
          if (de(e)) return e;
          if ("number" == typeof e && !isNaN(e)) return new Date(e);
          if ("string" == typeof e) {
            e = e.trim();
            const t = parseFloat(e);
            if (!isNaN(e - t)) return new Date(t);
            if (/^(\d{4}-\d{1,2}-\d{1,2})$/.test(e)) {
              const [t, n, s] = e.split("-").map((e) => +e);
              return new Date(t, n - 1, s);
            }
            let n;
            if ((n = e.match(W)))
              return (function (e) {
                const t = new Date(0);
                let n = 0,
                  s = 0;
                const i = e[8] ? t.setUTCFullYear : t.setFullYear,
                  r = e[8] ? t.setUTCHours : t.setHours;
                e[9] &&
                  ((n = Number(e[9] + e[10])), (s = Number(e[9] + e[11])));
                i.call(t, Number(e[1]), Number(e[2]) - 1, Number(e[3]));
                const o = Number(e[4] || 0) - n,
                  a = Number(e[5] || 0) - s,
                  l = Number(e[6] || 0),
                  c = Math.floor(1e3 * parseFloat("0." + (e[7] || 0)));
                return r.call(t, o, a, l, c), t;
              })(n);
          }
          const t = new Date(e);
          if (!de(t)) throw new Error(`Unable to convert "${e}" into a date`);
          return t;
        })(e);
        t = ee(n, t) || t;
        let r,
          o = [];
        for (; t; ) {
          if (((r = Q.exec(t)), !r)) {
            o.push(t);
            break;
          }
          {
            o = o.concat(r.slice(1));
            const e = o.pop();
            if (!e) break;
            t = e;
          }
        }
        let a = i.getTimezoneOffset();
        s &&
          ((a = ue(s, a)),
          (i = (function (e, t, n) {
            const s = n ? -1 : 1,
              i = e.getTimezoneOffset(),
              r = ue(t, i);
            return (function (e, t) {
              return (
                (e = new Date(e.getTime())).setMinutes(e.getMinutes() + t), e
              );
            })(e, s * (r - i));
          })(i, s, !0)));
        let l = "";
        return (
          o.forEach((e) => {
            const t = (function (e) {
              if (ce[e]) return ce[e];
              let t;
              switch (e) {
                case "G":
                case "GG":
                case "GGG":
                  t = ie(X.Eras, A.Abbreviated);
                  break;
                case "GGGG":
                  t = ie(X.Eras, A.Wide);
                  break;
                case "GGGGG":
                  t = ie(X.Eras, A.Narrow);
                  break;
                case "y":
                  t = se(J.FullYear, 1, 0, !1, !0);
                  break;
                case "yy":
                  t = se(J.FullYear, 2, 0, !0, !0);
                  break;
                case "yyy":
                  t = se(J.FullYear, 3, 0, !1, !0);
                  break;
                case "yyyy":
                  t = se(J.FullYear, 4, 0, !1, !0);
                  break;
                case "Y":
                  t = le(1);
                  break;
                case "YY":
                  t = le(2, !0);
                  break;
                case "YYY":
                  t = le(3);
                  break;
                case "YYYY":
                  t = le(4);
                  break;
                case "M":
                case "L":
                  t = se(J.Month, 1, 1);
                  break;
                case "MM":
                case "LL":
                  t = se(J.Month, 2, 1);
                  break;
                case "MMM":
                  t = ie(X.Months, A.Abbreviated);
                  break;
                case "MMMM":
                  t = ie(X.Months, A.Wide);
                  break;
                case "MMMMM":
                  t = ie(X.Months, A.Narrow);
                  break;
                case "LLL":
                  t = ie(X.Months, A.Abbreviated, T.Standalone);
                  break;
                case "LLLL":
                  t = ie(X.Months, A.Wide, T.Standalone);
                  break;
                case "LLLLL":
                  t = ie(X.Months, A.Narrow, T.Standalone);
                  break;
                case "w":
                  t = ae(1);
                  break;
                case "ww":
                  t = ae(2);
                  break;
                case "W":
                  t = ae(1, !0);
                  break;
                case "d":
                  t = se(J.Date, 1);
                  break;
                case "dd":
                  t = se(J.Date, 2);
                  break;
                case "E":
                case "EE":
                case "EEE":
                  t = ie(X.Days, A.Abbreviated);
                  break;
                case "EEEE":
                  t = ie(X.Days, A.Wide);
                  break;
                case "EEEEE":
                  t = ie(X.Days, A.Narrow);
                  break;
                case "EEEEEE":
                  t = ie(X.Days, A.Short);
                  break;
                case "a":
                case "aa":
                case "aaa":
                  t = ie(X.DayPeriods, A.Abbreviated);
                  break;
                case "aaaa":
                  t = ie(X.DayPeriods, A.Wide);
                  break;
                case "aaaaa":
                  t = ie(X.DayPeriods, A.Narrow);
                  break;
                case "b":
                case "bb":
                case "bbb":
                  t = ie(X.DayPeriods, A.Abbreviated, T.Standalone, !0);
                  break;
                case "bbbb":
                  t = ie(X.DayPeriods, A.Wide, T.Standalone, !0);
                  break;
                case "bbbbb":
                  t = ie(X.DayPeriods, A.Narrow, T.Standalone, !0);
                  break;
                case "B":
                case "BB":
                case "BBB":
                  t = ie(X.DayPeriods, A.Abbreviated, T.Format, !0);
                  break;
                case "BBBB":
                  t = ie(X.DayPeriods, A.Wide, T.Format, !0);
                  break;
                case "BBBBB":
                  t = ie(X.DayPeriods, A.Narrow, T.Format, !0);
                  break;
                case "h":
                  t = se(J.Hours, 1, -12);
                  break;
                case "hh":
                  t = se(J.Hours, 2, -12);
                  break;
                case "H":
                  t = se(J.Hours, 1);
                  break;
                case "HH":
                  t = se(J.Hours, 2);
                  break;
                case "m":
                  t = se(J.Minutes, 1);
                  break;
                case "mm":
                  t = se(J.Minutes, 2);
                  break;
                case "s":
                  t = se(J.Seconds, 1);
                  break;
                case "ss":
                  t = se(J.Seconds, 2);
                  break;
                case "S":
                  t = se(J.FractionalSeconds, 1);
                  break;
                case "SS":
                  t = se(J.FractionalSeconds, 2);
                  break;
                case "SSS":
                  t = se(J.FractionalSeconds, 3);
                  break;
                case "Z":
                case "ZZ":
                case "ZZZ":
                  t = re(K.Short);
                  break;
                case "ZZZZZ":
                  t = re(K.Extended);
                  break;
                case "O":
                case "OO":
                case "OOO":
                case "z":
                case "zz":
                case "zzz":
                  t = re(K.ShortGMT);
                  break;
                case "OOOO":
                case "ZZZZ":
                case "zzzz":
                  t = re(K.Long);
                  break;
                default:
                  return null;
              }
              return (ce[e] = t), t;
            })(e);
            l += t
              ? t(i, n, a)
              : "''" === e
              ? "'"
              : e.replace(/(^'|'$)/g, "").replace(/''/g, "'");
          }),
          l
        );
      }
      function ee(e, t) {
        const n = (function (e) {
          return Object(s.Sb)(e)[s.Cb.LocaleId];
        })(e);
        if (((Y[n] = Y[n] || {}), Y[n][t])) return Y[n][t];
        let i = "";
        switch (t) {
          case "shortDate":
            i = F(e, D.Short);
            break;
          case "mediumDate":
            i = F(e, D.Medium);
            break;
          case "longDate":
            i = F(e, D.Long);
            break;
          case "fullDate":
            i = F(e, D.Full);
            break;
          case "shortTime":
            i = L(e, D.Short);
            break;
          case "mediumTime":
            i = L(e, D.Medium);
            break;
          case "longTime":
            i = L(e, D.Long);
            break;
          case "fullTime":
            i = L(e, D.Full);
            break;
          case "short":
            const t = ee(e, "shortTime"),
              n = ee(e, "shortDate");
            i = te(V(e, D.Short), [t, n]);
            break;
          case "medium":
            const s = ee(e, "mediumTime"),
              r = ee(e, "mediumDate");
            i = te(V(e, D.Medium), [s, r]);
            break;
          case "long":
            const o = ee(e, "longTime"),
              a = ee(e, "longDate");
            i = te(V(e, D.Long), [o, a]);
            break;
          case "full":
            const l = ee(e, "fullTime"),
              c = ee(e, "fullDate");
            i = te(V(e, D.Full), [l, c]);
        }
        return i && (Y[n][t] = i), i;
      }
      function te(e, t) {
        return (
          t &&
            (e = e.replace(/\{([^}]+)}/g, function (e, n) {
              return null != t && n in t ? t[n] : e;
            })),
          e
        );
      }
      function ne(e, t, n = "-", s, i) {
        let r = "";
        (e < 0 || (i && e <= 0)) && (i ? (e = 1 - e) : ((e = -e), (r = n)));
        let o = String(e);
        for (; o.length < t; ) o = "0" + o;
        return s && (o = o.substr(o.length - t)), r + o;
      }
      function se(e, t, n = 0, s = !1, i = !1) {
        return function (r, o) {
          let a = (function (e, t) {
            switch (e) {
              case J.FullYear:
                return t.getFullYear();
              case J.Month:
                return t.getMonth();
              case J.Date:
                return t.getDate();
              case J.Hours:
                return t.getHours();
              case J.Minutes:
                return t.getMinutes();
              case J.Seconds:
                return t.getSeconds();
              case J.FractionalSeconds:
                return t.getMilliseconds();
              case J.Day:
                return t.getDay();
              default:
                throw new Error(`Unknown DateType value "${e}".`);
            }
          })(e, r);
          if (((n > 0 || a > -n) && (a += n), e === J.Hours))
            0 === a && -12 === n && (a = 12);
          else if (e === J.FractionalSeconds)
            return (l = t), ne(a, 3).substr(0, l);
          var l;
          const c = B(o, M.MinusSign);
          return ne(a, t, c, s, i);
        };
      }
      function ie(e, t, n = T.Format, i = !1) {
        return function (r, o) {
          return (function (e, t, n, i, r, o) {
            switch (n) {
              case X.Months:
                return N(t, r, i)[e.getMonth()];
              case X.Days:
                return j(t, r, i)[e.getDay()];
              case X.DayPeriods:
                const a = e.getHours(),
                  l = e.getMinutes();
                if (o) {
                  const e = (function (e) {
                      const t = Object(s.Sb)(e);
                      return (
                        G(t),
                        (t[s.Cb.ExtraData][2] || []).map((e) =>
                          "string" == typeof e ? $(e) : [$(e[0]), $(e[1])]
                        )
                      );
                    })(t),
                    n = (function (e, t, n) {
                      const i = Object(s.Sb)(e);
                      G(i);
                      const r =
                        U([i[s.Cb.ExtraData][0], i[s.Cb.ExtraData][1]], t) ||
                        [];
                      return U(r, n) || [];
                    })(t, r, i),
                    o = e.findIndex((e) => {
                      if (Array.isArray(e)) {
                        const [t, n] = e,
                          s = a >= t.hours && l >= t.minutes,
                          i = a < n.hours || (a === n.hours && l < n.minutes);
                        if (t.hours < n.hours) {
                          if (s && i) return !0;
                        } else if (s || i) return !0;
                      } else if (e.hours === a && e.minutes === l) return !0;
                      return !1;
                    });
                  if (-1 !== o) return n[o];
                }
                return R(t, r, i)[a < 12 ? 0 : 1];
              case X.Eras:
                return (function (e, t) {
                  return U(Object(s.Sb)(e)[s.Cb.Eras], t);
                })(t, i)[e.getFullYear() <= 0 ? 0 : 1];
              default:
                throw new Error("unexpected translation type " + n);
            }
          })(r, o, e, t, n, i);
        };
      }
      function re(e) {
        return function (t, n, s) {
          const i = -1 * s,
            r = B(n, M.MinusSign),
            o = i > 0 ? Math.floor(i / 60) : Math.ceil(i / 60);
          switch (e) {
            case K.Short:
              return (
                (i >= 0 ? "+" : "") + ne(o, 2, r) + ne(Math.abs(i % 60), 2, r)
              );
            case K.ShortGMT:
              return "GMT" + (i >= 0 ? "+" : "") + ne(o, 1, r);
            case K.Long:
              return (
                "GMT" +
                (i >= 0 ? "+" : "") +
                ne(o, 2, r) +
                ":" +
                ne(Math.abs(i % 60), 2, r)
              );
            case K.Extended:
              return 0 === s
                ? "Z"
                : (i >= 0 ? "+" : "") +
                    ne(o, 2, r) +
                    ":" +
                    ne(Math.abs(i % 60), 2, r);
            default:
              throw new Error(`Unknown zone width "${e}"`);
          }
        };
      }
      !(function (e) {
        (e[(e.Short = 0)] = "Short"),
          (e[(e.ShortGMT = 1)] = "ShortGMT"),
          (e[(e.Long = 2)] = "Long"),
          (e[(e.Extended = 3)] = "Extended");
      })(K || (K = {})),
        (function (e) {
          (e[(e.FullYear = 0)] = "FullYear"),
            (e[(e.Month = 1)] = "Month"),
            (e[(e.Date = 2)] = "Date"),
            (e[(e.Hours = 3)] = "Hours"),
            (e[(e.Minutes = 4)] = "Minutes"),
            (e[(e.Seconds = 5)] = "Seconds"),
            (e[(e.FractionalSeconds = 6)] = "FractionalSeconds"),
            (e[(e.Day = 7)] = "Day");
        })(J || (J = {})),
        (function (e) {
          (e[(e.DayPeriods = 0)] = "DayPeriods"),
            (e[(e.Days = 1)] = "Days"),
            (e[(e.Months = 2)] = "Months"),
            (e[(e.Eras = 3)] = "Eras");
        })(X || (X = {}));
      function oe(e) {
        return new Date(
          e.getFullYear(),
          e.getMonth(),
          e.getDate() + (4 - e.getDay())
        );
      }
      function ae(e, t = !1) {
        return function (n, s) {
          let i;
          if (t) {
            const e = new Date(n.getFullYear(), n.getMonth(), 1).getDay() - 1,
              t = n.getDate();
            i = 1 + Math.floor((t + e) / 7);
          } else {
            const e = oe(n),
              t = (function (e) {
                const t = new Date(e, 0, 1).getDay();
                return new Date(e, 0, 1 + (t <= 4 ? 4 : 11) - t);
              })(e.getFullYear()),
              s = e.getTime() - t.getTime();
            i = 1 + Math.round(s / 6048e5);
          }
          return ne(i, e, B(s, M.MinusSign));
        };
      }
      function le(e, t = !1) {
        return function (n, s) {
          return ne(oe(n).getFullYear(), e, B(s, M.MinusSign), t);
        };
      }
      const ce = {};
      function ue(e, t) {
        e = e.replace(/:/g, "");
        const n = Date.parse("Jan 01, 1970 00:00:00 " + e) / 6e4;
        return isNaN(n) ? t : n;
      }
      function de(e) {
        return e instanceof Date && !isNaN(e.valueOf());
      }
      const he = /^(\d+)?\.((\d+)(-(\d+))?)?$/,
        pe = ".",
        me = "0";
      function fe(e, t, n, s, i, r, o = !1) {
        let a = "",
          l = !1;
        if (isFinite(e)) {
          let c = (function (e) {
            let t,
              n,
              s,
              i,
              r,
              o = Math.abs(e) + "",
              a = 0;
            (n = o.indexOf(pe)) > -1 && (o = o.replace(pe, ""));
            (s = o.search(/e/i)) > 0
              ? (n < 0 && (n = s),
                (n += +o.slice(s + 1)),
                (o = o.substring(0, s)))
              : n < 0 && (n = o.length);
            for (s = 0; o.charAt(s) === me; s++);
            if (s === (r = o.length)) (t = [0]), (n = 1);
            else {
              for (r--; o.charAt(r) === me; ) r--;
              for (n -= s, t = [], i = 0; s <= r; s++, i++)
                t[i] = Number(o.charAt(s));
            }
            n > 22 && ((t = t.splice(0, 21)), (a = n - 1), (n = 1));
            return { digits: t, exponent: a, integerLen: n };
          })(e);
          o &&
            (c = (function (e) {
              if (0 === e.digits[0]) return e;
              const t = e.digits.length - e.integerLen;
              e.exponent
                ? (e.exponent += 2)
                : (0 === t ? e.digits.push(0, 0) : 1 === t && e.digits.push(0),
                  (e.integerLen += 2));
              return e;
            })(c));
          let u = t.minInt,
            d = t.minFrac,
            h = t.maxFrac;
          if (r) {
            const e = r.match(he);
            if (null === e) throw new Error(r + " is not a valid digit info");
            const t = e[1],
              n = e[3],
              s = e[5];
            null != t && (u = ve(t)),
              null != n && (d = ve(n)),
              null != s ? (h = ve(s)) : null != n && d > h && (h = d);
          }
          !(function (e, t, n) {
            if (t > n)
              throw new Error(
                `The minimum number of digits after fraction (${t}) is higher than the maximum (${n}).`
              );
            let s = e.digits,
              i = s.length - e.integerLen;
            const r = Math.min(Math.max(t, i), n);
            let o = r + e.integerLen,
              a = s[o];
            if (o > 0) {
              s.splice(Math.max(e.integerLen, o));
              for (let e = o; e < s.length; e++) s[e] = 0;
            } else {
              (i = Math.max(0, i)),
                (e.integerLen = 1),
                (s.length = Math.max(1, (o = r + 1))),
                (s[0] = 0);
              for (let e = 1; e < o; e++) s[e] = 0;
            }
            if (a >= 5)
              if (o - 1 < 0) {
                for (let t = 0; t > o; t--) s.unshift(0), e.integerLen++;
                s.unshift(1), e.integerLen++;
              } else s[o - 1]++;
            for (; i < Math.max(0, r); i++) s.push(0);
            let l = 0 !== r;
            const c = t + e.integerLen,
              u = s.reduceRight(function (e, t, n, s) {
                return (
                  (t += e),
                  (s[n] = t < 10 ? t : t - 10),
                  l && (0 === s[n] && n >= c ? s.pop() : (l = !1)),
                  t >= 10 ? 1 : 0
                );
              }, 0);
            u && (s.unshift(u), e.integerLen++);
          })(c, d, h);
          let p = c.digits,
            m = c.integerLen;
          const f = c.exponent;
          let g = [];
          for (l = p.every((e) => !e); m < u; m++) p.unshift(0);
          for (; m < 0; m++) p.unshift(0);
          m > 0 ? (g = p.splice(m, p.length)) : ((g = p), (p = [0]));
          const y = [];
          for (
            p.length >= t.lgSize &&
            y.unshift(p.splice(-t.lgSize, p.length).join(""));
            p.length > t.gSize;

          )
            y.unshift(p.splice(-t.gSize, p.length).join(""));
          p.length && y.unshift(p.join("")),
            (a = y.join(B(n, s))),
            g.length && (a += B(n, i) + g.join("")),
            f && (a += B(n, M.Exponential) + "+" + f);
        } else a = B(n, M.Infinity);
        return (
          (a = e < 0 && !l ? t.negPre + a + t.negSuf : t.posPre + a + t.posSuf),
          a
        );
      }
      function ge(e, t, n, s, i) {
        const r = ye(z(t, O.Currency), B(t, M.MinusSign));
        (r.minFrac = (function (e) {
          let t;
          const n = k[e];
          return n && (t = n[2]), "number" == typeof t ? t : 2;
        })(s)),
          (r.maxFrac = r.minFrac);
        return fe(e, r, t, M.CurrencyGroup, M.CurrencyDecimal, i)
          .replace("\xa4", n)
          .replace("\xa4", "")
          .trim();
      }
      function ye(e, t = "-") {
        const n = {
            minInt: 1,
            minFrac: 0,
            maxFrac: 0,
            posPre: "",
            posSuf: "",
            negPre: "",
            negSuf: "",
            gSize: 0,
            lgSize: 0,
          },
          s = e.split(";"),
          i = s[0],
          r = s[1],
          o =
            -1 !== i.indexOf(pe)
              ? i.split(pe)
              : [
                  i.substring(0, i.lastIndexOf(me) + 1),
                  i.substring(i.lastIndexOf(me) + 1),
                ],
          a = o[0],
          l = o[1] || "";
        n.posPre = a.substr(0, a.indexOf("#"));
        for (let u = 0; u < l.length; u++) {
          const e = l.charAt(u);
          e === me
            ? (n.minFrac = n.maxFrac = u + 1)
            : "#" === e
            ? (n.maxFrac = u + 1)
            : (n.posSuf += e);
        }
        const c = a.split(",");
        if (
          ((n.gSize = c[1] ? c[1].length : 0),
          (n.lgSize = c[2] || c[1] ? (c[2] || c[1]).length : 0),
          r)
        ) {
          const e = i.length - n.posPre.length - n.posSuf.length,
            t = r.indexOf("#");
          (n.negPre = r.substr(0, t).replace(/'/g, "")),
            (n.negSuf = r.substr(t + e).replace(/'/g, ""));
        } else (n.negPre = t + n.posPre), (n.negSuf = n.posSuf);
        return n;
      }
      function ve(e) {
        const t = parseInt(e);
        if (isNaN(t))
          throw new Error("Invalid integer literal when parsing " + e);
        return t;
      }
      class be {}
      function xe(e, t, n, s) {
        let i = "=" + e;
        if (t.indexOf(i) > -1) return i;
        if (((i = n.getPluralCategory(e, s)), t.indexOf(i) > -1)) return i;
        if (t.indexOf("other") > -1) return "other";
        throw new Error(`No plural message found for value "${e}"`);
      }
      class _e extends be {
        constructor(e) {
          super(), (this.locale = e);
        }
        getPluralCategory(e, t) {
          switch (H(t || this.locale)(e)) {
            case I.Zero:
              return "zero";
            case I.One:
              return "one";
            case I.Two:
              return "two";
            case I.Few:
              return "few";
            case I.Many:
              return "many";
            default:
              return "other";
          }
        }
      }
      function we(e, t) {
        t = encodeURIComponent(t);
        for (const n of e.split(";")) {
          const e = n.indexOf("="),
            [s, i] = -1 == e ? [n, ""] : [n.slice(0, e), n.slice(e + 1)];
          if (s.trim() === t) return decodeURIComponent(i);
        }
        return null;
      }
      (_e.ɵfac = function (e) {
        return new (e || _e)(s.Yc(s.J));
      }),
        (_e.ɵprov = s.Ic({ token: _e, factory: _e.ɵfac })),
        (_e.ctorParameters = () => [
          { type: String, decorators: [{ type: s.C, args: [s.J] }] },
        ]);
      class Ce {
        constructor(e, t, n, s) {
          (this._iterableDiffers = e),
            (this._keyValueDiffers = t),
            (this._ngEl = n),
            (this._renderer = s),
            (this._iterableDiffer = null),
            (this._keyValueDiffer = null),
            (this._initialClasses = []),
            (this._rawClass = null);
        }
        set klass(e) {
          this._removeClasses(this._initialClasses),
            (this._initialClasses = "string" == typeof e ? e.split(/\s+/) : []),
            this._applyClasses(this._initialClasses),
            this._applyClasses(this._rawClass);
        }
        set ngClass(e) {
          this._removeClasses(this._rawClass),
            this._applyClasses(this._initialClasses),
            (this._iterableDiffer = null),
            (this._keyValueDiffer = null),
            (this._rawClass = "string" == typeof e ? e.split(/\s+/) : e),
            this._rawClass &&
              (Object(s.ac)(this._rawClass)
                ? (this._iterableDiffer = this._iterableDiffers
                    .find(this._rawClass)
                    .create())
                : (this._keyValueDiffer = this._keyValueDiffers
                    .find(this._rawClass)
                    .create()));
        }
        ngDoCheck() {
          if (this._iterableDiffer) {
            const e = this._iterableDiffer.diff(this._rawClass);
            e && this._applyIterableChanges(e);
          } else if (this._keyValueDiffer) {
            const e = this._keyValueDiffer.diff(this._rawClass);
            e && this._applyKeyValueChanges(e);
          }
        }
        _applyKeyValueChanges(e) {
          e.forEachAddedItem((e) => this._toggleClass(e.key, e.currentValue)),
            e.forEachChangedItem((e) =>
              this._toggleClass(e.key, e.currentValue)
            ),
            e.forEachRemovedItem((e) => {
              e.previousValue && this._toggleClass(e.key, !1);
            });
        }
        _applyIterableChanges(e) {
          e.forEachAddedItem((e) => {
            if ("string" != typeof e.item)
              throw new Error(
                "NgClass can only toggle CSS classes expressed as strings, got " +
                  Object(s.rc)(e.item)
              );
            this._toggleClass(e.item, !0);
          }),
            e.forEachRemovedItem((e) => this._toggleClass(e.item, !1));
        }
        _applyClasses(e) {
          e &&
            (Array.isArray(e) || e instanceof Set
              ? e.forEach((e) => this._toggleClass(e, !0))
              : Object.keys(e).forEach((t) => this._toggleClass(t, !!e[t])));
        }
        _removeClasses(e) {
          e &&
            (Array.isArray(e) || e instanceof Set
              ? e.forEach((e) => this._toggleClass(e, !1))
              : Object.keys(e).forEach((e) => this._toggleClass(e, !1)));
        }
        _toggleClass(e, t) {
          (e = e.trim()) &&
            e.split(/\s+/g).forEach((e) => {
              t
                ? this._renderer.addClass(this._ngEl.nativeElement, e)
                : this._renderer.removeClass(this._ngEl.nativeElement, e);
            });
        }
      }
      (Ce.ɵfac = function (e) {
        return new (e || Ce)(s.Mc(s.H), s.Mc(s.I), s.Mc(s.v), s.Mc(s.Y));
      }),
        (Ce.ɵdir = s.Hc({
          type: Ce,
          selectors: [["", "ngClass", ""]],
          inputs: { klass: ["class", "klass"], ngClass: "ngClass" },
        })),
        (Ce.ctorParameters = () => [
          { type: s.H },
          { type: s.I },
          { type: s.v },
          { type: s.Y },
        ]),
        (Ce.propDecorators = {
          klass: [{ type: s.G, args: ["class"] }],
          ngClass: [{ type: s.G, args: ["ngClass"] }],
        });
      class Se {
        constructor(e) {
          (this._viewContainerRef = e),
            (this._componentRef = null),
            (this._moduleRef = null);
        }
        ngOnChanges(e) {
          if (
            (this._viewContainerRef.clear(),
            (this._componentRef = null),
            this.ngComponentOutlet)
          ) {
            const t =
              this.ngComponentOutletInjector ||
              this._viewContainerRef.parentInjector;
            if (e.ngComponentOutletNgModuleFactory)
              if (
                (this._moduleRef && this._moduleRef.destroy(),
                this.ngComponentOutletNgModuleFactory)
              ) {
                const e = t.get(s.O);
                this._moduleRef = this.ngComponentOutletNgModuleFactory.create(
                  e.injector
                );
              } else this._moduleRef = null;
            const n = (
              this._moduleRef
                ? this._moduleRef.componentFactoryResolver
                : t.get(s.p)
            ).resolveComponentFactory(this.ngComponentOutlet);
            this._componentRef = this._viewContainerRef.createComponent(
              n,
              this._viewContainerRef.length,
              t,
              this.ngComponentOutletContent
            );
          }
        }
        ngOnDestroy() {
          this._moduleRef && this._moduleRef.destroy();
        }
      }
      (Se.ɵfac = function (e) {
        return new (e || Se)(s.Mc(s.ob));
      }),
        (Se.ɵdir = s.Hc({
          type: Se,
          selectors: [["", "ngComponentOutlet", ""]],
          inputs: {
            ngComponentOutlet: "ngComponentOutlet",
            ngComponentOutletInjector: "ngComponentOutletInjector",
            ngComponentOutletContent: "ngComponentOutletContent",
            ngComponentOutletNgModuleFactory:
              "ngComponentOutletNgModuleFactory",
          },
          features: [s.xc],
        })),
        (Se.ctorParameters = () => [{ type: s.ob }]),
        (Se.propDecorators = {
          ngComponentOutlet: [{ type: s.G }],
          ngComponentOutletInjector: [{ type: s.G }],
          ngComponentOutletContent: [{ type: s.G }],
          ngComponentOutletNgModuleFactory: [{ type: s.G }],
        });
      class Ee {
        constructor(e, t, n, s) {
          (this.$implicit = e),
            (this.ngForOf = t),
            (this.index = n),
            (this.count = s);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      class ke {
        constructor(e, t, n) {
          (this._viewContainer = e),
            (this._template = t),
            (this._differs = n),
            (this._ngForOf = null),
            (this._ngForOfDirty = !0),
            (this._differ = null);
        }
        set ngForOf(e) {
          (this._ngForOf = e), (this._ngForOfDirty = !0);
        }
        set ngForTrackBy(e) {
          Object(s.ub)() &&
            null != e &&
            "function" != typeof e &&
            console &&
            console.warn &&
            console.warn(
              `trackBy must be a function, but received ${JSON.stringify(
                e
              )}. See https://angular.io/api/common/NgForOf#change-propagation for more information.`
            ),
            (this._trackByFn = e);
        }
        get ngForTrackBy() {
          return this._trackByFn;
        }
        set ngForTemplate(e) {
          e && (this._template = e);
        }
        ngDoCheck() {
          if (this._ngForOfDirty) {
            this._ngForOfDirty = !1;
            const n = this._ngForOf;
            if (!this._differ && n)
              try {
                this._differ = this._differs.find(n).create(this.ngForTrackBy);
              } catch (t) {
                throw new Error(
                  `Cannot find a differ supporting object '${n}' of type '${
                    ((e = n), e.name || typeof e)
                  }'. NgFor only supports binding to Iterables such as Arrays.`
                );
              }
          }
          var e;
          if (this._differ) {
            const e = this._differ.diff(this._ngForOf);
            e && this._applyChanges(e);
          }
        }
        _applyChanges(e) {
          const t = [];
          e.forEachOperation((e, n, s) => {
            if (null == e.previousIndex) {
              const n = this._viewContainer.createEmbeddedView(
                  this._template,
                  new Ee(null, this._ngForOf, -1, -1),
                  null === s ? void 0 : s
                ),
                i = new Oe(e, n);
              t.push(i);
            } else if (null == s)
              this._viewContainer.remove(null === n ? void 0 : n);
            else if (null !== n) {
              const i = this._viewContainer.get(n);
              this._viewContainer.move(i, s);
              const r = new Oe(e, i);
              t.push(r);
            }
          });
          for (let n = 0; n < t.length; n++)
            this._perViewChange(t[n].view, t[n].record);
          for (let n = 0, s = this._viewContainer.length; n < s; n++) {
            const e = this._viewContainer.get(n);
            (e.context.index = n),
              (e.context.count = s),
              (e.context.ngForOf = this._ngForOf);
          }
          e.forEachIdentityChange((e) => {
            this._viewContainer.get(e.currentIndex).context.$implicit = e.item;
          });
        }
        _perViewChange(e, t) {
          e.context.$implicit = t.item;
        }
        static ngTemplateContextGuard(e, t) {
          return !0;
        }
      }
      (ke.ɵfac = function (e) {
        return new (e || ke)(s.Mc(s.ob), s.Mc(s.ib), s.Mc(s.H));
      }),
        (ke.ɵdir = s.Hc({
          type: ke,
          selectors: [["", "ngFor", "", "ngForOf", ""]],
          inputs: {
            ngForOf: "ngForOf",
            ngForTrackBy: "ngForTrackBy",
            ngForTemplate: "ngForTemplate",
          },
        })),
        (ke.ctorParameters = () => [
          { type: s.ob },
          { type: s.ib },
          { type: s.H },
        ]),
        (ke.propDecorators = {
          ngForOf: [{ type: s.G }],
          ngForTrackBy: [{ type: s.G }],
          ngForTemplate: [{ type: s.G }],
        });
      class Oe {
        constructor(e, t) {
          (this.record = e), (this.view = t);
        }
      }
      class Ie {
        constructor(e, t) {
          (this._viewContainer = e),
            (this._context = new Te()),
            (this._thenTemplateRef = null),
            (this._elseTemplateRef = null),
            (this._thenViewRef = null),
            (this._elseViewRef = null),
            (this._thenTemplateRef = t);
        }
        set ngIf(e) {
          (this._context.$implicit = this._context.ngIf = e),
            this._updateView();
        }
        set ngIfThen(e) {
          Ae("ngIfThen", e),
            (this._thenTemplateRef = e),
            (this._thenViewRef = null),
            this._updateView();
        }
        set ngIfElse(e) {
          Ae("ngIfElse", e),
            (this._elseTemplateRef = e),
            (this._elseViewRef = null),
            this._updateView();
        }
        _updateView() {
          this._context.$implicit
            ? this._thenViewRef ||
              (this._viewContainer.clear(),
              (this._elseViewRef = null),
              this._thenTemplateRef &&
                (this._thenViewRef = this._viewContainer.createEmbeddedView(
                  this._thenTemplateRef,
                  this._context
                )))
            : this._elseViewRef ||
              (this._viewContainer.clear(),
              (this._thenViewRef = null),
              this._elseTemplateRef &&
                (this._elseViewRef = this._viewContainer.createEmbeddedView(
                  this._elseTemplateRef,
                  this._context
                )));
        }
        static ngTemplateContextGuard(e, t) {
          return !0;
        }
      }
      (Ie.ɵfac = function (e) {
        return new (e || Ie)(s.Mc(s.ob), s.Mc(s.ib));
      }),
        (Ie.ɵdir = s.Hc({
          type: Ie,
          selectors: [["", "ngIf", ""]],
          inputs: { ngIf: "ngIf", ngIfThen: "ngIfThen", ngIfElse: "ngIfElse" },
        })),
        (Ie.ctorParameters = () => [{ type: s.ob }, { type: s.ib }]),
        (Ie.propDecorators = {
          ngIf: [{ type: s.G }],
          ngIfThen: [{ type: s.G }],
          ngIfElse: [{ type: s.G }],
        });
      class Te {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function Ae(e, t) {
        if (!!(t && !t.createEmbeddedView))
          throw new Error(
            `${e} must be a TemplateRef, but received '${Object(s.rc)(t)}'.`
          );
      }
      class De {
        constructor(e, t) {
          (this._viewContainerRef = e),
            (this._templateRef = t),
            (this._created = !1);
        }
        create() {
          (this._created = !0),
            this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(e) {
          e && !this._created
            ? this.create()
            : !e && this._created && this.destroy();
        }
      }
      class Me {
        constructor() {
          (this._defaultUsed = !1),
            (this._caseCount = 0),
            (this._lastCaseCheckIndex = 0),
            (this._lastCasesMatched = !1);
        }
        set ngSwitch(e) {
          (this._ngSwitch = e),
            0 === this._caseCount && this._updateDefaultCases(!0);
        }
        _addCase() {
          return this._caseCount++;
        }
        _addDefault(e) {
          this._defaultViews || (this._defaultViews = []),
            this._defaultViews.push(e);
        }
        _matchCase(e) {
          const t = e == this._ngSwitch;
          return (
            (this._lastCasesMatched = this._lastCasesMatched || t),
            this._lastCaseCheckIndex++,
            this._lastCaseCheckIndex === this._caseCount &&
              (this._updateDefaultCases(!this._lastCasesMatched),
              (this._lastCaseCheckIndex = 0),
              (this._lastCasesMatched = !1)),
            t
          );
        }
        _updateDefaultCases(e) {
          if (this._defaultViews && e !== this._defaultUsed) {
            this._defaultUsed = e;
            for (let t = 0; t < this._defaultViews.length; t++) {
              this._defaultViews[t].enforceState(e);
            }
          }
        }
      }
      (Me.ɵfac = function (e) {
        return new (e || Me)();
      }),
        (Me.ɵdir = s.Hc({
          type: Me,
          selectors: [["", "ngSwitch", ""]],
          inputs: { ngSwitch: "ngSwitch" },
        })),
        (Me.propDecorators = { ngSwitch: [{ type: s.G }] });
      class Pe {
        constructor(e, t, n) {
          (this.ngSwitch = n), n._addCase(), (this._view = new De(e, t));
        }
        ngDoCheck() {
          this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase));
        }
      }
      (Pe.ɵfac = function (e) {
        return new (e || Pe)(s.Mc(s.ob), s.Mc(s.ib), s.Mc(Me, 1));
      }),
        (Pe.ɵdir = s.Hc({
          type: Pe,
          selectors: [["", "ngSwitchCase", ""]],
          inputs: { ngSwitchCase: "ngSwitchCase" },
        })),
        (Pe.ctorParameters = () => [
          { type: s.ob },
          { type: s.ib },
          { type: Me, decorators: [{ type: s.y }] },
        ]),
        (Pe.propDecorators = { ngSwitchCase: [{ type: s.G }] });
      class Re {
        constructor(e, t, n) {
          n._addDefault(new De(e, t));
        }
      }
      (Re.ɵfac = function (e) {
        return new (e || Re)(s.Mc(s.ob), s.Mc(s.ib), s.Mc(Me, 1));
      }),
        (Re.ɵdir = s.Hc({
          type: Re,
          selectors: [["", "ngSwitchDefault", ""]],
        })),
        (Re.ctorParameters = () => [
          { type: s.ob },
          { type: s.ib },
          { type: Me, decorators: [{ type: s.y }] },
        ]);
      class je {
        constructor(e) {
          (this._localization = e), (this._caseViews = {});
        }
        set ngPlural(e) {
          (this._switchValue = e), this._updateView();
        }
        addCase(e, t) {
          this._caseViews[e] = t;
        }
        _updateView() {
          this._clearViews();
          const e = Object.keys(this._caseViews),
            t = xe(this._switchValue, e, this._localization);
          this._activateView(this._caseViews[t]);
        }
        _clearViews() {
          this._activeView && this._activeView.destroy();
        }
        _activateView(e) {
          e && ((this._activeView = e), this._activeView.create());
        }
      }
      (je.ɵfac = function (e) {
        return new (e || je)(s.Mc(be));
      }),
        (je.ɵdir = s.Hc({
          type: je,
          selectors: [["", "ngPlural", ""]],
          inputs: { ngPlural: "ngPlural" },
        })),
        (je.ctorParameters = () => [{ type: be }]),
        (je.propDecorators = { ngPlural: [{ type: s.G }] });
      class Ne {
        constructor(e, t, n, s) {
          this.value = e;
          const i = !isNaN(Number(e));
          s.addCase(i ? "=" + e : e, new De(n, t));
        }
      }
      (Ne.ɵfac = function (e) {
        return new (e || Ne)(
          s.Zc("ngPluralCase"),
          s.Mc(s.ib),
          s.Mc(s.ob),
          s.Mc(je, 1)
        );
      }),
        (Ne.ɵdir = s.Hc({ type: Ne, selectors: [["", "ngPluralCase", ""]] })),
        (Ne.ctorParameters = () => [
          { type: String, decorators: [{ type: s.h, args: ["ngPluralCase"] }] },
          { type: s.ib },
          { type: s.ob },
          { type: je, decorators: [{ type: s.y }] },
        ]);
      class Fe {
        constructor(e, t, n) {
          (this._ngEl = e),
            (this._differs = t),
            (this._renderer = n),
            (this._ngStyle = null),
            (this._differ = null);
        }
        set ngStyle(e) {
          (this._ngStyle = e),
            !this._differ &&
              e &&
              (this._differ = this._differs.find(e).create());
        }
        ngDoCheck() {
          if (this._differ) {
            const e = this._differ.diff(this._ngStyle);
            e && this._applyChanges(e);
          }
        }
        _setStyle(e, t) {
          const [n, s] = e.split(".");
          null != (t = null != t && s ? `${t}${s}` : t)
            ? this._renderer.setStyle(this._ngEl.nativeElement, n, t)
            : this._renderer.removeStyle(this._ngEl.nativeElement, n);
        }
        _applyChanges(e) {
          e.forEachRemovedItem((e) => this._setStyle(e.key, null)),
            e.forEachAddedItem((e) => this._setStyle(e.key, e.currentValue)),
            e.forEachChangedItem((e) => this._setStyle(e.key, e.currentValue));
        }
      }
      (Fe.ɵfac = function (e) {
        return new (e || Fe)(s.Mc(s.v), s.Mc(s.I), s.Mc(s.Y));
      }),
        (Fe.ɵdir = s.Hc({
          type: Fe,
          selectors: [["", "ngStyle", ""]],
          inputs: { ngStyle: "ngStyle" },
        })),
        (Fe.ctorParameters = () => [
          { type: s.v },
          { type: s.I },
          { type: s.Y },
        ]),
        (Fe.propDecorators = { ngStyle: [{ type: s.G, args: ["ngStyle"] }] });
      class Le {
        constructor(e) {
          (this._viewContainerRef = e),
            (this._viewRef = null),
            (this.ngTemplateOutletContext = null),
            (this.ngTemplateOutlet = null);
        }
        ngOnChanges(e) {
          if (this._shouldRecreateView(e)) {
            const e = this._viewContainerRef;
            this._viewRef && e.remove(e.indexOf(this._viewRef)),
              (this._viewRef = this.ngTemplateOutlet
                ? e.createEmbeddedView(
                    this.ngTemplateOutlet,
                    this.ngTemplateOutletContext
                  )
                : null);
          } else
            this._viewRef &&
              this.ngTemplateOutletContext &&
              this._updateExistingContext(this.ngTemplateOutletContext);
        }
        _shouldRecreateView(e) {
          const t = e.ngTemplateOutletContext;
          return !!e.ngTemplateOutlet || (t && this._hasContextShapeChanged(t));
        }
        _hasContextShapeChanged(e) {
          const t = Object.keys(e.previousValue || {}),
            n = Object.keys(e.currentValue || {});
          if (t.length === n.length) {
            for (let e of n) if (-1 === t.indexOf(e)) return !0;
            return !1;
          }
          return !0;
        }
        _updateExistingContext(e) {
          for (let t of Object.keys(e))
            this._viewRef.context[t] = this.ngTemplateOutletContext[t];
        }
      }
      (Le.ɵfac = function (e) {
        return new (e || Le)(s.Mc(s.ob));
      }),
        (Le.ɵdir = s.Hc({
          type: Le,
          selectors: [["", "ngTemplateOutlet", ""]],
          inputs: {
            ngTemplateOutletContext: "ngTemplateOutletContext",
            ngTemplateOutlet: "ngTemplateOutlet",
          },
          features: [s.xc],
        })),
        (Le.ctorParameters = () => [{ type: s.ob }]),
        (Le.propDecorators = {
          ngTemplateOutletContext: [{ type: s.G }],
          ngTemplateOutlet: [{ type: s.G }],
        });
      function Ve(e, t) {
        return Error(
          `InvalidPipeArgument: '${t}' for pipe '${Object(s.rc)(e)}'`
        );
      }
      const Be = new (class {
          createSubscription(e, t) {
            return e.then(t, (e) => {
              throw e;
            });
          }
          dispose(e) {}
          onDestroy(e) {}
        })(),
        ze = new (class {
          createSubscription(e, t) {
            return e.subscribe({
              next: t,
              error: (e) => {
                throw e;
              },
            });
          }
          dispose(e) {
            e.unsubscribe();
          }
          onDestroy(e) {
            e.unsubscribe();
          }
        })();
      class He {
        constructor(e) {
          (this._ref = e),
            (this._latestValue = null),
            (this._subscription = null),
            (this._obj = null),
            (this._strategy = null);
        }
        ngOnDestroy() {
          this._subscription && this._dispose();
        }
        transform(e) {
          return this._obj
            ? e !== this._obj
              ? (this._dispose(), this.transform(e))
              : this._latestValue
            : (e && this._subscribe(e), this._latestValue);
        }
        _subscribe(e) {
          (this._obj = e),
            (this._strategy = this._selectStrategy(e)),
            (this._subscription = this._strategy.createSubscription(e, (t) =>
              this._updateLatestValue(e, t)
            ));
        }
        _selectStrategy(e) {
          if (Object(s.cc)(e)) return Be;
          if (Object(s.bc)(e)) return ze;
          throw Ve(He, e);
        }
        _dispose() {
          this._strategy.dispose(this._subscription),
            (this._latestValue = null),
            (this._subscription = null),
            (this._obj = null);
        }
        _updateLatestValue(e, t) {
          e === this._obj &&
            ((this._latestValue = t), this._ref.markForCheck());
        }
      }
      (He.ɵfac = function (e) {
        return new (e || He)(s.ad());
      }),
        (He.ɵpipe = s.Lc({ name: "async", type: He, pure: !1 })),
        (He.ctorParameters = () => [{ type: s.k }]);
      class Ge {
        transform(e) {
          if (null == e) return null;
          if ("string" != typeof e) throw Ve(Ge, e);
          return e.toLowerCase();
        }
      }
      (Ge.ɵfac = function (e) {
        return new (e || Ge)();
      }),
        (Ge.ɵpipe = s.Lc({ name: "lowercase", type: Ge, pure: !0 }));
      const Ue =
        /(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D])\S*/g;
      class $e {
        transform(e) {
          if (null == e) return null;
          if ("string" != typeof e) throw Ve($e, e);
          return e.replace(
            Ue,
            (e) => e[0].toUpperCase() + e.substr(1).toLowerCase()
          );
        }
      }
      ($e.ɵfac = function (e) {
        return new (e || $e)();
      }),
        ($e.ɵpipe = s.Lc({ name: "titlecase", type: $e, pure: !0 }));
      class qe {
        transform(e) {
          if (null == e) return null;
          if ("string" != typeof e) throw Ve(qe, e);
          return e.toUpperCase();
        }
      }
      (qe.ɵfac = function (e) {
        return new (e || qe)();
      }),
        (qe.ɵpipe = s.Lc({ name: "uppercase", type: qe, pure: !0 }));
      class We {
        constructor(e) {
          this.locale = e;
        }
        transform(e, t = "mediumDate", n, s) {
          if (null == e || "" === e || e != e) return null;
          try {
            return Z(e, t, s || this.locale, n);
          } catch (i) {
            throw Ve(We, i.message);
          }
        }
      }
      (We.ɵfac = function (e) {
        return new (e || We)(s.Mc(s.J));
      }),
        (We.ɵpipe = s.Lc({ name: "date", type: We, pure: !0 })),
        (We.ctorParameters = () => [
          { type: String, decorators: [{ type: s.C, args: [s.J] }] },
        ]);
      const Ye = /#/g;
      class Qe {
        constructor(e) {
          this._localization = e;
        }
        transform(e, t, n) {
          if (null == e) return "";
          if ("object" != typeof t || null === t) throw Ve(Qe, t);
          return t[xe(e, Object.keys(t), this._localization, n)].replace(
            Ye,
            e.toString()
          );
        }
      }
      (Qe.ɵfac = function (e) {
        return new (e || Qe)(s.Mc(be));
      }),
        (Qe.ɵpipe = s.Lc({ name: "i18nPlural", type: Qe, pure: !0 })),
        (Qe.ctorParameters = () => [{ type: be }]);
      class Ke {
        transform(e, t) {
          if (null == e) return "";
          if ("object" != typeof t || "string" != typeof e) throw Ve(Ke, t);
          return t.hasOwnProperty(e)
            ? t[e]
            : t.hasOwnProperty("other")
            ? t.other
            : "";
        }
      }
      (Ke.ɵfac = function (e) {
        return new (e || Ke)();
      }),
        (Ke.ɵpipe = s.Lc({ name: "i18nSelect", type: Ke, pure: !0 }));
      class Je {
        transform(e) {
          return JSON.stringify(e, null, 2);
        }
      }
      (Je.ɵfac = function (e) {
        return new (e || Je)();
      }),
        (Je.ɵpipe = s.Lc({ name: "json", type: Je, pure: !1 }));
      class Xe {
        constructor(e) {
          (this.differs = e), (this.keyValues = []);
        }
        transform(e, t = Ze) {
          if (!e || (!(e instanceof Map) && "object" != typeof e)) return null;
          this.differ || (this.differ = this.differs.find(e).create());
          const n = this.differ.diff(e);
          return (
            n &&
              ((this.keyValues = []),
              n.forEachItem((e) => {
                var t, n;
                this.keyValues.push(
                  ((t = e.key), (n = e.currentValue), { key: t, value: n })
                );
              }),
              this.keyValues.sort(t)),
            this.keyValues
          );
        }
      }
      function Ze(e, t) {
        const n = e.key,
          s = t.key;
        if (n === s) return 0;
        if (void 0 === n) return 1;
        if (void 0 === s) return -1;
        if (null === n) return 1;
        if (null === s) return -1;
        if ("string" == typeof n && "string" == typeof s) return n < s ? -1 : 1;
        if ("number" == typeof n && "number" == typeof s) return n - s;
        if ("boolean" == typeof n && "boolean" == typeof s)
          return n < s ? -1 : 1;
        const i = String(n),
          r = String(s);
        return i == r ? 0 : i < r ? -1 : 1;
      }
      (Xe.ɵfac = function (e) {
        return new (e || Xe)(s.Mc(s.I));
      }),
        (Xe.ɵpipe = s.Lc({ name: "keyvalue", type: Xe, pure: !1 })),
        (Xe.ctorParameters = () => [{ type: s.I }]);
      class et {
        constructor(e) {
          this._locale = e;
        }
        transform(e, t, n) {
          if (!st(e)) return null;
          n = n || this._locale;
          try {
            return (function (e, t, n) {
              return fe(
                e,
                ye(z(t, O.Decimal), B(t, M.MinusSign)),
                t,
                M.Group,
                M.Decimal,
                n
              );
            })(it(e), n, t);
          } catch (s) {
            throw Ve(et, s.message);
          }
        }
      }
      (et.ɵfac = function (e) {
        return new (e || et)(s.Mc(s.J));
      }),
        (et.ɵpipe = s.Lc({ name: "number", type: et, pure: !0 })),
        (et.ctorParameters = () => [
          { type: String, decorators: [{ type: s.C, args: [s.J] }] },
        ]);
      class tt {
        constructor(e) {
          this._locale = e;
        }
        transform(e, t, n) {
          if (!st(e)) return null;
          n = n || this._locale;
          try {
            return (function (e, t, n) {
              return fe(
                e,
                ye(z(t, O.Percent), B(t, M.MinusSign)),
                t,
                M.Group,
                M.Decimal,
                n,
                !0
              ).replace(new RegExp("%", "g"), B(t, M.PercentSign));
            })(it(e), n, t);
          } catch (s) {
            throw Ve(tt, s.message);
          }
        }
      }
      (tt.ɵfac = function (e) {
        return new (e || tt)(s.Mc(s.J));
      }),
        (tt.ɵpipe = s.Lc({ name: "percent", type: tt, pure: !0 })),
        (tt.ctorParameters = () => [
          { type: String, decorators: [{ type: s.C, args: [s.J] }] },
        ]);
      class nt {
        constructor(e, t = "USD") {
          (this._locale = e), (this._defaultCurrencyCode = t);
        }
        transform(e, t, n = "symbol", s, i) {
          if (!st(e)) return null;
          (i = i || this._locale),
            "boolean" == typeof n &&
              (console &&
                console.warn &&
                console.warn(
                  'Warning: the currency pipe has been changed in Angular v5. The symbolDisplay option (third parameter) is now a string instead of a boolean. The accepted values are "code", "symbol" or "symbol-narrow".'
                ),
              (n = n ? "symbol" : "code"));
          let r = t || this._defaultCurrencyCode;
          "code" !== n &&
            (r =
              "symbol" === n || "symbol-narrow" === n
                ? q(r, "symbol" === n ? "wide" : "narrow", i)
                : n);
          try {
            return ge(it(e), i, r, t, s);
          } catch (o) {
            throw Ve(nt, o.message);
          }
        }
      }
      function st(e) {
        return !(null == e || "" === e || e != e);
      }
      function it(e) {
        if ("string" == typeof e && !isNaN(Number(e) - parseFloat(e)))
          return Number(e);
        if ("number" != typeof e) throw new Error(e + " is not a number");
        return e;
      }
      (nt.ɵfac = function (e) {
        return new (e || nt)(s.Mc(s.J), s.Mc(s.t));
      }),
        (nt.ɵpipe = s.Lc({ name: "currency", type: nt, pure: !0 })),
        (nt.ctorParameters = () => [
          { type: String, decorators: [{ type: s.C, args: [s.J] }] },
          { type: String, decorators: [{ type: s.C, args: [s.t] }] },
        ]);
      class rt {
        transform(e, t, n) {
          if (null == e) return null;
          if (!this.supports(e)) throw Ve(rt, e);
          return e.slice(t, n);
        }
        supports(e) {
          return "string" == typeof e || Array.isArray(e);
        }
      }
      (rt.ɵfac = function (e) {
        return new (e || rt)();
      }),
        (rt.ɵpipe = s.Lc({ name: "slice", type: rt, pure: !1 }));
      class ot {}
      (ot.ɵmod = s.Kc({ type: ot })),
        (ot.ɵinj = s.Jc({
          factory: function (e) {
            return new (e || ot)();
          },
          providers: [{ provide: be, useClass: _e }],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          s.wd(ot, {
            declarations: [
              Ce,
              Se,
              ke,
              Ie,
              Le,
              Fe,
              Me,
              Pe,
              Re,
              je,
              Ne,
              He,
              qe,
              Ge,
              Je,
              rt,
              et,
              tt,
              $e,
              nt,
              We,
              Qe,
              Ke,
              Xe,
            ],
            exports: [
              Ce,
              Se,
              ke,
              Ie,
              Le,
              Fe,
              Me,
              Pe,
              Re,
              je,
              Ne,
              He,
              qe,
              Ge,
              Je,
              rt,
              et,
              tt,
              $e,
              nt,
              We,
              Qe,
              Ke,
              Xe,
            ],
          });
      const at = "browser";
      function lt(e) {
        return e === at;
      }
      function ct(e) {
        return "server" === e;
      }
      new s.lb("11.0.2");
      class ut {}
      ut.ɵprov = Object(s.Ic)({
        token: ut,
        providedIn: "root",
        factory: () => new dt(Object(s.Yc)(l), window, Object(s.Yc)(s.w)),
      });
      class dt {
        constructor(e, t, n) {
          (this.document = e),
            (this.window = t),
            (this.errorHandler = n),
            (this.offset = () => [0, 0]);
        }
        setOffset(e) {
          Array.isArray(e) ? (this.offset = () => e) : (this.offset = e);
        }
        getScrollPosition() {
          return this.supportsScrolling()
            ? [this.window.scrollX, this.window.scrollY]
            : [0, 0];
        }
        scrollToPosition(e) {
          this.supportsScrolling() && this.window.scrollTo(e[0], e[1]);
        }
        scrollToAnchor(e) {
          if (this.supportsScrolling()) {
            const t =
              this.document.getElementById(e) ||
              this.document.getElementsByName(e)[0];
            t && this.scrollToElement(t);
          }
        }
        setHistoryScrollRestoration(e) {
          if (this.supportScrollRestoration()) {
            const t = this.window.history;
            t && t.scrollRestoration && (t.scrollRestoration = e);
          }
        }
        scrollToElement(e) {
          const t = e.getBoundingClientRect(),
            n = t.left + this.window.pageXOffset,
            s = t.top + this.window.pageYOffset,
            i = this.offset();
          this.window.scrollTo(n - i[0], s - i[1]);
        }
        supportScrollRestoration() {
          try {
            if (!this.window || !this.window.scrollTo) return !1;
            const e =
              ht(this.window.history) ||
              ht(Object.getPrototypeOf(this.window.history));
            return !(!e || (!e.writable && !e.set));
          } catch (e) {
            return !1;
          }
        }
        supportsScrolling() {
          try {
            return !!this.window.scrollTo;
          } catch (e) {
            return !1;
          }
        }
      }
      function ht(e) {
        return Object.getOwnPropertyDescriptor(e, "scrollRestoration");
      }
    },
    pLZG: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      var s = n("7o/Q");
      function i(e, t) {
        return function (n) {
          return n.lift(new r(e, t));
        };
      }
      class r {
        constructor(e, t) {
          (this.predicate = e), (this.thisArg = t);
        }
        call(e, t) {
          return t.subscribe(new o(e, this.predicate, this.thisArg));
        }
      }
      class o extends s.a {
        constructor(e, t, n) {
          super(e), (this.predicate = t), (this.thisArg = n), (this.count = 0);
        }
        _next(e) {
          let t;
          try {
            t = this.predicate.call(this.thisArg, e, this.count++);
          } catch (n) {
            return void this.destination.error(n);
          }
          t && this.destination.next(e);
        }
      }
    },
    qFsG: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return O;
      });
      var s = n("nLfN"),
        i = n("fXoL"),
        r = n("8LU1"),
        o = n("EY2u"),
        a = n("XNiG"),
        l = n("xgIS"),
        c = n("3UWI"),
        u = n("1G5W"),
        d = n("ofXK");
      const h = Object(s.f)({ passive: !0 });
      class p {
        constructor(e, t) {
          (this._platform = e),
            (this._ngZone = t),
            (this._monitoredElements = new Map());
        }
        monitor(e) {
          if (!this._platform.isBrowser) return o.a;
          const t = Object(r.d)(e),
            n = this._monitoredElements.get(t);
          if (n) return n.subject;
          const s = new a.a(),
            i = "cdk-text-field-autofilled",
            l = (e) => {
              "cdk-text-field-autofill-start" !== e.animationName ||
              t.classList.contains(i)
                ? "cdk-text-field-autofill-end" === e.animationName &&
                  t.classList.contains(i) &&
                  (t.classList.remove(i),
                  this._ngZone.run(() =>
                    s.next({ target: e.target, isAutofilled: !1 })
                  ))
                : (t.classList.add(i),
                  this._ngZone.run(() =>
                    s.next({ target: e.target, isAutofilled: !0 })
                  ));
            };
          return (
            this._ngZone.runOutsideAngular(() => {
              t.addEventListener("animationstart", l, h),
                t.classList.add("cdk-text-field-autofill-monitored");
            }),
            this._monitoredElements.set(t, {
              subject: s,
              unlisten: () => {
                t.removeEventListener("animationstart", l, h);
              },
            }),
            s
          );
        }
        stopMonitoring(e) {
          const t = Object(r.d)(e),
            n = this._monitoredElements.get(t);
          n &&
            (n.unlisten(),
            n.subject.complete(),
            t.classList.remove("cdk-text-field-autofill-monitored"),
            t.classList.remove("cdk-text-field-autofilled"),
            this._monitoredElements.delete(t));
        }
        ngOnDestroy() {
          this._monitoredElements.forEach((e, t) => this.stopMonitoring(t));
        }
      }
      (p.ɵfac = function (e) {
        return new (e || p)(i.Yc(s.a), i.Yc(i.Q));
      }),
        (p.ɵprov = Object(i.Ic)({
          factory: function () {
            return new p(Object(i.Yc)(s.a), Object(i.Yc)(i.Q));
          },
          token: p,
          providedIn: "root",
        })),
        (p.ctorParameters = () => [{ type: s.a }, { type: i.Q }]);
      class m {
        constructor(e, t) {
          (this._elementRef = e),
            (this._autofillMonitor = t),
            (this.cdkAutofill = new i.x());
        }
        ngOnInit() {
          this._autofillMonitor
            .monitor(this._elementRef)
            .subscribe((e) => this.cdkAutofill.emit(e));
        }
        ngOnDestroy() {
          this._autofillMonitor.stopMonitoring(this._elementRef);
        }
      }
      (m.ɵfac = function (e) {
        return new (e || m)(i.Mc(i.v), i.Mc(p));
      }),
        (m.ɵdir = i.Hc({
          type: m,
          selectors: [["", "cdkAutofill", ""]],
          outputs: { cdkAutofill: "cdkAutofill" },
        })),
        (m.ctorParameters = () => [{ type: i.v }, { type: p }]),
        (m.propDecorators = { cdkAutofill: [{ type: i.S }] });
      class f {
        constructor(e, t, n, s) {
          (this._elementRef = e),
            (this._platform = t),
            (this._ngZone = n),
            (this._destroyed = new a.a()),
            (this._enabled = !0),
            (this._previousMinRows = -1),
            (this._document = s),
            (this._textareaElement = this._elementRef.nativeElement),
            (this._measuringClass = t.FIREFOX
              ? "cdk-textarea-autosize-measuring-firefox"
              : "cdk-textarea-autosize-measuring");
        }
        get minRows() {
          return this._minRows;
        }
        set minRows(e) {
          (this._minRows = Object(r.e)(e)), this._setMinHeight();
        }
        get maxRows() {
          return this._maxRows;
        }
        set maxRows(e) {
          (this._maxRows = Object(r.e)(e)), this._setMaxHeight();
        }
        get enabled() {
          return this._enabled;
        }
        set enabled(e) {
          (e = Object(r.b)(e)),
            this._enabled !== e &&
              ((this._enabled = e)
                ? this.resizeToFitContent(!0)
                : this.reset());
        }
        _setMinHeight() {
          const e =
            this.minRows && this._cachedLineHeight
              ? this.minRows * this._cachedLineHeight + "px"
              : null;
          e && (this._textareaElement.style.minHeight = e);
        }
        _setMaxHeight() {
          const e =
            this.maxRows && this._cachedLineHeight
              ? this.maxRows * this._cachedLineHeight + "px"
              : null;
          e && (this._textareaElement.style.maxHeight = e);
        }
        ngAfterViewInit() {
          this._platform.isBrowser &&
            ((this._initialHeight = this._textareaElement.style.height),
            this.resizeToFitContent(),
            this._ngZone.runOutsideAngular(() => {
              const e = this._getWindow();
              Object(l.a)(e, "resize")
                .pipe(Object(c.a)(16), Object(u.a)(this._destroyed))
                .subscribe(() => this.resizeToFitContent(!0));
            }));
        }
        ngOnDestroy() {
          this._destroyed.next(), this._destroyed.complete();
        }
        _cacheTextareaLineHeight() {
          if (this._cachedLineHeight) return;
          let e = this._textareaElement.cloneNode(!1);
          (e.rows = 1),
            (e.style.position = "absolute"),
            (e.style.visibility = "hidden"),
            (e.style.border = "none"),
            (e.style.padding = "0"),
            (e.style.height = ""),
            (e.style.minHeight = ""),
            (e.style.maxHeight = ""),
            (e.style.overflow = "hidden"),
            this._textareaElement.parentNode.appendChild(e),
            (this._cachedLineHeight = e.clientHeight),
            this._textareaElement.parentNode.removeChild(e),
            this._setMinHeight(),
            this._setMaxHeight();
        }
        ngDoCheck() {
          this._platform.isBrowser && this.resizeToFitContent();
        }
        resizeToFitContent(e = !1) {
          if (!this._enabled) return;
          if ((this._cacheTextareaLineHeight(), !this._cachedLineHeight))
            return;
          const t = this._elementRef.nativeElement,
            n = t.value;
          if (
            !e &&
            this._minRows === this._previousMinRows &&
            n === this._previousValue
          )
            return;
          const s = t.placeholder;
          t.classList.add(this._measuringClass), (t.placeholder = "");
          const i = t.scrollHeight - 4;
          (t.style.height = i + "px"),
            t.classList.remove(this._measuringClass),
            (t.placeholder = s),
            this._ngZone.runOutsideAngular(() => {
              "undefined" != typeof requestAnimationFrame
                ? requestAnimationFrame(() => this._scrollToCaretPosition(t))
                : setTimeout(() => this._scrollToCaretPosition(t));
            }),
            (this._previousValue = n),
            (this._previousMinRows = this._minRows);
        }
        reset() {
          void 0 !== this._initialHeight &&
            (this._textareaElement.style.height = this._initialHeight);
        }
        _noopInputHandler() {}
        _getDocument() {
          return this._document || document;
        }
        _getWindow() {
          return this._getDocument().defaultView || window;
        }
        _scrollToCaretPosition(e) {
          const { selectionStart: t, selectionEnd: n } = e,
            s = this._getDocument();
          this._destroyed.isStopped ||
            s.activeElement !== e ||
            e.setSelectionRange(t, n);
        }
      }
      (f.ɵfac = function (e) {
        return new (e || f)(i.Mc(i.v), i.Mc(s.a), i.Mc(i.Q), i.Mc(d.c, 8));
      }),
        (f.ɵdir = i.Hc({
          type: f,
          selectors: [["textarea", "cdkTextareaAutosize", ""]],
          hostAttrs: ["rows", "1", 1, "cdk-textarea-autosize"],
          hostBindings: function (e, t) {
            1 & e &&
              i.cd("input", function () {
                return t._noopInputHandler();
              });
          },
          inputs: {
            minRows: ["cdkAutosizeMinRows", "minRows"],
            maxRows: ["cdkAutosizeMaxRows", "maxRows"],
            enabled: ["cdkTextareaAutosize", "enabled"],
          },
          exportAs: ["cdkTextareaAutosize"],
        })),
        (f.ctorParameters = () => [
          { type: i.v },
          { type: s.a },
          { type: i.Q },
          {
            type: void 0,
            decorators: [{ type: i.R }, { type: i.C, args: [d.c] }],
          },
        ]),
        (f.propDecorators = {
          minRows: [{ type: i.G, args: ["cdkAutosizeMinRows"] }],
          maxRows: [{ type: i.G, args: ["cdkAutosizeMaxRows"] }],
          enabled: [{ type: i.G, args: ["cdkTextareaAutosize"] }],
          _noopInputHandler: [{ type: i.A, args: ["input"] }],
        });
      class g {}
      (g.ɵmod = i.Kc({ type: g })),
        (g.ɵinj = i.Jc({
          factory: function (e) {
            return new (e || g)();
          },
          imports: [[s.b]],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          i.wd(g, {
            declarations: function () {
              return [m, f];
            },
            imports: function () {
              return [s.b];
            },
            exports: function () {
              return [m, f];
            },
          });
      var y = n("3Pt+"),
        v = n("FKr1"),
        b = n("kmnG");
      class x extends f {
        get matAutosizeMinRows() {
          return this.minRows;
        }
        set matAutosizeMinRows(e) {
          this.minRows = e;
        }
        get matAutosizeMaxRows() {
          return this.maxRows;
        }
        set matAutosizeMaxRows(e) {
          this.maxRows = e;
        }
        get matAutosize() {
          return this.enabled;
        }
        set matAutosize(e) {
          this.enabled = e;
        }
        get matTextareaAutosize() {
          return this.enabled;
        }
        set matTextareaAutosize(e) {
          this.enabled = e;
        }
      }
      (x.ɵfac = function (e) {
        return _(e || x);
      }),
        (x.ɵdir = i.Hc({
          type: x,
          selectors: [
            ["textarea", "mat-autosize", ""],
            ["textarea", "matTextareaAutosize", ""],
          ],
          hostAttrs: ["rows", "1", 1, "cdk-textarea-autosize", "mat-autosize"],
          inputs: {
            cdkAutosizeMinRows: "cdkAutosizeMinRows",
            cdkAutosizeMaxRows: "cdkAutosizeMaxRows",
            matAutosizeMinRows: "matAutosizeMinRows",
            matAutosizeMaxRows: "matAutosizeMaxRows",
            matAutosize: ["mat-autosize", "matAutosize"],
            matTextareaAutosize: "matTextareaAutosize",
          },
          exportAs: ["matTextareaAutosize"],
          features: [i.wc],
        })),
        (x.propDecorators = {
          matAutosizeMinRows: [{ type: i.G }],
          matAutosizeMaxRows: [{ type: i.G }],
          matAutosize: [{ type: i.G, args: ["mat-autosize"] }],
          matTextareaAutosize: [{ type: i.G }],
        });
      const _ = i.Tc(x);
      const w = new i.E("MAT_INPUT_VALUE_ACCESSOR"),
        C = [
          "button",
          "checkbox",
          "file",
          "hidden",
          "image",
          "radio",
          "range",
          "reset",
          "submit",
        ];
      let S = 0;
      const E = Object(v.n)(
        class {
          constructor(e, t, n, s) {
            (this._defaultErrorStateMatcher = e),
              (this._parentForm = t),
              (this._parentFormGroup = n),
              (this.ngControl = s);
          }
        }
      );
      class k extends E {
        constructor(e, t, n, i, r, o, l, c, u, d) {
          super(o, i, r, n),
            (this._elementRef = e),
            (this._platform = t),
            (this.ngControl = n),
            (this._autofillMonitor = c),
            (this._formField = d),
            (this._uid = "mat-input-" + S++),
            (this.focused = !1),
            (this.stateChanges = new a.a()),
            (this.controlType = "mat-input"),
            (this.autofilled = !1),
            (this._disabled = !1),
            (this._required = !1),
            (this._type = "text"),
            (this._readonly = !1),
            (this._neverEmptyInputTypes = [
              "date",
              "datetime",
              "datetime-local",
              "month",
              "time",
              "week",
            ].filter((e) => Object(s.e)().has(e)));
          const h = this._elementRef.nativeElement,
            p = h.nodeName.toLowerCase();
          (this._inputValueAccessor = l || h),
            (this._previousNativeValue = this.value),
            (this.id = this.id),
            t.IOS &&
              u.runOutsideAngular(() => {
                e.nativeElement.addEventListener("keyup", (e) => {
                  let t = e.target;
                  t.value ||
                    t.selectionStart ||
                    t.selectionEnd ||
                    (t.setSelectionRange(1, 1), t.setSelectionRange(0, 0));
                });
              }),
            (this._isServer = !this._platform.isBrowser),
            (this._isNativeSelect = "select" === p),
            (this._isTextarea = "textarea" === p),
            this._isNativeSelect &&
              (this.controlType = h.multiple
                ? "mat-native-select-multiple"
                : "mat-native-select");
        }
        get disabled() {
          return this.ngControl && null !== this.ngControl.disabled
            ? this.ngControl.disabled
            : this._disabled;
        }
        set disabled(e) {
          (this._disabled = Object(r.b)(e)),
            this.focused && ((this.focused = !1), this.stateChanges.next());
        }
        get id() {
          return this._id;
        }
        set id(e) {
          this._id = e || this._uid;
        }
        get required() {
          return this._required;
        }
        set required(e) {
          this._required = Object(r.b)(e);
        }
        get type() {
          return this._type;
        }
        set type(e) {
          (this._type = e || "text"),
            this._validateType(),
            !this._isTextarea &&
              Object(s.e)().has(this._type) &&
              (this._elementRef.nativeElement.type = this._type);
        }
        get value() {
          return this._inputValueAccessor.value;
        }
        set value(e) {
          e !== this.value &&
            ((this._inputValueAccessor.value = e), this.stateChanges.next());
        }
        get readonly() {
          return this._readonly;
        }
        set readonly(e) {
          this._readonly = Object(r.b)(e);
        }
        ngAfterViewInit() {
          this._platform.isBrowser &&
            this._autofillMonitor
              .monitor(this._elementRef.nativeElement)
              .subscribe((e) => {
                (this.autofilled = e.isAutofilled), this.stateChanges.next();
              });
        }
        ngOnChanges() {
          this.stateChanges.next();
        }
        ngOnDestroy() {
          this.stateChanges.complete(),
            this._platform.isBrowser &&
              this._autofillMonitor.stopMonitoring(
                this._elementRef.nativeElement
              );
        }
        ngDoCheck() {
          this.ngControl && this.updateErrorState(),
            this._dirtyCheckNativeValue(),
            this._dirtyCheckPlaceholder();
        }
        focus(e) {
          this._elementRef.nativeElement.focus(e);
        }
        _focusChanged(e) {
          e === this.focused ||
            (this.readonly && e) ||
            ((this.focused = e), this.stateChanges.next());
        }
        _onInput() {}
        _dirtyCheckPlaceholder() {
          var e, t;
          const n = (
            null ===
              (t =
                null === (e = this._formField) || void 0 === e
                  ? void 0
                  : e._hideControlPlaceholder) || void 0 === t
              ? void 0
              : t.call(e)
          )
            ? null
            : this.placeholder;
          if (n !== this._previousPlaceholder) {
            const e = this._elementRef.nativeElement;
            (this._previousPlaceholder = n),
              n
                ? e.setAttribute("placeholder", n)
                : e.removeAttribute("placeholder");
          }
        }
        _dirtyCheckNativeValue() {
          const e = this._elementRef.nativeElement.value;
          this._previousNativeValue !== e &&
            ((this._previousNativeValue = e), this.stateChanges.next());
        }
        _validateType() {
          C.indexOf(this._type);
        }
        _isNeverEmpty() {
          return this._neverEmptyInputTypes.indexOf(this._type) > -1;
        }
        _isBadInput() {
          let e = this._elementRef.nativeElement.validity;
          return e && e.badInput;
        }
        get empty() {
          return !(
            this._isNeverEmpty() ||
            this._elementRef.nativeElement.value ||
            this._isBadInput() ||
            this.autofilled
          );
        }
        get shouldLabelFloat() {
          if (this._isNativeSelect) {
            const e = this._elementRef.nativeElement,
              t = e.options[0];
            return (
              this.focused ||
              e.multiple ||
              !this.empty ||
              !!(e.selectedIndex > -1 && t && t.label)
            );
          }
          return this.focused || !this.empty;
        }
        setDescribedByIds(e) {
          e.length
            ? this._elementRef.nativeElement.setAttribute(
                "aria-describedby",
                e.join(" ")
              )
            : this._elementRef.nativeElement.removeAttribute(
                "aria-describedby"
              );
        }
        onContainerClick() {
          this.focused || this.focus();
        }
      }
      (k.ɵfac = function (e) {
        return new (e || k)(
          i.Mc(i.v),
          i.Mc(s.a),
          i.Mc(y.i, 10),
          i.Mc(y.j, 8),
          i.Mc(y.e, 8),
          i.Mc(v.a),
          i.Mc(w, 10),
          i.Mc(p),
          i.Mc(i.Q),
          i.Mc(b.a, 8)
        );
      }),
        (k.ɵdir = i.Hc({
          type: k,
          selectors: [
            ["input", "matInput", ""],
            ["textarea", "matInput", ""],
            ["select", "matNativeControl", ""],
            ["input", "matNativeControl", ""],
            ["textarea", "matNativeControl", ""],
          ],
          hostAttrs: [
            1,
            "mat-input-element",
            "mat-form-field-autofill-control",
          ],
          hostVars: 9,
          hostBindings: function (e, t) {
            1 & e &&
              i.cd("focus", function () {
                return t._focusChanged(!0);
              })("blur", function () {
                return t._focusChanged(!1);
              })("input", function () {
                return t._onInput();
              }),
              2 & e &&
                (i.Uc("disabled", t.disabled)("required", t.required),
                i.Ac("id", t.id)("data-placeholder", t.placeholder)(
                  "readonly",
                  (t.readonly && !t._isNativeSelect) || null
                )("aria-invalid", t.errorState)(
                  "aria-required",
                  t.required.toString()
                ),
                i.Ec("mat-input-server", t._isServer));
          },
          inputs: {
            id: "id",
            disabled: "disabled",
            required: "required",
            type: "type",
            value: "value",
            readonly: "readonly",
            placeholder: "placeholder",
            errorStateMatcher: "errorStateMatcher",
            userAriaDescribedBy: ["aria-describedby", "userAriaDescribedBy"],
          },
          exportAs: ["matInput"],
          features: [i.yc([{ provide: b.c, useExisting: k }]), i.wc, i.xc],
        })),
        (k.ctorParameters = () => [
          { type: i.v },
          { type: s.a },
          { type: y.i, decorators: [{ type: i.R }, { type: i.db }] },
          { type: y.j, decorators: [{ type: i.R }] },
          { type: y.e, decorators: [{ type: i.R }] },
          { type: v.a },
          {
            type: void 0,
            decorators: [
              { type: i.R },
              { type: i.db },
              { type: i.C, args: [w] },
            ],
          },
          { type: p },
          { type: i.Q },
          {
            type: b.b,
            decorators: [{ type: i.R }, { type: i.C, args: [b.a] }],
          },
        ]),
        (k.propDecorators = {
          disabled: [{ type: i.G }],
          id: [{ type: i.G }],
          placeholder: [{ type: i.G }],
          required: [{ type: i.G }],
          type: [{ type: i.G }],
          errorStateMatcher: [{ type: i.G }],
          userAriaDescribedBy: [{ type: i.G, args: ["aria-describedby"] }],
          value: [{ type: i.G }],
          readonly: [{ type: i.G }],
          _focusChanged: [
            { type: i.A, args: ["focus", ["true"]] },
            { type: i.A, args: ["blur", ["false"]] },
          ],
          _onInput: [{ type: i.A, args: ["input"] }],
        });
      class O {}
      (O.ɵmod = i.Kc({ type: O })),
        (O.ɵinj = i.Jc({
          factory: function (e) {
            return new (e || O)();
          },
          providers: [v.a],
          imports: [[g, b.d], g, b.d],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          i.wd(O, {
            declarations: function () {
              return [k, x];
            },
            imports: function () {
              return [g, b.d];
            },
            exports: function () {
              return [g, b.d, k, x];
            },
          });
    },
    quSY: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return a;
      });
      var s = n("DH7j"),
        i = n("XoHu"),
        r = n("n6bG");
      const o = (() => {
        function e(e) {
          return (
            Error.call(this),
            (this.message = e
              ? `${e.length} errors occurred during unsubscription:\n${e
                  .map((e, t) => `${t + 1}) ${e.toString()}`)
                  .join("\n  ")}`
              : ""),
            (this.name = "UnsubscriptionError"),
            (this.errors = e),
            this
          );
        }
        return (e.prototype = Object.create(Error.prototype)), e;
      })();
      class a {
        constructor(e) {
          (this.closed = !1),
            (this._parentOrParents = null),
            (this._subscriptions = null),
            e && ((this._ctorUnsubscribe = !0), (this._unsubscribe = e));
        }
        unsubscribe() {
          let e;
          if (this.closed) return;
          let {
            _parentOrParents: t,
            _ctorUnsubscribe: n,
            _unsubscribe: l,
            _subscriptions: u,
          } = this;
          if (
            ((this.closed = !0),
            (this._parentOrParents = null),
            (this._subscriptions = null),
            t instanceof a)
          )
            t.remove(this);
          else if (null !== t)
            for (let s = 0; s < t.length; ++s) {
              t[s].remove(this);
            }
          if (Object(r.a)(l)) {
            n && (this._unsubscribe = void 0);
            try {
              l.call(this);
            } catch (d) {
              e = d instanceof o ? c(d.errors) : [d];
            }
          }
          if (Object(s.a)(u)) {
            let t = -1,
              n = u.length;
            for (; ++t < n; ) {
              const n = u[t];
              if (Object(i.a)(n))
                try {
                  n.unsubscribe();
                } catch (d) {
                  (e = e || []),
                    d instanceof o ? (e = e.concat(c(d.errors))) : e.push(d);
                }
            }
          }
          if (e) throw new o(e);
        }
        add(e) {
          let t = e;
          if (!e) return a.EMPTY;
          switch (typeof e) {
            case "function":
              t = new a(e);
            case "object":
              if (t === this || t.closed || "function" != typeof t.unsubscribe)
                return t;
              if (this.closed) return t.unsubscribe(), t;
              if (!(t instanceof a)) {
                const e = t;
                (t = new a()), (t._subscriptions = [e]);
              }
              break;
            default:
              throw new Error(
                "unrecognized teardown " + e + " added to Subscription."
              );
          }
          let { _parentOrParents: n } = t;
          if (null === n) t._parentOrParents = this;
          else if (n instanceof a) {
            if (n === this) return t;
            t._parentOrParents = [n, this];
          } else {
            if (-1 !== n.indexOf(this)) return t;
            n.push(this);
          }
          const s = this._subscriptions;
          return null === s ? (this._subscriptions = [t]) : s.push(t), t;
        }
        remove(e) {
          const t = this._subscriptions;
          if (t) {
            const n = t.indexOf(e);
            -1 !== n && t.splice(n, 1);
          }
        }
      }
      var l;
      function c(e) {
        return e.reduce((e, t) => e.concat(t instanceof o ? t.errors : t), []);
      }
      a.EMPTY = (((l = new a()).closed = !0), l);
    },
    rDax: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return K;
      }),
        n.d(t, "b", function () {
          return Q;
        }),
        n.d(t, "c", function () {
          return q;
        }),
        n.d(t, "d", function () {
          return k;
        }),
        n.d(t, "e", function () {
          return R;
        }),
        n.d(t, "f", function () {
          return X;
        });
      var s = n("vxfF"),
        i = n("fXoL"),
        r = n("nLfN"),
        o = n("cH1L"),
        a = n("ofXK"),
        l = n("8LU1"),
        c = n("+rOU"),
        u = n("XNiG"),
        d = n("quSY"),
        h = n("VRyK"),
        p = n("IzEk"),
        m = n("1G5W"),
        f = n("7o/Q");
      class g {
        constructor(e, t) {
          (this.predicate = e), (this.inclusive = t);
        }
        call(e, t) {
          return t.subscribe(new y(e, this.predicate, this.inclusive));
        }
      }
      class y extends f.a {
        constructor(e, t, n) {
          super(e),
            (this.predicate = t),
            (this.inclusive = n),
            (this.index = 0);
        }
        _next(e) {
          const t = this.destination;
          let n;
          try {
            n = this.predicate(e, this.index++);
          } catch (s) {
            return void t.error(s);
          }
          this.nextOrComplete(e, n);
        }
        nextOrComplete(e, t) {
          const n = this.destination;
          Boolean(t) ? n.next(e) : (this.inclusive && n.next(e), n.complete());
        }
      }
      var v = n("FtGj");
      class b {
        constructor(e, t) {
          (this._viewportRuler = e),
            (this._previousHTMLStyles = { top: "", left: "" }),
            (this._isEnabled = !1),
            (this._document = t);
        }
        attach() {}
        enable() {
          if (this._canBeEnabled()) {
            const e = this._document.documentElement;
            (this._previousScrollPosition =
              this._viewportRuler.getViewportScrollPosition()),
              (this._previousHTMLStyles.left = e.style.left || ""),
              (this._previousHTMLStyles.top = e.style.top || ""),
              (e.style.left = Object(l.c)(-this._previousScrollPosition.left)),
              (e.style.top = Object(l.c)(-this._previousScrollPosition.top)),
              e.classList.add("cdk-global-scrollblock"),
              (this._isEnabled = !0);
          }
        }
        disable() {
          if (this._isEnabled) {
            const e = this._document.documentElement,
              t = this._document.body,
              n = e.style,
              s = t.style,
              i = n.scrollBehavior || "",
              r = s.scrollBehavior || "";
            (this._isEnabled = !1),
              (n.left = this._previousHTMLStyles.left),
              (n.top = this._previousHTMLStyles.top),
              e.classList.remove("cdk-global-scrollblock"),
              (n.scrollBehavior = s.scrollBehavior = "auto"),
              window.scroll(
                this._previousScrollPosition.left,
                this._previousScrollPosition.top
              ),
              (n.scrollBehavior = i),
              (s.scrollBehavior = r);
          }
        }
        _canBeEnabled() {
          if (
            this._document.documentElement.classList.contains(
              "cdk-global-scrollblock"
            ) ||
            this._isEnabled
          )
            return !1;
          const e = this._document.body,
            t = this._viewportRuler.getViewportSize();
          return e.scrollHeight > t.height || e.scrollWidth > t.width;
        }
      }
      class x {
        constructor(e, t, n, s) {
          (this._scrollDispatcher = e),
            (this._ngZone = t),
            (this._viewportRuler = n),
            (this._config = s),
            (this._scrollSubscription = null),
            (this._detach = () => {
              this.disable(),
                this._overlayRef.hasAttached() &&
                  this._ngZone.run(() => this._overlayRef.detach());
            });
        }
        attach(e) {
          this._overlayRef, (this._overlayRef = e);
        }
        enable() {
          if (this._scrollSubscription) return;
          const e = this._scrollDispatcher.scrolled(0);
          this._config && this._config.threshold && this._config.threshold > 1
            ? ((this._initialScrollPosition =
                this._viewportRuler.getViewportScrollPosition().top),
              (this._scrollSubscription = e.subscribe(() => {
                const e = this._viewportRuler.getViewportScrollPosition().top;
                Math.abs(e - this._initialScrollPosition) >
                this._config.threshold
                  ? this._detach()
                  : this._overlayRef.updatePosition();
              })))
            : (this._scrollSubscription = e.subscribe(this._detach));
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class _ {
        enable() {}
        disable() {}
        attach() {}
      }
      function w(e, t) {
        return t.some((t) => {
          const n = e.bottom < t.top,
            s = e.top > t.bottom,
            i = e.right < t.left,
            r = e.left > t.right;
          return n || s || i || r;
        });
      }
      function C(e, t) {
        return t.some((t) => {
          const n = e.top < t.top,
            s = e.bottom > t.bottom,
            i = e.left < t.left,
            r = e.right > t.right;
          return n || s || i || r;
        });
      }
      class S {
        constructor(e, t, n, s) {
          (this._scrollDispatcher = e),
            (this._viewportRuler = t),
            (this._ngZone = n),
            (this._config = s),
            (this._scrollSubscription = null);
        }
        attach(e) {
          this._overlayRef, (this._overlayRef = e);
        }
        enable() {
          if (!this._scrollSubscription) {
            const e = this._config ? this._config.scrollThrottle : 0;
            this._scrollSubscription = this._scrollDispatcher
              .scrolled(e)
              .subscribe(() => {
                if (
                  (this._overlayRef.updatePosition(),
                  this._config && this._config.autoClose)
                ) {
                  const e =
                      this._overlayRef.overlayElement.getBoundingClientRect(),
                    { width: t, height: n } =
                      this._viewportRuler.getViewportSize();
                  w(e, [
                    {
                      width: t,
                      height: n,
                      bottom: n,
                      right: t,
                      top: 0,
                      left: 0,
                    },
                  ]) &&
                    (this.disable(),
                    this._ngZone.run(() => this._overlayRef.detach()));
                }
              });
          }
        }
        disable() {
          this._scrollSubscription &&
            (this._scrollSubscription.unsubscribe(),
            (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class E {
        constructor(e, t, n, s) {
          (this._scrollDispatcher = e),
            (this._viewportRuler = t),
            (this._ngZone = n),
            (this.noop = () => new _()),
            (this.close = (e) =>
              new x(
                this._scrollDispatcher,
                this._ngZone,
                this._viewportRuler,
                e
              )),
            (this.block = () => new b(this._viewportRuler, this._document)),
            (this.reposition = (e) =>
              new S(
                this._scrollDispatcher,
                this._viewportRuler,
                this._ngZone,
                e
              )),
            (this._document = s);
        }
      }
      (E.ɵfac = function (e) {
        return new (e || E)(i.Yc(s.c), i.Yc(s.e), i.Yc(i.Q), i.Yc(a.c));
      }),
        (E.ɵprov = Object(i.Ic)({
          factory: function () {
            return new E(
              Object(i.Yc)(s.c),
              Object(i.Yc)(s.e),
              Object(i.Yc)(i.Q),
              Object(i.Yc)(a.c)
            );
          },
          token: E,
          providedIn: "root",
        })),
        (E.ctorParameters = () => [
          { type: s.c },
          { type: s.e },
          { type: i.Q },
          { type: void 0, decorators: [{ type: i.C, args: [a.c] }] },
        ]);
      class k {
        constructor(e) {
          if (
            ((this.scrollStrategy = new _()),
            (this.panelClass = ""),
            (this.hasBackdrop = !1),
            (this.backdropClass = "cdk-overlay-dark-backdrop"),
            (this.disposeOnNavigation = !1),
            e)
          ) {
            const t = Object.keys(e);
            for (const n of t) void 0 !== e[n] && (this[n] = e[n]);
          }
        }
      }
      class O {
        constructor(e, t, n, s, i) {
          (this.offsetX = n),
            (this.offsetY = s),
            (this.panelClass = i),
            (this.originX = e.originX),
            (this.originY = e.originY),
            (this.overlayX = t.overlayX),
            (this.overlayY = t.overlayY);
        }
      }
      class I {}
      class T {
        constructor(e, t) {
          (this.connectionPair = e), (this.scrollableViewProperties = t);
        }
      }
      T.ctorParameters = () => [
        { type: O },
        { type: I, decorators: [{ type: i.R }] },
      ];
      class A {
        constructor(e) {
          (this._attachedOverlays = []), (this._document = e);
        }
        ngOnDestroy() {
          this.detach();
        }
        add(e) {
          this.remove(e), this._attachedOverlays.push(e);
        }
        remove(e) {
          const t = this._attachedOverlays.indexOf(e);
          t > -1 && this._attachedOverlays.splice(t, 1),
            0 === this._attachedOverlays.length && this.detach();
        }
      }
      (A.ɵfac = function (e) {
        return new (e || A)(i.Yc(a.c));
      }),
        (A.ɵprov = Object(i.Ic)({
          factory: function () {
            return new A(Object(i.Yc)(a.c));
          },
          token: A,
          providedIn: "root",
        })),
        (A.ctorParameters = () => [
          { type: void 0, decorators: [{ type: i.C, args: [a.c] }] },
        ]);
      class D extends A {
        constructor(e) {
          super(e),
            (this._keydownListener = (e) => {
              const t = this._attachedOverlays;
              for (let n = t.length - 1; n > -1; n--)
                if (t[n]._keydownEvents.observers.length > 0) {
                  t[n]._keydownEvents.next(e);
                  break;
                }
            });
        }
        add(e) {
          super.add(e),
            this._isAttached ||
              (this._document.body.addEventListener(
                "keydown",
                this._keydownListener
              ),
              (this._isAttached = !0));
        }
        detach() {
          this._isAttached &&
            (this._document.body.removeEventListener(
              "keydown",
              this._keydownListener
            ),
            (this._isAttached = !1));
        }
      }
      (D.ɵfac = function (e) {
        return new (e || D)(i.Yc(a.c));
      }),
        (D.ɵprov = Object(i.Ic)({
          factory: function () {
            return new D(Object(i.Yc)(a.c));
          },
          token: D,
          providedIn: "root",
        })),
        (D.ctorParameters = () => [
          { type: void 0, decorators: [{ type: i.C, args: [a.c] }] },
        ]);
      class M extends A {
        constructor(e, t) {
          super(e),
            (this._platform = t),
            (this._cursorStyleIsSet = !1),
            (this._clickListener = (e) => {
              const t = e.composedPath ? e.composedPath()[0] : e.target,
                n = this._attachedOverlays.slice();
              for (let s = n.length - 1; s > -1; s--) {
                const i = n[s];
                if (
                  !(i._outsidePointerEvents.observers.length < 1) &&
                  i.hasAttached()
                ) {
                  if (i.overlayElement.contains(t)) break;
                  i._outsidePointerEvents.next(e);
                }
              }
            });
        }
        add(e) {
          super.add(e),
            this._isAttached ||
              (this._document.body.addEventListener(
                "click",
                this._clickListener,
                !0
              ),
              this._document.body.addEventListener(
                "contextmenu",
                this._clickListener,
                !0
              ),
              this._platform.IOS &&
                !this._cursorStyleIsSet &&
                ((this._cursorOriginalValue = this._document.body.style.cursor),
                (this._document.body.style.cursor = "pointer"),
                (this._cursorStyleIsSet = !0)),
              (this._isAttached = !0));
        }
        detach() {
          this._isAttached &&
            (this._document.body.removeEventListener(
              "click",
              this._clickListener,
              !0
            ),
            this._document.body.removeEventListener(
              "contextmenu",
              this._clickListener,
              !0
            ),
            this._platform.IOS &&
              this._cursorStyleIsSet &&
              ((this._document.body.style.cursor = this._cursorOriginalValue),
              (this._cursorStyleIsSet = !1)),
            (this._isAttached = !1));
        }
      }
      (M.ɵfac = function (e) {
        return new (e || M)(i.Yc(a.c), i.Yc(r.a));
      }),
        (M.ɵprov = Object(i.Ic)({
          factory: function () {
            return new M(Object(i.Yc)(a.c), Object(i.Yc)(r.a));
          },
          token: M,
          providedIn: "root",
        })),
        (M.ctorParameters = () => [
          { type: void 0, decorators: [{ type: i.C, args: [a.c] }] },
          { type: r.a },
        ]);
      const P = !(
        "undefined" == typeof window ||
        !window ||
        (!window.__karma__ && !window.jasmine)
      );
      class R {
        constructor(e, t) {
          (this._platform = t), (this._document = e);
        }
        ngOnDestroy() {
          const e = this._containerElement;
          e && e.parentNode && e.parentNode.removeChild(e);
        }
        getContainerElement() {
          return (
            this._containerElement || this._createContainer(),
            this._containerElement
          );
        }
        _createContainer() {
          const e = "cdk-overlay-container";
          if (this._platform.isBrowser || P) {
            const t = this._document.querySelectorAll(
              `.${e}[platform="server"], .${e}[platform="test"]`
            );
            for (let e = 0; e < t.length; e++)
              t[e].parentNode.removeChild(t[e]);
          }
          const t = this._document.createElement("div");
          t.classList.add(e),
            P
              ? t.setAttribute("platform", "test")
              : this._platform.isBrowser ||
                t.setAttribute("platform", "server"),
            this._document.body.appendChild(t),
            (this._containerElement = t);
        }
      }
      (R.ɵfac = function (e) {
        return new (e || R)(i.Yc(a.c), i.Yc(r.a));
      }),
        (R.ɵprov = Object(i.Ic)({
          factory: function () {
            return new R(Object(i.Yc)(a.c), Object(i.Yc)(r.a));
          },
          token: R,
          providedIn: "root",
        })),
        (R.ctorParameters = () => [
          { type: void 0, decorators: [{ type: i.C, args: [a.c] }] },
          { type: r.a },
        ]);
      class j {
        constructor(e, t, n, s, i, r, o, a, l) {
          (this._portalOutlet = e),
            (this._host = t),
            (this._pane = n),
            (this._config = s),
            (this._ngZone = i),
            (this._keyboardDispatcher = r),
            (this._document = o),
            (this._location = a),
            (this._outsideClickDispatcher = l),
            (this._backdropElement = null),
            (this._backdropClick = new u.a()),
            (this._attachments = new u.a()),
            (this._detachments = new u.a()),
            (this._locationChanges = d.a.EMPTY),
            (this._backdropClickHandler = (e) => this._backdropClick.next(e)),
            (this._keydownEvents = new u.a()),
            (this._outsidePointerEvents = new u.a()),
            s.scrollStrategy &&
              ((this._scrollStrategy = s.scrollStrategy),
              this._scrollStrategy.attach(this)),
            (this._positionStrategy = s.positionStrategy);
        }
        get overlayElement() {
          return this._pane;
        }
        get backdropElement() {
          return this._backdropElement;
        }
        get hostElement() {
          return this._host;
        }
        attach(e) {
          let t = this._portalOutlet.attach(e);
          return (
            !this._host.parentElement &&
              this._previousHostParent &&
              this._previousHostParent.appendChild(this._host),
            this._positionStrategy && this._positionStrategy.attach(this),
            this._updateStackingOrder(),
            this._updateElementSize(),
            this._updateElementDirection(),
            this._scrollStrategy && this._scrollStrategy.enable(),
            this._ngZone.onStable.pipe(Object(p.a)(1)).subscribe(() => {
              this.hasAttached() && this.updatePosition();
            }),
            this._togglePointerEvents(!0),
            this._config.hasBackdrop && this._attachBackdrop(),
            this._config.panelClass &&
              this._toggleClasses(this._pane, this._config.panelClass, !0),
            this._attachments.next(),
            this._keyboardDispatcher.add(this),
            this._config.disposeOnNavigation &&
              (this._locationChanges = this._location.subscribe(() =>
                this.dispose()
              )),
            this._outsideClickDispatcher.add(this),
            t
          );
        }
        detach() {
          if (!this.hasAttached()) return;
          this.detachBackdrop(),
            this._togglePointerEvents(!1),
            this._positionStrategy &&
              this._positionStrategy.detach &&
              this._positionStrategy.detach(),
            this._scrollStrategy && this._scrollStrategy.disable();
          const e = this._portalOutlet.detach();
          return (
            this._detachments.next(),
            this._keyboardDispatcher.remove(this),
            this._detachContentWhenStable(),
            this._locationChanges.unsubscribe(),
            this._outsideClickDispatcher.remove(this),
            e
          );
        }
        dispose() {
          const e = this.hasAttached();
          this._positionStrategy && this._positionStrategy.dispose(),
            this._disposeScrollStrategy(),
            this.detachBackdrop(),
            this._locationChanges.unsubscribe(),
            this._keyboardDispatcher.remove(this),
            this._portalOutlet.dispose(),
            this._attachments.complete(),
            this._backdropClick.complete(),
            this._keydownEvents.complete(),
            this._outsidePointerEvents.complete(),
            this._outsideClickDispatcher.remove(this),
            this._host &&
              this._host.parentNode &&
              (this._host.parentNode.removeChild(this._host),
              (this._host = null)),
            (this._previousHostParent = this._pane = null),
            e && this._detachments.next(),
            this._detachments.complete();
        }
        hasAttached() {
          return this._portalOutlet.hasAttached();
        }
        backdropClick() {
          return this._backdropClick;
        }
        attachments() {
          return this._attachments;
        }
        detachments() {
          return this._detachments;
        }
        keydownEvents() {
          return this._keydownEvents;
        }
        outsidePointerEvents() {
          return this._outsidePointerEvents;
        }
        getConfig() {
          return this._config;
        }
        updatePosition() {
          this._positionStrategy && this._positionStrategy.apply();
        }
        updatePositionStrategy(e) {
          e !== this._positionStrategy &&
            (this._positionStrategy && this._positionStrategy.dispose(),
            (this._positionStrategy = e),
            this.hasAttached() && (e.attach(this), this.updatePosition()));
        }
        updateSize(e) {
          (this._config = Object.assign(Object.assign({}, this._config), e)),
            this._updateElementSize();
        }
        setDirection(e) {
          (this._config = Object.assign(Object.assign({}, this._config), {
            direction: e,
          })),
            this._updateElementDirection();
        }
        addPanelClass(e) {
          this._pane && this._toggleClasses(this._pane, e, !0);
        }
        removePanelClass(e) {
          this._pane && this._toggleClasses(this._pane, e, !1);
        }
        getDirection() {
          const e = this._config.direction;
          return e ? ("string" == typeof e ? e : e.value) : "ltr";
        }
        updateScrollStrategy(e) {
          e !== this._scrollStrategy &&
            (this._disposeScrollStrategy(),
            (this._scrollStrategy = e),
            this.hasAttached() && (e.attach(this), e.enable()));
        }
        _updateElementDirection() {
          this._host.setAttribute("dir", this.getDirection());
        }
        _updateElementSize() {
          if (!this._pane) return;
          const e = this._pane.style;
          (e.width = Object(l.c)(this._config.width)),
            (e.height = Object(l.c)(this._config.height)),
            (e.minWidth = Object(l.c)(this._config.minWidth)),
            (e.minHeight = Object(l.c)(this._config.minHeight)),
            (e.maxWidth = Object(l.c)(this._config.maxWidth)),
            (e.maxHeight = Object(l.c)(this._config.maxHeight));
        }
        _togglePointerEvents(e) {
          this._pane.style.pointerEvents = e ? "auto" : "none";
        }
        _attachBackdrop() {
          const e = "cdk-overlay-backdrop-showing";
          (this._backdropElement = this._document.createElement("div")),
            this._backdropElement.classList.add("cdk-overlay-backdrop"),
            this._config.backdropClass &&
              this._toggleClasses(
                this._backdropElement,
                this._config.backdropClass,
                !0
              ),
            this._host.parentElement.insertBefore(
              this._backdropElement,
              this._host
            ),
            this._backdropElement.addEventListener(
              "click",
              this._backdropClickHandler
            ),
            "undefined" != typeof requestAnimationFrame
              ? this._ngZone.runOutsideAngular(() => {
                  requestAnimationFrame(() => {
                    this._backdropElement &&
                      this._backdropElement.classList.add(e);
                  });
                })
              : this._backdropElement.classList.add(e);
        }
        _updateStackingOrder() {
          this._host.nextSibling &&
            this._host.parentNode.appendChild(this._host);
        }
        detachBackdrop() {
          let e,
            t = this._backdropElement;
          if (!t) return;
          let n = () => {
            t &&
              (t.removeEventListener("click", this._backdropClickHandler),
              t.removeEventListener("transitionend", n),
              t.parentNode && t.parentNode.removeChild(t)),
              this._backdropElement == t && (this._backdropElement = null),
              this._config.backdropClass &&
                this._toggleClasses(t, this._config.backdropClass, !1),
              clearTimeout(e);
          };
          t.classList.remove("cdk-overlay-backdrop-showing"),
            this._ngZone.runOutsideAngular(() => {
              t.addEventListener("transitionend", n);
            }),
            (t.style.pointerEvents = "none"),
            (e = this._ngZone.runOutsideAngular(() => setTimeout(n, 500)));
        }
        _toggleClasses(e, t, n) {
          const s = e.classList;
          Object(l.a)(t).forEach((e) => {
            e && (n ? s.add(e) : s.remove(e));
          });
        }
        _detachContentWhenStable() {
          this._ngZone.runOutsideAngular(() => {
            const e = this._ngZone.onStable
              .pipe(
                Object(m.a)(Object(h.a)(this._attachments, this._detachments))
              )
              .subscribe(() => {
                (this._pane &&
                  this._host &&
                  0 !== this._pane.children.length) ||
                  (this._pane &&
                    this._config.panelClass &&
                    this._toggleClasses(
                      this._pane,
                      this._config.panelClass,
                      !1
                    ),
                  this._host &&
                    this._host.parentElement &&
                    ((this._previousHostParent = this._host.parentElement),
                    this._previousHostParent.removeChild(this._host)),
                  e.unsubscribe());
              });
          });
        }
        _disposeScrollStrategy() {
          const e = this._scrollStrategy;
          e && (e.disable(), e.detach && e.detach());
        }
      }
      const N = "cdk-overlay-connected-position-bounding-box",
        F = /([A-Za-z%]+)$/;
      class L {
        constructor(e, t, n, s, i) {
          (this._viewportRuler = t),
            (this._document = n),
            (this._platform = s),
            (this._overlayContainer = i),
            (this._lastBoundingBoxSize = { width: 0, height: 0 }),
            (this._isPushed = !1),
            (this._canPush = !0),
            (this._growAfterOpen = !1),
            (this._hasFlexibleDimensions = !0),
            (this._positionLocked = !1),
            (this._viewportMargin = 0),
            (this._scrollables = []),
            (this._preferredPositions = []),
            (this._positionChanges = new u.a()),
            (this._resizeSubscription = d.a.EMPTY),
            (this._offsetX = 0),
            (this._offsetY = 0),
            (this._appliedPanelClasses = []),
            (this.positionChanges = this._positionChanges),
            this.setOrigin(e);
        }
        get positions() {
          return this._preferredPositions;
        }
        attach(e) {
          this._overlayRef && this._overlayRef,
            this._validatePositions(),
            e.hostElement.classList.add(N),
            (this._overlayRef = e),
            (this._boundingBox = e.hostElement),
            (this._pane = e.overlayElement),
            (this._isDisposed = !1),
            (this._isInitialRender = !0),
            (this._lastPosition = null),
            this._resizeSubscription.unsubscribe(),
            (this._resizeSubscription = this._viewportRuler
              .change()
              .subscribe(() => {
                (this._isInitialRender = !0), this.apply();
              }));
        }
        apply() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          if (
            !this._isInitialRender &&
            this._positionLocked &&
            this._lastPosition
          )
            return void this.reapplyLastPosition();
          this._clearPanelClasses(),
            this._resetOverlayElementStyles(),
            this._resetBoundingBoxStyles(),
            (this._viewportRect = this._getNarrowedViewportRect()),
            (this._originRect = this._getOriginRect()),
            (this._overlayRect = this._pane.getBoundingClientRect());
          const e = this._originRect,
            t = this._overlayRect,
            n = this._viewportRect,
            s = [];
          let i;
          for (let r of this._preferredPositions) {
            let o = this._getOriginPoint(e, r),
              a = this._getOverlayPoint(o, t, r),
              l = this._getOverlayFit(a, t, n, r);
            if (l.isCompletelyWithinViewport)
              return (this._isPushed = !1), void this._applyPosition(r, o);
            this._canFitWithFlexibleDimensions(l, a, n)
              ? s.push({
                  position: r,
                  origin: o,
                  overlayRect: t,
                  boundingBoxRect: this._calculateBoundingBoxRect(o, r),
                })
              : (!i || i.overlayFit.visibleArea < l.visibleArea) &&
                (i = {
                  overlayFit: l,
                  overlayPoint: a,
                  originPoint: o,
                  position: r,
                  overlayRect: t,
                });
          }
          if (s.length) {
            let e = null,
              t = -1;
            for (const n of s) {
              const s =
                n.boundingBoxRect.width *
                n.boundingBoxRect.height *
                (n.position.weight || 1);
              s > t && ((t = s), (e = n));
            }
            return (
              (this._isPushed = !1),
              void this._applyPosition(e.position, e.origin)
            );
          }
          if (this._canPush)
            return (
              (this._isPushed = !0),
              void this._applyPosition(i.position, i.originPoint)
            );
          this._applyPosition(i.position, i.originPoint);
        }
        detach() {
          this._clearPanelClasses(),
            (this._lastPosition = null),
            (this._previousPushAmount = null),
            this._resizeSubscription.unsubscribe();
        }
        dispose() {
          this._isDisposed ||
            (this._boundingBox &&
              V(this._boundingBox.style, {
                top: "",
                left: "",
                right: "",
                bottom: "",
                height: "",
                width: "",
                alignItems: "",
                justifyContent: "",
              }),
            this._pane && this._resetOverlayElementStyles(),
            this._overlayRef &&
              this._overlayRef.hostElement.classList.remove(N),
            this.detach(),
            this._positionChanges.complete(),
            (this._overlayRef = this._boundingBox = null),
            (this._isDisposed = !0));
        }
        reapplyLastPosition() {
          if (
            !this._isDisposed &&
            (!this._platform || this._platform.isBrowser)
          ) {
            (this._originRect = this._getOriginRect()),
              (this._overlayRect = this._pane.getBoundingClientRect()),
              (this._viewportRect = this._getNarrowedViewportRect());
            const e = this._lastPosition || this._preferredPositions[0],
              t = this._getOriginPoint(this._originRect, e);
            this._applyPosition(e, t);
          }
        }
        withScrollableContainers(e) {
          return (this._scrollables = e), this;
        }
        withPositions(e) {
          return (
            (this._preferredPositions = e),
            -1 === e.indexOf(this._lastPosition) && (this._lastPosition = null),
            this._validatePositions(),
            this
          );
        }
        withViewportMargin(e) {
          return (this._viewportMargin = e), this;
        }
        withFlexibleDimensions(e = !0) {
          return (this._hasFlexibleDimensions = e), this;
        }
        withGrowAfterOpen(e = !0) {
          return (this._growAfterOpen = e), this;
        }
        withPush(e = !0) {
          return (this._canPush = e), this;
        }
        withLockedPosition(e = !0) {
          return (this._positionLocked = e), this;
        }
        setOrigin(e) {
          return (this._origin = e), this;
        }
        withDefaultOffsetX(e) {
          return (this._offsetX = e), this;
        }
        withDefaultOffsetY(e) {
          return (this._offsetY = e), this;
        }
        withTransformOriginOn(e) {
          return (this._transformOriginSelector = e), this;
        }
        _getOriginPoint(e, t) {
          let n, s;
          if ("center" == t.originX) n = e.left + e.width / 2;
          else {
            const s = this._isRtl() ? e.right : e.left,
              i = this._isRtl() ? e.left : e.right;
            n = "start" == t.originX ? s : i;
          }
          return (
            (s =
              "center" == t.originY
                ? e.top + e.height / 2
                : "top" == t.originY
                ? e.top
                : e.bottom),
            { x: n, y: s }
          );
        }
        _getOverlayPoint(e, t, n) {
          let s, i;
          return (
            (s =
              "center" == n.overlayX
                ? -t.width / 2
                : "start" === n.overlayX
                ? this._isRtl()
                  ? -t.width
                  : 0
                : this._isRtl()
                ? 0
                : -t.width),
            (i =
              "center" == n.overlayY
                ? -t.height / 2
                : "top" == n.overlayY
                ? 0
                : -t.height),
            { x: e.x + s, y: e.y + i }
          );
        }
        _getOverlayFit(e, t, n, s) {
          let { x: i, y: r } = e,
            o = this._getOffset(s, "x"),
            a = this._getOffset(s, "y");
          o && (i += o), a && (r += a);
          let l = 0 - i,
            c = i + t.width - n.width,
            u = 0 - r,
            d = r + t.height - n.height,
            h = this._subtractOverflows(t.width, l, c),
            p = this._subtractOverflows(t.height, u, d),
            m = h * p;
          return {
            visibleArea: m,
            isCompletelyWithinViewport: t.width * t.height === m,
            fitsInViewportVertically: p === t.height,
            fitsInViewportHorizontally: h == t.width,
          };
        }
        _canFitWithFlexibleDimensions(e, t, n) {
          if (this._hasFlexibleDimensions) {
            const s = n.bottom - t.y,
              i = n.right - t.x,
              r = B(this._overlayRef.getConfig().minHeight),
              o = B(this._overlayRef.getConfig().minWidth),
              a = e.fitsInViewportVertically || (null != r && r <= s),
              l = e.fitsInViewportHorizontally || (null != o && o <= i);
            return a && l;
          }
          return !1;
        }
        _pushOverlayOnScreen(e, t, n) {
          if (this._previousPushAmount && this._positionLocked)
            return {
              x: e.x + this._previousPushAmount.x,
              y: e.y + this._previousPushAmount.y,
            };
          const s = this._viewportRect,
            i = Math.max(e.x + t.width - s.width, 0),
            r = Math.max(e.y + t.height - s.height, 0),
            o = Math.max(s.top - n.top - e.y, 0),
            a = Math.max(s.left - n.left - e.x, 0);
          let l = 0,
            c = 0;
          return (
            (l =
              t.width <= s.width
                ? a || -i
                : e.x < this._viewportMargin
                ? s.left - n.left - e.x
                : 0),
            (c =
              t.height <= s.height
                ? o || -r
                : e.y < this._viewportMargin
                ? s.top - n.top - e.y
                : 0),
            (this._previousPushAmount = { x: l, y: c }),
            { x: e.x + l, y: e.y + c }
          );
        }
        _applyPosition(e, t) {
          if (
            (this._setTransformOrigin(e),
            this._setOverlayElementStyles(t, e),
            this._setBoundingBoxStyles(t, e),
            e.panelClass && this._addPanelClasses(e.panelClass),
            (this._lastPosition = e),
            this._positionChanges.observers.length)
          ) {
            const t = this._getScrollVisibility(),
              n = new T(e, t);
            this._positionChanges.next(n);
          }
          this._isInitialRender = !1;
        }
        _setTransformOrigin(e) {
          if (!this._transformOriginSelector) return;
          const t = this._boundingBox.querySelectorAll(
            this._transformOriginSelector
          );
          let n,
            s = e.overlayY;
          n =
            "center" === e.overlayX
              ? "center"
              : this._isRtl()
              ? "start" === e.overlayX
                ? "right"
                : "left"
              : "start" === e.overlayX
              ? "left"
              : "right";
          for (let i = 0; i < t.length; i++)
            t[i].style.transformOrigin = `${n} ${s}`;
        }
        _calculateBoundingBoxRect(e, t) {
          const n = this._viewportRect,
            s = this._isRtl();
          let i, r, o;
          if ("top" === t.overlayY)
            (r = e.y), (i = n.height - r + this._viewportMargin);
          else if ("bottom" === t.overlayY)
            (o = n.height - e.y + 2 * this._viewportMargin),
              (i = n.height - o + this._viewportMargin);
          else {
            const t = Math.min(n.bottom - e.y + n.top, e.y),
              s = this._lastBoundingBoxSize.height;
            (i = 2 * t),
              (r = e.y - t),
              i > s &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (r = e.y - s / 2);
          }
          const a =
            ("start" === t.overlayX && !s) || ("end" === t.overlayX && s);
          let l, c, u;
          if (("end" === t.overlayX && !s) || ("start" === t.overlayX && s))
            (u = n.width - e.x + this._viewportMargin),
              (l = e.x - this._viewportMargin);
          else if (a) (c = e.x), (l = n.right - e.x);
          else {
            const t = Math.min(n.right - e.x + n.left, e.x),
              s = this._lastBoundingBoxSize.width;
            (l = 2 * t),
              (c = e.x - t),
              l > s &&
                !this._isInitialRender &&
                !this._growAfterOpen &&
                (c = e.x - s / 2);
          }
          return { top: r, left: c, bottom: o, right: u, width: l, height: i };
        }
        _setBoundingBoxStyles(e, t) {
          const n = this._calculateBoundingBoxRect(e, t);
          this._isInitialRender ||
            this._growAfterOpen ||
            ((n.height = Math.min(n.height, this._lastBoundingBoxSize.height)),
            (n.width = Math.min(n.width, this._lastBoundingBoxSize.width)));
          const s = {};
          if (this._hasExactPosition())
            (s.top = s.left = "0"),
              (s.bottom = s.right = s.maxHeight = s.maxWidth = ""),
              (s.width = s.height = "100%");
          else {
            const e = this._overlayRef.getConfig().maxHeight,
              i = this._overlayRef.getConfig().maxWidth;
            (s.height = Object(l.c)(n.height)),
              (s.top = Object(l.c)(n.top)),
              (s.bottom = Object(l.c)(n.bottom)),
              (s.width = Object(l.c)(n.width)),
              (s.left = Object(l.c)(n.left)),
              (s.right = Object(l.c)(n.right)),
              "center" === t.overlayX
                ? (s.alignItems = "center")
                : (s.alignItems =
                    "end" === t.overlayX ? "flex-end" : "flex-start"),
              "center" === t.overlayY
                ? (s.justifyContent = "center")
                : (s.justifyContent =
                    "bottom" === t.overlayY ? "flex-end" : "flex-start"),
              e && (s.maxHeight = Object(l.c)(e)),
              i && (s.maxWidth = Object(l.c)(i));
          }
          (this._lastBoundingBoxSize = n), V(this._boundingBox.style, s);
        }
        _resetBoundingBoxStyles() {
          V(this._boundingBox.style, {
            top: "0",
            left: "0",
            right: "0",
            bottom: "0",
            height: "",
            width: "",
            alignItems: "",
            justifyContent: "",
          });
        }
        _resetOverlayElementStyles() {
          V(this._pane.style, {
            top: "",
            left: "",
            bottom: "",
            right: "",
            position: "",
            transform: "",
          });
        }
        _setOverlayElementStyles(e, t) {
          const n = {},
            s = this._hasExactPosition(),
            i = this._hasFlexibleDimensions,
            r = this._overlayRef.getConfig();
          if (s) {
            const s = this._viewportRuler.getViewportScrollPosition();
            V(n, this._getExactOverlayY(t, e, s)),
              V(n, this._getExactOverlayX(t, e, s));
          } else n.position = "static";
          let o = "",
            a = this._getOffset(t, "x"),
            c = this._getOffset(t, "y");
          a && (o += `translateX(${a}px) `),
            c && (o += `translateY(${c}px)`),
            (n.transform = o.trim()),
            r.maxHeight &&
              (s
                ? (n.maxHeight = Object(l.c)(r.maxHeight))
                : i && (n.maxHeight = "")),
            r.maxWidth &&
              (s
                ? (n.maxWidth = Object(l.c)(r.maxWidth))
                : i && (n.maxWidth = "")),
            V(this._pane.style, n);
        }
        _getExactOverlayY(e, t, n) {
          let s = { top: "", bottom: "" },
            i = this._getOverlayPoint(t, this._overlayRect, e);
          this._isPushed &&
            (i = this._pushOverlayOnScreen(i, this._overlayRect, n));
          let r = this._overlayContainer
            .getContainerElement()
            .getBoundingClientRect().top;
          if (((i.y -= r), "bottom" === e.overlayY)) {
            const e = this._document.documentElement.clientHeight;
            s.bottom = e - (i.y + this._overlayRect.height) + "px";
          } else s.top = Object(l.c)(i.y);
          return s;
        }
        _getExactOverlayX(e, t, n) {
          let s,
            i = { left: "", right: "" },
            r = this._getOverlayPoint(t, this._overlayRect, e);
          if (
            (this._isPushed &&
              (r = this._pushOverlayOnScreen(r, this._overlayRect, n)),
            (s = this._isRtl()
              ? "end" === e.overlayX
                ? "left"
                : "right"
              : "end" === e.overlayX
              ? "right"
              : "left"),
            "right" === s)
          ) {
            const e = this._document.documentElement.clientWidth;
            i.right = e - (r.x + this._overlayRect.width) + "px";
          } else i.left = Object(l.c)(r.x);
          return i;
        }
        _getScrollVisibility() {
          const e = this._getOriginRect(),
            t = this._pane.getBoundingClientRect(),
            n = this._scrollables.map((e) =>
              e.getElementRef().nativeElement.getBoundingClientRect()
            );
          return {
            isOriginClipped: C(e, n),
            isOriginOutsideView: w(e, n),
            isOverlayClipped: C(t, n),
            isOverlayOutsideView: w(t, n),
          };
        }
        _subtractOverflows(e, ...t) {
          return t.reduce((e, t) => e - Math.max(t, 0), e);
        }
        _getNarrowedViewportRect() {
          const e = this._document.documentElement.clientWidth,
            t = this._document.documentElement.clientHeight,
            n = this._viewportRuler.getViewportScrollPosition();
          return {
            top: n.top + this._viewportMargin,
            left: n.left + this._viewportMargin,
            right: n.left + e - this._viewportMargin,
            bottom: n.top + t - this._viewportMargin,
            width: e - 2 * this._viewportMargin,
            height: t - 2 * this._viewportMargin,
          };
        }
        _isRtl() {
          return "rtl" === this._overlayRef.getDirection();
        }
        _hasExactPosition() {
          return !this._hasFlexibleDimensions || this._isPushed;
        }
        _getOffset(e, t) {
          return "x" === t
            ? null == e.offsetX
              ? this._offsetX
              : e.offsetX
            : null == e.offsetY
            ? this._offsetY
            : e.offsetY;
        }
        _validatePositions() {
          0;
        }
        _addPanelClasses(e) {
          this._pane &&
            Object(l.a)(e).forEach((e) => {
              "" !== e &&
                -1 === this._appliedPanelClasses.indexOf(e) &&
                (this._appliedPanelClasses.push(e),
                this._pane.classList.add(e));
            });
        }
        _clearPanelClasses() {
          this._pane &&
            (this._appliedPanelClasses.forEach((e) => {
              this._pane.classList.remove(e);
            }),
            (this._appliedPanelClasses = []));
        }
        _getOriginRect() {
          const e = this._origin;
          if (e instanceof i.v) return e.nativeElement.getBoundingClientRect();
          if (e instanceof Element) return e.getBoundingClientRect();
          const t = e.width || 0,
            n = e.height || 0;
          return {
            top: e.y,
            bottom: e.y + n,
            left: e.x,
            right: e.x + t,
            height: n,
            width: t,
          };
        }
      }
      function V(e, t) {
        for (let n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
        return e;
      }
      function B(e) {
        if ("number" != typeof e && null != e) {
          const [t, n] = e.split(F);
          return n && "px" !== n ? null : parseFloat(t);
        }
        return e || null;
      }
      class z {
        constructor(e, t, n, s, i, r, o) {
          (this._preferredPositions = []),
            (this._positionStrategy = new L(n, s, i, r, o)
              .withFlexibleDimensions(!1)
              .withPush(!1)
              .withViewportMargin(0)),
            this.withFallbackPosition(e, t),
            (this.onPositionChange = this._positionStrategy.positionChanges);
        }
        get positions() {
          return this._preferredPositions;
        }
        attach(e) {
          (this._overlayRef = e),
            this._positionStrategy.attach(e),
            this._direction &&
              (e.setDirection(this._direction), (this._direction = null));
        }
        dispose() {
          this._positionStrategy.dispose();
        }
        detach() {
          this._positionStrategy.detach();
        }
        apply() {
          this._positionStrategy.apply();
        }
        recalculateLastPosition() {
          this._positionStrategy.reapplyLastPosition();
        }
        withScrollableContainers(e) {
          this._positionStrategy.withScrollableContainers(e);
        }
        withFallbackPosition(e, t, n, s) {
          const i = new O(e, t, n, s);
          return (
            this._preferredPositions.push(i),
            this._positionStrategy.withPositions(this._preferredPositions),
            this
          );
        }
        withDirection(e) {
          return (
            this._overlayRef
              ? this._overlayRef.setDirection(e)
              : (this._direction = e),
            this
          );
        }
        withOffsetX(e) {
          return this._positionStrategy.withDefaultOffsetX(e), this;
        }
        withOffsetY(e) {
          return this._positionStrategy.withDefaultOffsetY(e), this;
        }
        withLockedPosition(e) {
          return this._positionStrategy.withLockedPosition(e), this;
        }
        withPositions(e) {
          return (
            (this._preferredPositions = e.slice()),
            this._positionStrategy.withPositions(this._preferredPositions),
            this
          );
        }
        setOrigin(e) {
          return this._positionStrategy.setOrigin(e), this;
        }
      }
      const H = "cdk-global-overlay-wrapper";
      class G {
        constructor() {
          (this._cssPosition = "static"),
            (this._topOffset = ""),
            (this._bottomOffset = ""),
            (this._leftOffset = ""),
            (this._rightOffset = ""),
            (this._alignItems = ""),
            (this._justifyContent = ""),
            (this._width = ""),
            (this._height = "");
        }
        attach(e) {
          const t = e.getConfig();
          (this._overlayRef = e),
            this._width && !t.width && e.updateSize({ width: this._width }),
            this._height && !t.height && e.updateSize({ height: this._height }),
            e.hostElement.classList.add(H),
            (this._isDisposed = !1);
        }
        top(e = "") {
          return (
            (this._bottomOffset = ""),
            (this._topOffset = e),
            (this._alignItems = "flex-start"),
            this
          );
        }
        left(e = "") {
          return (
            (this._rightOffset = ""),
            (this._leftOffset = e),
            (this._justifyContent = "flex-start"),
            this
          );
        }
        bottom(e = "") {
          return (
            (this._topOffset = ""),
            (this._bottomOffset = e),
            (this._alignItems = "flex-end"),
            this
          );
        }
        right(e = "") {
          return (
            (this._leftOffset = ""),
            (this._rightOffset = e),
            (this._justifyContent = "flex-end"),
            this
          );
        }
        width(e = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ width: e })
              : (this._width = e),
            this
          );
        }
        height(e = "") {
          return (
            this._overlayRef
              ? this._overlayRef.updateSize({ height: e })
              : (this._height = e),
            this
          );
        }
        centerHorizontally(e = "") {
          return this.left(e), (this._justifyContent = "center"), this;
        }
        centerVertically(e = "") {
          return this.top(e), (this._alignItems = "center"), this;
        }
        apply() {
          if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
          const e = this._overlayRef.overlayElement.style,
            t = this._overlayRef.hostElement.style,
            n = this._overlayRef.getConfig(),
            { width: s, height: i, maxWidth: r, maxHeight: o } = n,
            a = !(
              ("100%" !== s && "100vw" !== s) ||
              (r && "100%" !== r && "100vw" !== r)
            ),
            l = !(
              ("100%" !== i && "100vh" !== i) ||
              (o && "100%" !== o && "100vh" !== o)
            );
          (e.position = this._cssPosition),
            (e.marginLeft = a ? "0" : this._leftOffset),
            (e.marginTop = l ? "0" : this._topOffset),
            (e.marginBottom = this._bottomOffset),
            (e.marginRight = this._rightOffset),
            a
              ? (t.justifyContent = "flex-start")
              : "center" === this._justifyContent
              ? (t.justifyContent = "center")
              : "rtl" === this._overlayRef.getConfig().direction
              ? "flex-start" === this._justifyContent
                ? (t.justifyContent = "flex-end")
                : "flex-end" === this._justifyContent &&
                  (t.justifyContent = "flex-start")
              : (t.justifyContent = this._justifyContent),
            (t.alignItems = l ? "flex-start" : this._alignItems);
        }
        dispose() {
          if (this._isDisposed || !this._overlayRef) return;
          const e = this._overlayRef.overlayElement.style,
            t = this._overlayRef.hostElement,
            n = t.style;
          t.classList.remove(H),
            (n.justifyContent =
              n.alignItems =
              e.marginTop =
              e.marginBottom =
              e.marginLeft =
              e.marginRight =
              e.position =
                ""),
            (this._overlayRef = null),
            (this._isDisposed = !0);
        }
      }
      class U {
        constructor(e, t, n, s) {
          (this._viewportRuler = e),
            (this._document = t),
            (this._platform = n),
            (this._overlayContainer = s);
        }
        global() {
          return new G();
        }
        connectedTo(e, t, n) {
          return new z(
            t,
            n,
            e,
            this._viewportRuler,
            this._document,
            this._platform,
            this._overlayContainer
          );
        }
        flexibleConnectedTo(e) {
          return new L(
            e,
            this._viewportRuler,
            this._document,
            this._platform,
            this._overlayContainer
          );
        }
      }
      (U.ɵfac = function (e) {
        return new (e || U)(i.Yc(s.e), i.Yc(a.c), i.Yc(r.a), i.Yc(R));
      }),
        (U.ɵprov = Object(i.Ic)({
          factory: function () {
            return new U(
              Object(i.Yc)(s.e),
              Object(i.Yc)(a.c),
              Object(i.Yc)(r.a),
              Object(i.Yc)(R)
            );
          },
          token: U,
          providedIn: "root",
        })),
        (U.ctorParameters = () => [
          { type: s.e },
          { type: void 0, decorators: [{ type: i.C, args: [a.c] }] },
          { type: r.a },
          { type: R },
        ]);
      let $ = 0;
      class q {
        constructor(e, t, n, s, i, r, o, a, l, c, u) {
          (this.scrollStrategies = e),
            (this._overlayContainer = t),
            (this._componentFactoryResolver = n),
            (this._positionBuilder = s),
            (this._keyboardDispatcher = i),
            (this._injector = r),
            (this._ngZone = o),
            (this._document = a),
            (this._directionality = l),
            (this._location = c),
            (this._outsideClickDispatcher = u);
        }
        create(e) {
          const t = this._createHostElement(),
            n = this._createPaneElement(t),
            s = this._createPortalOutlet(n),
            i = new k(e);
          return (
            (i.direction = i.direction || this._directionality.value),
            new j(
              s,
              t,
              n,
              i,
              this._ngZone,
              this._keyboardDispatcher,
              this._document,
              this._location,
              this._outsideClickDispatcher
            )
          );
        }
        position() {
          return this._positionBuilder;
        }
        _createPaneElement(e) {
          const t = this._document.createElement("div");
          return (
            (t.id = "cdk-overlay-" + $++),
            t.classList.add("cdk-overlay-pane"),
            e.appendChild(t),
            t
          );
        }
        _createHostElement() {
          const e = this._document.createElement("div");
          return this._overlayContainer.getContainerElement().appendChild(e), e;
        }
        _createPortalOutlet(e) {
          return (
            this._appRef || (this._appRef = this._injector.get(i.g)),
            new c.d(
              e,
              this._componentFactoryResolver,
              this._appRef,
              this._injector,
              this._document
            )
          );
        }
      }
      (q.ɵfac = function (e) {
        return new (e || q)(
          i.Yc(E),
          i.Yc(R),
          i.Yc(i.p),
          i.Yc(U),
          i.Yc(D),
          i.Yc(i.F),
          i.Yc(i.Q),
          i.Yc(a.c),
          i.Yc(o.b),
          i.Yc(a.g),
          i.Yc(M)
        );
      }),
        (q.ɵprov = i.Ic({ token: q, factory: q.ɵfac })),
        (q.ctorParameters = () => [
          { type: E },
          { type: R },
          { type: i.p },
          { type: U },
          { type: D },
          { type: i.F },
          { type: i.Q },
          { type: void 0, decorators: [{ type: i.C, args: [a.c] }] },
          { type: o.b },
          { type: a.g },
          { type: M },
        ]);
      const W = [
          {
            originX: "start",
            originY: "bottom",
            overlayX: "start",
            overlayY: "top",
          },
          {
            originX: "start",
            originY: "top",
            overlayX: "start",
            overlayY: "bottom",
          },
          {
            originX: "end",
            originY: "top",
            overlayX: "end",
            overlayY: "bottom",
          },
          {
            originX: "end",
            originY: "bottom",
            overlayX: "end",
            overlayY: "top",
          },
        ],
        Y = new i.E("cdk-connected-overlay-scroll-strategy");
      class Q {
        constructor(e) {
          this.elementRef = e;
        }
      }
      (Q.ɵfac = function (e) {
        return new (e || Q)(i.Mc(i.v));
      }),
        (Q.ɵdir = i.Hc({
          type: Q,
          selectors: [
            ["", "cdk-overlay-origin", ""],
            ["", "overlay-origin", ""],
            ["", "cdkOverlayOrigin", ""],
          ],
          exportAs: ["cdkOverlayOrigin"],
        })),
        (Q.ctorParameters = () => [{ type: i.v }]);
      class K {
        constructor(e, t, n, s, r) {
          (this._overlay = e),
            (this._dir = r),
            (this._hasBackdrop = !1),
            (this._lockPosition = !1),
            (this._growAfterOpen = !1),
            (this._flexibleDimensions = !1),
            (this._push = !1),
            (this._backdropSubscription = d.a.EMPTY),
            (this._attachSubscription = d.a.EMPTY),
            (this._detachSubscription = d.a.EMPTY),
            (this._positionSubscription = d.a.EMPTY),
            (this.viewportMargin = 0),
            (this.open = !1),
            (this.disableClose = !1),
            (this.backdropClick = new i.x()),
            (this.positionChange = new i.x()),
            (this.attach = new i.x()),
            (this.detach = new i.x()),
            (this.overlayKeydown = new i.x()),
            (this.overlayOutsideClick = new i.x()),
            (this._templatePortal = new c.f(t, n)),
            (this._scrollStrategyFactory = s),
            (this.scrollStrategy = this._scrollStrategyFactory());
        }
        get offsetX() {
          return this._offsetX;
        }
        set offsetX(e) {
          (this._offsetX = e),
            this._position && this._updatePositionStrategy(this._position);
        }
        get offsetY() {
          return this._offsetY;
        }
        set offsetY(e) {
          (this._offsetY = e),
            this._position && this._updatePositionStrategy(this._position);
        }
        get hasBackdrop() {
          return this._hasBackdrop;
        }
        set hasBackdrop(e) {
          this._hasBackdrop = Object(l.b)(e);
        }
        get lockPosition() {
          return this._lockPosition;
        }
        set lockPosition(e) {
          this._lockPosition = Object(l.b)(e);
        }
        get flexibleDimensions() {
          return this._flexibleDimensions;
        }
        set flexibleDimensions(e) {
          this._flexibleDimensions = Object(l.b)(e);
        }
        get growAfterOpen() {
          return this._growAfterOpen;
        }
        set growAfterOpen(e) {
          this._growAfterOpen = Object(l.b)(e);
        }
        get push() {
          return this._push;
        }
        set push(e) {
          this._push = Object(l.b)(e);
        }
        get overlayRef() {
          return this._overlayRef;
        }
        get dir() {
          return this._dir ? this._dir.value : "ltr";
        }
        ngOnDestroy() {
          this._attachSubscription.unsubscribe(),
            this._detachSubscription.unsubscribe(),
            this._backdropSubscription.unsubscribe(),
            this._positionSubscription.unsubscribe(),
            this._overlayRef && this._overlayRef.dispose();
        }
        ngOnChanges(e) {
          this._position &&
            (this._updatePositionStrategy(this._position),
            this._overlayRef.updateSize({
              width: this.width,
              minWidth: this.minWidth,
              height: this.height,
              minHeight: this.minHeight,
            }),
            e.origin && this.open && this._position.apply()),
            e.open &&
              (this.open ? this._attachOverlay() : this._detachOverlay());
        }
        _createOverlay() {
          (this.positions && this.positions.length) || (this.positions = W);
          const e = (this._overlayRef = this._overlay.create(
            this._buildConfig()
          ));
          (this._attachSubscription = e
            .attachments()
            .subscribe(() => this.attach.emit())),
            (this._detachSubscription = e
              .detachments()
              .subscribe(() => this.detach.emit())),
            e.keydownEvents().subscribe((e) => {
              this.overlayKeydown.next(e),
                e.keyCode !== v.e ||
                  this.disableClose ||
                  Object(v.o)(e) ||
                  (e.preventDefault(), this._detachOverlay());
            }),
            this._overlayRef.outsidePointerEvents().subscribe((e) => {
              this.overlayOutsideClick.next(e);
            });
        }
        _buildConfig() {
          const e = (this._position =
              this.positionStrategy || this._createPositionStrategy()),
            t = new k({
              direction: this._dir,
              positionStrategy: e,
              scrollStrategy: this.scrollStrategy,
              hasBackdrop: this.hasBackdrop,
            });
          return (
            (this.width || 0 === this.width) && (t.width = this.width),
            (this.height || 0 === this.height) && (t.height = this.height),
            (this.minWidth || 0 === this.minWidth) &&
              (t.minWidth = this.minWidth),
            (this.minHeight || 0 === this.minHeight) &&
              (t.minHeight = this.minHeight),
            this.backdropClass && (t.backdropClass = this.backdropClass),
            this.panelClass && (t.panelClass = this.panelClass),
            t
          );
        }
        _updatePositionStrategy(e) {
          const t = this.positions.map((e) => ({
            originX: e.originX,
            originY: e.originY,
            overlayX: e.overlayX,
            overlayY: e.overlayY,
            offsetX: e.offsetX || this.offsetX,
            offsetY: e.offsetY || this.offsetY,
            panelClass: e.panelClass || void 0,
          }));
          return e
            .setOrigin(this.origin.elementRef)
            .withPositions(t)
            .withFlexibleDimensions(this.flexibleDimensions)
            .withPush(this.push)
            .withGrowAfterOpen(this.growAfterOpen)
            .withViewportMargin(this.viewportMargin)
            .withLockedPosition(this.lockPosition)
            .withTransformOriginOn(this.transformOriginSelector);
        }
        _createPositionStrategy() {
          const e = this._overlay
            .position()
            .flexibleConnectedTo(this.origin.elementRef);
          return this._updatePositionStrategy(e), e;
        }
        _attachOverlay() {
          this._overlayRef
            ? (this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop)
            : this._createOverlay(),
            this._overlayRef.hasAttached() ||
              this._overlayRef.attach(this._templatePortal),
            this.hasBackdrop
              ? (this._backdropSubscription = this._overlayRef
                  .backdropClick()
                  .subscribe((e) => {
                    this.backdropClick.emit(e);
                  }))
              : this._backdropSubscription.unsubscribe(),
            this._positionSubscription.unsubscribe(),
            this.positionChange.observers.length > 0 &&
              (this._positionSubscription = this._position.positionChanges
                .pipe(
                  (function (e, t = !1) {
                    return (n) => n.lift(new g(e, t));
                  })(() => this.positionChange.observers.length > 0)
                )
                .subscribe((e) => {
                  this.positionChange.emit(e),
                    0 === this.positionChange.observers.length &&
                      this._positionSubscription.unsubscribe();
                }));
        }
        _detachOverlay() {
          this._overlayRef && this._overlayRef.detach(),
            this._backdropSubscription.unsubscribe(),
            this._positionSubscription.unsubscribe();
        }
      }
      (K.ɵfac = function (e) {
        return new (e || K)(
          i.Mc(q),
          i.Mc(i.ib),
          i.Mc(i.ob),
          i.Mc(Y),
          i.Mc(o.b, 8)
        );
      }),
        (K.ɵdir = i.Hc({
          type: K,
          selectors: [
            ["", "cdk-connected-overlay", ""],
            ["", "connected-overlay", ""],
            ["", "cdkConnectedOverlay", ""],
          ],
          inputs: {
            viewportMargin: [
              "cdkConnectedOverlayViewportMargin",
              "viewportMargin",
            ],
            open: ["cdkConnectedOverlayOpen", "open"],
            disableClose: ["cdkConnectedOverlayDisableClose", "disableClose"],
            scrollStrategy: [
              "cdkConnectedOverlayScrollStrategy",
              "scrollStrategy",
            ],
            offsetX: ["cdkConnectedOverlayOffsetX", "offsetX"],
            offsetY: ["cdkConnectedOverlayOffsetY", "offsetY"],
            hasBackdrop: ["cdkConnectedOverlayHasBackdrop", "hasBackdrop"],
            lockPosition: ["cdkConnectedOverlayLockPosition", "lockPosition"],
            flexibleDimensions: [
              "cdkConnectedOverlayFlexibleDimensions",
              "flexibleDimensions",
            ],
            growAfterOpen: [
              "cdkConnectedOverlayGrowAfterOpen",
              "growAfterOpen",
            ],
            push: ["cdkConnectedOverlayPush", "push"],
            positions: ["cdkConnectedOverlayPositions", "positions"],
            origin: ["cdkConnectedOverlayOrigin", "origin"],
            positionStrategy: [
              "cdkConnectedOverlayPositionStrategy",
              "positionStrategy",
            ],
            width: ["cdkConnectedOverlayWidth", "width"],
            height: ["cdkConnectedOverlayHeight", "height"],
            minWidth: ["cdkConnectedOverlayMinWidth", "minWidth"],
            minHeight: ["cdkConnectedOverlayMinHeight", "minHeight"],
            backdropClass: [
              "cdkConnectedOverlayBackdropClass",
              "backdropClass",
            ],
            panelClass: ["cdkConnectedOverlayPanelClass", "panelClass"],
            transformOriginSelector: [
              "cdkConnectedOverlayTransformOriginOn",
              "transformOriginSelector",
            ],
          },
          outputs: {
            backdropClick: "backdropClick",
            positionChange: "positionChange",
            attach: "attach",
            detach: "detach",
            overlayKeydown: "overlayKeydown",
            overlayOutsideClick: "overlayOutsideClick",
          },
          exportAs: ["cdkConnectedOverlay"],
          features: [i.xc],
        })),
        (K.ctorParameters = () => [
          { type: q },
          { type: i.ib },
          { type: i.ob },
          { type: void 0, decorators: [{ type: i.C, args: [Y] }] },
          { type: o.b, decorators: [{ type: i.R }] },
        ]),
        (K.propDecorators = {
          origin: [{ type: i.G, args: ["cdkConnectedOverlayOrigin"] }],
          positions: [{ type: i.G, args: ["cdkConnectedOverlayPositions"] }],
          positionStrategy: [
            { type: i.G, args: ["cdkConnectedOverlayPositionStrategy"] },
          ],
          offsetX: [{ type: i.G, args: ["cdkConnectedOverlayOffsetX"] }],
          offsetY: [{ type: i.G, args: ["cdkConnectedOverlayOffsetY"] }],
          width: [{ type: i.G, args: ["cdkConnectedOverlayWidth"] }],
          height: [{ type: i.G, args: ["cdkConnectedOverlayHeight"] }],
          minWidth: [{ type: i.G, args: ["cdkConnectedOverlayMinWidth"] }],
          minHeight: [{ type: i.G, args: ["cdkConnectedOverlayMinHeight"] }],
          backdropClass: [
            { type: i.G, args: ["cdkConnectedOverlayBackdropClass"] },
          ],
          panelClass: [{ type: i.G, args: ["cdkConnectedOverlayPanelClass"] }],
          viewportMargin: [
            { type: i.G, args: ["cdkConnectedOverlayViewportMargin"] },
          ],
          scrollStrategy: [
            { type: i.G, args: ["cdkConnectedOverlayScrollStrategy"] },
          ],
          open: [{ type: i.G, args: ["cdkConnectedOverlayOpen"] }],
          disableClose: [
            { type: i.G, args: ["cdkConnectedOverlayDisableClose"] },
          ],
          transformOriginSelector: [
            { type: i.G, args: ["cdkConnectedOverlayTransformOriginOn"] },
          ],
          hasBackdrop: [
            { type: i.G, args: ["cdkConnectedOverlayHasBackdrop"] },
          ],
          lockPosition: [
            { type: i.G, args: ["cdkConnectedOverlayLockPosition"] },
          ],
          flexibleDimensions: [
            { type: i.G, args: ["cdkConnectedOverlayFlexibleDimensions"] },
          ],
          growAfterOpen: [
            { type: i.G, args: ["cdkConnectedOverlayGrowAfterOpen"] },
          ],
          push: [{ type: i.G, args: ["cdkConnectedOverlayPush"] }],
          backdropClick: [{ type: i.S }],
          positionChange: [{ type: i.S }],
          attach: [{ type: i.S }],
          detach: [{ type: i.S }],
          overlayKeydown: [{ type: i.S }],
          overlayOutsideClick: [{ type: i.S }],
        });
      const J = {
        provide: Y,
        deps: [q],
        useFactory: function (e) {
          return () => e.scrollStrategies.reposition();
        },
      };
      class X {}
      (X.ɵmod = i.Kc({ type: X })),
        (X.ɵinj = i.Jc({
          factory: function (e) {
            return new (e || X)();
          },
          providers: [q, J],
          imports: [[o.a, c.e, s.d], s.d],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          i.wd(X, {
            declarations: function () {
              return [K, Q];
            },
            imports: function () {
              return [o.a, c.e, s.d];
            },
            exports: function () {
              return [K, Q, s.d];
            },
          });
      class Z extends R {
        constructor(e, t) {
          super(e, t);
        }
        ngOnDestroy() {
          super.ngOnDestroy(),
            this._fullScreenEventName &&
              this._fullScreenListener &&
              this._document.removeEventListener(
                this._fullScreenEventName,
                this._fullScreenListener
              );
        }
        _createContainer() {
          super._createContainer(),
            this._adjustParentForFullscreenChange(),
            this._addFullscreenChangeListener(() =>
              this._adjustParentForFullscreenChange()
            );
        }
        _adjustParentForFullscreenChange() {
          if (!this._containerElement) return;
          (this.getFullscreenElement() || this._document.body).appendChild(
            this._containerElement
          );
        }
        _addFullscreenChangeListener(e) {
          const t = this._getEventName();
          t &&
            (this._fullScreenListener &&
              this._document.removeEventListener(t, this._fullScreenListener),
            this._document.addEventListener(t, e),
            (this._fullScreenListener = e));
        }
        _getEventName() {
          if (!this._fullScreenEventName) {
            const e = this._document;
            e.fullscreenEnabled
              ? (this._fullScreenEventName = "fullscreenchange")
              : e.webkitFullscreenEnabled
              ? (this._fullScreenEventName = "webkitfullscreenchange")
              : e.mozFullScreenEnabled
              ? (this._fullScreenEventName = "mozfullscreenchange")
              : e.msFullscreenEnabled &&
                (this._fullScreenEventName = "MSFullscreenChange");
          }
          return this._fullScreenEventName;
        }
        getFullscreenElement() {
          const e = this._document;
          return (
            e.fullscreenElement ||
            e.webkitFullscreenElement ||
            e.mozFullScreenElement ||
            e.msFullscreenElement ||
            null
          );
        }
      }
      (Z.ɵfac = function (e) {
        return new (e || Z)(i.Yc(a.c), i.Yc(r.a));
      }),
        (Z.ɵprov = Object(i.Ic)({
          factory: function () {
            return new Z(Object(i.Yc)(a.c), Object(i.Yc)(r.a));
          },
          token: Z,
          providedIn: "root",
        })),
        (Z.ctorParameters = () => [
          { type: void 0, decorators: [{ type: i.C, args: [a.c] }] },
          { type: r.a },
        ]);
    },
    "tk/3": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return I;
      }),
        n.d(t, "b", function () {
          return k;
        }),
        n.d(t, "c", function () {
          return q;
        }),
        n.d(t, "d", function () {
          return C;
        });
      var s,
        i = n("fXoL"),
        r = n("LRne"),
        o = n("HDdC"),
        a = n("bOdf"),
        l = n("pLZG"),
        c = n("lJxs"),
        u = n("ofXK");
      class d {}
      class h {}
      class p {
        constructor(e) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            e
              ? (this.lazyInit =
                  "string" == typeof e
                    ? () => {
                        (this.headers = new Map()),
                          e.split("\n").forEach((e) => {
                            const t = e.indexOf(":");
                            if (t > 0) {
                              const n = e.slice(0, t),
                                s = n.toLowerCase(),
                                i = e.slice(t + 1).trim();
                              this.maybeSetNormalizedName(n, s),
                                this.headers.has(s)
                                  ? this.headers.get(s).push(i)
                                  : this.headers.set(s, [i]);
                            }
                          });
                      }
                    : () => {
                        (this.headers = new Map()),
                          Object.keys(e).forEach((t) => {
                            let n = e[t];
                            const s = t.toLowerCase();
                            "string" == typeof n && (n = [n]),
                              n.length > 0 &&
                                (this.headers.set(s, n),
                                this.maybeSetNormalizedName(t, s));
                          });
                      })
              : (this.headers = new Map());
        }
        has(e) {
          return this.init(), this.headers.has(e.toLowerCase());
        }
        get(e) {
          this.init();
          const t = this.headers.get(e.toLowerCase());
          return t && t.length > 0 ? t[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(e) {
          return this.init(), this.headers.get(e.toLowerCase()) || null;
        }
        append(e, t) {
          return this.clone({ name: e, value: t, op: "a" });
        }
        set(e, t) {
          return this.clone({ name: e, value: t, op: "s" });
        }
        delete(e, t) {
          return this.clone({ name: e, value: t, op: "d" });
        }
        maybeSetNormalizedName(e, t) {
          this.normalizedNames.has(t) || this.normalizedNames.set(t, e);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof p
              ? this.copyFrom(this.lazyInit)
              : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate &&
              (this.lazyUpdate.forEach((e) => this.applyUpdate(e)),
              (this.lazyUpdate = null)));
        }
        copyFrom(e) {
          e.init(),
            Array.from(e.headers.keys()).forEach((t) => {
              this.headers.set(t, e.headers.get(t)),
                this.normalizedNames.set(t, e.normalizedNames.get(t));
            });
        }
        clone(e) {
          const t = new p();
          return (
            (t.lazyInit =
              this.lazyInit && this.lazyInit instanceof p
                ? this.lazyInit
                : this),
            (t.lazyUpdate = (this.lazyUpdate || []).concat([e])),
            t
          );
        }
        applyUpdate(e) {
          const t = e.name.toLowerCase();
          switch (e.op) {
            case "a":
            case "s":
              let n = e.value;
              if (("string" == typeof n && (n = [n]), 0 === n.length)) return;
              this.maybeSetNormalizedName(e.name, t);
              const s = ("a" === e.op ? this.headers.get(t) : void 0) || [];
              s.push(...n), this.headers.set(t, s);
              break;
            case "d":
              const i = e.value;
              if (i) {
                let e = this.headers.get(t);
                if (!e) return;
                (e = e.filter((e) => -1 === i.indexOf(e))),
                  0 === e.length
                    ? (this.headers.delete(t), this.normalizedNames.delete(t))
                    : this.headers.set(t, e);
              } else this.headers.delete(t), this.normalizedNames.delete(t);
          }
        }
        forEach(e) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach((t) =>
              e(this.normalizedNames.get(t), this.headers.get(t))
            );
        }
      }
      class m {
        encodeKey(e) {
          return f(e);
        }
        encodeValue(e) {
          return f(e);
        }
        decodeKey(e) {
          return decodeURIComponent(e);
        }
        decodeValue(e) {
          return decodeURIComponent(e);
        }
      }
      function f(e) {
        return encodeURIComponent(e)
          .replace(/%40/gi, "@")
          .replace(/%3A/gi, ":")
          .replace(/%24/gi, "$")
          .replace(/%2C/gi, ",")
          .replace(/%3B/gi, ";")
          .replace(/%2B/gi, "+")
          .replace(/%3D/gi, "=")
          .replace(/%3F/gi, "?")
          .replace(/%2F/gi, "/");
      }
      class g {
        constructor(e = {}) {
          if (
            ((this.updates = null),
            (this.cloneFrom = null),
            (this.encoder = e.encoder || new m()),
            e.fromString)
          ) {
            if (e.fromObject)
              throw new Error("Cannot specify both fromString and fromObject.");
            this.map = (function (e, t) {
              const n = new Map();
              e.length > 0 &&
                e.split("&").forEach((e) => {
                  const s = e.indexOf("="),
                    [i, r] =
                      -1 == s
                        ? [t.decodeKey(e), ""]
                        : [
                            t.decodeKey(e.slice(0, s)),
                            t.decodeValue(e.slice(s + 1)),
                          ],
                    o = n.get(i) || [];
                  o.push(r), n.set(i, o);
                });
              return n;
            })(e.fromString, this.encoder);
          } else
            e.fromObject
              ? ((this.map = new Map()),
                Object.keys(e.fromObject).forEach((t) => {
                  const n = e.fromObject[t];
                  this.map.set(t, Array.isArray(n) ? n : [n]);
                }))
              : (this.map = null);
        }
        has(e) {
          return this.init(), this.map.has(e);
        }
        get(e) {
          this.init();
          const t = this.map.get(e);
          return t ? t[0] : null;
        }
        getAll(e) {
          return this.init(), this.map.get(e) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(e, t) {
          return this.clone({ param: e, value: t, op: "a" });
        }
        set(e, t) {
          return this.clone({ param: e, value: t, op: "s" });
        }
        delete(e, t) {
          return this.clone({ param: e, value: t, op: "d" });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map((e) => {
                const t = this.encoder.encodeKey(e);
                return this.map
                  .get(e)
                  .map((e) => t + "=" + this.encoder.encodeValue(e))
                  .join("&");
              })
              .filter((e) => "" !== e)
              .join("&")
          );
        }
        clone(e) {
          const t = new g({ encoder: this.encoder });
          return (
            (t.cloneFrom = this.cloneFrom || this),
            (t.updates = (this.updates || []).concat([e])),
            t
          );
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom
                .keys()
                .forEach((e) => this.map.set(e, this.cloneFrom.map.get(e))),
              this.updates.forEach((e) => {
                switch (e.op) {
                  case "a":
                  case "s":
                    const t =
                      ("a" === e.op ? this.map.get(e.param) : void 0) || [];
                    t.push(e.value), this.map.set(e.param, t);
                    break;
                  case "d":
                    if (void 0 === e.value) {
                      this.map.delete(e.param);
                      break;
                    }
                    {
                      let t = this.map.get(e.param) || [];
                      const n = t.indexOf(e.value);
                      -1 !== n && t.splice(n, 1),
                        t.length > 0
                          ? this.map.set(e.param, t)
                          : this.map.delete(e.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      function y(e) {
        return "undefined" != typeof ArrayBuffer && e instanceof ArrayBuffer;
      }
      function v(e) {
        return "undefined" != typeof Blob && e instanceof Blob;
      }
      function b(e) {
        return "undefined" != typeof FormData && e instanceof FormData;
      }
      class x {
        constructor(e, t, n, s) {
          let i;
          if (
            ((this.url = t),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = "json"),
            (this.method = e.toUpperCase()),
            (function (e) {
              switch (e) {
                case "DELETE":
                case "GET":
                case "HEAD":
                case "OPTIONS":
                case "JSONP":
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || s
              ? ((this.body = void 0 !== n ? n : null), (i = s))
              : (i = n),
            i &&
              ((this.reportProgress = !!i.reportProgress),
              (this.withCredentials = !!i.withCredentials),
              i.responseType && (this.responseType = i.responseType),
              i.headers && (this.headers = i.headers),
              i.params && (this.params = i.params)),
            this.headers || (this.headers = new p()),
            this.params)
          ) {
            const e = this.params.toString();
            if (0 === e.length) this.urlWithParams = t;
            else {
              const n = t.indexOf("?"),
                s = -1 === n ? "?" : n < t.length - 1 ? "&" : "";
              this.urlWithParams = t + s + e;
            }
          } else (this.params = new g()), (this.urlWithParams = t);
        }
        serializeBody() {
          return null === this.body
            ? null
            : y(this.body) ||
              v(this.body) ||
              b(this.body) ||
              "string" == typeof this.body
            ? this.body
            : this.body instanceof g
            ? this.body.toString()
            : "object" == typeof this.body ||
              "boolean" == typeof this.body ||
              Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || b(this.body)
            ? null
            : v(this.body)
            ? this.body.type || null
            : y(this.body)
            ? null
            : "string" == typeof this.body
            ? "text/plain"
            : this.body instanceof g
            ? "application/x-www-form-urlencoded;charset=UTF-8"
            : "object" == typeof this.body ||
              "number" == typeof this.body ||
              Array.isArray(this.body)
            ? "application/json"
            : null;
        }
        clone(e = {}) {
          const t = e.method || this.method,
            n = e.url || this.url,
            s = e.responseType || this.responseType,
            i = void 0 !== e.body ? e.body : this.body,
            r =
              void 0 !== e.withCredentials
                ? e.withCredentials
                : this.withCredentials,
            o =
              void 0 !== e.reportProgress
                ? e.reportProgress
                : this.reportProgress;
          let a = e.headers || this.headers,
            l = e.params || this.params;
          return (
            void 0 !== e.setHeaders &&
              (a = Object.keys(e.setHeaders).reduce(
                (t, n) => t.set(n, e.setHeaders[n]),
                a
              )),
            e.setParams &&
              (l = Object.keys(e.setParams).reduce(
                (t, n) => t.set(n, e.setParams[n]),
                l
              )),
            new x(t, n, i, {
              params: l,
              headers: a,
              reportProgress: o,
              responseType: s,
              withCredentials: r,
            })
          );
        }
      }
      !(function (e) {
        (e[(e.Sent = 0)] = "Sent"),
          (e[(e.UploadProgress = 1)] = "UploadProgress"),
          (e[(e.ResponseHeader = 2)] = "ResponseHeader"),
          (e[(e.DownloadProgress = 3)] = "DownloadProgress"),
          (e[(e.Response = 4)] = "Response"),
          (e[(e.User = 5)] = "User");
      })(s || (s = {}));
      class _ {
        constructor(e, t = 200, n = "OK") {
          (this.headers = e.headers || new p()),
            (this.status = void 0 !== e.status ? e.status : t),
            (this.statusText = e.statusText || n),
            (this.url = e.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class w extends _ {
        constructor(e = {}) {
          super(e), (this.type = s.ResponseHeader);
        }
        clone(e = {}) {
          return new w({
            headers: e.headers || this.headers,
            status: void 0 !== e.status ? e.status : this.status,
            statusText: e.statusText || this.statusText,
            url: e.url || this.url || void 0,
          });
        }
      }
      class C extends _ {
        constructor(e = {}) {
          super(e),
            (this.type = s.Response),
            (this.body = void 0 !== e.body ? e.body : null);
        }
        clone(e = {}) {
          return new C({
            body: void 0 !== e.body ? e.body : this.body,
            headers: e.headers || this.headers,
            status: void 0 !== e.status ? e.status : this.status,
            statusText: e.statusText || this.statusText,
            url: e.url || this.url || void 0,
          });
        }
      }
      class S extends _ {
        constructor(e) {
          super(e, 0, "Unknown Error"),
            (this.name = "HttpErrorResponse"),
            (this.ok = !1),
            this.status >= 200 && this.status < 300
              ? (this.message =
                  "Http failure during parsing for " +
                  (e.url || "(unknown url)"))
              : (this.message = `Http failure response for ${
                  e.url || "(unknown url)"
                }: ${e.status} ${e.statusText}`),
            (this.error = e.error || null);
        }
      }
      function E(e, t) {
        return {
          body: t,
          headers: e.headers,
          observe: e.observe,
          params: e.params,
          reportProgress: e.reportProgress,
          responseType: e.responseType,
          withCredentials: e.withCredentials,
        };
      }
      class k {
        constructor(e) {
          this.handler = e;
        }
        request(e, t, n = {}) {
          let s;
          if (e instanceof x) s = e;
          else {
            let i = void 0;
            i = n.headers instanceof p ? n.headers : new p(n.headers);
            let r = void 0;
            n.params &&
              (r =
                n.params instanceof g
                  ? n.params
                  : new g({ fromObject: n.params })),
              (s = new x(e, t, void 0 !== n.body ? n.body : null, {
                headers: i,
                params: r,
                reportProgress: n.reportProgress,
                responseType: n.responseType || "json",
                withCredentials: n.withCredentials,
              }));
          }
          const i = Object(r.a)(s).pipe(
            Object(a.a)((e) => this.handler.handle(e))
          );
          if (e instanceof x || "events" === n.observe) return i;
          const o = i.pipe(Object(l.a)((e) => e instanceof C));
          switch (n.observe || "body") {
            case "body":
              switch (s.responseType) {
                case "arraybuffer":
                  return o.pipe(
                    Object(c.a)((e) => {
                      if (null !== e.body && !(e.body instanceof ArrayBuffer))
                        throw new Error("Response is not an ArrayBuffer.");
                      return e.body;
                    })
                  );
                case "blob":
                  return o.pipe(
                    Object(c.a)((e) => {
                      if (null !== e.body && !(e.body instanceof Blob))
                        throw new Error("Response is not a Blob.");
                      return e.body;
                    })
                  );
                case "text":
                  return o.pipe(
                    Object(c.a)((e) => {
                      if (null !== e.body && "string" != typeof e.body)
                        throw new Error("Response is not a string.");
                      return e.body;
                    })
                  );
                case "json":
                default:
                  return o.pipe(Object(c.a)((e) => e.body));
              }
            case "response":
              return o;
            default:
              throw new Error(
                `Unreachable: unhandled observe type ${n.observe}}`
              );
          }
        }
        delete(e, t = {}) {
          return this.request("DELETE", e, t);
        }
        get(e, t = {}) {
          return this.request("GET", e, t);
        }
        head(e, t = {}) {
          return this.request("HEAD", e, t);
        }
        jsonp(e, t) {
          return this.request("JSONP", e, {
            params: new g().append(t, "JSONP_CALLBACK"),
            observe: "body",
            responseType: "json",
          });
        }
        options(e, t = {}) {
          return this.request("OPTIONS", e, t);
        }
        patch(e, t, n = {}) {
          return this.request("PATCH", e, E(n, t));
        }
        post(e, t, n = {}) {
          return this.request("POST", e, E(n, t));
        }
        put(e, t, n = {}) {
          return this.request("PUT", e, E(n, t));
        }
      }
      (k.ɵfac = function (e) {
        return new (e || k)(i.Yc(d));
      }),
        (k.ɵprov = i.Ic({ token: k, factory: k.ɵfac })),
        (k.ctorParameters = () => [{ type: d }]);
      class O {
        constructor(e, t) {
          (this.next = e), (this.interceptor = t);
        }
        handle(e) {
          return this.interceptor.intercept(e, this.next);
        }
      }
      const I = new i.E("HTTP_INTERCEPTORS");
      class T {
        intercept(e, t) {
          return t.handle(e);
        }
      }
      (T.ɵfac = function (e) {
        return new (e || T)();
      }),
        (T.ɵprov = i.Ic({ token: T, factory: T.ɵfac }));
      let A = 0;
      class D {}
      class M {
        constructor(e, t) {
          (this.callbackMap = e),
            (this.document = t),
            (this.resolvedPromise = Promise.resolve());
        }
        nextCallback() {
          return "ng_jsonp_callback_" + A++;
        }
        handle(e) {
          if ("JSONP" !== e.method)
            throw new Error("JSONP requests must use JSONP request method.");
          if ("json" !== e.responseType)
            throw new Error("JSONP requests must use Json response type.");
          return new o.a((t) => {
            const n = this.nextCallback(),
              i = e.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, `=${n}$1`),
              r = this.document.createElement("script");
            r.src = i;
            let o = null,
              a = !1,
              l = !1;
            this.callbackMap[n] = (e) => {
              delete this.callbackMap[n], l || ((o = e), (a = !0));
            };
            const c = () => {
                r.parentNode && r.parentNode.removeChild(r),
                  delete this.callbackMap[n];
              },
              u = (e) => {
                l ||
                  this.resolvedPromise.then(() => {
                    c(),
                      a
                        ? (t.next(
                            new C({
                              body: o,
                              status: 200,
                              statusText: "OK",
                              url: i,
                            })
                          ),
                          t.complete())
                        : t.error(
                            new S({
                              url: i,
                              status: 0,
                              statusText: "JSONP Error",
                              error: new Error(
                                "JSONP injected script did not invoke callback."
                              ),
                            })
                          );
                  });
              },
              d = (e) => {
                l ||
                  (c(),
                  t.error(
                    new S({
                      error: e,
                      status: 0,
                      statusText: "JSONP Error",
                      url: i,
                    })
                  ));
              };
            return (
              r.addEventListener("load", u),
              r.addEventListener("error", d),
              this.document.body.appendChild(r),
              t.next({ type: s.Sent }),
              () => {
                (l = !0),
                  r.removeEventListener("load", u),
                  r.removeEventListener("error", d),
                  c();
              }
            );
          });
        }
      }
      (M.ɵfac = function (e) {
        return new (e || M)(i.Yc(D), i.Yc(u.c));
      }),
        (M.ɵprov = i.Ic({ token: M, factory: M.ɵfac })),
        (M.ctorParameters = () => [
          { type: D },
          { type: void 0, decorators: [{ type: i.C, args: [u.c] }] },
        ]);
      class P {
        constructor(e) {
          this.jsonp = e;
        }
        intercept(e, t) {
          return "JSONP" === e.method ? this.jsonp.handle(e) : t.handle(e);
        }
      }
      (P.ɵfac = function (e) {
        return new (e || P)(i.Yc(M));
      }),
        (P.ɵprov = i.Ic({ token: P, factory: P.ɵfac })),
        (P.ctorParameters = () => [{ type: M }]);
      const R = /^\)\]\}',?\n/;
      class j {}
      class N {
        constructor() {}
        build() {
          return new XMLHttpRequest();
        }
      }
      (N.ɵfac = function (e) {
        return new (e || N)();
      }),
        (N.ɵprov = i.Ic({ token: N, factory: N.ɵfac })),
        (N.ctorParameters = () => []);
      class F {
        constructor(e) {
          this.xhrFactory = e;
        }
        handle(e) {
          if ("JSONP" === e.method)
            throw new Error(
              "Attempted to construct Jsonp request without HttpClientJsonpModule installed."
            );
          return new o.a((t) => {
            const n = this.xhrFactory.build();
            if (
              (n.open(e.method, e.urlWithParams),
              e.withCredentials && (n.withCredentials = !0),
              e.headers.forEach((e, t) => n.setRequestHeader(e, t.join(","))),
              e.headers.has("Accept") ||
                n.setRequestHeader(
                  "Accept",
                  "application/json, text/plain, */*"
                ),
              !e.headers.has("Content-Type"))
            ) {
              const t = e.detectContentTypeHeader();
              null !== t && n.setRequestHeader("Content-Type", t);
            }
            if (e.responseType) {
              const t = e.responseType.toLowerCase();
              n.responseType = "json" !== t ? t : "text";
            }
            const i = e.serializeBody();
            let r = null;
            const o = () => {
                if (null !== r) return r;
                const t = 1223 === n.status ? 204 : n.status,
                  s = n.statusText || "OK",
                  i = new p(n.getAllResponseHeaders()),
                  o =
                    (function (e) {
                      return "responseURL" in e && e.responseURL
                        ? e.responseURL
                        : /^X-Request-URL:/m.test(e.getAllResponseHeaders())
                        ? e.getResponseHeader("X-Request-URL")
                        : null;
                    })(n) || e.url;
                return (
                  (r = new w({ headers: i, status: t, statusText: s, url: o })),
                  r
                );
              },
              a = () => {
                let { headers: s, status: i, statusText: r, url: a } = o(),
                  l = null;
                204 !== i &&
                  (l = void 0 === n.response ? n.responseText : n.response),
                  0 === i && (i = l ? 200 : 0);
                let c = i >= 200 && i < 300;
                if ("json" === e.responseType && "string" == typeof l) {
                  const e = l;
                  l = l.replace(R, "");
                  try {
                    l = "" !== l ? JSON.parse(l) : null;
                  } catch (u) {
                    (l = e), c && ((c = !1), (l = { error: u, text: l }));
                  }
                }
                c
                  ? (t.next(
                      new C({
                        body: l,
                        headers: s,
                        status: i,
                        statusText: r,
                        url: a || void 0,
                      })
                    ),
                    t.complete())
                  : t.error(
                      new S({
                        error: l,
                        headers: s,
                        status: i,
                        statusText: r,
                        url: a || void 0,
                      })
                    );
              },
              l = (e) => {
                const { url: s } = o(),
                  i = new S({
                    error: e,
                    status: n.status || 0,
                    statusText: n.statusText || "Unknown Error",
                    url: s || void 0,
                  });
                t.error(i);
              };
            let c = !1;
            const u = (i) => {
                c || (t.next(o()), (c = !0));
                let r = { type: s.DownloadProgress, loaded: i.loaded };
                i.lengthComputable && (r.total = i.total),
                  "text" === e.responseType &&
                    n.responseText &&
                    (r.partialText = n.responseText),
                  t.next(r);
              },
              d = (e) => {
                let n = { type: s.UploadProgress, loaded: e.loaded };
                e.lengthComputable && (n.total = e.total), t.next(n);
              };
            return (
              n.addEventListener("load", a),
              n.addEventListener("error", l),
              e.reportProgress &&
                (n.addEventListener("progress", u),
                null !== i &&
                  n.upload &&
                  n.upload.addEventListener("progress", d)),
              n.send(i),
              t.next({ type: s.Sent }),
              () => {
                n.removeEventListener("error", l),
                  n.removeEventListener("load", a),
                  e.reportProgress &&
                    (n.removeEventListener("progress", u),
                    null !== i &&
                      n.upload &&
                      n.upload.removeEventListener("progress", d)),
                  n.readyState !== n.DONE && n.abort();
              }
            );
          });
        }
      }
      (F.ɵfac = function (e) {
        return new (e || F)(i.Yc(j));
      }),
        (F.ɵprov = i.Ic({ token: F, factory: F.ɵfac })),
        (F.ctorParameters = () => [{ type: j }]);
      const L = new i.E("XSRF_COOKIE_NAME"),
        V = new i.E("XSRF_HEADER_NAME");
      class B {}
      class z {
        constructor(e, t, n) {
          (this.doc = e),
            (this.platform = t),
            (this.cookieName = n),
            (this.lastCookieString = ""),
            (this.lastToken = null),
            (this.parseCount = 0);
        }
        getToken() {
          if ("server" === this.platform) return null;
          const e = this.doc.cookie || "";
          return (
            e !== this.lastCookieString &&
              (this.parseCount++,
              (this.lastToken = Object(u.E)(e, this.cookieName)),
              (this.lastCookieString = e)),
            this.lastToken
          );
        }
      }
      (z.ɵfac = function (e) {
        return new (e || z)(i.Yc(u.c), i.Yc(i.U), i.Yc(L));
      }),
        (z.ɵprov = i.Ic({ token: z, factory: z.ɵfac })),
        (z.ctorParameters = () => [
          { type: void 0, decorators: [{ type: i.C, args: [u.c] }] },
          { type: String, decorators: [{ type: i.C, args: [i.U] }] },
          { type: String, decorators: [{ type: i.C, args: [L] }] },
        ]);
      class H {
        constructor(e, t) {
          (this.tokenService = e), (this.headerName = t);
        }
        intercept(e, t) {
          const n = e.url.toLowerCase();
          if (
            "GET" === e.method ||
            "HEAD" === e.method ||
            n.startsWith("http://") ||
            n.startsWith("https://")
          )
            return t.handle(e);
          const s = this.tokenService.getToken();
          return (
            null === s ||
              e.headers.has(this.headerName) ||
              (e = e.clone({ headers: e.headers.set(this.headerName, s) })),
            t.handle(e)
          );
        }
      }
      (H.ɵfac = function (e) {
        return new (e || H)(i.Yc(B), i.Yc(V));
      }),
        (H.ɵprov = i.Ic({ token: H, factory: H.ɵfac })),
        (H.ctorParameters = () => [
          { type: B },
          { type: String, decorators: [{ type: i.C, args: [V] }] },
        ]);
      class G {
        constructor(e, t) {
          (this.backend = e), (this.injector = t), (this.chain = null);
        }
        handle(e) {
          if (null === this.chain) {
            const e = this.injector.get(I, []);
            this.chain = e.reduceRight((e, t) => new O(e, t), this.backend);
          }
          return this.chain.handle(e);
        }
      }
      function U() {
        return "object" == typeof window ? window : {};
      }
      (G.ɵfac = function (e) {
        return new (e || G)(i.Yc(h), i.Yc(i.F));
      }),
        (G.ɵprov = i.Ic({ token: G, factory: G.ɵfac })),
        (G.ctorParameters = () => [{ type: h }, { type: i.F }]);
      class $ {
        static disable() {
          return { ngModule: $, providers: [{ provide: H, useClass: T }] };
        }
        static withOptions(e = {}) {
          return {
            ngModule: $,
            providers: [
              e.cookieName ? { provide: L, useValue: e.cookieName } : [],
              e.headerName ? { provide: V, useValue: e.headerName } : [],
            ],
          };
        }
      }
      ($.ɵmod = i.Kc({ type: $ })),
        ($.ɵinj = i.Jc({
          factory: function (e) {
            return new (e || $)();
          },
          providers: [
            H,
            { provide: I, useExisting: H, multi: !0 },
            { provide: B, useClass: z },
            { provide: L, useValue: "XSRF-TOKEN" },
            { provide: V, useValue: "X-XSRF-TOKEN" },
          ],
        }));
      class q {}
      (q.ɵmod = i.Kc({ type: q })),
        (q.ɵinj = i.Jc({
          factory: function (e) {
            return new (e || q)();
          },
          providers: [
            k,
            { provide: d, useClass: G },
            F,
            { provide: h, useExisting: F },
            N,
            { provide: j, useExisting: N },
          ],
          imports: [
            [
              $.withOptions({
                cookieName: "XSRF-TOKEN",
                headerName: "X-XSRF-TOKEN",
              }),
            ],
          ],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          i.wd(q, { imports: [$] });
      class W {}
      (W.ɵmod = i.Kc({ type: W })),
        (W.ɵinj = i.Jc({
          factory: function (e) {
            return new (e || W)();
          },
          providers: [
            M,
            { provide: D, useFactory: U },
            { provide: I, useClass: P, multi: !0 },
          ],
        }));
    },
    tyNb: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return Qe;
      }),
        n.d(t, "b", function () {
          return xn;
        }),
        n.d(t, "c", function () {
          return jn;
        });
      var s = n("ofXK"),
        i = n("fXoL"),
        r = n("LRne"),
        o = n("Cfvw"),
        a = n("2Vo4"),
        l = n("itXk"),
        c = n("HDdC");
      const u = (() => {
        function e() {
          return (
            Error.call(this),
            (this.message = "no elements in sequence"),
            (this.name = "EmptyError"),
            this
          );
        }
        return (e.prototype = Object.create(Error.prototype)), e;
      })();
      var d = n("NXyV"),
        h = n("EY2u"),
        p = n("XNiG"),
        m = n("lJxs"),
        f = n("0EUg"),
        g = n("pLZG"),
        y = n("7o/Q"),
        v = n("4I5i");
      function b(e) {
        return function (t) {
          return 0 === e ? Object(h.b)() : t.lift(new x(e));
        };
      }
      class x {
        constructor(e) {
          if (((this.total = e), this.total < 0)) throw new v.a();
        }
        call(e, t) {
          return t.subscribe(new _(e, this.total));
        }
      }
      class _ extends y.a {
        constructor(e, t) {
          super(e),
            (this.total = t),
            (this.ring = new Array()),
            (this.count = 0);
        }
        _next(e) {
          const t = this.ring,
            n = this.total,
            s = this.count++;
          if (t.length < n) t.push(e);
          else {
            t[s % n] = e;
          }
        }
        _complete() {
          const e = this.destination;
          let t = this.count;
          if (t > 0) {
            const n = this.count >= this.total ? this.total : this.count,
              s = this.ring;
            for (let i = 0; i < n; i++) {
              const i = t++ % n;
              e.next(s[i]);
            }
          }
          e.complete();
        }
      }
      function w(e = E) {
        return (t) => t.lift(new C(e));
      }
      class C {
        constructor(e) {
          this.errorFactory = e;
        }
        call(e, t) {
          return t.subscribe(new S(e, this.errorFactory));
        }
      }
      class S extends y.a {
        constructor(e, t) {
          super(e), (this.errorFactory = t), (this.hasValue = !1);
        }
        _next(e) {
          (this.hasValue = !0), this.destination.next(e);
        }
        _complete() {
          if (this.hasValue) return this.destination.complete();
          {
            let t;
            try {
              t = this.errorFactory();
            } catch (e) {
              t = e;
            }
            this.destination.error(t);
          }
        }
      }
      function E() {
        return new u();
      }
      function k(e = null) {
        return (t) => t.lift(new O(e));
      }
      class O {
        constructor(e) {
          this.defaultValue = e;
        }
        call(e, t) {
          return t.subscribe(new I(e, this.defaultValue));
        }
      }
      class I extends y.a {
        constructor(e, t) {
          super(e), (this.defaultValue = t), (this.isEmpty = !0);
        }
        _next(e) {
          (this.isEmpty = !1), this.destination.next(e);
        }
        _complete() {
          this.isEmpty && this.destination.next(this.defaultValue),
            this.destination.complete();
        }
      }
      var T = n("SpAZ");
      var A = n("eIep"),
        D = n("IzEk"),
        M = n("JX91");
      class P {
        constructor(e, t, n = !1) {
          (this.accumulator = e), (this.seed = t), (this.hasSeed = n);
        }
        call(e, t) {
          return t.subscribe(
            new R(e, this.accumulator, this.seed, this.hasSeed)
          );
        }
      }
      class R extends y.a {
        constructor(e, t, n, s) {
          super(e),
            (this.accumulator = t),
            (this._seed = n),
            (this.hasSeed = s),
            (this.index = 0);
        }
        get seed() {
          return this._seed;
        }
        set seed(e) {
          (this.hasSeed = !0), (this._seed = e);
        }
        _next(e) {
          if (this.hasSeed) return this._tryNext(e);
          (this.seed = e), this.destination.next(e);
        }
        _tryNext(e) {
          const t = this.index++;
          let n;
          try {
            n = this.accumulator(this.seed, e, t);
          } catch (s) {
            this.destination.error(s);
          }
          (this.seed = n), this.destination.next(n);
        }
      }
      var j = n("JIr8"),
        N = n("bOdf");
      function F(e, t) {
        const n = arguments.length >= 2;
        return (s) =>
          s.pipe(
            e ? Object(g.a)((t, n) => e(t, n, s)) : T.a,
            Object(D.a)(1),
            n ? k(t) : w(() => new u())
          );
      }
      var L = n("5+tZ"),
        V = n("vkgz"),
        B = n("nYR2"),
        z = n("bHdf");
      class H {
        constructor(e, t) {
          (this.id = e), (this.url = t);
        }
      }
      class G extends H {
        constructor(e, t, n = "imperative", s = null) {
          super(e, t), (this.navigationTrigger = n), (this.restoredState = s);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class U extends H {
        constructor(e, t, n) {
          super(e, t), (this.urlAfterRedirects = n);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class $ extends H {
        constructor(e, t, n) {
          super(e, t), (this.reason = n);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class q extends H {
        constructor(e, t, n) {
          super(e, t), (this.error = n);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class W extends H {
        constructor(e, t, n, s) {
          super(e, t), (this.urlAfterRedirects = n), (this.state = s);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Y extends H {
        constructor(e, t, n, s) {
          super(e, t), (this.urlAfterRedirects = n), (this.state = s);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Q extends H {
        constructor(e, t, n, s, i) {
          super(e, t),
            (this.urlAfterRedirects = n),
            (this.state = s),
            (this.shouldActivate = i);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class K extends H {
        constructor(e, t, n, s) {
          super(e, t), (this.urlAfterRedirects = n), (this.state = s);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class J extends H {
        constructor(e, t, n, s) {
          super(e, t), (this.urlAfterRedirects = n), (this.state = s);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class X {
        constructor(e) {
          this.route = e;
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class Z {
        constructor(e) {
          this.route = e;
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class ee {
        constructor(e) {
          this.snapshot = e;
        }
        toString() {
          return `ChildActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class te {
        constructor(e) {
          this.snapshot = e;
        }
        toString() {
          return `ChildActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class ne {
        constructor(e) {
          this.snapshot = e;
        }
        toString() {
          return `ActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class se {
        constructor(e) {
          this.snapshot = e;
        }
        toString() {
          return `ActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class ie {
        constructor(e, t, n) {
          (this.routerEvent = e), (this.position = t), (this.anchor = n);
        }
        toString() {
          const e = this.position
            ? `${this.position[0]}, ${this.position[1]}`
            : null;
          return `Scroll(anchor: '${this.anchor}', position: '${e}')`;
        }
      }
      const re = "primary";
      class oe {
        constructor(e) {
          this.params = e || {};
        }
        has(e) {
          return Object.prototype.hasOwnProperty.call(this.params, e);
        }
        get(e) {
          if (this.has(e)) {
            const t = this.params[e];
            return Array.isArray(t) ? t[0] : t;
          }
          return null;
        }
        getAll(e) {
          if (this.has(e)) {
            const t = this.params[e];
            return Array.isArray(t) ? t : [t];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function ae(e) {
        return new oe(e);
      }
      function le(e) {
        const t = Error("NavigationCancelingError: " + e);
        return (t.ngNavigationCancelingError = !0), t;
      }
      function ce(e, t, n) {
        const s = n.path.split("/");
        if (s.length > e.length) return null;
        if ("full" === n.pathMatch && (t.hasChildren() || s.length < e.length))
          return null;
        const i = {};
        for (let r = 0; r < s.length; r++) {
          const t = s[r],
            n = e[r];
          if (t.startsWith(":")) i[t.substring(1)] = n;
          else if (t !== n.path) return null;
        }
        return { consumed: e.slice(0, s.length), posParams: i };
      }
      function ue(e, t) {
        const n = Object.keys(e),
          s = Object.keys(t);
        if (!n || !s || n.length != s.length) return !1;
        let i;
        for (let r = 0; r < n.length; r++)
          if (((i = n[r]), !de(e[i], t[i]))) return !1;
        return !0;
      }
      function de(e, t) {
        if (Array.isArray(e) && Array.isArray(t)) {
          if (e.length !== t.length) return !1;
          const n = [...e].sort(),
            s = [...t].sort();
          return n.every((e, t) => s[t] === e);
        }
        return e === t;
      }
      function he(e) {
        return Array.prototype.concat.apply([], e);
      }
      function pe(e) {
        return e.length > 0 ? e[e.length - 1] : null;
      }
      function me(e, t) {
        for (const n in e) e.hasOwnProperty(n) && t(e[n], n);
      }
      function fe(e, t) {
        if (0 === Object.keys(e).length) return Object(r.a)({});
        const n = [],
          s = [],
          i = {};
        return (
          me(e, (e, r) => {
            const o = t(r, e).pipe(Object(m.a)((e) => (i[r] = e)));
            r === re ? n.push(o) : s.push(o);
          }),
          r.a.apply(null, n.concat(s)).pipe(
            Object(f.a)(),
            (function (e, t) {
              const n = arguments.length >= 2;
              return (s) =>
                s.pipe(
                  e ? Object(g.a)((t, n) => e(t, n, s)) : T.a,
                  b(1),
                  n ? k(t) : w(() => new u())
                );
            })(),
            Object(m.a)(() => i)
          )
        );
      }
      function ge(e) {
        return Object(i.bc)(e)
          ? e
          : Object(i.cc)(e)
          ? Object(o.a)(Promise.resolve(e))
          : Object(r.a)(e);
      }
      function ye(e, t, n) {
        return n
          ? (function (e, t) {
              return ue(e, t);
            })(e.queryParams, t.queryParams) && ve(e.root, t.root)
          : (function (e, t) {
              return (
                Object.keys(t).length <= Object.keys(e).length &&
                Object.keys(t).every((n) => de(e[n], t[n]))
              );
            })(e.queryParams, t.queryParams) && be(e.root, t.root);
      }
      function ve(e, t) {
        if (!Se(e.segments, t.segments)) return !1;
        if (e.numberOfChildren !== t.numberOfChildren) return !1;
        for (const n in t.children) {
          if (!e.children[n]) return !1;
          if (!ve(e.children[n], t.children[n])) return !1;
        }
        return !0;
      }
      function be(e, t) {
        return xe(e, t, t.segments);
      }
      function xe(e, t, n) {
        if (e.segments.length > n.length) {
          return !!Se(e.segments.slice(0, n.length), n) && !t.hasChildren();
        }
        if (e.segments.length === n.length) {
          if (!Se(e.segments, n)) return !1;
          for (const n in t.children) {
            if (!e.children[n]) return !1;
            if (!be(e.children[n], t.children[n])) return !1;
          }
          return !0;
        }
        {
          const s = n.slice(0, e.segments.length),
            i = n.slice(e.segments.length);
          return (
            !!Se(e.segments, s) &&
            !!e.children.primary &&
            xe(e.children.primary, t, i)
          );
        }
      }
      class _e {
        constructor(e, t, n) {
          (this.root = e), (this.queryParams = t), (this.fragment = n);
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = ae(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return Ie.serialize(this);
        }
      }
      class we {
        constructor(e, t) {
          (this.segments = e),
            (this.children = t),
            (this.parent = null),
            me(t, (e, t) => (e.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return Te(this);
        }
      }
      class Ce {
        constructor(e, t) {
          (this.path = e), (this.parameters = t);
        }
        get parameterMap() {
          return (
            this._parameterMap || (this._parameterMap = ae(this.parameters)),
            this._parameterMap
          );
        }
        toString() {
          return Ne(this);
        }
      }
      function Se(e, t) {
        return e.length === t.length && e.every((e, n) => e.path === t[n].path);
      }
      function Ee(e, t) {
        let n = [];
        return (
          me(e.children, (e, s) => {
            s === re && (n = n.concat(t(e, s)));
          }),
          me(e.children, (e, s) => {
            s !== re && (n = n.concat(t(e, s)));
          }),
          n
        );
      }
      class ke {}
      class Oe {
        parse(e) {
          const t = new ze(e);
          return new _e(
            t.parseRootSegment(),
            t.parseQueryParams(),
            t.parseFragment()
          );
        }
        serialize(e) {
          var t;
          return `${"/" + Ae(e.root, !0)}${(function (e) {
            const t = Object.keys(e).map((t) => {
              const n = e[t];
              return Array.isArray(n)
                ? n.map((e) => `${Me(t)}=${Me(e)}`).join("&")
                : `${Me(t)}=${Me(n)}`;
            });
            return t.length ? "?" + t.join("&") : "";
          })(e.queryParams)}${
            "string" == typeof e.fragment
              ? "#" + ((t = e.fragment), encodeURI(t))
              : ""
          }`;
        }
      }
      const Ie = new Oe();
      function Te(e) {
        return e.segments.map((e) => Ne(e)).join("/");
      }
      function Ae(e, t) {
        if (!e.hasChildren()) return Te(e);
        if (t) {
          const t = e.children.primary ? Ae(e.children.primary, !1) : "",
            n = [];
          return (
            me(e.children, (e, t) => {
              t !== re && n.push(`${t}:${Ae(e, !1)}`);
            }),
            n.length > 0 ? `${t}(${n.join("//")})` : t
          );
        }
        {
          const t = Ee(e, (t, n) =>
            n === re ? [Ae(e.children.primary, !1)] : [`${n}:${Ae(t, !1)}`]
          );
          return 1 === Object.keys(e.children).length &&
            null != e.children.primary
            ? `${Te(e)}/${t[0]}`
            : `${Te(e)}/(${t.join("//")})`;
        }
      }
      function De(e) {
        return encodeURIComponent(e)
          .replace(/%40/g, "@")
          .replace(/%3A/gi, ":")
          .replace(/%24/g, "$")
          .replace(/%2C/gi, ",");
      }
      function Me(e) {
        return De(e).replace(/%3B/gi, ";");
      }
      function Pe(e) {
        return De(e)
          .replace(/\(/g, "%28")
          .replace(/\)/g, "%29")
          .replace(/%26/gi, "&");
      }
      function Re(e) {
        return decodeURIComponent(e);
      }
      function je(e) {
        return Re(e.replace(/\+/g, "%20"));
      }
      function Ne(e) {
        return `${Pe(e.path)}${
          ((t = e.parameters),
          Object.keys(t)
            .map((e) => `;${Pe(e)}=${Pe(t[e])}`)
            .join(""))
        }`;
        var t;
      }
      const Fe = /^[^\/()?;=#]+/;
      function Le(e) {
        const t = e.match(Fe);
        return t ? t[0] : "";
      }
      const Ve = /^[^=?&#]+/;
      const Be = /^[^?&#]+/;
      class ze {
        constructor(e) {
          (this.url = e), (this.remaining = e);
        }
        parseRootSegment() {
          return (
            this.consumeOptional("/"),
            "" === this.remaining ||
            this.peekStartsWith("?") ||
            this.peekStartsWith("#")
              ? new we([], {})
              : new we([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const e = {};
          if (this.consumeOptional("?"))
            do {
              this.parseQueryParam(e);
            } while (this.consumeOptional("&"));
          return e;
        }
        parseFragment() {
          return this.consumeOptional("#")
            ? decodeURIComponent(this.remaining)
            : null;
        }
        parseChildren() {
          if ("" === this.remaining) return {};
          this.consumeOptional("/");
          const e = [];
          for (
            this.peekStartsWith("(") || e.push(this.parseSegment());
            this.peekStartsWith("/") &&
            !this.peekStartsWith("//") &&
            !this.peekStartsWith("/(");

          )
            this.capture("/"), e.push(this.parseSegment());
          let t = {};
          this.peekStartsWith("/(") &&
            (this.capture("/"), (t = this.parseParens(!0)));
          let n = {};
          return (
            this.peekStartsWith("(") && (n = this.parseParens(!1)),
            (e.length > 0 || Object.keys(t).length > 0) &&
              (n.primary = new we(e, t)),
            n
          );
        }
        parseSegment() {
          const e = Le(this.remaining);
          if ("" === e && this.peekStartsWith(";"))
            throw new Error(
              `Empty path url segment cannot have parameters: '${this.remaining}'.`
            );
          return this.capture(e), new Ce(Re(e), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const e = {};
          for (; this.consumeOptional(";"); ) this.parseParam(e);
          return e;
        }
        parseParam(e) {
          const t = Le(this.remaining);
          if (!t) return;
          this.capture(t);
          let n = "";
          if (this.consumeOptional("=")) {
            const e = Le(this.remaining);
            e && ((n = e), this.capture(n));
          }
          e[Re(t)] = Re(n);
        }
        parseQueryParam(e) {
          const t = (function (e) {
            const t = e.match(Ve);
            return t ? t[0] : "";
          })(this.remaining);
          if (!t) return;
          this.capture(t);
          let n = "";
          if (this.consumeOptional("=")) {
            const e = (function (e) {
              const t = e.match(Be);
              return t ? t[0] : "";
            })(this.remaining);
            e && ((n = e), this.capture(n));
          }
          const s = je(t),
            i = je(n);
          if (e.hasOwnProperty(s)) {
            let t = e[s];
            Array.isArray(t) || ((t = [t]), (e[s] = t)), t.push(i);
          } else e[s] = i;
        }
        parseParens(e) {
          const t = {};
          for (
            this.capture("(");
            !this.consumeOptional(")") && this.remaining.length > 0;

          ) {
            const n = Le(this.remaining),
              s = this.remaining[n.length];
            if ("/" !== s && ")" !== s && ";" !== s)
              throw new Error(`Cannot parse url '${this.url}'`);
            let i = void 0;
            n.indexOf(":") > -1
              ? ((i = n.substr(0, n.indexOf(":"))),
                this.capture(i),
                this.capture(":"))
              : e && (i = re);
            const r = this.parseChildren();
            (t[i] = 1 === Object.keys(r).length ? r.primary : new we([], r)),
              this.consumeOptional("//");
          }
          return t;
        }
        peekStartsWith(e) {
          return this.remaining.startsWith(e);
        }
        consumeOptional(e) {
          return (
            !!this.peekStartsWith(e) &&
            ((this.remaining = this.remaining.substring(e.length)), !0)
          );
        }
        capture(e) {
          if (!this.consumeOptional(e)) throw new Error(`Expected "${e}".`);
        }
      }
      class He {
        constructor(e) {
          this._root = e;
        }
        get root() {
          return this._root.value;
        }
        parent(e) {
          const t = this.pathFromRoot(e);
          return t.length > 1 ? t[t.length - 2] : null;
        }
        children(e) {
          const t = Ge(e, this._root);
          return t ? t.children.map((e) => e.value) : [];
        }
        firstChild(e) {
          const t = Ge(e, this._root);
          return t && t.children.length > 0 ? t.children[0].value : null;
        }
        siblings(e) {
          const t = Ue(e, this._root);
          if (t.length < 2) return [];
          return t[t.length - 2].children
            .map((e) => e.value)
            .filter((t) => t !== e);
        }
        pathFromRoot(e) {
          return Ue(e, this._root).map((e) => e.value);
        }
      }
      function Ge(e, t) {
        if (e === t.value) return t;
        for (const n of t.children) {
          const t = Ge(e, n);
          if (t) return t;
        }
        return null;
      }
      function Ue(e, t) {
        if (e === t.value) return [t];
        for (const n of t.children) {
          const s = Ue(e, n);
          if (s.length) return s.unshift(t), s;
        }
        return [];
      }
      class $e {
        constructor(e, t) {
          (this.value = e), (this.children = t);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function qe(e) {
        const t = {};
        return e && e.children.forEach((e) => (t[e.value.outlet] = e)), t;
      }
      class We extends He {
        constructor(e, t) {
          super(e), (this.snapshot = t), Ze(this, e);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function Ye(e, t) {
        const n = (function (e, t) {
            const n = new Je([], {}, {}, "", {}, re, t, null, e.root, -1, {});
            return new Xe("", new $e(n, []));
          })(e, t),
          s = new a.a([new Ce("", {})]),
          i = new a.a({}),
          r = new a.a({}),
          o = new a.a({}),
          l = new a.a(""),
          c = new Qe(s, i, o, l, r, re, t, n.root);
        return (c.snapshot = n.root), new We(new $e(c, []), n);
      }
      class Qe {
        constructor(e, t, n, s, i, r, o, a) {
          (this.url = e),
            (this.params = t),
            (this.queryParams = n),
            (this.fragment = s),
            (this.data = i),
            (this.outlet = r),
            (this.component = o),
            (this._futureSnapshot = a);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap ||
              (this._paramMap = this.params.pipe(Object(m.a)((e) => ae(e)))),
            this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap ||
              (this._queryParamMap = this.queryParams.pipe(
                Object(m.a)((e) => ae(e))
              )),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot
            ? this.snapshot.toString()
            : `Future(${this._futureSnapshot})`;
        }
      }
      function Ke(e, t = "emptyOnly") {
        const n = e.pathFromRoot;
        let s = 0;
        if ("always" !== t)
          for (s = n.length - 1; s >= 1; ) {
            const e = n[s],
              t = n[s - 1];
            if (e.routeConfig && "" === e.routeConfig.path) s--;
            else {
              if (t.component) break;
              s--;
            }
          }
        return (function (e) {
          return e.reduce(
            (e, t) => ({
              params: Object.assign(Object.assign({}, e.params), t.params),
              data: Object.assign(Object.assign({}, e.data), t.data),
              resolve: Object.assign(
                Object.assign({}, e.resolve),
                t._resolvedData
              ),
            }),
            { params: {}, data: {}, resolve: {} }
          );
        })(n.slice(s));
      }
      class Je {
        constructor(e, t, n, s, i, r, o, a, l, c, u) {
          (this.url = e),
            (this.params = t),
            (this.queryParams = n),
            (this.fragment = s),
            (this.data = i),
            (this.outlet = r),
            (this.component = o),
            (this.routeConfig = a),
            (this._urlSegment = l),
            (this._lastPathIndex = c),
            (this._resolve = u);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap || (this._paramMap = ae(this.params)), this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = ae(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return `Route(url:'${this.url
            .map((e) => e.toString())
            .join("/")}', path:'${
            this.routeConfig ? this.routeConfig.path : ""
          }')`;
        }
      }
      class Xe extends He {
        constructor(e, t) {
          super(t), (this.url = e), Ze(this, t);
        }
        toString() {
          return et(this._root);
        }
      }
      function Ze(e, t) {
        (t.value._routerState = e), t.children.forEach((t) => Ze(e, t));
      }
      function et(e) {
        const t =
          e.children.length > 0 ? ` { ${e.children.map(et).join(", ")} } ` : "";
        return `${e.value}${t}`;
      }
      function tt(e) {
        if (e.snapshot) {
          const t = e.snapshot,
            n = e._futureSnapshot;
          (e.snapshot = n),
            ue(t.queryParams, n.queryParams) ||
              e.queryParams.next(n.queryParams),
            t.fragment !== n.fragment && e.fragment.next(n.fragment),
            ue(t.params, n.params) || e.params.next(n.params),
            (function (e, t) {
              if (e.length !== t.length) return !1;
              for (let n = 0; n < e.length; ++n) if (!ue(e[n], t[n])) return !1;
              return !0;
            })(t.url, n.url) || e.url.next(n.url),
            ue(t.data, n.data) || e.data.next(n.data);
        } else
          (e.snapshot = e._futureSnapshot), e.data.next(e._futureSnapshot.data);
      }
      function nt(e, t) {
        const n =
          ue(e.params, t.params) &&
          ((s = e.url),
          (i = t.url),
          Se(s, i) && s.every((e, t) => ue(e.parameters, i[t].parameters)));
        var s, i;
        const r = !e.parent != !t.parent;
        return n && !r && (!e.parent || nt(e.parent, t.parent));
      }
      function st(e, t, n) {
        if (n && e.shouldReuseRoute(t.value, n.value.snapshot)) {
          const s = n.value;
          s._futureSnapshot = t.value;
          const i = (function (e, t, n) {
            return t.children.map((t) => {
              for (const s of n.children)
                if (e.shouldReuseRoute(t.value, s.value.snapshot))
                  return st(e, t, s);
              return st(e, t);
            });
          })(e, t, n);
          return new $e(s, i);
        }
        {
          const n = e.retrieve(t.value);
          if (n) {
            const e = n.route;
            return it(t, e), e;
          }
          {
            const n =
                ((s = t.value),
                new Qe(
                  new a.a(s.url),
                  new a.a(s.params),
                  new a.a(s.queryParams),
                  new a.a(s.fragment),
                  new a.a(s.data),
                  s.outlet,
                  s.component,
                  s
                )),
              i = t.children.map((t) => st(e, t));
            return new $e(n, i);
          }
        }
        var s;
      }
      function it(e, t) {
        if (e.value.routeConfig !== t.value.routeConfig)
          throw new Error(
            "Cannot reattach ActivatedRouteSnapshot created from a different route"
          );
        if (e.children.length !== t.children.length)
          throw new Error(
            "Cannot reattach ActivatedRouteSnapshot with a different number of children"
          );
        t.value._futureSnapshot = e.value;
        for (let n = 0; n < e.children.length; ++n)
          it(e.children[n], t.children[n]);
      }
      function rt(e, t, n, s, i) {
        if (0 === n.length) return lt(t.root, t.root, t, s, i);
        const r = (function (e) {
          if ("string" == typeof e[0] && 1 === e.length && "/" === e[0])
            return new ut(!0, 0, e);
          let t = 0,
            n = !1;
          const s = e.reduce((e, s, i) => {
            if ("object" == typeof s && null != s) {
              if (s.outlets) {
                const t = {};
                return (
                  me(s.outlets, (e, n) => {
                    t[n] = "string" == typeof e ? e.split("/") : e;
                  }),
                  [...e, { outlets: t }]
                );
              }
              if (s.segmentPath) return [...e, s.segmentPath];
            }
            return "string" != typeof s
              ? [...e, s]
              : 0 === i
              ? (s.split("/").forEach((s, i) => {
                  (0 == i && "." === s) ||
                    (0 == i && "" === s
                      ? (n = !0)
                      : ".." === s
                      ? t++
                      : "" != s && e.push(s));
                }),
                e)
              : [...e, s];
          }, []);
          return new ut(n, t, s);
        })(n);
        if (r.toRoot()) return lt(t.root, new we([], {}), t, s, i);
        const o = (function (e, t, n) {
            if (e.isAbsolute) return new dt(t.root, !0, 0);
            if (-1 === n.snapshot._lastPathIndex) {
              const e = n.snapshot._urlSegment,
                s = e === t.root;
              return new dt(e, s, 0);
            }
            const s = ot(e.commands[0]) ? 0 : 1,
              i = n.snapshot._lastPathIndex + s;
            return (function (e, t, n) {
              let s = e,
                i = t,
                r = n;
              for (; r > i; ) {
                if (((r -= i), (s = s.parent), !s))
                  throw new Error("Invalid number of '../'");
                i = s.segments.length;
              }
              return new dt(s, !1, i - r);
            })(n.snapshot._urlSegment, i, e.numberOfDoubleDots);
          })(r, t, e),
          a = o.processChildren
            ? pt(o.segmentGroup, o.index, r.commands)
            : ht(o.segmentGroup, o.index, r.commands);
        return lt(o.segmentGroup, a, t, s, i);
      }
      function ot(e) {
        return (
          "object" == typeof e && null != e && !e.outlets && !e.segmentPath
        );
      }
      function at(e) {
        return "object" == typeof e && null != e && e.outlets;
      }
      function lt(e, t, n, s, i) {
        let r = {};
        return (
          s &&
            me(s, (e, t) => {
              r[t] = Array.isArray(e) ? e.map((e) => "" + e) : "" + e;
            }),
          n.root === e ? new _e(t, r, i) : new _e(ct(n.root, e, t), r, i)
        );
      }
      function ct(e, t, n) {
        const s = {};
        return (
          me(e.children, (e, i) => {
            s[i] = e === t ? n : ct(e, t, n);
          }),
          new we(e.segments, s)
        );
      }
      class ut {
        constructor(e, t, n) {
          if (
            ((this.isAbsolute = e),
            (this.numberOfDoubleDots = t),
            (this.commands = n),
            e && n.length > 0 && ot(n[0]))
          )
            throw new Error("Root segment cannot have matrix parameters");
          const s = n.find(at);
          if (s && s !== pe(n))
            throw new Error("{outlets:{}} has to be the last command");
        }
        toRoot() {
          return (
            this.isAbsolute &&
            1 === this.commands.length &&
            "/" == this.commands[0]
          );
        }
      }
      class dt {
        constructor(e, t, n) {
          (this.segmentGroup = e), (this.processChildren = t), (this.index = n);
        }
      }
      function ht(e, t, n) {
        if (
          (e || (e = new we([], {})),
          0 === e.segments.length && e.hasChildren())
        )
          return pt(e, t, n);
        const s = (function (e, t, n) {
            let s = 0,
              i = t;
            const r = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; i < e.segments.length; ) {
              if (s >= n.length) return r;
              const t = e.segments[i],
                o = n[s];
              if (at(o)) break;
              const a = "" + o,
                l = s < n.length - 1 ? n[s + 1] : null;
              if (i > 0 && void 0 === a) break;
              if (a && l && "object" == typeof l && void 0 === l.outlets) {
                if (!yt(a, l, t)) return r;
                s += 2;
              } else {
                if (!yt(a, {}, t)) return r;
                s++;
              }
              i++;
            }
            return { match: !0, pathIndex: i, commandIndex: s };
          })(e, t, n),
          i = n.slice(s.commandIndex);
        if (s.match && s.pathIndex < e.segments.length) {
          const t = new we(e.segments.slice(0, s.pathIndex), {});
          return (
            (t.children.primary = new we(
              e.segments.slice(s.pathIndex),
              e.children
            )),
            pt(t, 0, i)
          );
        }
        return s.match && 0 === i.length
          ? new we(e.segments, {})
          : s.match && !e.hasChildren()
          ? mt(e, t, n)
          : s.match
          ? pt(e, 0, i)
          : mt(e, t, n);
      }
      function pt(e, t, n) {
        if (0 === n.length) return new we(e.segments, {});
        {
          const s = (function (e) {
              return at(e[0]) ? e[0].outlets : { [re]: e };
            })(n),
            i = {};
          return (
            me(s, (n, s) => {
              null !== n && (i[s] = ht(e.children[s], t, n));
            }),
            me(e.children, (e, t) => {
              void 0 === s[t] && (i[t] = e);
            }),
            new we(e.segments, i)
          );
        }
      }
      function mt(e, t, n) {
        const s = e.segments.slice(0, t);
        let i = 0;
        for (; i < n.length; ) {
          const r = n[i];
          if (at(r)) {
            const e = ft(r.outlets);
            return new we(s, e);
          }
          if (0 === i && ot(n[0])) {
            const r = e.segments[t];
            s.push(new Ce(r.path, n[0])), i++;
            continue;
          }
          const o = at(r) ? r.outlets.primary : "" + r,
            a = i < n.length - 1 ? n[i + 1] : null;
          o && a && ot(a)
            ? (s.push(new Ce(o, gt(a))), (i += 2))
            : (s.push(new Ce(o, {})), i++);
        }
        return new we(s, {});
      }
      function ft(e) {
        const t = {};
        return (
          me(e, (e, n) => {
            null !== e && (t[n] = mt(new we([], {}), 0, e));
          }),
          t
        );
      }
      function gt(e) {
        const t = {};
        return me(e, (e, n) => (t[n] = "" + e)), t;
      }
      function yt(e, t, n) {
        return e == n.path && ue(t, n.parameters);
      }
      class vt {
        constructor(e, t, n, s) {
          (this.routeReuseStrategy = e),
            (this.futureState = t),
            (this.currState = n),
            (this.forwardEvent = s);
        }
        activate(e) {
          const t = this.futureState._root,
            n = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(t, n, e),
            tt(this.futureState.root),
            this.activateChildRoutes(t, n, e);
        }
        deactivateChildRoutes(e, t, n) {
          const s = qe(t);
          e.children.forEach((e) => {
            const t = e.value.outlet;
            this.deactivateRoutes(e, s[t], n), delete s[t];
          }),
            me(s, (e, t) => {
              this.deactivateRouteAndItsChildren(e, n);
            });
        }
        deactivateRoutes(e, t, n) {
          const s = e.value,
            i = t ? t.value : null;
          if (s === i)
            if (s.component) {
              const i = n.getContext(s.outlet);
              i && this.deactivateChildRoutes(e, t, i.children);
            } else this.deactivateChildRoutes(e, t, n);
          else i && this.deactivateRouteAndItsChildren(t, n);
        }
        deactivateRouteAndItsChildren(e, t) {
          this.routeReuseStrategy.shouldDetach(e.value.snapshot)
            ? this.detachAndStoreRouteSubtree(e, t)
            : this.deactivateRouteAndOutlet(e, t);
        }
        detachAndStoreRouteSubtree(e, t) {
          const n = t.getContext(e.value.outlet);
          if (n && n.outlet) {
            const t = n.outlet.detach(),
              s = n.children.onOutletDeactivated();
            this.routeReuseStrategy.store(e.value.snapshot, {
              componentRef: t,
              route: e,
              contexts: s,
            });
          }
        }
        deactivateRouteAndOutlet(e, t) {
          const n = t.getContext(e.value.outlet);
          if (n) {
            const s = qe(e),
              i = e.value.component ? n.children : t;
            me(s, (e, t) => this.deactivateRouteAndItsChildren(e, i)),
              n.outlet &&
                (n.outlet.deactivate(), n.children.onOutletDeactivated());
          }
        }
        activateChildRoutes(e, t, n) {
          const s = qe(t);
          e.children.forEach((e) => {
            this.activateRoutes(e, s[e.value.outlet], n),
              this.forwardEvent(new se(e.value.snapshot));
          }),
            e.children.length && this.forwardEvent(new te(e.value.snapshot));
        }
        activateRoutes(e, t, n) {
          const s = e.value,
            i = t ? t.value : null;
          if ((tt(s), s === i))
            if (s.component) {
              const i = n.getOrCreateContext(s.outlet);
              this.activateChildRoutes(e, t, i.children);
            } else this.activateChildRoutes(e, t, n);
          else if (s.component) {
            const t = n.getOrCreateContext(s.outlet);
            if (this.routeReuseStrategy.shouldAttach(s.snapshot)) {
              const e = this.routeReuseStrategy.retrieve(s.snapshot);
              this.routeReuseStrategy.store(s.snapshot, null),
                t.children.onOutletReAttached(e.contexts),
                (t.attachRef = e.componentRef),
                (t.route = e.route.value),
                t.outlet && t.outlet.attach(e.componentRef, e.route.value),
                bt(e.route);
            } else {
              const n = (function (e) {
                  for (let t = e.parent; t; t = t.parent) {
                    const e = t.routeConfig;
                    if (e && e._loadedConfig) return e._loadedConfig;
                    if (e && e.component) return null;
                  }
                  return null;
                })(s.snapshot),
                i = n ? n.module.componentFactoryResolver : null;
              (t.attachRef = null),
                (t.route = s),
                (t.resolver = i),
                t.outlet && t.outlet.activateWith(s, i),
                this.activateChildRoutes(e, null, t.children);
            }
          } else this.activateChildRoutes(e, null, n);
        }
      }
      function bt(e) {
        tt(e.value), e.children.forEach(bt);
      }
      class xt {
        constructor(e, t) {
          (this.routes = e), (this.module = t);
        }
      }
      function _t(e) {
        return "function" == typeof e;
      }
      function wt(e) {
        return e instanceof _e;
      }
      const Ct = Symbol("INITIAL_VALUE");
      function St() {
        return Object(A.a)((e) =>
          Object(l.b)(
            ...e.map((e) => e.pipe(Object(D.a)(1), Object(M.a)(Ct)))
          ).pipe(
            (function (e, t) {
              let n = !1;
              return (
                arguments.length >= 2 && (n = !0),
                function (s) {
                  return s.lift(new P(e, t, n));
                }
              );
            })((e, t) => {
              let n = !1;
              return t.reduce((e, s, i) => {
                if (e !== Ct) return e;
                if ((s === Ct && (n = !0), !n)) {
                  if (!1 === s) return s;
                  if (i === t.length - 1 || wt(s)) return s;
                }
                return e;
              }, e);
            }, Ct),
            Object(g.a)((e) => e !== Ct),
            Object(m.a)((e) => (wt(e) ? e : !0 === e)),
            Object(D.a)(1)
          )
        );
      }
      class Et {}
      function kt(e, t = "") {
        for (let n = 0; n < e.length; n++) {
          const s = e[n];
          Ot(s, It(t, s));
        }
      }
      function Ot(e, t) {
        e.children && kt(e.children, t);
      }
      function It(e, t) {
        return t
          ? e || t.path
            ? e && !t.path
              ? e + "/"
              : !e && t.path
              ? t.path
              : `${e}/${t.path}`
            : ""
          : e;
      }
      function Tt(e) {
        const t = e.children && e.children.map(Tt),
          n = t
            ? Object.assign(Object.assign({}, e), { children: t })
            : Object.assign({}, e);
        return (
          !n.component &&
            (t || n.loadChildren) &&
            n.outlet &&
            n.outlet !== re &&
            (n.component = Et),
          n
        );
      }
      function At(e) {
        return e.outlet || re;
      }
      (Et.ɵfac = function (e) {
        return new (e || Et)();
      }),
        (Et.ɵcmp = i.Gc({
          type: Et,
          selectors: [["ng-component"]],
          decls: 1,
          vars: 0,
          template: function (e, t) {
            1 & e && i.Nc(0, "router-outlet");
          },
          directives: function () {
            return [En];
          },
          encapsulation: 2,
        }));
      class Dt {
        constructor(e) {
          this.segmentGroup = e || null;
        }
      }
      class Mt {
        constructor(e) {
          this.urlTree = e;
        }
      }
      function Pt(e) {
        return new c.a((t) => t.error(new Dt(e)));
      }
      function Rt(e) {
        return new c.a((t) => t.error(new Mt(e)));
      }
      function jt(e) {
        return new c.a((t) =>
          t.error(
            new Error(
              `Only absolute redirects can have named outlets. redirectTo: '${e}'`
            )
          )
        );
      }
      class Nt {
        constructor(e, t, n, s, r) {
          (this.configLoader = t),
            (this.urlSerializer = n),
            (this.urlTree = s),
            (this.config = r),
            (this.allowRedirects = !0),
            (this.ngModule = e.get(i.O));
        }
        apply() {
          return this.expandSegmentGroup(
            this.ngModule,
            this.config,
            this.urlTree.root,
            re
          )
            .pipe(
              Object(m.a)((e) =>
                this.createUrlTree(
                  e,
                  this.urlTree.queryParams,
                  this.urlTree.fragment
                )
              )
            )
            .pipe(
              Object(j.a)((e) => {
                if (e instanceof Mt)
                  return (this.allowRedirects = !1), this.match(e.urlTree);
                if (e instanceof Dt) throw this.noMatchError(e);
                throw e;
              })
            );
        }
        match(e) {
          return this.expandSegmentGroup(this.ngModule, this.config, e.root, re)
            .pipe(
              Object(m.a)((t) =>
                this.createUrlTree(t, e.queryParams, e.fragment)
              )
            )
            .pipe(
              Object(j.a)((e) => {
                if (e instanceof Dt) throw this.noMatchError(e);
                throw e;
              })
            );
        }
        noMatchError(e) {
          return new Error(
            `Cannot match any routes. URL Segment: '${e.segmentGroup}'`
          );
        }
        createUrlTree(e, t, n) {
          const s = e.segments.length > 0 ? new we([], { [re]: e }) : e;
          return new _e(s, t, n);
        }
        expandSegmentGroup(e, t, n, s) {
          return 0 === n.segments.length && n.hasChildren()
            ? this.expandChildren(e, t, n).pipe(
                Object(m.a)((e) => new we([], e))
              )
            : this.expandSegment(e, n, t, n.segments, s, !0);
        }
        expandChildren(e, t, n) {
          return fe(n.children, (n, s) => this.expandSegmentGroup(e, t, s, n));
        }
        expandSegment(e, t, n, s, i, a) {
          const c = (function (e) {
            return e.reduce((e, t) => {
              const n = At(t);
              return e.has(n) ? e.get(n).push(t) : e.set(n, [t]), e;
            }, new Map());
          })(n);
          c.has(i) || c.set(i, []);
          const d = (n) =>
              Object(o.a)(n).pipe(
                Object(N.a)((o) =>
                  this.expandSegmentAgainstRoute(e, t, n, o, s, i, a).pipe(
                    Object(j.a)((e) => {
                      if (e instanceof Dt) return Object(r.a)(null);
                      throw e;
                    })
                  )
                ),
                F((e) => null !== e),
                Object(j.a)((e) => {
                  if (e instanceof u || "EmptyError" === e.name) {
                    if (this.noLeftoversInUrl(t, s, i))
                      return Object(r.a)(new we([], {}));
                    throw new Dt(t);
                  }
                  throw e;
                })
              ),
            h = Array.from(c.entries()).map(([e, t]) => {
              const n = d(t);
              return e === i
                ? n
                : n.pipe(
                    Object(m.a)(() => null),
                    Object(j.a)(() => Object(r.a)(null))
                  );
            });
          return Object(o.a)(h).pipe(
            (e) => e.lift(new l.a(p)),
            F(),
            Object(m.a)((e) => e.find((e) => null !== e))
          );
          var p;
        }
        noLeftoversInUrl(e, t, n) {
          return 0 === t.length && !e.children[n];
        }
        expandSegmentAgainstRoute(e, t, n, s, i, r, o) {
          return At(s) !== r && "" !== s.path
            ? Pt(t)
            : void 0 === s.redirectTo
            ? this.matchSegmentAgainstRoute(e, t, s, i)
            : o && this.allowRedirects
            ? this.expandSegmentAgainstRouteUsingRedirect(e, t, n, s, i, r)
            : Pt(t);
        }
        expandSegmentAgainstRouteUsingRedirect(e, t, n, s, i, r) {
          return "**" === s.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(e, n, s, r)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(
                e,
                t,
                n,
                s,
                i,
                r
              );
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(e, t, n, s) {
          const i = this.applyRedirectCommands([], n.redirectTo, {});
          return n.redirectTo.startsWith("/")
            ? Rt(i)
            : this.lineralizeSegments(n, i).pipe(
                Object(L.a)((n) => {
                  const i = new we(n, {});
                  return this.expandSegment(e, i, t, n, s, !1);
                })
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(e, t, n, s, i, r) {
          const {
            matched: o,
            consumedSegments: a,
            lastChild: l,
            positionalParamSegments: c,
          } = Ft(t, s, i);
          if (!o) return Pt(t);
          const u = this.applyRedirectCommands(a, s.redirectTo, c);
          return s.redirectTo.startsWith("/")
            ? Rt(u)
            : this.lineralizeSegments(s, u).pipe(
                Object(L.a)((s) =>
                  this.expandSegment(e, t, n, s.concat(i.slice(l)), r, !1)
                )
              );
        }
        matchSegmentAgainstRoute(e, t, n, s) {
          if ("**" === n.path)
            return n.loadChildren
              ? this.configLoader
                  .load(e.injector, n)
                  .pipe(
                    Object(m.a)((e) => ((n._loadedConfig = e), new we(s, {})))
                  )
              : Object(r.a)(new we(s, {}));
          const { matched: i, consumedSegments: o, lastChild: a } = Ft(t, n, s);
          if (!i) return Pt(t);
          const l = s.slice(a);
          return this.getChildConfig(e, n, s).pipe(
            Object(L.a)((e) => {
              const n = e.module,
                s = e.routes,
                { segmentGroup: i, slicedSegments: a } = (function (
                  e,
                  t,
                  n,
                  s
                ) {
                  if (
                    n.length > 0 &&
                    (function (e, t, n) {
                      return n.some((n) => Vt(e, t, n) && At(n) !== re);
                    })(e, n, s)
                  ) {
                    return {
                      segmentGroup: Lt(
                        new we(
                          t,
                          (function (e, t) {
                            const n = {};
                            n.primary = t;
                            for (const s of e)
                              "" === s.path &&
                                At(s) !== re &&
                                (n[At(s)] = new we([], {}));
                            return n;
                          })(s, new we(n, e.children))
                        )
                      ),
                      slicedSegments: [],
                    };
                  }
                  if (
                    0 === n.length &&
                    (function (e, t, n) {
                      return n.some((n) => Vt(e, t, n));
                    })(e, n, s)
                  ) {
                    return {
                      segmentGroup: Lt(
                        new we(
                          e.segments,
                          (function (e, t, n, s) {
                            const i = {};
                            for (const r of n)
                              Vt(e, t, r) &&
                                !s[At(r)] &&
                                (i[At(r)] = new we([], {}));
                            return Object.assign(Object.assign({}, s), i);
                          })(e, n, s, e.children)
                        )
                      ),
                      slicedSegments: n,
                    };
                  }
                  return { segmentGroup: e, slicedSegments: n };
                })(t, o, l, s);
              if (0 === a.length && i.hasChildren()) {
                return this.expandChildren(n, s, i).pipe(
                  Object(m.a)((e) => new we(o, e))
                );
              }
              if (0 === s.length && 0 === a.length)
                return Object(r.a)(new we(o, {}));
              return this.expandSegment(n, i, s, a, re, !0).pipe(
                Object(m.a)((e) => new we(o.concat(e.segments), e.children))
              );
            })
          );
        }
        getChildConfig(e, t, n) {
          return t.children
            ? Object(r.a)(new xt(t.children, e))
            : t.loadChildren
            ? void 0 !== t._loadedConfig
              ? Object(r.a)(t._loadedConfig)
              : this.runCanLoadGuards(e.injector, t, n).pipe(
                  Object(L.a)((n) =>
                    n
                      ? this.configLoader
                          .load(e.injector, t)
                          .pipe(Object(m.a)((e) => ((t._loadedConfig = e), e)))
                      : (function (e) {
                          return new c.a((t) =>
                            t.error(
                              le(
                                `Cannot load children because the guard of the route "path: '${e.path}'" returned false`
                              )
                            )
                          );
                        })(t)
                  )
                )
            : Object(r.a)(new xt([], e));
        }
        runCanLoadGuards(e, t, n) {
          const s = t.canLoad;
          if (!s || 0 === s.length) return Object(r.a)(!0);
          const i = s.map((s) => {
            const i = e.get(s);
            let r;
            if (
              (function (e) {
                return e && _t(e.canLoad);
              })(i)
            )
              r = i.canLoad(t, n);
            else {
              if (!_t(i)) throw new Error("Invalid CanLoad guard");
              r = i(t, n);
            }
            return ge(r);
          });
          return Object(r.a)(i).pipe(
            St(),
            Object(V.a)((e) => {
              if (!wt(e)) return;
              const t = le(
                `Redirecting to "${this.urlSerializer.serialize(e)}"`
              );
              throw ((t.url = e), t);
            }),
            Object(m.a)((e) => !0 === e)
          );
        }
        lineralizeSegments(e, t) {
          let n = [],
            s = t.root;
          for (;;) {
            if (((n = n.concat(s.segments)), 0 === s.numberOfChildren))
              return Object(r.a)(n);
            if (s.numberOfChildren > 1 || !s.children.primary)
              return jt(e.redirectTo);
            s = s.children.primary;
          }
        }
        applyRedirectCommands(e, t, n) {
          return this.applyRedirectCreatreUrlTree(
            t,
            this.urlSerializer.parse(t),
            e,
            n
          );
        }
        applyRedirectCreatreUrlTree(e, t, n, s) {
          const i = this.createSegmentGroup(e, t.root, n, s);
          return new _e(
            i,
            this.createQueryParams(t.queryParams, this.urlTree.queryParams),
            t.fragment
          );
        }
        createQueryParams(e, t) {
          const n = {};
          return (
            me(e, (e, s) => {
              if ("string" == typeof e && e.startsWith(":")) {
                const i = e.substring(1);
                n[s] = t[i];
              } else n[s] = e;
            }),
            n
          );
        }
        createSegmentGroup(e, t, n, s) {
          const i = this.createSegments(e, t.segments, n, s);
          let r = {};
          return (
            me(t.children, (t, i) => {
              r[i] = this.createSegmentGroup(e, t, n, s);
            }),
            new we(i, r)
          );
        }
        createSegments(e, t, n, s) {
          return t.map((t) =>
            t.path.startsWith(":")
              ? this.findPosParam(e, t, s)
              : this.findOrReturn(t, n)
          );
        }
        findPosParam(e, t, n) {
          const s = n[t.path.substring(1)];
          if (!s)
            throw new Error(
              `Cannot redirect to '${e}'. Cannot find '${t.path}'.`
            );
          return s;
        }
        findOrReturn(e, t) {
          let n = 0;
          for (const s of t) {
            if (s.path === e.path) return t.splice(n), s;
            n++;
          }
          return e;
        }
      }
      function Ft(e, t, n) {
        if ("" === t.path)
          return "full" === t.pathMatch && (e.hasChildren() || n.length > 0)
            ? {
                matched: !1,
                consumedSegments: [],
                lastChild: 0,
                positionalParamSegments: {},
              }
            : {
                matched: !0,
                consumedSegments: [],
                lastChild: 0,
                positionalParamSegments: {},
              };
        const s = (t.matcher || ce)(n, e, t);
        return s
          ? {
              matched: !0,
              consumedSegments: s.consumed,
              lastChild: s.consumed.length,
              positionalParamSegments: s.posParams,
            }
          : {
              matched: !1,
              consumedSegments: [],
              lastChild: 0,
              positionalParamSegments: {},
            };
      }
      function Lt(e) {
        if (1 === e.numberOfChildren && e.children.primary) {
          const t = e.children.primary;
          return new we(e.segments.concat(t.segments), t.children);
        }
        return e;
      }
      function Vt(e, t, n) {
        return (
          (!(e.hasChildren() || t.length > 0) || "full" !== n.pathMatch) &&
          "" === n.path &&
          void 0 !== n.redirectTo
        );
      }
      function Bt(e, t, n, s) {
        return function (i) {
          return i.pipe(
            Object(A.a)((i) =>
              (function (e, t, n, s, i) {
                return new Nt(e, t, n, s, i).apply();
              })(e, t, n, i.extractedUrl, s).pipe(
                Object(m.a)((e) =>
                  Object.assign(Object.assign({}, i), { urlAfterRedirects: e })
                )
              )
            )
          );
        };
      }
      class zt {
        constructor(e) {
          (this.path = e), (this.route = this.path[this.path.length - 1]);
        }
      }
      class Ht {
        constructor(e, t) {
          (this.component = e), (this.route = t);
        }
      }
      function Gt(e, t, n) {
        const s = e._root;
        return $t(s, t ? t._root : null, n, [s.value]);
      }
      function Ut(e, t, n) {
        const s = (function (e) {
          if (!e) return null;
          for (let t = e.parent; t; t = t.parent) {
            const e = t.routeConfig;
            if (e && e._loadedConfig) return e._loadedConfig;
          }
          return null;
        })(t);
        return (s ? s.module.injector : n).get(e);
      }
      function $t(
        e,
        t,
        n,
        s,
        i = { canDeactivateChecks: [], canActivateChecks: [] }
      ) {
        const r = qe(t);
        return (
          e.children.forEach((e) => {
            !(function (
              e,
              t,
              n,
              s,
              i = { canDeactivateChecks: [], canActivateChecks: [] }
            ) {
              const r = e.value,
                o = t ? t.value : null,
                a = n ? n.getContext(e.value.outlet) : null;
              if (o && r.routeConfig === o.routeConfig) {
                const l = (function (e, t, n) {
                  if ("function" == typeof n) return n(e, t);
                  switch (n) {
                    case "pathParamsChange":
                      return !Se(e.url, t.url);
                    case "pathParamsOrQueryParamsChange":
                      return (
                        !Se(e.url, t.url) || !ue(e.queryParams, t.queryParams)
                      );
                    case "always":
                      return !0;
                    case "paramsOrQueryParamsChange":
                      return !nt(e, t) || !ue(e.queryParams, t.queryParams);
                    case "paramsChange":
                    default:
                      return !nt(e, t);
                  }
                })(o, r, r.routeConfig.runGuardsAndResolvers);
                l
                  ? i.canActivateChecks.push(new zt(s))
                  : ((r.data = o.data), (r._resolvedData = o._resolvedData)),
                  r.component
                    ? $t(e, t, a ? a.children : null, s, i)
                    : $t(e, t, n, s, i),
                  l &&
                    a &&
                    a.outlet &&
                    a.outlet.isActivated &&
                    i.canDeactivateChecks.push(new Ht(a.outlet.component, o));
              } else
                o && qt(t, a, i),
                  i.canActivateChecks.push(new zt(s)),
                  r.component
                    ? $t(e, null, a ? a.children : null, s, i)
                    : $t(e, null, n, s, i);
            })(e, r[e.value.outlet], n, s.concat([e.value]), i),
              delete r[e.value.outlet];
          }),
          me(r, (e, t) => qt(e, n.getContext(t), i)),
          i
        );
      }
      function qt(e, t, n) {
        const s = qe(e),
          i = e.value;
        me(s, (e, s) => {
          i.component
            ? qt(e, t ? t.children.getContext(s) : null, n)
            : qt(e, t, n);
        }),
          i.component && t && t.outlet && t.outlet.isActivated
            ? n.canDeactivateChecks.push(new Ht(t.outlet.component, i))
            : n.canDeactivateChecks.push(new Ht(null, i));
      }
      function Wt(e, t) {
        return function (n) {
          return n.pipe(
            Object(L.a)((n) => {
              const {
                targetSnapshot: s,
                currentSnapshot: i,
                guards: { canActivateChecks: a, canDeactivateChecks: l },
              } = n;
              return 0 === l.length && 0 === a.length
                ? Object(r.a)(
                    Object.assign(Object.assign({}, n), { guardsResult: !0 })
                  )
                : (function (e, t, n, s) {
                    return Object(o.a)(e).pipe(
                      Object(L.a)((e) =>
                        (function (e, t, n, s, i) {
                          const o =
                            t && t.routeConfig
                              ? t.routeConfig.canDeactivate
                              : null;
                          if (!o || 0 === o.length) return Object(r.a)(!0);
                          const a = o.map((r) => {
                            const o = Ut(r, t, i);
                            let a;
                            if (
                              (function (e) {
                                return e && _t(e.canDeactivate);
                              })(o)
                            )
                              a = ge(o.canDeactivate(e, t, n, s));
                            else {
                              if (!_t(o))
                                throw new Error("Invalid CanDeactivate guard");
                              a = ge(o(e, t, n, s));
                            }
                            return a.pipe(F());
                          });
                          return Object(r.a)(a).pipe(St());
                        })(e.component, e.route, n, t, s)
                      ),
                      F((e) => !0 !== e, !0)
                    );
                  })(l, s, i, e).pipe(
                    Object(L.a)((n) =>
                      n && "boolean" == typeof n
                        ? (function (e, t, n, s) {
                            return Object(o.a)(t).pipe(
                              Object(N.a)((t) =>
                                Object(o.a)([
                                  Qt(t.route.parent, s),
                                  Yt(t.route, s),
                                  Jt(e, t.path, n),
                                  Kt(e, t.route, n),
                                ]).pipe(
                                  Object(f.a)(),
                                  F((e) => !0 !== e, !0)
                                )
                              ),
                              F((e) => !0 !== e, !0)
                            );
                          })(s, a, e, t)
                        : Object(r.a)(n)
                    ),
                    Object(m.a)((e) =>
                      Object.assign(Object.assign({}, n), { guardsResult: e })
                    )
                  );
            })
          );
        };
      }
      function Yt(e, t) {
        return null !== e && t && t(new ne(e)), Object(r.a)(!0);
      }
      function Qt(e, t) {
        return null !== e && t && t(new ee(e)), Object(r.a)(!0);
      }
      function Kt(e, t, n) {
        const s = t.routeConfig ? t.routeConfig.canActivate : null;
        if (!s || 0 === s.length) return Object(r.a)(!0);
        const i = s.map((s) =>
          Object(d.a)(() => {
            const i = Ut(s, t, n);
            let r;
            if (
              (function (e) {
                return e && _t(e.canActivate);
              })(i)
            )
              r = ge(i.canActivate(t, e));
            else {
              if (!_t(i)) throw new Error("Invalid CanActivate guard");
              r = ge(i(t, e));
            }
            return r.pipe(F());
          })
        );
        return Object(r.a)(i).pipe(St());
      }
      function Jt(e, t, n) {
        const s = t[t.length - 1],
          i = t
            .slice(0, t.length - 1)
            .reverse()
            .map((e) =>
              (function (e) {
                const t = e.routeConfig ? e.routeConfig.canActivateChild : null;
                return t && 0 !== t.length ? { node: e, guards: t } : null;
              })(e)
            )
            .filter((e) => null !== e)
            .map((t) =>
              Object(d.a)(() => {
                const i = t.guards.map((i) => {
                  const r = Ut(i, t.node, n);
                  let o;
                  if (
                    (function (e) {
                      return e && _t(e.canActivateChild);
                    })(r)
                  )
                    o = ge(r.canActivateChild(s, e));
                  else {
                    if (!_t(r))
                      throw new Error("Invalid CanActivateChild guard");
                    o = ge(r(s, e));
                  }
                  return o.pipe(F());
                });
                return Object(r.a)(i).pipe(St());
              })
            );
        return Object(r.a)(i).pipe(St());
      }
      class Xt {}
      class Zt {
        constructor(e, t, n, s, i, r) {
          (this.rootComponentType = e),
            (this.config = t),
            (this.urlTree = n),
            (this.url = s),
            (this.paramsInheritanceStrategy = i),
            (this.relativeLinkResolution = r);
        }
        recognize() {
          try {
            const e = nn(
                this.urlTree.root,
                [],
                [],
                this.config,
                this.relativeLinkResolution
              ).segmentGroup,
              t = this.processSegmentGroup(this.config, e, re),
              n = new Je(
                [],
                Object.freeze({}),
                Object.freeze(Object.assign({}, this.urlTree.queryParams)),
                this.urlTree.fragment,
                {},
                re,
                this.rootComponentType,
                null,
                this.urlTree.root,
                -1,
                {}
              ),
              s = new $e(n, t),
              i = new Xe(this.url, s);
            return this.inheritParamsAndData(i._root), Object(r.a)(i);
          } catch (e) {
            return new c.a((t) => t.error(e));
          }
        }
        inheritParamsAndData(e) {
          const t = e.value,
            n = Ke(t, this.paramsInheritanceStrategy);
          (t.params = Object.freeze(n.params)),
            (t.data = Object.freeze(n.data)),
            e.children.forEach((e) => this.inheritParamsAndData(e));
        }
        processSegmentGroup(e, t, n) {
          return 0 === t.segments.length && t.hasChildren()
            ? this.processChildren(e, t)
            : this.processSegment(e, t, t.segments, n);
        }
        processChildren(e, t) {
          const n = Ee(t, (t, n) => this.processSegmentGroup(e, t, n));
          return (
            (function (e) {
              const t = {};
              e.forEach((e) => {
                const n = t[e.value.outlet];
                if (n) {
                  const t = n.url.map((e) => e.toString()).join("/"),
                    s = e.value.url.map((e) => e.toString()).join("/");
                  throw new Error(
                    `Two segments cannot have the same outlet name: '${t}' and '${s}'.`
                  );
                }
                t[e.value.outlet] = e.value;
              });
            })(n),
            n.sort((e, t) =>
              e.value.outlet === re
                ? -1
                : t.value.outlet === re
                ? 1
                : e.value.outlet.localeCompare(t.value.outlet)
            ),
            n
          );
        }
        processSegment(e, t, n, s) {
          for (const r of e)
            try {
              return this.processSegmentAgainstRoute(r, t, n, s);
            } catch (i) {
              if (!(i instanceof Xt)) throw i;
            }
          if (this.noLeftoversInUrl(t, n, s)) return [];
          throw new Xt();
        }
        noLeftoversInUrl(e, t, n) {
          return 0 === t.length && !e.children[n];
        }
        processSegmentAgainstRoute(e, t, n, s) {
          if (e.redirectTo) throw new Xt();
          if ((e.outlet || re) !== s) throw new Xt();
          let i,
            r = [],
            o = [];
          if ("**" === e.path) {
            const r = n.length > 0 ? pe(n).parameters : {};
            i = new Je(
              n,
              r,
              Object.freeze(Object.assign({}, this.urlTree.queryParams)),
              this.urlTree.fragment,
              on(e),
              s,
              e.component,
              e,
              en(t),
              tn(t) + n.length,
              an(e)
            );
          } else {
            const a = (function (e, t, n) {
              if ("" === t.path) {
                if ("full" === t.pathMatch && (e.hasChildren() || n.length > 0))
                  throw new Xt();
                return { consumedSegments: [], lastChild: 0, parameters: {} };
              }
              const s = (t.matcher || ce)(n, e, t);
              if (!s) throw new Xt();
              const i = {};
              me(s.posParams, (e, t) => {
                i[t] = e.path;
              });
              const r =
                s.consumed.length > 0
                  ? Object.assign(
                      Object.assign({}, i),
                      s.consumed[s.consumed.length - 1].parameters
                    )
                  : i;
              return {
                consumedSegments: s.consumed,
                lastChild: s.consumed.length,
                parameters: r,
              };
            })(t, e, n);
            (r = a.consumedSegments),
              (o = n.slice(a.lastChild)),
              (i = new Je(
                r,
                a.parameters,
                Object.freeze(Object.assign({}, this.urlTree.queryParams)),
                this.urlTree.fragment,
                on(e),
                s,
                e.component,
                e,
                en(t),
                tn(t) + r.length,
                an(e)
              ));
          }
          const a = (function (e) {
              if (e.children) return e.children;
              if (e.loadChildren) return e._loadedConfig.routes;
              return [];
            })(e),
            { segmentGroup: l, slicedSegments: c } = nn(
              t,
              r,
              o,
              a,
              this.relativeLinkResolution
            );
          if (0 === c.length && l.hasChildren()) {
            const e = this.processChildren(a, l);
            return [new $e(i, e)];
          }
          if (0 === a.length && 0 === c.length) return [new $e(i, [])];
          const u = this.processSegment(a, l, c, re);
          return [new $e(i, u)];
        }
      }
      function en(e) {
        let t = e;
        for (; t._sourceSegment; ) t = t._sourceSegment;
        return t;
      }
      function tn(e) {
        let t = e,
          n = t._segmentIndexShift ? t._segmentIndexShift : 0;
        for (; t._sourceSegment; )
          (t = t._sourceSegment),
            (n += t._segmentIndexShift ? t._segmentIndexShift : 0);
        return n - 1;
      }
      function nn(e, t, n, s, i) {
        if (
          n.length > 0 &&
          (function (e, t, n) {
            return n.some((n) => sn(e, t, n) && rn(n) !== re);
          })(e, n, s)
        ) {
          const i = new we(
            t,
            (function (e, t, n, s) {
              const i = {};
              (i.primary = s),
                (s._sourceSegment = e),
                (s._segmentIndexShift = t.length);
              for (const r of n)
                if ("" === r.path && rn(r) !== re) {
                  const n = new we([], {});
                  (n._sourceSegment = e),
                    (n._segmentIndexShift = t.length),
                    (i[rn(r)] = n);
                }
              return i;
            })(e, t, s, new we(n, e.children))
          );
          return (
            (i._sourceSegment = e),
            (i._segmentIndexShift = t.length),
            { segmentGroup: i, slicedSegments: [] }
          );
        }
        if (
          0 === n.length &&
          (function (e, t, n) {
            return n.some((n) => sn(e, t, n));
          })(e, n, s)
        ) {
          const r = new we(
            e.segments,
            (function (e, t, n, s, i, r) {
              const o = {};
              for (const a of s)
                if (sn(e, n, a) && !i[rn(a)]) {
                  const n = new we([], {});
                  (n._sourceSegment = e),
                    (n._segmentIndexShift =
                      "legacy" === r ? e.segments.length : t.length),
                    (o[rn(a)] = n);
                }
              return Object.assign(Object.assign({}, i), o);
            })(e, t, n, s, e.children, i)
          );
          return (
            (r._sourceSegment = e),
            (r._segmentIndexShift = t.length),
            { segmentGroup: r, slicedSegments: n }
          );
        }
        const r = new we(e.segments, e.children);
        return (
          (r._sourceSegment = e),
          (r._segmentIndexShift = t.length),
          { segmentGroup: r, slicedSegments: n }
        );
      }
      function sn(e, t, n) {
        return (
          (!(e.hasChildren() || t.length > 0) || "full" !== n.pathMatch) &&
          "" === n.path &&
          void 0 === n.redirectTo
        );
      }
      function rn(e) {
        return e.outlet || re;
      }
      function on(e) {
        return e.data || {};
      }
      function an(e) {
        return e.resolve || {};
      }
      function ln(e, t, n, s, i) {
        return function (r) {
          return r.pipe(
            Object(L.a)((r) =>
              (function (e, t, n, s, i = "emptyOnly", r = "legacy") {
                return new Zt(e, t, n, s, i, r).recognize();
              })(e, t, r.urlAfterRedirects, n(r.urlAfterRedirects), s, i).pipe(
                Object(m.a)((e) =>
                  Object.assign(Object.assign({}, r), { targetSnapshot: e })
                )
              )
            )
          );
        };
      }
      function cn(e, t) {
        return function (n) {
          return n.pipe(
            Object(L.a)((n) => {
              const {
                targetSnapshot: s,
                guards: { canActivateChecks: i },
              } = n;
              if (!i.length) return Object(r.a)(n);
              let a = 0;
              return Object(o.a)(i).pipe(
                Object(N.a)((n) =>
                  (function (e, t, n, s) {
                    return (function (e, t, n, s) {
                      const i = Object.keys(e);
                      if (0 === i.length) return Object(r.a)({});
                      const a = {};
                      return Object(o.a)(i).pipe(
                        Object(L.a)((i) =>
                          (function (e, t, n, s) {
                            const i = Ut(e, t, s);
                            return i.resolve
                              ? ge(i.resolve(t, n))
                              : ge(i(t, n));
                          })(e[i], t, n, s).pipe(
                            Object(V.a)((e) => {
                              a[i] = e;
                            })
                          )
                        ),
                        b(1),
                        Object(L.a)(() =>
                          Object.keys(a).length === i.length
                            ? Object(r.a)(a)
                            : h.a
                        )
                      );
                    })(e._resolve, e, t, s).pipe(
                      Object(m.a)(
                        (t) => (
                          (e._resolvedData = t),
                          (e.data = Object.assign(
                            Object.assign({}, e.data),
                            Ke(e, n).resolve
                          )),
                          null
                        )
                      )
                    );
                  })(n.route, s, e, t)
                ),
                Object(V.a)(() => a++),
                b(1),
                Object(L.a)((e) => (a === i.length ? Object(r.a)(n) : h.a))
              );
            })
          );
        };
      }
      function un(e) {
        return function (t) {
          return t.pipe(
            Object(A.a)((t) => {
              const n = e(t);
              return n
                ? Object(o.a)(n).pipe(Object(m.a)(() => t))
                : Object(o.a)([t]);
            })
          );
        };
      }
      class dn extends class {
        shouldDetach(e) {
          return !1;
        }
        store(e, t) {}
        shouldAttach(e) {
          return !1;
        }
        retrieve(e) {
          return null;
        }
        shouldReuseRoute(e, t) {
          return e.routeConfig === t.routeConfig;
        }
      } {}
      const hn = new i.E("ROUTES");
      class pn {
        constructor(e, t, n, s) {
          (this.loader = e),
            (this.compiler = t),
            (this.onLoadStartListener = n),
            (this.onLoadEndListener = s);
        }
        load(e, t) {
          this.onLoadStartListener && this.onLoadStartListener(t);
          return this.loadModuleFactory(t.loadChildren).pipe(
            Object(m.a)((n) => {
              this.onLoadEndListener && this.onLoadEndListener(t);
              const s = n.create(e);
              return new xt(he(s.injector.get(hn)).map(Tt), s);
            })
          );
        }
        loadModuleFactory(e) {
          return "string" == typeof e
            ? Object(o.a)(this.loader.load(e))
            : ge(e()).pipe(
                Object(L.a)((e) =>
                  e instanceof i.M
                    ? Object(r.a)(e)
                    : Object(o.a)(this.compiler.compileModuleAsync(e))
                )
              );
        }
      }
      class mn {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.resolver = null),
            (this.children = new fn()),
            (this.attachRef = null);
        }
      }
      class fn {
        constructor() {
          this.contexts = new Map();
        }
        onChildOutletCreated(e, t) {
          const n = this.getOrCreateContext(e);
          (n.outlet = t), this.contexts.set(e, n);
        }
        onChildOutletDestroyed(e) {
          const t = this.getContext(e);
          t && (t.outlet = null);
        }
        onOutletDeactivated() {
          const e = this.contexts;
          return (this.contexts = new Map()), e;
        }
        onOutletReAttached(e) {
          this.contexts = e;
        }
        getOrCreateContext(e) {
          let t = this.getContext(e);
          return t || ((t = new mn()), this.contexts.set(e, t)), t;
        }
        getContext(e) {
          return this.contexts.get(e) || null;
        }
      }
      class gn {
        shouldProcessUrl(e) {
          return !0;
        }
        extract(e) {
          return e;
        }
        merge(e, t) {
          return e;
        }
      }
      function yn(e) {
        throw e;
      }
      function vn(e, t, n) {
        return t.parse("/");
      }
      function bn(e, t) {
        return Object(r.a)(null);
      }
      class xn {
        constructor(e, t, n, s, r, o, l, c) {
          (this.rootComponentType = e),
            (this.urlSerializer = t),
            (this.rootContexts = n),
            (this.location = s),
            (this.config = c),
            (this.lastSuccessfulNavigation = null),
            (this.currentNavigation = null),
            (this.lastLocationChangeInfo = null),
            (this.navigationId = 0),
            (this.isNgZoneEnabled = !1),
            (this.events = new p.a()),
            (this.errorHandler = yn),
            (this.malformedUriErrorHandler = vn),
            (this.navigated = !1),
            (this.lastSuccessfulId = -1),
            (this.hooks = { beforePreactivation: bn, afterPreactivation: bn }),
            (this.urlHandlingStrategy = new gn()),
            (this.routeReuseStrategy = new dn()),
            (this.onSameUrlNavigation = "ignore"),
            (this.paramsInheritanceStrategy = "emptyOnly"),
            (this.urlUpdateStrategy = "deferred"),
            (this.relativeLinkResolution = "corrected");
          (this.ngModule = r.get(i.O)), (this.console = r.get(i.yb));
          const u = r.get(i.Q);
          (this.isNgZoneEnabled = u instanceof i.Q),
            this.resetConfig(c),
            (this.currentUrlTree = new _e(new we([], {}), {}, null)),
            (this.rawUrlTree = this.currentUrlTree),
            (this.browserUrlTree = this.currentUrlTree),
            (this.configLoader = new pn(
              o,
              l,
              (e) => this.triggerEvent(new X(e)),
              (e) => this.triggerEvent(new Z(e))
            )),
            (this.routerState = Ye(
              this.currentUrlTree,
              this.rootComponentType
            )),
            (this.transitions = new a.a({
              id: 0,
              currentUrlTree: this.currentUrlTree,
              currentRawUrl: this.currentUrlTree,
              extractedUrl: this.urlHandlingStrategy.extract(
                this.currentUrlTree
              ),
              urlAfterRedirects: this.urlHandlingStrategy.extract(
                this.currentUrlTree
              ),
              rawUrl: this.currentUrlTree,
              extras: {},
              resolve: null,
              reject: null,
              promise: Promise.resolve(!0),
              source: "imperative",
              restoredState: null,
              currentSnapshot: this.routerState.snapshot,
              targetSnapshot: null,
              currentRouterState: this.routerState,
              targetRouterState: null,
              guards: { canActivateChecks: [], canDeactivateChecks: [] },
              guardsResult: null,
            })),
            (this.navigations = this.setupNavigations(this.transitions)),
            this.processNavigations();
        }
        setupNavigations(e) {
          const t = this.events;
          return e.pipe(
            Object(g.a)((e) => 0 !== e.id),
            Object(m.a)((e) =>
              Object.assign(Object.assign({}, e), {
                extractedUrl: this.urlHandlingStrategy.extract(e.rawUrl),
              })
            ),
            Object(A.a)((e) => {
              let n = !1,
                s = !1;
              return Object(r.a)(e).pipe(
                Object(V.a)((e) => {
                  this.currentNavigation = {
                    id: e.id,
                    initialUrl: e.currentRawUrl,
                    extractedUrl: e.extractedUrl,
                    trigger: e.source,
                    extras: e.extras,
                    previousNavigation: this.lastSuccessfulNavigation
                      ? Object.assign(
                          Object.assign({}, this.lastSuccessfulNavigation),
                          { previousNavigation: null }
                        )
                      : null,
                  };
                }),
                Object(A.a)((e) => {
                  const n =
                    !this.navigated ||
                    e.extractedUrl.toString() !==
                      this.browserUrlTree.toString();
                  if (
                    ("reload" === this.onSameUrlNavigation || n) &&
                    this.urlHandlingStrategy.shouldProcessUrl(e.rawUrl)
                  )
                    return Object(r.a)(e).pipe(
                      Object(A.a)((e) => {
                        const n = this.transitions.getValue();
                        return (
                          t.next(
                            new G(
                              e.id,
                              this.serializeUrl(e.extractedUrl),
                              e.source,
                              e.restoredState
                            )
                          ),
                          n !== this.transitions.getValue() ? h.a : [e]
                        );
                      }),
                      Object(A.a)((e) => Promise.resolve(e)),
                      Bt(
                        this.ngModule.injector,
                        this.configLoader,
                        this.urlSerializer,
                        this.config
                      ),
                      Object(V.a)((e) => {
                        this.currentNavigation = Object.assign(
                          Object.assign({}, this.currentNavigation),
                          { finalUrl: e.urlAfterRedirects }
                        );
                      }),
                      ln(
                        this.rootComponentType,
                        this.config,
                        (e) => this.serializeUrl(e),
                        this.paramsInheritanceStrategy,
                        this.relativeLinkResolution
                      ),
                      Object(V.a)((e) => {
                        "eager" === this.urlUpdateStrategy &&
                          (e.extras.skipLocationChange ||
                            this.setBrowserUrl(
                              e.urlAfterRedirects,
                              !!e.extras.replaceUrl,
                              e.id,
                              e.extras.state
                            ),
                          (this.browserUrlTree = e.urlAfterRedirects));
                      }),
                      Object(V.a)((e) => {
                        const n = new W(
                          e.id,
                          this.serializeUrl(e.extractedUrl),
                          this.serializeUrl(e.urlAfterRedirects),
                          e.targetSnapshot
                        );
                        t.next(n);
                      })
                    );
                  if (
                    n &&
                    this.rawUrlTree &&
                    this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)
                  ) {
                    const {
                        id: n,
                        extractedUrl: s,
                        source: i,
                        restoredState: o,
                        extras: a,
                      } = e,
                      l = new G(n, this.serializeUrl(s), i, o);
                    t.next(l);
                    const c = Ye(s, this.rootComponentType).snapshot;
                    return Object(r.a)(
                      Object.assign(Object.assign({}, e), {
                        targetSnapshot: c,
                        urlAfterRedirects: s,
                        extras: Object.assign(Object.assign({}, a), {
                          skipLocationChange: !1,
                          replaceUrl: !1,
                        }),
                      })
                    );
                  }
                  return (
                    (this.rawUrlTree = e.rawUrl),
                    (this.browserUrlTree = e.urlAfterRedirects),
                    e.resolve(null),
                    h.a
                  );
                }),
                un((e) => {
                  const {
                    targetSnapshot: t,
                    id: n,
                    extractedUrl: s,
                    rawUrl: i,
                    extras: { skipLocationChange: r, replaceUrl: o },
                  } = e;
                  return this.hooks.beforePreactivation(t, {
                    navigationId: n,
                    appliedUrlTree: s,
                    rawUrlTree: i,
                    skipLocationChange: !!r,
                    replaceUrl: !!o,
                  });
                }),
                Object(V.a)((e) => {
                  const t = new Y(
                    e.id,
                    this.serializeUrl(e.extractedUrl),
                    this.serializeUrl(e.urlAfterRedirects),
                    e.targetSnapshot
                  );
                  this.triggerEvent(t);
                }),
                Object(m.a)((e) =>
                  Object.assign(Object.assign({}, e), {
                    guards: Gt(
                      e.targetSnapshot,
                      e.currentSnapshot,
                      this.rootContexts
                    ),
                  })
                ),
                Wt(this.ngModule.injector, (e) => this.triggerEvent(e)),
                Object(V.a)((e) => {
                  if (wt(e.guardsResult)) {
                    const t = le(
                      `Redirecting to "${this.serializeUrl(e.guardsResult)}"`
                    );
                    throw ((t.url = e.guardsResult), t);
                  }
                }),
                Object(V.a)((e) => {
                  const t = new Q(
                    e.id,
                    this.serializeUrl(e.extractedUrl),
                    this.serializeUrl(e.urlAfterRedirects),
                    e.targetSnapshot,
                    !!e.guardsResult
                  );
                  this.triggerEvent(t);
                }),
                Object(g.a)((e) => {
                  if (!e.guardsResult) {
                    this.resetUrlToCurrentUrlTree();
                    const n = new $(
                      e.id,
                      this.serializeUrl(e.extractedUrl),
                      ""
                    );
                    return t.next(n), e.resolve(!1), !1;
                  }
                  return !0;
                }),
                un((e) => {
                  if (e.guards.canActivateChecks.length)
                    return Object(r.a)(e).pipe(
                      Object(V.a)((e) => {
                        const t = new K(
                          e.id,
                          this.serializeUrl(e.extractedUrl),
                          this.serializeUrl(e.urlAfterRedirects),
                          e.targetSnapshot
                        );
                        this.triggerEvent(t);
                      }),
                      Object(A.a)((e) => {
                        let n = !1;
                        return Object(r.a)(e).pipe(
                          cn(
                            this.paramsInheritanceStrategy,
                            this.ngModule.injector
                          ),
                          Object(V.a)({
                            next: () => (n = !0),
                            complete: () => {
                              if (!n) {
                                const n = new $(
                                  e.id,
                                  this.serializeUrl(e.extractedUrl),
                                  "At least one route resolver didn't emit any value."
                                );
                                t.next(n), e.resolve(!1);
                              }
                            },
                          })
                        );
                      }),
                      Object(V.a)((e) => {
                        const t = new J(
                          e.id,
                          this.serializeUrl(e.extractedUrl),
                          this.serializeUrl(e.urlAfterRedirects),
                          e.targetSnapshot
                        );
                        this.triggerEvent(t);
                      })
                    );
                }),
                un((e) => {
                  const {
                    targetSnapshot: t,
                    id: n,
                    extractedUrl: s,
                    rawUrl: i,
                    extras: { skipLocationChange: r, replaceUrl: o },
                  } = e;
                  return this.hooks.afterPreactivation(t, {
                    navigationId: n,
                    appliedUrlTree: s,
                    rawUrlTree: i,
                    skipLocationChange: !!r,
                    replaceUrl: !!o,
                  });
                }),
                Object(m.a)((e) => {
                  const t = (function (e, t, n) {
                    const s = st(e, t._root, n ? n._root : void 0);
                    return new We(s, t);
                  })(
                    this.routeReuseStrategy,
                    e.targetSnapshot,
                    e.currentRouterState
                  );
                  return Object.assign(Object.assign({}, e), {
                    targetRouterState: t,
                  });
                }),
                Object(V.a)((e) => {
                  (this.currentUrlTree = e.urlAfterRedirects),
                    (this.rawUrlTree = this.urlHandlingStrategy.merge(
                      this.currentUrlTree,
                      e.rawUrl
                    )),
                    (this.routerState = e.targetRouterState),
                    "deferred" === this.urlUpdateStrategy &&
                      (e.extras.skipLocationChange ||
                        this.setBrowserUrl(
                          this.rawUrlTree,
                          !!e.extras.replaceUrl,
                          e.id,
                          e.extras.state
                        ),
                      (this.browserUrlTree = e.urlAfterRedirects));
                }),
                ((i = this.rootContexts),
                (o = this.routeReuseStrategy),
                (a = (e) => this.triggerEvent(e)),
                Object(m.a)(
                  (e) => (
                    new vt(
                      o,
                      e.targetRouterState,
                      e.currentRouterState,
                      a
                    ).activate(i),
                    e
                  )
                )),
                Object(V.a)({
                  next() {
                    n = !0;
                  },
                  complete() {
                    n = !0;
                  },
                }),
                Object(B.a)(() => {
                  if (!n && !s) {
                    this.resetUrlToCurrentUrlTree();
                    const n = new $(
                      e.id,
                      this.serializeUrl(e.extractedUrl),
                      `Navigation ID ${e.id} is not equal to the current navigation id ${this.navigationId}`
                    );
                    t.next(n), e.resolve(!1);
                  }
                  this.currentNavigation = null;
                }),
                Object(j.a)((n) => {
                  if (((s = !0), (i = n) && i.ngNavigationCancelingError)) {
                    const s = wt(n.url);
                    s ||
                      ((this.navigated = !0),
                      this.resetStateAndUrl(
                        e.currentRouterState,
                        e.currentUrlTree,
                        e.rawUrl
                      ));
                    const i = new $(
                      e.id,
                      this.serializeUrl(e.extractedUrl),
                      n.message
                    );
                    t.next(i),
                      s
                        ? setTimeout(() => {
                            const t = this.urlHandlingStrategy.merge(
                                n.url,
                                this.rawUrlTree
                              ),
                              s = {
                                skipLocationChange: e.extras.skipLocationChange,
                                replaceUrl: "eager" === this.urlUpdateStrategy,
                              };
                            return this.scheduleNavigation(
                              t,
                              "imperative",
                              null,
                              s,
                              {
                                resolve: e.resolve,
                                reject: e.reject,
                                promise: e.promise,
                              }
                            );
                          }, 0)
                        : e.resolve(!1);
                  } else {
                    this.resetStateAndUrl(
                      e.currentRouterState,
                      e.currentUrlTree,
                      e.rawUrl
                    );
                    const s = new q(e.id, this.serializeUrl(e.extractedUrl), n);
                    t.next(s);
                    try {
                      e.resolve(this.errorHandler(n));
                    } catch (r) {
                      e.reject(r);
                    }
                  }
                  var i;
                  return h.a;
                })
              );
              var i, o, a;
            })
          );
        }
        resetRootComponentType(e) {
          (this.rootComponentType = e),
            (this.routerState.root.component = this.rootComponentType);
        }
        getTransition() {
          const e = this.transitions.value;
          return (e.urlAfterRedirects = this.browserUrlTree), e;
        }
        setTransition(e) {
          this.transitions.next(
            Object.assign(Object.assign({}, this.getTransition()), e)
          );
        }
        initialNavigation() {
          this.setUpLocationChangeListener(),
            0 === this.navigationId &&
              this.navigateByUrl(this.location.path(!0), { replaceUrl: !0 });
        }
        setUpLocationChangeListener() {
          this.locationSubscription ||
            (this.locationSubscription = this.location.subscribe((e) => {
              const t = this.extractLocationChangeInfoFromEvent(e);
              this.shouldScheduleNavigation(this.lastLocationChangeInfo, t) &&
                setTimeout(() => {
                  const { source: e, state: n, urlTree: s } = t,
                    i = { replaceUrl: !0 };
                  if (n) {
                    const e = Object.assign({}, n);
                    delete e.navigationId,
                      0 !== Object.keys(e).length && (i.state = e);
                  }
                  this.scheduleNavigation(s, e, n, i);
                }, 0),
                (this.lastLocationChangeInfo = t);
            }));
        }
        extractLocationChangeInfoFromEvent(e) {
          var t;
          return {
            source: "popstate" === e.type ? "popstate" : "hashchange",
            urlTree: this.parseUrl(e.url),
            state: (
              null === (t = e.state) || void 0 === t ? void 0 : t.navigationId
            )
              ? e.state
              : null,
            transitionId: this.getTransition().id,
          };
        }
        shouldScheduleNavigation(e, t) {
          if (!e) return !0;
          const n = t.urlTree.toString() === e.urlTree.toString();
          return (
            !(t.transitionId === e.transitionId) ||
            !n ||
            !(
              ("hashchange" === t.source && "popstate" === e.source) ||
              ("popstate" === t.source && "hashchange" === e.source)
            )
          );
        }
        get url() {
          return this.serializeUrl(this.currentUrlTree);
        }
        getCurrentNavigation() {
          return this.currentNavigation;
        }
        triggerEvent(e) {
          this.events.next(e);
        }
        resetConfig(e) {
          kt(e),
            (this.config = e.map(Tt)),
            (this.navigated = !1),
            (this.lastSuccessfulId = -1);
        }
        ngOnDestroy() {
          this.dispose();
        }
        dispose() {
          this.locationSubscription &&
            (this.locationSubscription.unsubscribe(),
            (this.locationSubscription = void 0));
        }
        createUrlTree(e, t = {}) {
          const {
              relativeTo: n,
              queryParams: s,
              fragment: i,
              queryParamsHandling: r,
              preserveFragment: o,
            } = t,
            a = n || this.routerState.root,
            l = o ? this.currentUrlTree.fragment : i;
          let c = null;
          switch (r) {
            case "merge":
              c = Object.assign(
                Object.assign({}, this.currentUrlTree.queryParams),
                s
              );
              break;
            case "preserve":
              c = this.currentUrlTree.queryParams;
              break;
            default:
              c = s || null;
          }
          return (
            null !== c && (c = this.removeEmptyProps(c)),
            rt(a, this.currentUrlTree, e, c, l)
          );
        }
        navigateByUrl(e, t = { skipLocationChange: !1 }) {
          const n = wt(e) ? e : this.parseUrl(e),
            s = this.urlHandlingStrategy.merge(n, this.rawUrlTree);
          return this.scheduleNavigation(s, "imperative", null, t);
        }
        navigate(e, t = { skipLocationChange: !1 }) {
          return (
            (function (e) {
              for (let t = 0; t < e.length; t++) {
                const n = e[t];
                if (null == n)
                  throw new Error(
                    `The requested path contains ${n} segment at index ${t}`
                  );
              }
            })(e),
            this.navigateByUrl(this.createUrlTree(e, t), t)
          );
        }
        serializeUrl(e) {
          return this.urlSerializer.serialize(e);
        }
        parseUrl(e) {
          let t;
          try {
            t = this.urlSerializer.parse(e);
          } catch (n) {
            t = this.malformedUriErrorHandler(n, this.urlSerializer, e);
          }
          return t;
        }
        isActive(e, t) {
          if (wt(e)) return ye(this.currentUrlTree, e, t);
          const n = this.parseUrl(e);
          return ye(this.currentUrlTree, n, t);
        }
        removeEmptyProps(e) {
          return Object.keys(e).reduce((t, n) => {
            const s = e[n];
            return null != s && (t[n] = s), t;
          }, {});
        }
        processNavigations() {
          this.navigations.subscribe(
            (e) => {
              (this.navigated = !0),
                (this.lastSuccessfulId = e.id),
                this.events.next(
                  new U(
                    e.id,
                    this.serializeUrl(e.extractedUrl),
                    this.serializeUrl(this.currentUrlTree)
                  )
                ),
                (this.lastSuccessfulNavigation = this.currentNavigation),
                (this.currentNavigation = null),
                e.resolve(!0);
            },
            (e) => {
              this.console.warn("Unhandled Navigation Error: ");
            }
          );
        }
        scheduleNavigation(e, t, n, s, i) {
          const r = this.getTransition(),
            o =
              "imperative" !== t &&
              "imperative" === (null == r ? void 0 : r.source),
            a =
              (this.lastSuccessfulId === r.id || this.currentNavigation
                ? r.rawUrl
                : r.urlAfterRedirects
              ).toString() === e.toString();
          if (o && a) return Promise.resolve(!0);
          let l, c, u;
          i
            ? ((l = i.resolve), (c = i.reject), (u = i.promise))
            : (u = new Promise((e, t) => {
                (l = e), (c = t);
              }));
          const d = ++this.navigationId;
          return (
            this.setTransition({
              id: d,
              source: t,
              restoredState: n,
              currentUrlTree: this.currentUrlTree,
              currentRawUrl: this.rawUrlTree,
              rawUrl: e,
              extras: s,
              resolve: l,
              reject: c,
              promise: u,
              currentSnapshot: this.routerState.snapshot,
              currentRouterState: this.routerState,
            }),
            u.catch((e) => Promise.reject(e))
          );
        }
        setBrowserUrl(e, t, n, s) {
          const i = this.urlSerializer.serialize(e);
          (s = s || {}),
            this.location.isCurrentPathEqualTo(i) || t
              ? this.location.replaceState(
                  i,
                  "",
                  Object.assign(Object.assign({}, s), { navigationId: n })
                )
              : this.location.go(
                  i,
                  "",
                  Object.assign(Object.assign({}, s), { navigationId: n })
                );
        }
        resetStateAndUrl(e, t, n) {
          (this.routerState = e),
            (this.currentUrlTree = t),
            (this.rawUrlTree = this.urlHandlingStrategy.merge(
              this.currentUrlTree,
              n
            )),
            this.resetUrlToCurrentUrlTree();
        }
        resetUrlToCurrentUrlTree() {
          this.location.replaceState(
            this.urlSerializer.serialize(this.rawUrlTree),
            "",
            { navigationId: this.lastSuccessfulId }
          );
        }
      }
      (xn.ɵfac = function (e) {
        return new (e || xn)(
          i.Yc(i.kb),
          i.Yc(ke),
          i.Yc(fn),
          i.Yc(s.g),
          i.Yc(i.F),
          i.Yc(i.N),
          i.Yc(i.l),
          i.Yc(void 0)
        );
      }),
        (xn.ɵprov = i.Ic({ token: xn, factory: xn.ɵfac })),
        (xn.ctorParameters = () => [
          { type: i.kb },
          { type: ke },
          { type: fn },
          { type: s.g },
          { type: i.F },
          { type: i.N },
          { type: i.l },
          { type: void 0 },
        ]);
      class _n {
        constructor(e, t, n, s, i) {
          (this.router = e),
            (this.route = t),
            (this.commands = []),
            (this.onChanges = new p.a()),
            null == n && s.setAttribute(i.nativeElement, "tabindex", "0");
        }
        ngOnChanges(e) {
          this.onChanges.next(this);
        }
        set routerLink(e) {
          this.commands = null != e ? (Array.isArray(e) ? e : [e]) : [];
        }
        onClick() {
          const e = {
            skipLocationChange: Cn(this.skipLocationChange),
            replaceUrl: Cn(this.replaceUrl),
            state: this.state,
          };
          return this.router.navigateByUrl(this.urlTree, e), !0;
        }
        get urlTree() {
          return this.router.createUrlTree(this.commands, {
            relativeTo: this.route,
            queryParams: this.queryParams,
            fragment: this.fragment,
            queryParamsHandling: this.queryParamsHandling,
            preserveFragment: Cn(this.preserveFragment),
          });
        }
      }
      (_n.ɵfac = function (e) {
        return new (e || _n)(
          i.Mc(xn),
          i.Mc(Qe),
          i.Zc("tabindex"),
          i.Mc(i.Y),
          i.Mc(i.v)
        );
      }),
        (_n.ɵdir = i.Hc({
          type: _n,
          selectors: [["", "routerLink", "", 5, "a", 5, "area"]],
          hostBindings: function (e, t) {
            1 & e &&
              i.cd("click", function () {
                return t.onClick();
              });
          },
          inputs: {
            routerLink: "routerLink",
            queryParams: "queryParams",
            fragment: "fragment",
            queryParamsHandling: "queryParamsHandling",
            preserveFragment: "preserveFragment",
            skipLocationChange: "skipLocationChange",
            replaceUrl: "replaceUrl",
            state: "state",
          },
          features: [i.xc],
        })),
        (_n.ctorParameters = () => [
          { type: xn },
          { type: Qe },
          { type: String, decorators: [{ type: i.h, args: ["tabindex"] }] },
          { type: i.Y },
          { type: i.v },
        ]),
        (_n.propDecorators = {
          queryParams: [{ type: i.G }],
          fragment: [{ type: i.G }],
          queryParamsHandling: [{ type: i.G }],
          preserveFragment: [{ type: i.G }],
          skipLocationChange: [{ type: i.G }],
          replaceUrl: [{ type: i.G }],
          state: [{ type: i.G }],
          routerLink: [{ type: i.G }],
          onClick: [{ type: i.A, args: ["click"] }],
        });
      class wn {
        constructor(e, t, n) {
          (this.router = e),
            (this.route = t),
            (this.locationStrategy = n),
            (this.commands = []),
            (this.onChanges = new p.a()),
            (this.subscription = e.events.subscribe((e) => {
              e instanceof U && this.updateTargetUrlAndHref();
            }));
        }
        set routerLink(e) {
          this.commands = null != e ? (Array.isArray(e) ? e : [e]) : [];
        }
        ngOnChanges(e) {
          this.updateTargetUrlAndHref(), this.onChanges.next(this);
        }
        ngOnDestroy() {
          this.subscription.unsubscribe();
        }
        onClick(e, t, n, s, i) {
          if (0 !== e || t || n || s || i) return !0;
          if ("string" == typeof this.target && "_self" != this.target)
            return !0;
          const r = {
            skipLocationChange: Cn(this.skipLocationChange),
            replaceUrl: Cn(this.replaceUrl),
            state: this.state,
          };
          return this.router.navigateByUrl(this.urlTree, r), !1;
        }
        updateTargetUrlAndHref() {
          this.href = this.locationStrategy.prepareExternalUrl(
            this.router.serializeUrl(this.urlTree)
          );
        }
        get urlTree() {
          return this.router.createUrlTree(this.commands, {
            relativeTo: this.route,
            queryParams: this.queryParams,
            fragment: this.fragment,
            queryParamsHandling: this.queryParamsHandling,
            preserveFragment: Cn(this.preserveFragment),
          });
        }
      }
      function Cn(e) {
        return "" === e || !!e;
      }
      (wn.ɵfac = function (e) {
        return new (e || wn)(i.Mc(xn), i.Mc(Qe), i.Mc(s.h));
      }),
        (wn.ɵdir = i.Hc({
          type: wn,
          selectors: [
            ["a", "routerLink", ""],
            ["area", "routerLink", ""],
          ],
          hostVars: 2,
          hostBindings: function (e, t) {
            1 & e &&
              i.cd("click", function (e) {
                return t.onClick(
                  e.button,
                  e.ctrlKey,
                  e.shiftKey,
                  e.altKey,
                  e.metaKey
                );
              }),
              2 & e && (i.Uc("href", t.href, i.vd), i.Ac("target", t.target));
          },
          inputs: {
            routerLink: "routerLink",
            target: "target",
            queryParams: "queryParams",
            fragment: "fragment",
            queryParamsHandling: "queryParamsHandling",
            preserveFragment: "preserveFragment",
            skipLocationChange: "skipLocationChange",
            replaceUrl: "replaceUrl",
            state: "state",
          },
          features: [i.xc],
        })),
        (wn.ctorParameters = () => [{ type: xn }, { type: Qe }, { type: s.h }]),
        (wn.propDecorators = {
          target: [{ type: i.z, args: ["attr.target"] }, { type: i.G }],
          queryParams: [{ type: i.G }],
          fragment: [{ type: i.G }],
          queryParamsHandling: [{ type: i.G }],
          preserveFragment: [{ type: i.G }],
          skipLocationChange: [{ type: i.G }],
          replaceUrl: [{ type: i.G }],
          state: [{ type: i.G }],
          href: [{ type: i.z }],
          routerLink: [{ type: i.G }],
          onClick: [
            {
              type: i.A,
              args: [
                "click",
                [
                  "$event.button",
                  "$event.ctrlKey",
                  "$event.shiftKey",
                  "$event.altKey",
                  "$event.metaKey",
                ],
              ],
            },
          ],
        });
      class Sn {
        constructor(e, t, n, s, i, r) {
          (this.router = e),
            (this.element = t),
            (this.renderer = n),
            (this.cdr = s),
            (this.link = i),
            (this.linkWithHref = r),
            (this.classes = []),
            (this.isActive = !1),
            (this.routerLinkActiveOptions = { exact: !1 }),
            (this.routerEventsSubscription = e.events.subscribe((e) => {
              e instanceof U && this.update();
            }));
        }
        ngAfterContentInit() {
          Object(o.a)([
            this.links.changes,
            this.linksWithHrefs.changes,
            Object(r.a)(null),
          ])
            .pipe(Object(z.a)())
            .subscribe((e) => {
              this.update(), this.subscribeToEachLinkOnChanges();
            });
        }
        subscribeToEachLinkOnChanges() {
          var e;
          null === (e = this.linkInputChangesSubscription) ||
            void 0 === e ||
            e.unsubscribe();
          const t = [
            ...this.links.toArray(),
            ...this.linksWithHrefs.toArray(),
            this.link,
            this.linkWithHref,
          ]
            .filter((e) => !!e)
            .map((e) => e.onChanges);
          this.linkInputChangesSubscription = Object(o.a)(t)
            .pipe(Object(z.a)())
            .subscribe((e) => {
              this.isActive !== this.isLinkActive(this.router)(e) &&
                this.update();
            });
        }
        set routerLinkActive(e) {
          const t = Array.isArray(e) ? e : e.split(" ");
          this.classes = t.filter((e) => !!e);
        }
        ngOnChanges(e) {
          this.update();
        }
        ngOnDestroy() {
          var e;
          this.routerEventsSubscription.unsubscribe(),
            null === (e = this.linkInputChangesSubscription) ||
              void 0 === e ||
              e.unsubscribe();
        }
        update() {
          this.links &&
            this.linksWithHrefs &&
            this.router.navigated &&
            Promise.resolve().then(() => {
              const e = this.hasActiveLinks();
              this.isActive !== e &&
                ((this.isActive = e),
                this.cdr.markForCheck(),
                this.classes.forEach((t) => {
                  e
                    ? this.renderer.addClass(this.element.nativeElement, t)
                    : this.renderer.removeClass(this.element.nativeElement, t);
                }));
            });
        }
        isLinkActive(e) {
          return (t) =>
            e.isActive(t.urlTree, this.routerLinkActiveOptions.exact);
        }
        hasActiveLinks() {
          const e = this.isLinkActive(this.router);
          return (
            (this.link && e(this.link)) ||
            (this.linkWithHref && e(this.linkWithHref)) ||
            this.links.some(e) ||
            this.linksWithHrefs.some(e)
          );
        }
      }
      (Sn.ɵfac = function (e) {
        return new (e || Sn)(
          i.Mc(xn),
          i.Mc(i.v),
          i.Mc(i.Y),
          i.Mc(i.k),
          i.Mc(_n, 8),
          i.Mc(wn, 8)
        );
      }),
        (Sn.ɵdir = i.Hc({
          type: Sn,
          selectors: [["", "routerLinkActive", ""]],
          contentQueries: function (e, t, n) {
            if ((1 & e && (i.Fc(n, _n, !0), i.Fc(n, wn, !0)), 2 & e)) {
              let e;
              i.sd((e = i.dd())) && (t.links = e),
                i.sd((e = i.dd())) && (t.linksWithHrefs = e);
            }
          },
          inputs: {
            routerLinkActiveOptions: "routerLinkActiveOptions",
            routerLinkActive: "routerLinkActive",
          },
          exportAs: ["routerLinkActive"],
          features: [i.xc],
        })),
        (Sn.ctorParameters = () => [
          { type: xn },
          { type: i.v },
          { type: i.Y },
          { type: i.k },
          { type: _n, decorators: [{ type: i.R }] },
          { type: wn, decorators: [{ type: i.R }] },
        ]),
        (Sn.propDecorators = {
          links: [{ type: i.s, args: [_n, { descendants: !0 }] }],
          linksWithHrefs: [{ type: i.s, args: [wn, { descendants: !0 }] }],
          routerLinkActiveOptions: [{ type: i.G }],
          routerLinkActive: [{ type: i.G }],
        });
      class En {
        constructor(e, t, n, s, r) {
          (this.parentContexts = e),
            (this.location = t),
            (this.resolver = n),
            (this.changeDetector = r),
            (this.activated = null),
            (this._activatedRoute = null),
            (this.activateEvents = new i.x()),
            (this.deactivateEvents = new i.x()),
            (this.name = s || re),
            e.onChildOutletCreated(this.name, this);
        }
        ngOnDestroy() {
          this.parentContexts.onChildOutletDestroyed(this.name);
        }
        ngOnInit() {
          if (!this.activated) {
            const e = this.parentContexts.getContext(this.name);
            e &&
              e.route &&
              (e.attachRef
                ? this.attach(e.attachRef, e.route)
                : this.activateWith(e.route, e.resolver || null));
          }
        }
        get isActivated() {
          return !!this.activated;
        }
        get component() {
          if (!this.activated) throw new Error("Outlet is not activated");
          return this.activated.instance;
        }
        get activatedRoute() {
          if (!this.activated) throw new Error("Outlet is not activated");
          return this._activatedRoute;
        }
        get activatedRouteData() {
          return this._activatedRoute ? this._activatedRoute.snapshot.data : {};
        }
        detach() {
          if (!this.activated) throw new Error("Outlet is not activated");
          this.location.detach();
          const e = this.activated;
          return (this.activated = null), (this._activatedRoute = null), e;
        }
        attach(e, t) {
          (this.activated = e),
            (this._activatedRoute = t),
            this.location.insert(e.hostView);
        }
        deactivate() {
          if (this.activated) {
            const e = this.component;
            this.activated.destroy(),
              (this.activated = null),
              (this._activatedRoute = null),
              this.deactivateEvents.emit(e);
          }
        }
        activateWith(e, t) {
          if (this.isActivated)
            throw new Error("Cannot activate an already activated outlet");
          this._activatedRoute = e;
          const n = e._futureSnapshot.routeConfig.component,
            s = (t = t || this.resolver).resolveComponentFactory(n),
            i = this.parentContexts.getOrCreateContext(this.name).children,
            r = new kn(e, i, this.location.injector);
          (this.activated = this.location.createComponent(
            s,
            this.location.length,
            r
          )),
            this.changeDetector.markForCheck(),
            this.activateEvents.emit(this.activated.instance);
        }
      }
      (En.ɵfac = function (e) {
        return new (e || En)(
          i.Mc(fn),
          i.Mc(i.ob),
          i.Mc(i.p),
          i.Zc("name"),
          i.Mc(i.k)
        );
      }),
        (En.ɵdir = i.Hc({
          type: En,
          selectors: [["router-outlet"]],
          outputs: {
            activateEvents: "activate",
            deactivateEvents: "deactivate",
          },
          exportAs: ["outlet"],
        })),
        (En.ctorParameters = () => [
          { type: fn },
          { type: i.ob },
          { type: i.p },
          { type: String, decorators: [{ type: i.h, args: ["name"] }] },
          { type: i.k },
        ]),
        (En.propDecorators = {
          activateEvents: [{ type: i.S, args: ["activate"] }],
          deactivateEvents: [{ type: i.S, args: ["deactivate"] }],
        });
      class kn {
        constructor(e, t, n) {
          (this.route = e), (this.childContexts = t), (this.parent = n);
        }
        get(e, t) {
          return e === Qe
            ? this.route
            : e === fn
            ? this.childContexts
            : this.parent.get(e, t);
        }
      }
      class On {}
      class In {
        preload(e, t) {
          return Object(r.a)(null);
        }
      }
      class Tn {
        constructor(e, t, n, s, i) {
          (this.router = e), (this.injector = s), (this.preloadingStrategy = i);
          this.loader = new pn(
            t,
            n,
            (t) => e.triggerEvent(new X(t)),
            (t) => e.triggerEvent(new Z(t))
          );
        }
        setUpPreloading() {
          this.subscription = this.router.events
            .pipe(
              Object(g.a)((e) => e instanceof U),
              Object(N.a)(() => this.preload())
            )
            .subscribe(() => {});
        }
        preload() {
          const e = this.injector.get(i.O);
          return this.processRoutes(e, this.router.config);
        }
        ngOnDestroy() {
          this.subscription && this.subscription.unsubscribe();
        }
        processRoutes(e, t) {
          const n = [];
          for (const s of t)
            if (s.loadChildren && !s.canLoad && s._loadedConfig) {
              const e = s._loadedConfig;
              n.push(this.processRoutes(e.module, e.routes));
            } else
              s.loadChildren && !s.canLoad
                ? n.push(this.preloadConfig(e, s))
                : s.children && n.push(this.processRoutes(e, s.children));
          return Object(o.a)(n).pipe(
            Object(z.a)(),
            Object(m.a)((e) => {})
          );
        }
        preloadConfig(e, t) {
          return this.preloadingStrategy.preload(t, () =>
            this.loader
              .load(e.injector, t)
              .pipe(
                Object(L.a)(
                  (e) => (
                    (t._loadedConfig = e),
                    this.processRoutes(e.module, e.routes)
                  )
                )
              )
          );
        }
      }
      (Tn.ɵfac = function (e) {
        return new (e || Tn)(
          i.Yc(xn),
          i.Yc(i.N),
          i.Yc(i.l),
          i.Yc(i.F),
          i.Yc(On)
        );
      }),
        (Tn.ɵprov = i.Ic({ token: Tn, factory: Tn.ɵfac })),
        (Tn.ctorParameters = () => [
          { type: xn },
          { type: i.N },
          { type: i.l },
          { type: i.F },
          { type: On },
        ]);
      class An {
        constructor(e, t, n = {}) {
          (this.router = e),
            (this.viewportScroller = t),
            (this.options = n),
            (this.lastId = 0),
            (this.lastSource = "imperative"),
            (this.restoredId = 0),
            (this.store = {}),
            (n.scrollPositionRestoration =
              n.scrollPositionRestoration || "disabled"),
            (n.anchorScrolling = n.anchorScrolling || "disabled");
        }
        init() {
          "disabled" !== this.options.scrollPositionRestoration &&
            this.viewportScroller.setHistoryScrollRestoration("manual"),
            (this.routerEventsSubscription = this.createScrollEvents()),
            (this.scrollEventsSubscription = this.consumeScrollEvents());
        }
        createScrollEvents() {
          return this.router.events.subscribe((e) => {
            e instanceof G
              ? ((this.store[this.lastId] =
                  this.viewportScroller.getScrollPosition()),
                (this.lastSource = e.navigationTrigger),
                (this.restoredId = e.restoredState
                  ? e.restoredState.navigationId
                  : 0))
              : e instanceof U &&
                ((this.lastId = e.id),
                this.scheduleScrollEvent(
                  e,
                  this.router.parseUrl(e.urlAfterRedirects).fragment
                ));
          });
        }
        consumeScrollEvents() {
          return this.router.events.subscribe((e) => {
            e instanceof ie &&
              (e.position
                ? "top" === this.options.scrollPositionRestoration
                  ? this.viewportScroller.scrollToPosition([0, 0])
                  : "enabled" === this.options.scrollPositionRestoration &&
                    this.viewportScroller.scrollToPosition(e.position)
                : e.anchor && "enabled" === this.options.anchorScrolling
                ? this.viewportScroller.scrollToAnchor(e.anchor)
                : "disabled" !== this.options.scrollPositionRestoration &&
                  this.viewportScroller.scrollToPosition([0, 0]));
          });
        }
        scheduleScrollEvent(e, t) {
          this.router.triggerEvent(
            new ie(
              e,
              "popstate" === this.lastSource
                ? this.store[this.restoredId]
                : null,
              t
            )
          );
        }
        ngOnDestroy() {
          this.routerEventsSubscription &&
            this.routerEventsSubscription.unsubscribe(),
            this.scrollEventsSubscription &&
              this.scrollEventsSubscription.unsubscribe();
        }
      }
      (An.ɵfac = function (e) {
        return new (e || An)(i.Yc(xn), i.Yc(s.u), i.Yc(void 0));
      }),
        (An.ɵprov = i.Ic({ token: An, factory: An.ɵfac })),
        (An.ctorParameters = () => [
          { type: xn },
          { type: s.u },
          { type: void 0 },
        ]);
      const Dn = new i.E("ROUTER_CONFIGURATION"),
        Mn = new i.E("ROUTER_FORROOT_GUARD"),
        Pn = [
          s.g,
          { provide: ke, useClass: Oe },
          {
            provide: xn,
            useFactory: function (e, t, n, i, r, o, a, l = {}, c, u) {
              const d = new xn(null, e, t, n, i, r, o, he(a));
              c && (d.urlHandlingStrategy = c);
              u && (d.routeReuseStrategy = u);
              if ((Bn(l, d), l.enableTracing)) {
                const e = Object(s.D)();
                d.events.subscribe((t) => {
                  e.logGroup("Router Event: " + t.constructor.name),
                    e.log(t.toString()),
                    e.log(t),
                    e.logGroupEnd();
                });
              }
              return d;
            },
            deps: [
              ke,
              fn,
              s.g,
              i.F,
              i.N,
              i.l,
              hn,
              Dn,
              [class {}, new i.R()],
              [class {}, new i.R()],
            ],
          },
          fn,
          {
            provide: Qe,
            useFactory: function (e) {
              return e.routerState.root;
            },
            deps: [xn],
          },
          { provide: i.N, useClass: i.fb },
          Tn,
          In,
          class {
            preload(e, t) {
              return t().pipe(Object(j.a)(() => Object(r.a)(null)));
            }
          },
          { provide: Dn, useValue: { enableTracing: !1 } },
        ];
      function Rn() {
        return new i.P("Router", xn);
      }
      class jn {
        constructor(e, t) {}
        static forRoot(e, t) {
          return {
            ngModule: jn,
            providers: [
              Pn,
              Vn(e),
              {
                provide: Mn,
                useFactory: Ln,
                deps: [[xn, new i.R(), new i.eb()]],
              },
              { provide: Dn, useValue: t || {} },
              {
                provide: s.h,
                useFactory: Fn,
                deps: [s.s, [new i.C(s.a), new i.R()], Dn],
              },
              { provide: An, useFactory: Nn, deps: [xn, s.u, Dn] },
              {
                provide: On,
                useExisting:
                  t && t.preloadingStrategy ? t.preloadingStrategy : In,
              },
              { provide: i.P, multi: !0, useFactory: Rn },
              [
                zn,
                { provide: i.d, multi: !0, useFactory: Hn, deps: [zn] },
                { provide: Un, useFactory: Gn, deps: [zn] },
                { provide: i.b, multi: !0, useExisting: Un },
              ],
            ],
          };
        }
        static forChild(e) {
          return { ngModule: jn, providers: [Vn(e)] };
        }
      }
      function Nn(e, t, n) {
        return n.scrollOffset && t.setOffset(n.scrollOffset), new An(e, t, n);
      }
      function Fn(e, t, n = {}) {
        return n.useHash ? new s.e(e, t) : new s.q(e, t);
      }
      function Ln(e) {
        return "guarded";
      }
      function Vn(e) {
        return [
          { provide: i.a, multi: !0, useValue: e },
          { provide: hn, multi: !0, useValue: e },
        ];
      }
      function Bn(e, t) {
        e.errorHandler && (t.errorHandler = e.errorHandler),
          e.malformedUriErrorHandler &&
            (t.malformedUriErrorHandler = e.malformedUriErrorHandler),
          e.onSameUrlNavigation &&
            (t.onSameUrlNavigation = e.onSameUrlNavigation),
          e.paramsInheritanceStrategy &&
            (t.paramsInheritanceStrategy = e.paramsInheritanceStrategy),
          e.relativeLinkResolution &&
            (t.relativeLinkResolution = e.relativeLinkResolution),
          e.urlUpdateStrategy && (t.urlUpdateStrategy = e.urlUpdateStrategy);
      }
      (jn.ɵmod = i.Kc({ type: jn })),
        (jn.ɵinj = i.Jc({
          factory: function (e) {
            return new (e || jn)(i.Yc(Mn, 8), i.Yc(xn, 8));
          },
        })),
        (jn.ctorParameters = () => [
          {
            type: void 0,
            decorators: [{ type: i.R }, { type: i.C, args: [Mn] }],
          },
          { type: xn, decorators: [{ type: i.R }] },
        ]),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          i.wd(jn, {
            declarations: [En, _n, wn, Sn, Et],
            exports: [En, _n, wn, Sn, Et],
          });
      class zn {
        constructor(e) {
          (this.injector = e),
            (this.initNavigation = !1),
            (this.resultOfPreactivationDone = new p.a());
        }
        appInitializer() {
          return this.injector.get(s.f, Promise.resolve(null)).then(() => {
            let e = null;
            const t = new Promise((t) => (e = t)),
              n = this.injector.get(xn),
              s = this.injector.get(Dn);
            return (
              "disabled" === s.initialNavigation
                ? (n.setUpLocationChangeListener(), e(!0))
                : "enabled" === s.initialNavigation ||
                  "enabledBlocking" === s.initialNavigation
                ? ((n.hooks.afterPreactivation = () =>
                    this.initNavigation
                      ? Object(r.a)(null)
                      : ((this.initNavigation = !0),
                        e(!0),
                        this.resultOfPreactivationDone)),
                  n.initialNavigation())
                : e(!0),
              t
            );
          });
        }
        bootstrapListener(e) {
          const t = this.injector.get(Dn),
            n = this.injector.get(Tn),
            s = this.injector.get(An),
            r = this.injector.get(xn),
            o = this.injector.get(i.g);
          e === o.components[0] &&
            (("enabledNonBlocking" !== t.initialNavigation &&
              void 0 !== t.initialNavigation) ||
              r.initialNavigation(),
            n.setUpPreloading(),
            s.init(),
            r.resetRootComponentType(o.componentTypes[0]),
            this.resultOfPreactivationDone.next(null),
            this.resultOfPreactivationDone.complete());
        }
      }
      function Hn(e) {
        return e.appInitializer.bind(e);
      }
      function Gn(e) {
        return e.bootstrapListener.bind(e);
      }
      (zn.ɵfac = function (e) {
        return new (e || zn)(i.Yc(i.F));
      }),
        (zn.ɵprov = i.Ic({ token: zn, factory: zn.ɵfac })),
        (zn.ctorParameters = () => [{ type: i.F }]);
      const Un = new i.E("Router Initializer");
      new i.lb("11.0.2");
    },
    u47x: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return k;
      }),
        n.d(t, "b", function () {
          return O;
        }),
        n.d(t, "c", function () {
          return K;
        }),
        n.d(t, "d", function () {
          return M;
        }),
        n.d(t, "e", function () {
          return ne;
        }),
        n.d(t, "f", function () {
          return $;
        }),
        n.d(t, "g", function () {
          return W;
        });
      var s = n("ofXK"),
        i = n("fXoL"),
        r = n("nLfN"),
        o = n("XNiG"),
        a = n("quSY"),
        l = n("LRne"),
        c = n("FtGj"),
        u = n("vkgz"),
        d = n("Kj3r"),
        h = n("pLZG"),
        p = n("lJxs"),
        m = n("IzEk"),
        f = n("8LU1"),
        g = n("GU7r");
      function y(e, t) {
        return (e.getAttribute(t) || "").match(/\S+/g) || [];
      }
      const v = "cdk-describedby-message-container",
        b = "cdk-describedby-message",
        x = "cdk-describedby-host";
      let _ = 0;
      const w = new Map();
      let C = null;
      class S {
        constructor(e, t) {
          (this._platform = t), (this._document = e);
        }
        describe(e, t) {
          this._canBeDescribed(e, t) &&
            ("string" != typeof t
              ? (this._setMessageId(t),
                w.set(t, { messageElement: t, referenceCount: 0 }))
              : w.has(t) || this._createMessageElement(t),
            this._isElementDescribedByMessage(e, t) ||
              this._addMessageReference(e, t));
        }
        removeDescription(e, t) {
          if (t && this._isElementNode(e)) {
            if (
              (this._isElementDescribedByMessage(e, t) &&
                this._removeMessageReference(e, t),
              "string" == typeof t)
            ) {
              const e = w.get(t);
              e && 0 === e.referenceCount && this._deleteMessageElement(t);
            }
            C && 0 === C.childNodes.length && this._deleteMessagesContainer();
          }
        }
        ngOnDestroy() {
          const e = this._document.querySelectorAll("[cdk-describedby-host]");
          for (let t = 0; t < e.length; t++)
            this._removeCdkDescribedByReferenceIds(e[t]),
              e[t].removeAttribute(x);
          C && this._deleteMessagesContainer(), w.clear();
        }
        _createMessageElement(e) {
          const t = this._document.createElement("div");
          this._setMessageId(t),
            (t.textContent = e),
            this._createMessagesContainer(),
            C.appendChild(t),
            w.set(e, { messageElement: t, referenceCount: 0 });
        }
        _setMessageId(e) {
          e.id || (e.id = "cdk-describedby-message-" + _++);
        }
        _deleteMessageElement(e) {
          const t = w.get(e),
            n = t && t.messageElement;
          C && n && C.removeChild(n), w.delete(e);
        }
        _createMessagesContainer() {
          if (!C) {
            const e =
                !this._platform ||
                (!this._platform.EDGE && !this._platform.TRIDENT),
              t = this._document.getElementById(v);
            t && t.parentNode && t.parentNode.removeChild(t),
              (C = this._document.createElement("div")),
              (C.id = v),
              C.classList.add("cdk-visually-hidden"),
              C.setAttribute("aria-hidden", e + ""),
              this._document.body.appendChild(C);
          }
        }
        _deleteMessagesContainer() {
          C && C.parentNode && (C.parentNode.removeChild(C), (C = null));
        }
        _removeCdkDescribedByReferenceIds(e) {
          const t = y(e, "aria-describedby").filter((e) => 0 != e.indexOf(b));
          e.setAttribute("aria-describedby", t.join(" "));
        }
        _addMessageReference(e, t) {
          const n = w.get(t);
          !(function (e, t, n) {
            const s = y(e, t);
            s.some((e) => e.trim() == n.trim()) ||
              (s.push(n.trim()), e.setAttribute(t, s.join(" ")));
          })(e, "aria-describedby", n.messageElement.id),
            e.setAttribute(x, ""),
            n.referenceCount++;
        }
        _removeMessageReference(e, t) {
          const n = w.get(t);
          n.referenceCount--,
            (function (e, t, n) {
              const s = y(e, t).filter((e) => e != n.trim());
              s.length ? e.setAttribute(t, s.join(" ")) : e.removeAttribute(t);
            })(e, "aria-describedby", n.messageElement.id),
            e.removeAttribute(x);
        }
        _isElementDescribedByMessage(e, t) {
          const n = y(e, "aria-describedby"),
            s = w.get(t),
            i = s && s.messageElement.id;
          return !!i && -1 != n.indexOf(i);
        }
        _canBeDescribed(e, t) {
          if (!this._isElementNode(e)) return !1;
          if (t && "object" == typeof t) return !0;
          const n = null == t ? "" : ("" + t).trim(),
            s = e.getAttribute("aria-label");
          return !!n && (!s || s.trim() !== n);
        }
        _isElementNode(e) {
          return e.nodeType === this._document.ELEMENT_NODE;
        }
      }
      (S.ɵfac = function (e) {
        return new (e || S)(i.Yc(s.c), i.Yc(r.a));
      }),
        (S.ɵprov = Object(i.Ic)({
          factory: function () {
            return new S(Object(i.Yc)(s.c), Object(i.Yc)(r.a));
          },
          token: S,
          providedIn: "root",
        })),
        (S.ctorParameters = () => [
          { type: void 0, decorators: [{ type: i.C, args: [s.c] }] },
          { type: r.a },
        ]);
      class E {
        constructor(e) {
          (this._items = e),
            (this._activeItemIndex = -1),
            (this._activeItem = null),
            (this._wrap = !1),
            (this._letterKeyStream = new o.a()),
            (this._typeaheadSubscription = a.a.EMPTY),
            (this._vertical = !0),
            (this._allowedModifierKeys = []),
            (this._homeAndEnd = !1),
            (this._skipPredicateFn = (e) => e.disabled),
            (this._pressedLetters = []),
            (this.tabOut = new o.a()),
            (this.change = new o.a()),
            e instanceof i.X &&
              e.changes.subscribe((e) => {
                if (this._activeItem) {
                  const t = e.toArray().indexOf(this._activeItem);
                  t > -1 &&
                    t !== this._activeItemIndex &&
                    (this._activeItemIndex = t);
                }
              });
        }
        skipPredicate(e) {
          return (this._skipPredicateFn = e), this;
        }
        withWrap(e = !0) {
          return (this._wrap = e), this;
        }
        withVerticalOrientation(e = !0) {
          return (this._vertical = e), this;
        }
        withHorizontalOrientation(e) {
          return (this._horizontal = e), this;
        }
        withAllowedModifierKeys(e) {
          return (this._allowedModifierKeys = e), this;
        }
        withTypeAhead(e = 200) {
          return (
            this._typeaheadSubscription.unsubscribe(),
            (this._typeaheadSubscription = this._letterKeyStream
              .pipe(
                Object(u.a)((e) => this._pressedLetters.push(e)),
                Object(d.a)(e),
                Object(h.a)(() => this._pressedLetters.length > 0),
                Object(p.a)(() => this._pressedLetters.join(""))
              )
              .subscribe((e) => {
                const t = this._getItemsArray();
                for (let n = 1; n < t.length + 1; n++) {
                  const s = (this._activeItemIndex + n) % t.length,
                    i = t[s];
                  if (
                    !this._skipPredicateFn(i) &&
                    0 === i.getLabel().toUpperCase().trim().indexOf(e)
                  ) {
                    this.setActiveItem(s);
                    break;
                  }
                }
                this._pressedLetters = [];
              })),
            this
          );
        }
        withHomeAndEnd(e = !0) {
          return (this._homeAndEnd = e), this;
        }
        setActiveItem(e) {
          const t = this._activeItem;
          this.updateActiveItem(e),
            this._activeItem !== t && this.change.next(this._activeItemIndex);
        }
        onKeydown(e) {
          const t = e.keyCode,
            n = ["altKey", "ctrlKey", "metaKey", "shiftKey"].every(
              (t) => !e[t] || this._allowedModifierKeys.indexOf(t) > -1
            );
          switch (t) {
            case c.k:
              return void this.tabOut.next();
            case c.b:
              if (this._vertical && n) {
                this.setNextItemActive();
                break;
              }
              return;
            case c.l:
              if (this._vertical && n) {
                this.setPreviousItemActive();
                break;
              }
              return;
            case c.i:
              if (this._horizontal && n) {
                "rtl" === this._horizontal
                  ? this.setPreviousItemActive()
                  : this.setNextItemActive();
                break;
              }
              return;
            case c.g:
              if (this._horizontal && n) {
                "rtl" === this._horizontal
                  ? this.setNextItemActive()
                  : this.setPreviousItemActive();
                break;
              }
              return;
            case c.f:
              if (this._homeAndEnd && n) {
                this.setFirstItemActive();
                break;
              }
              return;
            case c.c:
              if (this._homeAndEnd && n) {
                this.setLastItemActive();
                break;
              }
              return;
            default:
              return void (
                (n || Object(c.o)(e, "shiftKey")) &&
                (e.key && 1 === e.key.length
                  ? this._letterKeyStream.next(e.key.toLocaleUpperCase())
                  : ((t >= c.a && t <= c.m) || (t >= c.n && t <= c.h)) &&
                    this._letterKeyStream.next(String.fromCharCode(t)))
              );
          }
          (this._pressedLetters = []), e.preventDefault();
        }
        get activeItemIndex() {
          return this._activeItemIndex;
        }
        get activeItem() {
          return this._activeItem;
        }
        isTyping() {
          return this._pressedLetters.length > 0;
        }
        setFirstItemActive() {
          this._setActiveItemByIndex(0, 1);
        }
        setLastItemActive() {
          this._setActiveItemByIndex(this._items.length - 1, -1);
        }
        setNextItemActive() {
          this._activeItemIndex < 0
            ? this.setFirstItemActive()
            : this._setActiveItemByDelta(1);
        }
        setPreviousItemActive() {
          this._activeItemIndex < 0 && this._wrap
            ? this.setLastItemActive()
            : this._setActiveItemByDelta(-1);
        }
        updateActiveItem(e) {
          const t = this._getItemsArray(),
            n = "number" == typeof e ? e : t.indexOf(e),
            s = t[n];
          (this._activeItem = null == s ? null : s),
            (this._activeItemIndex = n);
        }
        _setActiveItemByDelta(e) {
          this._wrap
            ? this._setActiveInWrapMode(e)
            : this._setActiveInDefaultMode(e);
        }
        _setActiveInWrapMode(e) {
          const t = this._getItemsArray();
          for (let n = 1; n <= t.length; n++) {
            const s = (this._activeItemIndex + e * n + t.length) % t.length,
              i = t[s];
            if (!this._skipPredicateFn(i)) return void this.setActiveItem(s);
          }
        }
        _setActiveInDefaultMode(e) {
          this._setActiveItemByIndex(this._activeItemIndex + e, e);
        }
        _setActiveItemByIndex(e, t) {
          const n = this._getItemsArray();
          if (n[e]) {
            for (; this._skipPredicateFn(n[e]); ) if (!n[(e += t)]) return;
            this.setActiveItem(e);
          }
        }
        _getItemsArray() {
          return this._items instanceof i.X
            ? this._items.toArray()
            : this._items;
        }
      }
      class k extends E {
        setActiveItem(e) {
          this.activeItem && this.activeItem.setInactiveStyles(),
            super.setActiveItem(e),
            this.activeItem && this.activeItem.setActiveStyles();
        }
      }
      class O extends E {
        constructor() {
          super(...arguments), (this._origin = "program");
        }
        setFocusOrigin(e) {
          return (this._origin = e), this;
        }
        setActiveItem(e) {
          super.setActiveItem(e),
            this.activeItem && this.activeItem.focus(this._origin);
        }
      }
      class I {
        constructor(e) {
          this._platform = e;
        }
        isDisabled(e) {
          return e.hasAttribute("disabled");
        }
        isVisible(e) {
          return (
            (function (e) {
              return !!(
                e.offsetWidth ||
                e.offsetHeight ||
                ("function" == typeof e.getClientRects &&
                  e.getClientRects().length)
              );
            })(e) && "visible" === getComputedStyle(e).visibility
          );
        }
        isTabbable(e) {
          if (!this._platform.isBrowser) return !1;
          const t = (function (e) {
            try {
              return e.frameElement;
            } catch (t) {
              return null;
            }
          })(((n = e).ownerDocument && n.ownerDocument.defaultView) || window);
          var n;
          if (t) {
            if (-1 === A(t)) return !1;
            if (!this.isVisible(t)) return !1;
          }
          let s = e.nodeName.toLowerCase(),
            i = A(e);
          return e.hasAttribute("contenteditable")
            ? -1 !== i
            : "iframe" !== s &&
                "object" !== s &&
                !(
                  this._platform.WEBKIT &&
                  this._platform.IOS &&
                  !(function (e) {
                    let t = e.nodeName.toLowerCase(),
                      n = "input" === t && e.type;
                    return (
                      "text" === n ||
                      "password" === n ||
                      "select" === t ||
                      "textarea" === t
                    );
                  })(e)
                ) &&
                ("audio" === s
                  ? !!e.hasAttribute("controls") && -1 !== i
                  : "video" === s
                  ? -1 !== i &&
                    (null !== i ||
                      this._platform.FIREFOX ||
                      e.hasAttribute("controls"))
                  : e.tabIndex >= 0);
        }
        isFocusable(e, t) {
          return (
            (function (e) {
              if (
                (function (e) {
                  return (
                    (function (e) {
                      return "input" == e.nodeName.toLowerCase();
                    })(e) && "hidden" == e.type
                  );
                })(e)
              )
                return !1;
              return (
                (function (e) {
                  let t = e.nodeName.toLowerCase();
                  return (
                    "input" === t ||
                    "select" === t ||
                    "button" === t ||
                    "textarea" === t
                  );
                })(e) ||
                (function (e) {
                  return (
                    (function (e) {
                      return "a" == e.nodeName.toLowerCase();
                    })(e) && e.hasAttribute("href")
                  );
                })(e) ||
                e.hasAttribute("contenteditable") ||
                T(e)
              );
            })(e) &&
            !this.isDisabled(e) &&
            ((null == t ? void 0 : t.ignoreVisibility) || this.isVisible(e))
          );
        }
      }
      function T(e) {
        if (!e.hasAttribute("tabindex") || void 0 === e.tabIndex) return !1;
        let t = e.getAttribute("tabindex");
        return "-32768" != t && !(!t || isNaN(parseInt(t, 10)));
      }
      function A(e) {
        if (!T(e)) return null;
        const t = parseInt(e.getAttribute("tabindex") || "", 10);
        return isNaN(t) ? -1 : t;
      }
      (I.ɵfac = function (e) {
        return new (e || I)(i.Yc(r.a));
      }),
        (I.ɵprov = Object(i.Ic)({
          factory: function () {
            return new I(Object(i.Yc)(r.a));
          },
          token: I,
          providedIn: "root",
        })),
        (I.ctorParameters = () => [{ type: r.a }]);
      class D {
        constructor(e, t, n, s, i = !1) {
          (this._element = e),
            (this._checker = t),
            (this._ngZone = n),
            (this._document = s),
            (this._hasAttached = !1),
            (this.startAnchorListener = () => this.focusLastTabbableElement()),
            (this.endAnchorListener = () => this.focusFirstTabbableElement()),
            (this._enabled = !0),
            i || this.attachAnchors();
        }
        get enabled() {
          return this._enabled;
        }
        set enabled(e) {
          (this._enabled = e),
            this._startAnchor &&
              this._endAnchor &&
              (this._toggleAnchorTabIndex(e, this._startAnchor),
              this._toggleAnchorTabIndex(e, this._endAnchor));
        }
        destroy() {
          const e = this._startAnchor,
            t = this._endAnchor;
          e &&
            (e.removeEventListener("focus", this.startAnchorListener),
            e.parentNode && e.parentNode.removeChild(e)),
            t &&
              (t.removeEventListener("focus", this.endAnchorListener),
              t.parentNode && t.parentNode.removeChild(t)),
            (this._startAnchor = this._endAnchor = null),
            (this._hasAttached = !1);
        }
        attachAnchors() {
          return (
            !!this._hasAttached ||
            (this._ngZone.runOutsideAngular(() => {
              this._startAnchor ||
                ((this._startAnchor = this._createAnchor()),
                this._startAnchor.addEventListener(
                  "focus",
                  this.startAnchorListener
                )),
                this._endAnchor ||
                  ((this._endAnchor = this._createAnchor()),
                  this._endAnchor.addEventListener(
                    "focus",
                    this.endAnchorListener
                  ));
            }),
            this._element.parentNode &&
              (this._element.parentNode.insertBefore(
                this._startAnchor,
                this._element
              ),
              this._element.parentNode.insertBefore(
                this._endAnchor,
                this._element.nextSibling
              ),
              (this._hasAttached = !0)),
            this._hasAttached)
          );
        }
        focusInitialElementWhenReady() {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusInitialElement()));
          });
        }
        focusFirstTabbableElementWhenReady() {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusFirstTabbableElement()));
          });
        }
        focusLastTabbableElementWhenReady() {
          return new Promise((e) => {
            this._executeOnStable(() => e(this.focusLastTabbableElement()));
          });
        }
        _getRegionBoundary(e) {
          let t = this._element.querySelectorAll(
            `[cdk-focus-region-${e}], [cdkFocusRegion${e}], [cdk-focus-${e}]`
          );
          for (let n = 0; n < t.length; n++)
            t[n].hasAttribute("cdk-focus-" + e)
              ? console.warn(
                  `Found use of deprecated attribute 'cdk-focus-${e}', use 'cdkFocusRegion${e}' instead. The deprecated attribute will be removed in 8.0.0.`,
                  t[n]
                )
              : t[n].hasAttribute("cdk-focus-region-" + e) &&
                console.warn(
                  `Found use of deprecated attribute 'cdk-focus-region-${e}', use 'cdkFocusRegion${e}' instead. The deprecated attribute will be removed in 8.0.0.`,
                  t[n]
                );
          return "start" == e
            ? t.length
              ? t[0]
              : this._getFirstTabbableElement(this._element)
            : t.length
            ? t[t.length - 1]
            : this._getLastTabbableElement(this._element);
        }
        focusInitialElement() {
          const e = this._element.querySelector(
            "[cdk-focus-initial], [cdkFocusInitial]"
          );
          return e
            ? (e.hasAttribute("cdk-focus-initial") &&
                console.warn(
                  "Found use of deprecated attribute 'cdk-focus-initial', use 'cdkFocusInitial' instead. The deprecated attribute will be removed in 8.0.0",
                  e
                ),
              e.focus(),
              !0)
            : this.focusFirstTabbableElement();
        }
        focusFirstTabbableElement() {
          const e = this._getRegionBoundary("start");
          return e && e.focus(), !!e;
        }
        focusLastTabbableElement() {
          const e = this._getRegionBoundary("end");
          return e && e.focus(), !!e;
        }
        hasAttached() {
          return this._hasAttached;
        }
        _getFirstTabbableElement(e) {
          if (this._checker.isFocusable(e) && this._checker.isTabbable(e))
            return e;
          let t = e.children || e.childNodes;
          for (let n = 0; n < t.length; n++) {
            let e =
              t[n].nodeType === this._document.ELEMENT_NODE
                ? this._getFirstTabbableElement(t[n])
                : null;
            if (e) return e;
          }
          return null;
        }
        _getLastTabbableElement(e) {
          if (this._checker.isFocusable(e) && this._checker.isTabbable(e))
            return e;
          let t = e.children || e.childNodes;
          for (let n = t.length - 1; n >= 0; n--) {
            let e =
              t[n].nodeType === this._document.ELEMENT_NODE
                ? this._getLastTabbableElement(t[n])
                : null;
            if (e) return e;
          }
          return null;
        }
        _createAnchor() {
          const e = this._document.createElement("div");
          return (
            this._toggleAnchorTabIndex(this._enabled, e),
            e.classList.add("cdk-visually-hidden"),
            e.classList.add("cdk-focus-trap-anchor"),
            e.setAttribute("aria-hidden", "true"),
            e
          );
        }
        _toggleAnchorTabIndex(e, t) {
          e ? t.setAttribute("tabindex", "0") : t.removeAttribute("tabindex");
        }
        toggleAnchors(e) {
          this._startAnchor &&
            this._endAnchor &&
            (this._toggleAnchorTabIndex(e, this._startAnchor),
            this._toggleAnchorTabIndex(e, this._endAnchor));
        }
        _executeOnStable(e) {
          this._ngZone.isStable
            ? e()
            : this._ngZone.onStable.pipe(Object(m.a)(1)).subscribe(e);
        }
      }
      class M {
        constructor(e, t, n) {
          (this._checker = e), (this._ngZone = t), (this._document = n);
        }
        create(e, t = !1) {
          return new D(e, this._checker, this._ngZone, this._document, t);
        }
      }
      (M.ɵfac = function (e) {
        return new (e || M)(i.Yc(I), i.Yc(i.Q), i.Yc(s.c));
      }),
        (M.ɵprov = Object(i.Ic)({
          factory: function () {
            return new M(Object(i.Yc)(I), Object(i.Yc)(i.Q), Object(i.Yc)(s.c));
          },
          token: M,
          providedIn: "root",
        })),
        (M.ctorParameters = () => [
          { type: I },
          { type: i.Q },
          { type: void 0, decorators: [{ type: i.C, args: [s.c] }] },
        ]);
      class P {
        constructor(e, t, n) {
          (this._elementRef = e),
            (this._focusTrapFactory = t),
            (this._previouslyFocusedElement = null),
            (this._document = n),
            (this.focusTrap = this._focusTrapFactory.create(
              this._elementRef.nativeElement,
              !0
            ));
        }
        get enabled() {
          return this.focusTrap.enabled;
        }
        set enabled(e) {
          this.focusTrap.enabled = Object(f.b)(e);
        }
        get autoCapture() {
          return this._autoCapture;
        }
        set autoCapture(e) {
          this._autoCapture = Object(f.b)(e);
        }
        ngOnDestroy() {
          this.focusTrap.destroy(),
            this._previouslyFocusedElement &&
              (this._previouslyFocusedElement.focus(),
              (this._previouslyFocusedElement = null));
        }
        ngAfterContentInit() {
          this.focusTrap.attachAnchors(),
            this.autoCapture && this._captureFocus();
        }
        ngDoCheck() {
          this.focusTrap.hasAttached() || this.focusTrap.attachAnchors();
        }
        ngOnChanges(e) {
          const t = e.autoCapture;
          t &&
            !t.firstChange &&
            this.autoCapture &&
            this.focusTrap.hasAttached() &&
            this._captureFocus();
        }
        _captureFocus() {
          (this._previouslyFocusedElement = this._document.activeElement),
            this.focusTrap.focusInitialElementWhenReady();
        }
      }
      (P.ɵfac = function (e) {
        return new (e || P)(i.Mc(i.v), i.Mc(M), i.Mc(s.c));
      }),
        (P.ɵdir = i.Hc({
          type: P,
          selectors: [["", "cdkTrapFocus", ""]],
          inputs: {
            enabled: ["cdkTrapFocus", "enabled"],
            autoCapture: ["cdkTrapFocusAutoCapture", "autoCapture"],
          },
          exportAs: ["cdkTrapFocus"],
          features: [i.xc],
        })),
        (P.ctorParameters = () => [
          { type: i.v },
          { type: M },
          { type: void 0, decorators: [{ type: i.C, args: [s.c] }] },
        ]),
        (P.propDecorators = {
          enabled: [{ type: i.G, args: ["cdkTrapFocus"] }],
          autoCapture: [{ type: i.G, args: ["cdkTrapFocusAutoCapture"] }],
        });
      class R extends D {
        constructor(e, t, n, s, i, r, o) {
          super(e, t, n, s, o.defer),
            (this._focusTrapManager = i),
            (this._inertStrategy = r),
            this._focusTrapManager.register(this);
        }
        get enabled() {
          return this._enabled;
        }
        set enabled(e) {
          (this._enabled = e),
            this._enabled
              ? this._focusTrapManager.register(this)
              : this._focusTrapManager.deregister(this);
        }
        destroy() {
          this._focusTrapManager.deregister(this), super.destroy();
        }
        _enable() {
          this._inertStrategy.preventFocus(this), this.toggleAnchors(!0);
        }
        _disable() {
          this._inertStrategy.allowFocus(this), this.toggleAnchors(!1);
        }
      }
      function j(e, t) {
        if (!(e instanceof Node)) return null;
        let n = e;
        for (; null != n && !(n instanceof Element); ) n = n.parentNode;
        return (
          n &&
          (N
            ? n.closest(t)
            : (function (e, t) {
                let n = e;
                for (; null != n && !(n instanceof Element && F(n, t)); )
                  n = n.parentNode;
                return n || null;
              })(n, t))
        );
      }
      const N = "undefined" != typeof Element && !!Element.prototype.closest;
      function F(e, t) {
        return e.matches ? e.matches(t) : e.msMatchesSelector(t);
      }
      class L {
        constructor() {
          this._listener = null;
        }
        preventFocus(e) {
          this._listener &&
            e._document.removeEventListener("focus", this._listener, !0),
            (this._listener = (t) => this._trapFocus(e, t)),
            e._ngZone.runOutsideAngular(() => {
              e._document.addEventListener("focus", this._listener, !0);
            });
        }
        allowFocus(e) {
          this._listener &&
            (e._document.removeEventListener("focus", this._listener, !0),
            (this._listener = null));
        }
        _trapFocus(e, t) {
          const n = t.target,
            s = e._element;
          s.contains(n) ||
            null !== j(n, "div.cdk-overlay-pane") ||
            setTimeout(() => {
              e.enabled &&
                !s.contains(e._document.activeElement) &&
                e.focusFirstTabbableElement();
            });
        }
      }
      class V {
        constructor() {
          this.defer = !1;
        }
      }
      const B = new i.E("FOCUS_TRAP_INERT_STRATEGY");
      class z {
        constructor() {
          this._focusTrapStack = [];
        }
        register(e) {
          this._focusTrapStack = this._focusTrapStack.filter((t) => t !== e);
          let t = this._focusTrapStack;
          t.length && t[t.length - 1]._disable(), t.push(e), e._enable();
        }
        deregister(e) {
          e._disable();
          const t = this._focusTrapStack,
            n = t.indexOf(e);
          -1 !== n && (t.splice(n, 1), t.length && t[t.length - 1]._enable());
        }
      }
      (z.ɵfac = function (e) {
        return new (e || z)();
      }),
        (z.ɵprov = Object(i.Ic)({
          factory: function () {
            return new z();
          },
          token: z,
          providedIn: "root",
        }));
      class H {
        constructor(e, t, n, s, i) {
          (this._checker = e),
            (this._ngZone = t),
            (this._focusTrapManager = n),
            (this._document = s),
            (this._inertStrategy = i || new L());
        }
        create(e, t = new V()) {
          let n;
          return (
            "boolean" == typeof t ? ((n = new V()), (n.defer = t)) : (n = t),
            new R(
              e,
              this._checker,
              this._ngZone,
              this._document,
              this._focusTrapManager,
              this._inertStrategy,
              n
            )
          );
        }
      }
      (H.ɵfac = function (e) {
        return new (e || H)(i.Yc(I), i.Yc(i.Q), i.Yc(z), i.Yc(s.c), i.Yc(B, 8));
      }),
        (H.ɵprov = Object(i.Ic)({
          factory: function () {
            return new H(
              Object(i.Yc)(I),
              Object(i.Yc)(i.Q),
              Object(i.Yc)(z),
              Object(i.Yc)(s.c),
              Object(i.Yc)(B, 8)
            );
          },
          token: H,
          providedIn: "root",
        })),
        (H.ctorParameters = () => [
          { type: I },
          { type: i.Q },
          { type: z },
          { type: void 0, decorators: [{ type: i.C, args: [s.c] }] },
          {
            type: void 0,
            decorators: [{ type: i.R }, { type: i.C, args: [B] }],
          },
        ]);
      const G = new i.E("liveAnnouncerElement", {
        providedIn: "root",
        factory: function () {
          return null;
        },
      });
      const U = new i.E("LIVE_ANNOUNCER_DEFAULT_OPTIONS");
      class $ {
        constructor(e, t, n, s) {
          (this._ngZone = t),
            (this._defaultOptions = s),
            (this._document = n),
            (this._liveElement = e || this._createLiveElement());
        }
        announce(e, ...t) {
          const n = this._defaultOptions;
          let s, i;
          return (
            1 === t.length && "number" == typeof t[0]
              ? (i = t[0])
              : ([s, i] = t),
            this.clear(),
            clearTimeout(this._previousTimeout),
            s || (s = n && n.politeness ? n.politeness : "polite"),
            null == i && n && (i = n.duration),
            this._liveElement.setAttribute("aria-live", s),
            this._ngZone.runOutsideAngular(
              () =>
                new Promise((t) => {
                  clearTimeout(this._previousTimeout),
                    (this._previousTimeout = setTimeout(() => {
                      (this._liveElement.textContent = e),
                        t(),
                        "number" == typeof i &&
                          (this._previousTimeout = setTimeout(
                            () => this.clear(),
                            i
                          ));
                    }, 100));
                })
            )
          );
        }
        clear() {
          this._liveElement && (this._liveElement.textContent = "");
        }
        ngOnDestroy() {
          clearTimeout(this._previousTimeout),
            this._liveElement &&
              this._liveElement.parentNode &&
              (this._liveElement.parentNode.removeChild(this._liveElement),
              (this._liveElement = null));
        }
        _createLiveElement() {
          const e = "cdk-live-announcer-element",
            t = this._document.getElementsByClassName(e),
            n = this._document.createElement("div");
          for (let s = 0; s < t.length; s++) t[s].parentNode.removeChild(t[s]);
          return (
            n.classList.add(e),
            n.classList.add("cdk-visually-hidden"),
            n.setAttribute("aria-atomic", "true"),
            n.setAttribute("aria-live", "polite"),
            this._document.body.appendChild(n),
            n
          );
        }
      }
      ($.ɵfac = function (e) {
        return new (e || $)(i.Yc(G, 8), i.Yc(i.Q), i.Yc(s.c), i.Yc(U, 8));
      }),
        ($.ɵprov = Object(i.Ic)({
          factory: function () {
            return new $(
              Object(i.Yc)(G, 8),
              Object(i.Yc)(i.Q),
              Object(i.Yc)(s.c),
              Object(i.Yc)(U, 8)
            );
          },
          token: $,
          providedIn: "root",
        })),
        ($.ctorParameters = () => [
          {
            type: void 0,
            decorators: [{ type: i.R }, { type: i.C, args: [G] }],
          },
          { type: i.Q },
          { type: void 0, decorators: [{ type: i.C, args: [s.c] }] },
          {
            type: void 0,
            decorators: [{ type: i.R }, { type: i.C, args: [U] }],
          },
        ]);
      class q {
        constructor(e, t, n, s) {
          (this._elementRef = e),
            (this._liveAnnouncer = t),
            (this._contentObserver = n),
            (this._ngZone = s),
            (this._politeness = "polite");
        }
        get politeness() {
          return this._politeness;
        }
        set politeness(e) {
          (this._politeness = "off" === e || "assertive" === e ? e : "polite"),
            "off" === this._politeness
              ? this._subscription &&
                (this._subscription.unsubscribe(), (this._subscription = null))
              : this._subscription ||
                (this._subscription = this._ngZone.runOutsideAngular(() =>
                  this._contentObserver
                    .observe(this._elementRef)
                    .subscribe(() => {
                      const e = this._elementRef.nativeElement.textContent;
                      e !== this._previousAnnouncedText &&
                        (this._liveAnnouncer.announce(e, this._politeness),
                        (this._previousAnnouncedText = e));
                    })
                ));
        }
        ngOnDestroy() {
          this._subscription && this._subscription.unsubscribe();
        }
      }
      function W(e) {
        return 0 === e.buttons;
      }
      (q.ɵfac = function (e) {
        return new (e || q)(i.Mc(i.v), i.Mc($), i.Mc(g.b), i.Mc(i.Q));
      }),
        (q.ɵdir = i.Hc({
          type: q,
          selectors: [["", "cdkAriaLive", ""]],
          inputs: { politeness: ["cdkAriaLive", "politeness"] },
          exportAs: ["cdkAriaLive"],
        })),
        (q.ctorParameters = () => [
          { type: i.v },
          { type: $ },
          { type: g.b },
          { type: i.Q },
        ]),
        (q.propDecorators = {
          politeness: [{ type: i.G, args: ["cdkAriaLive"] }],
        });
      const Y = new i.E("cdk-focus-monitor-default-options"),
        Q = Object(r.f)({ passive: !0, capture: !0 });
      class K {
        constructor(e, t, n, s) {
          (this._ngZone = e),
            (this._platform = t),
            (this._origin = null),
            (this._windowFocused = !1),
            (this._elementInfo = new Map()),
            (this._monitoredElementCount = 0),
            (this._rootNodeFocusListenerCount = new Map()),
            (this._documentKeydownListener = () => {
              (this._lastTouchTarget = null),
                this._setOriginForCurrentEventQueue("keyboard");
            }),
            (this._documentMousedownListener = (e) => {
              if (!this._lastTouchTarget) {
                const t = W(e) ? "keyboard" : "mouse";
                this._setOriginForCurrentEventQueue(t);
              }
            }),
            (this._documentTouchstartListener = (e) => {
              null != this._touchTimeoutId &&
                clearTimeout(this._touchTimeoutId),
                (this._lastTouchTarget = J(e)),
                (this._touchTimeoutId = setTimeout(
                  () => (this._lastTouchTarget = null),
                  650
                ));
            }),
            (this._windowFocusListener = () => {
              (this._windowFocused = !0),
                (this._windowFocusTimeoutId = setTimeout(
                  () => (this._windowFocused = !1)
                ));
            }),
            (this._rootNodeFocusAndBlurListener = (e) => {
              const t = J(e),
                n = "focus" === e.type ? this._onFocus : this._onBlur;
              for (let s = t; s; s = s.parentElement) n.call(this, e, s);
            }),
            (this._document = n),
            (this._detectionMode = (null == s ? void 0 : s.detectionMode) || 0);
        }
        monitor(e, t = !1) {
          const n = Object(f.d)(e);
          if (!this._platform.isBrowser || 1 !== n.nodeType)
            return Object(l.a)(null);
          const s = Object(r.c)(n) || this._getDocument(),
            i = this._elementInfo.get(n);
          if (i) return t && (i.checkChildren = !0), i.subject;
          const a = { checkChildren: t, subject: new o.a(), rootNode: s };
          return (
            this._elementInfo.set(n, a),
            this._registerGlobalListeners(a),
            a.subject
          );
        }
        stopMonitoring(e) {
          const t = Object(f.d)(e),
            n = this._elementInfo.get(t);
          n &&
            (n.subject.complete(),
            this._setClasses(t),
            this._elementInfo.delete(t),
            this._removeGlobalListeners(n));
        }
        focusVia(e, t, n) {
          const s = Object(f.d)(e);
          s === this._getDocument().activeElement && this._elementInfo.has(s)
            ? this._originChanged(s, t, this._elementInfo.get(s))
            : (this._setOriginForCurrentEventQueue(t),
              "function" == typeof s.focus && s.focus(n));
        }
        ngOnDestroy() {
          this._elementInfo.forEach((e, t) => this.stopMonitoring(t));
        }
        _getDocument() {
          return this._document || document;
        }
        _getWindow() {
          return this._getDocument().defaultView || window;
        }
        _toggleClass(e, t, n) {
          n ? e.classList.add(t) : e.classList.remove(t);
        }
        _getFocusOrigin(e) {
          return this._origin
            ? this._origin
            : this._windowFocused && this._lastFocusOrigin
            ? this._lastFocusOrigin
            : this._wasCausedByTouch(e)
            ? "touch"
            : "program";
        }
        _setClasses(e, t) {
          this._toggleClass(e, "cdk-focused", !!t),
            this._toggleClass(e, "cdk-touch-focused", "touch" === t),
            this._toggleClass(e, "cdk-keyboard-focused", "keyboard" === t),
            this._toggleClass(e, "cdk-mouse-focused", "mouse" === t),
            this._toggleClass(e, "cdk-program-focused", "program" === t);
        }
        _setOriginForCurrentEventQueue(e) {
          this._ngZone.runOutsideAngular(() => {
            (this._origin = e),
              0 === this._detectionMode &&
                (this._originTimeoutId = setTimeout(
                  () => (this._origin = null),
                  1
                ));
          });
        }
        _wasCausedByTouch(e) {
          const t = J(e);
          return (
            this._lastTouchTarget instanceof Node &&
            t instanceof Node &&
            (t === this._lastTouchTarget || t.contains(this._lastTouchTarget))
          );
        }
        _onFocus(e, t) {
          const n = this._elementInfo.get(t);
          n &&
            (n.checkChildren || t === J(e)) &&
            this._originChanged(t, this._getFocusOrigin(e), n);
        }
        _onBlur(e, t) {
          const n = this._elementInfo.get(t);
          !n ||
            (n.checkChildren &&
              e.relatedTarget instanceof Node &&
              t.contains(e.relatedTarget)) ||
            (this._setClasses(t), this._emitOrigin(n.subject, null));
        }
        _emitOrigin(e, t) {
          this._ngZone.run(() => e.next(t));
        }
        _registerGlobalListeners(e) {
          if (!this._platform.isBrowser) return;
          const t = e.rootNode,
            n = this._rootNodeFocusListenerCount.get(t) || 0;
          n ||
            this._ngZone.runOutsideAngular(() => {
              t.addEventListener(
                "focus",
                this._rootNodeFocusAndBlurListener,
                Q
              ),
                t.addEventListener(
                  "blur",
                  this._rootNodeFocusAndBlurListener,
                  Q
                );
            }),
            this._rootNodeFocusListenerCount.set(t, n + 1),
            1 == ++this._monitoredElementCount &&
              this._ngZone.runOutsideAngular(() => {
                const e = this._getDocument(),
                  t = this._getWindow();
                e.addEventListener("keydown", this._documentKeydownListener, Q),
                  e.addEventListener(
                    "mousedown",
                    this._documentMousedownListener,
                    Q
                  ),
                  e.addEventListener(
                    "touchstart",
                    this._documentTouchstartListener,
                    Q
                  ),
                  t.addEventListener("focus", this._windowFocusListener);
              });
        }
        _removeGlobalListeners(e) {
          const t = e.rootNode;
          if (this._rootNodeFocusListenerCount.has(t)) {
            const e = this._rootNodeFocusListenerCount.get(t);
            e > 1
              ? this._rootNodeFocusListenerCount.set(t, e - 1)
              : (t.removeEventListener(
                  "focus",
                  this._rootNodeFocusAndBlurListener,
                  Q
                ),
                t.removeEventListener(
                  "blur",
                  this._rootNodeFocusAndBlurListener,
                  Q
                ),
                this._rootNodeFocusListenerCount.delete(t));
          }
          if (!--this._monitoredElementCount) {
            const e = this._getDocument(),
              t = this._getWindow();
            e.removeEventListener("keydown", this._documentKeydownListener, Q),
              e.removeEventListener(
                "mousedown",
                this._documentMousedownListener,
                Q
              ),
              e.removeEventListener(
                "touchstart",
                this._documentTouchstartListener,
                Q
              ),
              t.removeEventListener("focus", this._windowFocusListener),
              clearTimeout(this._windowFocusTimeoutId),
              clearTimeout(this._touchTimeoutId),
              clearTimeout(this._originTimeoutId);
          }
        }
        _originChanged(e, t, n) {
          this._setClasses(e, t),
            this._emitOrigin(n.subject, t),
            (this._lastFocusOrigin = t);
        }
      }
      function J(e) {
        return e.composedPath ? e.composedPath()[0] : e.target;
      }
      (K.ɵfac = function (e) {
        return new (e || K)(i.Yc(i.Q), i.Yc(r.a), i.Yc(s.c, 8), i.Yc(Y, 8));
      }),
        (K.ɵprov = Object(i.Ic)({
          factory: function () {
            return new K(
              Object(i.Yc)(i.Q),
              Object(i.Yc)(r.a),
              Object(i.Yc)(s.c, 8),
              Object(i.Yc)(Y, 8)
            );
          },
          token: K,
          providedIn: "root",
        })),
        (K.ctorParameters = () => [
          { type: i.Q },
          { type: r.a },
          {
            type: void 0,
            decorators: [{ type: i.R }, { type: i.C, args: [s.c] }],
          },
          {
            type: void 0,
            decorators: [{ type: i.R }, { type: i.C, args: [Y] }],
          },
        ]);
      class X {
        constructor(e, t) {
          (this._elementRef = e),
            (this._focusMonitor = t),
            (this.cdkFocusChange = new i.x());
        }
        ngAfterViewInit() {
          const e = this._elementRef.nativeElement;
          this._monitorSubscription = this._focusMonitor
            .monitor(
              e,
              1 === e.nodeType && e.hasAttribute("cdkMonitorSubtreeFocus")
            )
            .subscribe((e) => this.cdkFocusChange.emit(e));
        }
        ngOnDestroy() {
          this._focusMonitor.stopMonitoring(this._elementRef),
            this._monitorSubscription &&
              this._monitorSubscription.unsubscribe();
        }
      }
      (X.ɵfac = function (e) {
        return new (e || X)(i.Mc(i.v), i.Mc(K));
      }),
        (X.ɵdir = i.Hc({
          type: X,
          selectors: [
            ["", "cdkMonitorElementFocus", ""],
            ["", "cdkMonitorSubtreeFocus", ""],
          ],
          outputs: { cdkFocusChange: "cdkFocusChange" },
        })),
        (X.ctorParameters = () => [{ type: i.v }, { type: K }]),
        (X.propDecorators = { cdkFocusChange: [{ type: i.S }] });
      const Z = "cdk-high-contrast-black-on-white",
        ee = "cdk-high-contrast-white-on-black",
        te = "cdk-high-contrast-active";
      class ne {
        constructor(e, t) {
          (this._platform = e), (this._document = t);
        }
        getHighContrastMode() {
          if (!this._platform.isBrowser) return 0;
          const e = this._document.createElement("div");
          (e.style.backgroundColor = "rgb(1,2,3)"),
            (e.style.position = "absolute"),
            this._document.body.appendChild(e);
          const t = this._document.defaultView || window,
            n = t && t.getComputedStyle ? t.getComputedStyle(e) : null,
            s = ((n && n.backgroundColor) || "").replace(/ /g, "");
          switch ((this._document.body.removeChild(e), s)) {
            case "rgb(0,0,0)":
              return 2;
            case "rgb(255,255,255)":
              return 1;
          }
          return 0;
        }
        _applyBodyHighContrastModeCssClasses() {
          if (this._platform.isBrowser && this._document.body) {
            const e = this._document.body.classList;
            e.remove(te), e.remove(Z), e.remove(ee);
            const t = this.getHighContrastMode();
            1 === t ? (e.add(te), e.add(Z)) : 2 === t && (e.add(te), e.add(ee));
          }
        }
      }
      (ne.ɵfac = function (e) {
        return new (e || ne)(i.Yc(r.a), i.Yc(s.c));
      }),
        (ne.ɵprov = Object(i.Ic)({
          factory: function () {
            return new ne(Object(i.Yc)(r.a), Object(i.Yc)(s.c));
          },
          token: ne,
          providedIn: "root",
        })),
        (ne.ctorParameters = () => [
          { type: r.a },
          { type: void 0, decorators: [{ type: i.C, args: [s.c] }] },
        ]);
      class se {
        constructor(e) {
          e._applyBodyHighContrastModeCssClasses();
        }
      }
      (se.ɵmod = i.Kc({ type: se })),
        (se.ɵinj = i.Jc({
          factory: function (e) {
            return new (e || se)(i.Yc(ne));
          },
          imports: [[r.b, g.c]],
        })),
        (se.ctorParameters = () => [{ type: ne }]),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          i.wd(se, {
            declarations: function () {
              return [q, P, X];
            },
            imports: function () {
              return [r.b, g.c];
            },
            exports: function () {
              return [q, P, X];
            },
          });
    },
    uZrY: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var s = n("mrSG"),
        i = n("0IaG"),
        r = n("fXoL");
      let o = class {
        constructor(e, t) {
          (this.data = e),
            (this.dialogRef = t),
            (this.students = []),
            (this.activeStudent = ""),
            (this.studenInfo = {}),
            (this.students = e.students);
        }
        selectClass(e) {
          let t = e.username,
            n = e.Name,
            s = e.childEmail,
            i = e.parentName,
            r = e.class;
          const {
            endDate: o,
            startDate: a,
            MSE_startDate: l,
            MSE_endDate: c,
          } = e;
          (this.studenInfo.username = t),
            (this.studenInfo.studentName = n),
            (this.studenInfo.email = s),
            (this.studenInfo.parent = i),
            (this.studenInfo.class = r),
            (this.studenInfo.mathsEndDate = o),
            (this.studenInfo.mathsStartDate = a),
            (this.studenInfo.englishStartDate = l),
            (this.studenInfo.englishEndDate = c),
            (this.activeStudent = t),
            setTimeout(() => {
              this.procedBtn.nativeElement.scrollIntoView();
            }, 1e3);
        }
        ngOnInit() {}
        proceed() {
          this.dialogRef.close(this.studenInfo);
        }
        addStudent() {
          this.dialogRef.close();
        }
      };
      (o.ctorParameters = () => [
        { type: void 0, decorators: [{ type: r.C, args: [i.a] }] },
        { type: i.d },
      ]),
        (o.propDecorators = {
          procedBtn: [{ type: r.mb, args: ["procedBtn"] }],
        }),
        (o = Object(s.a)(
          [
            Object(r.n)({
              selector: "app-student-popup",
              template:
                '<div class="modalContainer">\n    <h3 class="heading">For which student you like to renew mindspark?</h3>\n    <div class="margin-top margin-bottom" fxLayout="row wrap" fxLayoutAlign="center center">\n        <mat-card id="card" *ngFor="let student of students" class="classCard zoom" (click)="selectClass(student)"\n            [ngStyle]="student.username === activeStudent && {\'background-color\': \'#2875df\',\'color\':\'#fff\'}">\n            <div>\n                <div *ngIf="student.username === activeStudent"\n                    [ngStyle]="activeStudent === student.username && {\'background-color\': \'#fff\',\'color\':\'#2875df\'}"\n                    class="done-icon">\n                    <mat-icon class="">done</mat-icon>\n                </div>\n                <div class="center"> {{student.Name}}</div>\n                <br>\n                <div class="center"> Class: {{student.class}}</div>\n            </div>\n        </mat-card>\n    </div>\n    <div mat-button (click)="addStudent()" class="freeTrial addNewButton"\n        [ngStyle.xs]="{\'justify-content\':\'center\',\'width\':\'100%\'}">\n        Add new student\n    </div>\n    <div #procedBtn mat-button (click)="proceed()" class="freeTrial" [ngStyle.xs]="{\'justify-content\':\'center\',\'width\':\'100%\'}">\n        Proceed\n    </div>\n</div>',
              styles: [
                ".heading {\n  text-align: center;\n  font-weight: bold;\n  margin-bottom: 20px;\n  max-width: 335px;\n  line-height: 1.36;\n  font-size: 28px;\n}\n\n.modalContainer {\n  justify-content: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.margin-top {\n  margin-top: 20px;\n}\n\n.done-icon {\n  width: 24px;\n  height: 24px;\n  background-color: #fff;\n  text-align: center;\n  color: #28a7df;\n  border-radius: 30px;\n  font-weight: 500;\n  font-size: 16px;\n  position: absolute;\n  top: 20px;\n  left: 20px;\n}\n\n.classCard {\n  margin: 13px 16px;\n  padding: 40px;\n  min-width: 300px;\n  border-radius: 16px;\n  background-color: #fff;\n  text-align: center;\n  font-size: 16px;\n  font-weight: bold;\n  cursor: pointer;\n  border: solid 2px #f1f1f4;\n  position: relative;\n}\n\n.margin-bottom {\n  margin-bottom: 20px;\n}\n\n.schoolName {\n  font-size: 14px;\n}\n\n.freeTrial {\n  width: 303px;\n  padding: 17px 0px;\n  font-size: 16px;\n  font-weight: bold;\n  margin-left: 0px;\n}\n\n.addNewButton {\n  background-color: #ffffff;\n  color: #000000;\n  background-image: none;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);\n}\n\n.addNewButton:hover {\n  background-color: #f0f3f4d6;\n}\n\n.zoom:hover {\n  transform: scale(1.03);\n}\n\n::ng-deep.mat-dialog-container {\n  background-color: #f5f5f5 !important;\n  padding: 20px;\n}\n\n@media only screen and (max-width: 767px) {\n  .classCard {\n    width: 100%;\n    margin-left: 0px;\n  }\n}",
              ],
            }),
          ],
          o
        ));
    },
    vYmM: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return l;
      });
      var s = n("mrSG"),
        i = n("tk/3"),
        r = n("fXoL"),
        o = n("AytR"),
        a = n("xKP8");
      let l = class {
        constructor(e, t) {
          (this.httpClient = e),
            (this.subscriptionService = t),
            (this.baseURL = o.a.API_END_POINT),
            (this.showSendOtp = new r.x());
        }
        sendOTP(e, t, n) {
          let s = new FormData();
          s.append("mobile", e), s.append("parentCountryCode", t);
          const i = this.baseURL + "user_api/send_otpV2";
          return this.httpClient.post(i, s);
        }
        showResendOtp() {
          this.showSendOtp.emit();
        }
        verifyEnteredOtp(e, t, n) {
          const s = this.baseURL + "user_api/verifyEnteredOtpV2";
          let i = new FormData();
          return (
            i.append("mobile", e),
            i.append("countryCodeVal", t),
            i.append("parentMobileOTP", n),
            this.httpClient.post(s, i)
          );
        }
        getDemoTimeSlots() {
          const e = this.baseURL + "user_api/getLiveClassesTimeSlot";
          return this.httpClient.get(e);
        }
        registerForDemo(e) {
          let t = new FormData();
          console.log(e),
            t.append("studentName", e.value.studentName.trim()),
            t.append("parentMobileNumber", e.value.phoneNumber.trim()),
            t.append("parentEmail", e.value.email.trim()),
            t.append("class", e.value.grade.trim()),
            t.append("curriculum", e.value.syllabus.trim()),
            t.append("timeSlotId", e.value.demoTimeSlot.trim()),
            t.append("countryCode", e.value.numericCode.trim()),
            t.append("whatsAppConsent", e.value.whatsAppConsent.trim());
          const n = this.baseURL + "user_api/saveDemoLiveClassUser",
            s = this.subscriptionService.getUTMParams();
          return (
            t.append("utm_source_new", s.utm_source_new),
            t.append("utm_medium_new", s.utm_medium_new),
            t.append("utm_campaign_new", s.utm_campaign_new),
            t.append("utm_term_new", s.utm_term_new),
            t.append("utm_content_new", s.utm_content_new),
            t.append("gclid_Source", s.gclid_Source),
            this.httpClient.post(n, t)
          );
        }
      };
      (l.ctorParameters = () => [{ type: i.b }, { type: a.a }]),
        (l = Object(s.a)([Object(r.D)({ providedIn: "root" })], l));
    },
    vkgz: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var s = n("7o/Q"),
        i = n("KqfI"),
        r = n("n6bG");
      function o(e, t, n) {
        return function (s) {
          return s.lift(new a(e, t, n));
        };
      }
      class a {
        constructor(e, t, n) {
          (this.nextOrObserver = e), (this.error = t), (this.complete = n);
        }
        call(e, t) {
          return t.subscribe(
            new l(e, this.nextOrObserver, this.error, this.complete)
          );
        }
      }
      class l extends s.a {
        constructor(e, t, n, s) {
          super(e),
            (this._tapNext = i.a),
            (this._tapError = i.a),
            (this._tapComplete = i.a),
            (this._tapError = n || i.a),
            (this._tapComplete = s || i.a),
            Object(r.a)(t)
              ? ((this._context = this), (this._tapNext = t))
              : t &&
                ((this._context = t),
                (this._tapNext = t.next || i.a),
                (this._tapError = t.error || i.a),
                (this._tapComplete = t.complete || i.a));
        }
        _next(e) {
          try {
            this._tapNext.call(this._context, e);
          } catch (t) {
            return void this.destination.error(t);
          }
          this.destination.next(e);
        }
        _error(e) {
          try {
            this._tapError.call(this._context, e);
          } catch (e) {
            return void this.destination.error(e);
          }
          this.destination.error(e);
        }
        _complete() {
          try {
            this._tapComplete.call(this._context);
          } catch (e) {
            return void this.destination.error(e);
          }
          return this.destination.complete();
        }
      }
    },
    vxfF: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return W;
      }),
        n.d(t, "b", function () {
          return Z;
        }),
        n.d(t, "c", function () {
          return q;
        }),
        n.d(t, "d", function () {
          return ee;
        }),
        n.d(t, "e", function () {
          return Y;
        });
      var s = n("8LU1"),
        i = n("fXoL"),
        r = n("XNiG"),
        o = n("LRne"),
        a = n("HDdC"),
        l = n("xgIS"),
        c = n("3N8a");
      class u extends c.a {
        constructor(e, t) {
          super(e, t), (this.scheduler = e), (this.work = t);
        }
        requestAsyncId(e, t, n = 0) {
          return null !== n && n > 0
            ? super.requestAsyncId(e, t, n)
            : (e.actions.push(this),
              e.scheduled ||
                (e.scheduled = requestAnimationFrame(() => e.flush(null))));
        }
        recycleAsyncId(e, t, n = 0) {
          if ((null !== n && n > 0) || (null === n && this.delay > 0))
            return super.recycleAsyncId(e, t, n);
          0 === e.actions.length &&
            (cancelAnimationFrame(t), (e.scheduled = void 0));
        }
      }
      var d = n("IjjT");
      class h extends d.a {
        flush(e) {
          (this.active = !0), (this.scheduled = void 0);
          const { actions: t } = this;
          let n,
            s = -1,
            i = t.length;
          e = e || t.shift();
          do {
            if ((n = e.execute(e.state, e.delay))) break;
          } while (++s < i && (e = t.shift()));
          if (((this.active = !1), n)) {
            for (; ++s < i && (e = t.shift()); ) e.unsubscribe();
            throw n;
          }
        }
      }
      const p = new h(u);
      var m = n("7Hc7"),
        f = n("quSY"),
        g = n("7+OI"),
        y = n("/uUt"),
        v = n("3UWI"),
        b = n("pLZG"),
        x = n("1G5W"),
        _ = n("JX91"),
        w = n("7o/Q");
      class C {
        call(e, t) {
          return t.subscribe(new S(e));
        }
      }
      class S extends w.a {
        constructor(e) {
          super(e), (this.hasPrev = !1);
        }
        _next(e) {
          let t;
          this.hasPrev ? (t = [this.prev, e]) : (this.hasPrev = !0),
            (this.prev = e),
            t && this.destination.next(t);
        }
      }
      var E = n("eIep");
      class k extends c.a {
        constructor(e, t) {
          super(e, t), (this.scheduler = e), (this.work = t);
        }
        schedule(e, t = 0) {
          return t > 0
            ? super.schedule(e, t)
            : ((this.delay = t),
              (this.state = e),
              this.scheduler.flush(this),
              this);
        }
        execute(e, t) {
          return t > 0 || this.closed
            ? super.execute(e, t)
            : this._execute(e, t);
        }
        requestAsyncId(e, t, n = 0) {
          return (null !== n && n > 0) || (null === n && this.delay > 0)
            ? super.requestAsyncId(e, t, n)
            : e.flush(this);
        }
      }
      class O extends d.a {}
      const I = new O(k);
      var T = n("WMd4");
      class A extends w.a {
        constructor(e, t, n = 0) {
          super(e), (this.scheduler = t), (this.delay = n);
        }
        static dispatch(e) {
          const { notification: t, destination: n } = e;
          t.observe(n), this.unsubscribe();
        }
        scheduleMessage(e) {
          this.destination.add(
            this.scheduler.schedule(
              A.dispatch,
              this.delay,
              new D(e, this.destination)
            )
          );
        }
        _next(e) {
          this.scheduleMessage(T.a.createNext(e));
        }
        _error(e) {
          this.scheduleMessage(T.a.createError(e)), this.unsubscribe();
        }
        _complete() {
          this.scheduleMessage(T.a.createComplete()), this.unsubscribe();
        }
      }
      class D {
        constructor(e, t) {
          (this.notification = e), (this.destination = t);
        }
      }
      var M = n("9ppp"),
        P = n("Ylt2");
      class R extends r.a {
        constructor(
          e = Number.POSITIVE_INFINITY,
          t = Number.POSITIVE_INFINITY,
          n
        ) {
          super(),
            (this.scheduler = n),
            (this._events = []),
            (this._infiniteTimeWindow = !1),
            (this._bufferSize = e < 1 ? 1 : e),
            (this._windowTime = t < 1 ? 1 : t),
            t === Number.POSITIVE_INFINITY
              ? ((this._infiniteTimeWindow = !0),
                (this.next = this.nextInfiniteTimeWindow))
              : (this.next = this.nextTimeWindow);
        }
        nextInfiniteTimeWindow(e) {
          if (!this.isStopped) {
            const t = this._events;
            t.push(e), t.length > this._bufferSize && t.shift();
          }
          super.next(e);
        }
        nextTimeWindow(e) {
          this.isStopped ||
            (this._events.push(new j(this._getNow(), e)),
            this._trimBufferThenGetEvents()),
            super.next(e);
        }
        _subscribe(e) {
          const t = this._infiniteTimeWindow,
            n = t ? this._events : this._trimBufferThenGetEvents(),
            s = this.scheduler,
            i = n.length;
          let r;
          if (this.closed) throw new M.a();
          if (
            (this.isStopped || this.hasError
              ? (r = f.a.EMPTY)
              : (this.observers.push(e), (r = new P.a(this, e))),
            s && e.add((e = new A(e, s))),
            t)
          )
            for (let o = 0; o < i && !e.closed; o++) e.next(n[o]);
          else for (let o = 0; o < i && !e.closed; o++) e.next(n[o].value);
          return (
            this.hasError
              ? e.error(this.thrownError)
              : this.isStopped && e.complete(),
            r
          );
        }
        _getNow() {
          return (this.scheduler || I).now();
        }
        _trimBufferThenGetEvents() {
          const e = this._getNow(),
            t = this._bufferSize,
            n = this._windowTime,
            s = this._events,
            i = s.length;
          let r = 0;
          for (; r < i && !(e - s[r].time < n); ) r++;
          return i > t && (r = Math.max(r, i - t)), r > 0 && s.splice(0, r), s;
        }
      }
      class j {
        constructor(e, t) {
          (this.time = e), (this.value = t);
        }
      }
      function N(e, t, n) {
        let s;
        return (
          (s =
            e && "object" == typeof e
              ? e
              : { bufferSize: e, windowTime: t, refCount: !1, scheduler: n }),
          (e) =>
            e.lift(
              (function ({
                bufferSize: e = Number.POSITIVE_INFINITY,
                windowTime: t = Number.POSITIVE_INFINITY,
                refCount: n,
                scheduler: s,
              }) {
                let i,
                  r,
                  o = 0,
                  a = !1,
                  l = !1;
                return function (c) {
                  let u;
                  o++,
                    !i || a
                      ? ((a = !1),
                        (i = new R(e, t, s)),
                        (u = i.subscribe(this)),
                        (r = c.subscribe({
                          next(e) {
                            i.next(e);
                          },
                          error(e) {
                            (a = !0), i.error(e);
                          },
                          complete() {
                            (l = !0), (r = void 0), i.complete();
                          },
                        })))
                      : (u = i.subscribe(this)),
                    this.add(() => {
                      o--,
                        u.unsubscribe(),
                        r &&
                          !l &&
                          n &&
                          0 === o &&
                          (r.unsubscribe(), (r = void 0), (i = void 0));
                    });
                };
              })(s)
            )
        );
      }
      var F = n("nLfN"),
        L = n("ofXK"),
        V = n("cH1L"),
        B = n("0EQZ");
      const z = ["contentWrapper"],
        H = new i.E("VIRTUAL_SCROLL_STRATEGY");
      class G {
        constructor(e, t, n) {
          (this._scrolledIndexChange = new r.a()),
            (this.scrolledIndexChange = this._scrolledIndexChange.pipe(
              Object(y.a)()
            )),
            (this._viewport = null),
            (this._itemSize = e),
            (this._minBufferPx = t),
            (this._maxBufferPx = n);
        }
        attach(e) {
          (this._viewport = e),
            this._updateTotalContentSize(),
            this._updateRenderedRange();
        }
        detach() {
          this._scrolledIndexChange.complete(), (this._viewport = null);
        }
        updateItemAndBufferSize(e, t, n) {
          (this._itemSize = e),
            (this._minBufferPx = t),
            (this._maxBufferPx = n),
            this._updateTotalContentSize(),
            this._updateRenderedRange();
        }
        onContentScrolled() {
          this._updateRenderedRange();
        }
        onDataLengthChanged() {
          this._updateTotalContentSize(), this._updateRenderedRange();
        }
        onContentRendered() {}
        onRenderedOffsetChanged() {}
        scrollToIndex(e, t) {
          this._viewport &&
            this._viewport.scrollToOffset(e * this._itemSize, t);
        }
        _updateTotalContentSize() {
          this._viewport &&
            this._viewport.setTotalContentSize(
              this._viewport.getDataLength() * this._itemSize
            );
        }
        _updateRenderedRange() {
          if (!this._viewport) return;
          const e = this._viewport.getRenderedRange(),
            t = { start: e.start, end: e.end },
            n = this._viewport.getViewportSize(),
            s = this._viewport.getDataLength();
          let i = this._viewport.measureScrollOffset(),
            r = i / this._itemSize;
          if (t.end > s) {
            const e = Math.ceil(n / this._itemSize),
              o = Math.max(0, Math.min(r, s - e));
            r != o &&
              ((r = o), (i = o * this._itemSize), (t.start = Math.floor(r))),
              (t.end = Math.max(0, Math.min(s, t.start + e)));
          }
          const o = i - t.start * this._itemSize;
          if (o < this._minBufferPx && 0 != t.start) {
            const e = Math.ceil((this._maxBufferPx - o) / this._itemSize);
            (t.start = Math.max(0, t.start - e)),
              (t.end = Math.min(
                s,
                Math.ceil(r + (n + this._minBufferPx) / this._itemSize)
              ));
          } else {
            const e = t.end * this._itemSize - (i + n);
            if (e < this._minBufferPx && t.end != s) {
              const n = Math.ceil((this._maxBufferPx - e) / this._itemSize);
              n > 0 &&
                ((t.end = Math.min(s, t.end + n)),
                (t.start = Math.max(
                  0,
                  Math.floor(r - this._minBufferPx / this._itemSize)
                )));
            }
          }
          this._viewport.setRenderedRange(t),
            this._viewport.setRenderedContentOffset(this._itemSize * t.start),
            this._scrolledIndexChange.next(Math.floor(r));
        }
      }
      function U(e) {
        return e._scrollStrategy;
      }
      class $ {
        constructor() {
          (this._itemSize = 20),
            (this._minBufferPx = 100),
            (this._maxBufferPx = 200),
            (this._scrollStrategy = new G(
              this.itemSize,
              this.minBufferPx,
              this.maxBufferPx
            ));
        }
        get itemSize() {
          return this._itemSize;
        }
        set itemSize(e) {
          this._itemSize = Object(s.e)(e);
        }
        get minBufferPx() {
          return this._minBufferPx;
        }
        set minBufferPx(e) {
          this._minBufferPx = Object(s.e)(e);
        }
        get maxBufferPx() {
          return this._maxBufferPx;
        }
        set maxBufferPx(e) {
          this._maxBufferPx = Object(s.e)(e);
        }
        ngOnChanges() {
          this._scrollStrategy.updateItemAndBufferSize(
            this.itemSize,
            this.minBufferPx,
            this.maxBufferPx
          );
        }
      }
      ($.ɵfac = function (e) {
        return new (e || $)();
      }),
        ($.ɵdir = i.Hc({
          type: $,
          selectors: [["cdk-virtual-scroll-viewport", "itemSize", ""]],
          inputs: {
            itemSize: "itemSize",
            minBufferPx: "minBufferPx",
            maxBufferPx: "maxBufferPx",
          },
          features: [
            i.yc([
              { provide: H, useFactory: U, deps: [Object(i.sb)(() => $)] },
            ]),
            i.xc,
          ],
        })),
        ($.propDecorators = {
          itemSize: [{ type: i.G }],
          minBufferPx: [{ type: i.G }],
          maxBufferPx: [{ type: i.G }],
        });
      class q {
        constructor(e, t, n) {
          (this._ngZone = e),
            (this._platform = t),
            (this._scrolled = new r.a()),
            (this._globalSubscription = null),
            (this._scrolledCount = 0),
            (this.scrollContainers = new Map()),
            (this._document = n);
        }
        register(e) {
          this.scrollContainers.has(e) ||
            this.scrollContainers.set(
              e,
              e.elementScrolled().subscribe(() => this._scrolled.next(e))
            );
        }
        deregister(e) {
          const t = this.scrollContainers.get(e);
          t && (t.unsubscribe(), this.scrollContainers.delete(e));
        }
        scrolled(e = 20) {
          return this._platform.isBrowser
            ? new a.a((t) => {
                this._globalSubscription || this._addGlobalListener();
                const n =
                  e > 0
                    ? this._scrolled.pipe(Object(v.a)(e)).subscribe(t)
                    : this._scrolled.subscribe(t);
                return (
                  this._scrolledCount++,
                  () => {
                    n.unsubscribe(),
                      this._scrolledCount--,
                      this._scrolledCount || this._removeGlobalListener();
                  }
                );
              })
            : Object(o.a)();
        }
        ngOnDestroy() {
          this._removeGlobalListener(),
            this.scrollContainers.forEach((e, t) => this.deregister(t)),
            this._scrolled.complete();
        }
        ancestorScrolled(e, t) {
          const n = this.getAncestorScrollContainers(e);
          return this.scrolled(t).pipe(
            Object(b.a)((e) => !e || n.indexOf(e) > -1)
          );
        }
        getAncestorScrollContainers(e) {
          const t = [];
          return (
            this.scrollContainers.forEach((n, s) => {
              this._scrollableContainsElement(s, e) && t.push(s);
            }),
            t
          );
        }
        _getWindow() {
          return this._document.defaultView || window;
        }
        _scrollableContainsElement(e, t) {
          let n = t.nativeElement,
            s = e.getElementRef().nativeElement;
          do {
            if (n == s) return !0;
          } while ((n = n.parentElement));
          return !1;
        }
        _addGlobalListener() {
          this._globalSubscription = this._ngZone.runOutsideAngular(() => {
            const e = this._getWindow();
            return Object(l.a)(e.document, "scroll").subscribe(() =>
              this._scrolled.next()
            );
          });
        }
        _removeGlobalListener() {
          this._globalSubscription &&
            (this._globalSubscription.unsubscribe(),
            (this._globalSubscription = null));
        }
      }
      (q.ɵfac = function (e) {
        return new (e || q)(i.Yc(i.Q), i.Yc(F.a), i.Yc(L.c, 8));
      }),
        (q.ɵprov = Object(i.Ic)({
          factory: function () {
            return new q(
              Object(i.Yc)(i.Q),
              Object(i.Yc)(F.a),
              Object(i.Yc)(L.c, 8)
            );
          },
          token: q,
          providedIn: "root",
        })),
        (q.ctorParameters = () => [
          { type: i.Q },
          { type: F.a },
          {
            type: void 0,
            decorators: [{ type: i.R }, { type: i.C, args: [L.c] }],
          },
        ]);
      class W {
        constructor(e, t, n, s) {
          (this.elementRef = e),
            (this.scrollDispatcher = t),
            (this.ngZone = n),
            (this.dir = s),
            (this._destroyed = new r.a()),
            (this._elementScrolled = new a.a((e) =>
              this.ngZone.runOutsideAngular(() =>
                Object(l.a)(this.elementRef.nativeElement, "scroll")
                  .pipe(Object(x.a)(this._destroyed))
                  .subscribe(e)
              )
            ));
        }
        ngOnInit() {
          this.scrollDispatcher.register(this);
        }
        ngOnDestroy() {
          this.scrollDispatcher.deregister(this),
            this._destroyed.next(),
            this._destroyed.complete();
        }
        elementScrolled() {
          return this._elementScrolled;
        }
        getElementRef() {
          return this.elementRef;
        }
        scrollTo(e) {
          const t = this.elementRef.nativeElement,
            n = this.dir && "rtl" == this.dir.value;
          null == e.left && (e.left = n ? e.end : e.start),
            null == e.right && (e.right = n ? e.start : e.end),
            null != e.bottom &&
              (e.top = t.scrollHeight - t.clientHeight - e.bottom),
            n && 0 != Object(F.d)()
              ? (null != e.left &&
                  (e.right = t.scrollWidth - t.clientWidth - e.left),
                2 == Object(F.d)()
                  ? (e.left = e.right)
                  : 1 == Object(F.d)() &&
                    (e.left = e.right ? -e.right : e.right))
              : null != e.right &&
                (e.left = t.scrollWidth - t.clientWidth - e.right),
            this._applyScrollToOptions(e);
        }
        _applyScrollToOptions(e) {
          const t = this.elementRef.nativeElement;
          Object(F.g)()
            ? t.scrollTo(e)
            : (null != e.top && (t.scrollTop = e.top),
              null != e.left && (t.scrollLeft = e.left));
        }
        measureScrollOffset(e) {
          const t = "left",
            n = "right",
            s = this.elementRef.nativeElement;
          if ("top" == e) return s.scrollTop;
          if ("bottom" == e)
            return s.scrollHeight - s.clientHeight - s.scrollTop;
          const i = this.dir && "rtl" == this.dir.value;
          return (
            "start" == e ? (e = i ? n : t) : "end" == e && (e = i ? t : n),
            i && 2 == Object(F.d)()
              ? e == t
                ? s.scrollWidth - s.clientWidth - s.scrollLeft
                : s.scrollLeft
              : i && 1 == Object(F.d)()
              ? e == t
                ? s.scrollLeft + s.scrollWidth - s.clientWidth
                : -s.scrollLeft
              : e == t
              ? s.scrollLeft
              : s.scrollWidth - s.clientWidth - s.scrollLeft
          );
        }
      }
      (W.ɵfac = function (e) {
        return new (e || W)(i.Mc(i.v), i.Mc(q), i.Mc(i.Q), i.Mc(V.b, 8));
      }),
        (W.ɵdir = i.Hc({
          type: W,
          selectors: [
            ["", "cdk-scrollable", ""],
            ["", "cdkScrollable", ""],
          ],
        })),
        (W.ctorParameters = () => [
          { type: i.v },
          { type: q },
          { type: i.Q },
          { type: V.b, decorators: [{ type: i.R }] },
        ]);
      class Y {
        constructor(e, t, n) {
          (this._platform = e),
            (this._change = new r.a()),
            (this._changeListener = (e) => {
              this._change.next(e);
            }),
            (this._document = n),
            t.runOutsideAngular(() => {
              if (e.isBrowser) {
                const e = this._getWindow();
                e.addEventListener("resize", this._changeListener),
                  e.addEventListener("orientationchange", this._changeListener);
              }
              this.change().subscribe(() => this._updateViewportSize());
            });
        }
        ngOnDestroy() {
          if (this._platform.isBrowser) {
            const e = this._getWindow();
            e.removeEventListener("resize", this._changeListener),
              e.removeEventListener("orientationchange", this._changeListener);
          }
          this._change.complete();
        }
        getViewportSize() {
          this._viewportSize || this._updateViewportSize();
          const e = {
            width: this._viewportSize.width,
            height: this._viewportSize.height,
          };
          return this._platform.isBrowser || (this._viewportSize = null), e;
        }
        getViewportRect() {
          const e = this.getViewportScrollPosition(),
            { width: t, height: n } = this.getViewportSize();
          return {
            top: e.top,
            left: e.left,
            bottom: e.top + n,
            right: e.left + t,
            height: n,
            width: t,
          };
        }
        getViewportScrollPosition() {
          if (!this._platform.isBrowser) return { top: 0, left: 0 };
          const e = this._document,
            t = this._getWindow(),
            n = e.documentElement,
            s = n.getBoundingClientRect();
          return {
            top: -s.top || e.body.scrollTop || t.scrollY || n.scrollTop || 0,
            left:
              -s.left || e.body.scrollLeft || t.scrollX || n.scrollLeft || 0,
          };
        }
        change(e = 20) {
          return e > 0 ? this._change.pipe(Object(v.a)(e)) : this._change;
        }
        _getWindow() {
          return this._document.defaultView || window;
        }
        _updateViewportSize() {
          const e = this._getWindow();
          this._viewportSize = this._platform.isBrowser
            ? { width: e.innerWidth, height: e.innerHeight }
            : { width: 0, height: 0 };
        }
      }
      (Y.ɵfac = function (e) {
        return new (e || Y)(i.Yc(F.a), i.Yc(i.Q), i.Yc(L.c, 8));
      }),
        (Y.ɵprov = Object(i.Ic)({
          factory: function () {
            return new Y(
              Object(i.Yc)(F.a),
              Object(i.Yc)(i.Q),
              Object(i.Yc)(L.c, 8)
            );
          },
          token: Y,
          providedIn: "root",
        })),
        (Y.ctorParameters = () => [
          { type: F.a },
          { type: i.Q },
          {
            type: void 0,
            decorators: [{ type: i.R }, { type: i.C, args: [L.c] }],
          },
        ]);
      const Q = "undefined" != typeof requestAnimationFrame ? p : m.a;
      class K extends W {
        constructor(e, t, n, s, i, o, l) {
          super(e, o, n, i),
            (this.elementRef = e),
            (this._changeDetectorRef = t),
            (this._scrollStrategy = s),
            (this._detachedSubject = new r.a()),
            (this._renderedRangeSubject = new r.a()),
            (this._orientation = "vertical"),
            (this.scrolledIndexChange = new a.a((e) =>
              this._scrollStrategy.scrolledIndexChange.subscribe((t) =>
                Promise.resolve().then(() => this.ngZone.run(() => e.next(t)))
              )
            )),
            (this.renderedRangeStream = this._renderedRangeSubject),
            (this._totalContentSize = 0),
            (this._totalContentWidth = ""),
            (this._totalContentHeight = ""),
            (this._renderedRange = { start: 0, end: 0 }),
            (this._dataLength = 0),
            (this._viewportSize = 0),
            (this._renderedContentOffset = 0),
            (this._renderedContentOffsetNeedsRewrite = !1),
            (this._isChangeDetectionPending = !1),
            (this._runAfterChangeDetection = []),
            (this._viewportChanges = f.a.EMPTY),
            (this._viewportChanges = l.change().subscribe(() => {
              this.checkViewportSize();
            }));
        }
        get orientation() {
          return this._orientation;
        }
        set orientation(e) {
          this._orientation !== e &&
            ((this._orientation = e), this._calculateSpacerSize());
        }
        ngOnInit() {
          super.ngOnInit(),
            this.ngZone.runOutsideAngular(() =>
              Promise.resolve().then(() => {
                this._measureViewportSize(),
                  this._scrollStrategy.attach(this),
                  this.elementScrolled()
                    .pipe(Object(_.a)(null), Object(v.a)(0, Q))
                    .subscribe(() => this._scrollStrategy.onContentScrolled()),
                  this._markChangeDetectionNeeded();
              })
            );
        }
        ngOnDestroy() {
          this.detach(),
            this._scrollStrategy.detach(),
            this._renderedRangeSubject.complete(),
            this._detachedSubject.complete(),
            this._viewportChanges.unsubscribe(),
            super.ngOnDestroy();
        }
        attach(e) {
          this._forOf,
            this.ngZone.runOutsideAngular(() => {
              (this._forOf = e),
                this._forOf.dataStream
                  .pipe(Object(x.a)(this._detachedSubject))
                  .subscribe((e) => {
                    const t = e.length;
                    t !== this._dataLength &&
                      ((this._dataLength = t),
                      this._scrollStrategy.onDataLengthChanged()),
                      this._doChangeDetection();
                  });
            });
        }
        detach() {
          (this._forOf = null), this._detachedSubject.next();
        }
        getDataLength() {
          return this._dataLength;
        }
        getViewportSize() {
          return this._viewportSize;
        }
        getRenderedRange() {
          return this._renderedRange;
        }
        setTotalContentSize(e) {
          this._totalContentSize !== e &&
            ((this._totalContentSize = e),
            this._calculateSpacerSize(),
            this._markChangeDetectionNeeded());
        }
        setRenderedRange(e) {
          var t, n;
          (t = this._renderedRange),
            (n = e),
            (t.start != n.start || t.end != n.end) &&
              (this._renderedRangeSubject.next((this._renderedRange = e)),
              this._markChangeDetectionNeeded(() =>
                this._scrollStrategy.onContentRendered()
              ));
        }
        getOffsetToRenderedContentStart() {
          return this._renderedContentOffsetNeedsRewrite
            ? null
            : this._renderedContentOffset;
        }
        setRenderedContentOffset(e, t = "to-start") {
          const n = this.dir && "rtl" == this.dir.value,
            s = "horizontal" == this.orientation,
            i = s ? "X" : "Y";
          let r = `translate${i}(${Number((s && n ? -1 : 1) * e)}px)`;
          (this._renderedContentOffset = e),
            "to-end" === t &&
              ((r += ` translate${i}(-100%)`),
              (this._renderedContentOffsetNeedsRewrite = !0)),
            this._renderedContentTransform != r &&
              ((this._renderedContentTransform = r),
              this._markChangeDetectionNeeded(() => {
                this._renderedContentOffsetNeedsRewrite
                  ? ((this._renderedContentOffset -=
                      this.measureRenderedContentSize()),
                    (this._renderedContentOffsetNeedsRewrite = !1),
                    this.setRenderedContentOffset(this._renderedContentOffset))
                  : this._scrollStrategy.onRenderedOffsetChanged();
              }));
        }
        scrollToOffset(e, t = "auto") {
          const n = { behavior: t };
          "horizontal" === this.orientation ? (n.start = e) : (n.top = e),
            this.scrollTo(n);
        }
        scrollToIndex(e, t = "auto") {
          this._scrollStrategy.scrollToIndex(e, t);
        }
        measureScrollOffset(e) {
          return e
            ? super.measureScrollOffset(e)
            : super.measureScrollOffset(
                "horizontal" === this.orientation ? "start" : "top"
              );
        }
        measureRenderedContentSize() {
          const e = this._contentWrapper.nativeElement;
          return "horizontal" === this.orientation
            ? e.offsetWidth
            : e.offsetHeight;
        }
        measureRangeSize(e) {
          return this._forOf
            ? this._forOf.measureRangeSize(e, this.orientation)
            : 0;
        }
        checkViewportSize() {
          this._measureViewportSize(),
            this._scrollStrategy.onDataLengthChanged();
        }
        _measureViewportSize() {
          const e = this.elementRef.nativeElement;
          this._viewportSize =
            "horizontal" === this.orientation ? e.clientWidth : e.clientHeight;
        }
        _markChangeDetectionNeeded(e) {
          e && this._runAfterChangeDetection.push(e),
            this._isChangeDetectionPending ||
              ((this._isChangeDetectionPending = !0),
              this.ngZone.runOutsideAngular(() =>
                Promise.resolve().then(() => {
                  this._doChangeDetection();
                })
              ));
        }
        _doChangeDetection() {
          (this._isChangeDetectionPending = !1),
            (this._contentWrapper.nativeElement.style.transform =
              this._renderedContentTransform),
            this.ngZone.run(() => this._changeDetectorRef.markForCheck());
          const e = this._runAfterChangeDetection;
          this._runAfterChangeDetection = [];
          for (const t of e) t();
        }
        _calculateSpacerSize() {
          (this._totalContentHeight =
            "horizontal" === this.orientation
              ? ""
              : this._totalContentSize + "px"),
            (this._totalContentWidth =
              "horizontal" === this.orientation
                ? this._totalContentSize + "px"
                : "");
        }
      }
      function J(e, t, n) {
        const s = n;
        if (!s.getBoundingClientRect) return 0;
        const i = s.getBoundingClientRect();
        return "horizontal" === e
          ? "start" === t
            ? i.left
            : i.right
          : "start" === t
          ? i.top
          : i.bottom;
      }
      (K.ɵfac = function (e) {
        return new (e || K)(
          i.Mc(i.v),
          i.Mc(i.k),
          i.Mc(i.Q),
          i.Mc(H, 8),
          i.Mc(V.b, 8),
          i.Mc(q),
          i.Mc(Y)
        );
      }),
        (K.ɵcmp = i.Gc({
          type: K,
          selectors: [["cdk-virtual-scroll-viewport"]],
          viewQuery: function (e, t) {
            if ((1 & e && i.yd(z, !0), 2 & e)) {
              let e;
              i.sd((e = i.dd())) && (t._contentWrapper = e.first);
            }
          },
          hostAttrs: [1, "cdk-virtual-scroll-viewport"],
          hostVars: 4,
          hostBindings: function (e, t) {
            2 & e &&
              i.Ec(
                "cdk-virtual-scroll-orientation-horizontal",
                "horizontal" === t.orientation
              )(
                "cdk-virtual-scroll-orientation-vertical",
                "horizontal" !== t.orientation
              );
          },
          inputs: { orientation: "orientation" },
          outputs: { scrolledIndexChange: "scrolledIndexChange" },
          features: [i.yc([{ provide: W, useExisting: K }]), i.wc],
          ngContentSelectors: ["*"],
          decls: 4,
          vars: 4,
          consts: [
            [1, "cdk-virtual-scroll-content-wrapper"],
            ["contentWrapper", ""],
            [1, "cdk-virtual-scroll-spacer"],
          ],
          template: function (e, t) {
            1 & e &&
              (i.kd(),
              i.Rc(0, "div", 0, 1),
              i.jd(2),
              i.Qc(),
              i.Nc(3, "div", 2)),
              2 & e &&
                (i.zc(3),
                i.zd("width", t._totalContentWidth)(
                  "height",
                  t._totalContentHeight
                ));
          },
          styles: [
            "cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\n",
          ],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (K.ctorParameters = () => [
          { type: i.v },
          { type: i.k },
          { type: i.Q },
          {
            type: void 0,
            decorators: [{ type: i.R }, { type: i.C, args: [H] }],
          },
          { type: V.b, decorators: [{ type: i.R }] },
          { type: q },
          { type: Y },
        ]),
        (K.propDecorators = {
          orientation: [{ type: i.G }],
          scrolledIndexChange: [{ type: i.S }],
          _contentWrapper: [
            { type: i.mb, args: ["contentWrapper", { static: !0 }] },
          ],
        });
      class X {
        constructor(e, t, n, s, i, o) {
          (this._viewContainerRef = e),
            (this._template = t),
            (this._differs = n),
            (this._viewRepeater = s),
            (this._viewport = i),
            (this.viewChange = new r.a()),
            (this._dataSourceChanges = new r.a()),
            (this.dataStream = this._dataSourceChanges.pipe(
              Object(_.a)(null),
              (e) => e.lift(new C()),
              Object(E.a)(([e, t]) => this._changeDataSource(e, t)),
              N(1)
            )),
            (this._differ = null),
            (this._needsUpdate = !1),
            (this._destroyed = new r.a()),
            this.dataStream.subscribe((e) => {
              (this._data = e), this._onRenderedDataChange();
            }),
            this._viewport.renderedRangeStream
              .pipe(Object(x.a)(this._destroyed))
              .subscribe((e) => {
                (this._renderedRange = e),
                  o.run(() => this.viewChange.next(this._renderedRange)),
                  this._onRenderedDataChange();
              }),
            this._viewport.attach(this);
        }
        get cdkVirtualForOf() {
          return this._cdkVirtualForOf;
        }
        set cdkVirtualForOf(e) {
          (this._cdkVirtualForOf = e),
            Object(B.f)(e)
              ? this._dataSourceChanges.next(e)
              : this._dataSourceChanges.next(
                  new B.a(Object(g.a)(e) ? e : Array.from(e || []))
                );
        }
        get cdkVirtualForTrackBy() {
          return this._cdkVirtualForTrackBy;
        }
        set cdkVirtualForTrackBy(e) {
          (this._needsUpdate = !0),
            (this._cdkVirtualForTrackBy = e
              ? (t, n) =>
                  e(
                    t + (this._renderedRange ? this._renderedRange.start : 0),
                    n
                  )
              : void 0);
        }
        set cdkVirtualForTemplate(e) {
          e && ((this._needsUpdate = !0), (this._template = e));
        }
        get cdkVirtualForTemplateCacheSize() {
          return this._viewRepeater.viewCacheSize;
        }
        set cdkVirtualForTemplateCacheSize(e) {
          this._viewRepeater.viewCacheSize = Object(s.e)(e);
        }
        measureRangeSize(e, t) {
          if (e.start >= e.end) return 0;
          e.start < this._renderedRange.start ||
            (e.end, this._renderedRange.end);
          const n = e.start - this._renderedRange.start,
            s = e.end - e.start;
          let i, r;
          for (let o = 0; o < s; o++) {
            const e = this._viewContainerRef.get(o + n);
            if (e && e.rootNodes.length) {
              i = r = e.rootNodes[0];
              break;
            }
          }
          for (let o = s - 1; o > -1; o--) {
            const e = this._viewContainerRef.get(o + n);
            if (e && e.rootNodes.length) {
              r = e.rootNodes[e.rootNodes.length - 1];
              break;
            }
          }
          return i && r ? J(t, "end", r) - J(t, "start", i) : 0;
        }
        ngDoCheck() {
          if (this._differ && this._needsUpdate) {
            const e = this._differ.diff(this._renderedItems);
            e ? this._applyChanges(e) : this._updateContext(),
              (this._needsUpdate = !1);
          }
        }
        ngOnDestroy() {
          this._viewport.detach(),
            this._dataSourceChanges.next(void 0),
            this._dataSourceChanges.complete(),
            this.viewChange.complete(),
            this._destroyed.next(),
            this._destroyed.complete(),
            this._viewRepeater.detach();
        }
        _onRenderedDataChange() {
          this._renderedRange &&
            ((this._renderedItems = this._data.slice(
              this._renderedRange.start,
              this._renderedRange.end
            )),
            this._differ ||
              (this._differ = this._differs
                .find(this._renderedItems)
                .create(this.cdkVirtualForTrackBy)),
            (this._needsUpdate = !0));
        }
        _changeDataSource(e, t) {
          return (
            e && e.disconnect(this),
            (this._needsUpdate = !0),
            t ? t.connect(this) : Object(o.a)()
          );
        }
        _updateContext() {
          const e = this._data.length;
          let t = this._viewContainerRef.length;
          for (; t--; ) {
            let n = this._viewContainerRef.get(t);
            (n.context.index = this._renderedRange.start + t),
              (n.context.count = e),
              this._updateComputedContextProperties(n.context),
              n.detectChanges();
          }
        }
        _applyChanges(e) {
          this._viewRepeater.applyChanges(
            e,
            this._viewContainerRef,
            (e, t, n) => this._getEmbeddedViewArgs(e, n),
            (e) => e.item
          ),
            e.forEachIdentityChange((e) => {
              this._viewContainerRef.get(e.currentIndex).context.$implicit =
                e.item;
            });
          const t = this._data.length;
          let n = this._viewContainerRef.length;
          for (; n--; ) {
            const e = this._viewContainerRef.get(n);
            (e.context.index = this._renderedRange.start + n),
              (e.context.count = t),
              this._updateComputedContextProperties(e.context);
          }
        }
        _updateComputedContextProperties(e) {
          (e.first = 0 === e.index),
            (e.last = e.index === e.count - 1),
            (e.even = e.index % 2 == 0),
            (e.odd = !e.even);
        }
        _getEmbeddedViewArgs(e, t) {
          return {
            templateRef: this._template,
            context: {
              $implicit: e.item,
              cdkVirtualForOf: this._cdkVirtualForOf,
              index: -1,
              count: -1,
              first: !1,
              last: !1,
              odd: !1,
              even: !1,
            },
            index: t,
          };
        }
      }
      (X.ɵfac = function (e) {
        return new (e || X)(
          i.Mc(i.ob),
          i.Mc(i.ib),
          i.Mc(i.H),
          i.Mc(B.e),
          i.Mc(K, 4),
          i.Mc(i.Q)
        );
      }),
        (X.ɵdir = i.Hc({
          type: X,
          selectors: [["", "cdkVirtualFor", "", "cdkVirtualForOf", ""]],
          inputs: {
            cdkVirtualForOf: "cdkVirtualForOf",
            cdkVirtualForTrackBy: "cdkVirtualForTrackBy",
            cdkVirtualForTemplate: "cdkVirtualForTemplate",
            cdkVirtualForTemplateCacheSize: "cdkVirtualForTemplateCacheSize",
          },
          features: [i.yc([{ provide: B.e, useClass: B.d }])],
        })),
        (X.ctorParameters = () => [
          { type: i.ob },
          { type: i.ib },
          { type: i.H },
          { type: B.d, decorators: [{ type: i.C, args: [B.e] }] },
          { type: K, decorators: [{ type: i.eb }] },
          { type: i.Q },
        ]),
        (X.propDecorators = {
          cdkVirtualForOf: [{ type: i.G }],
          cdkVirtualForTrackBy: [{ type: i.G }],
          cdkVirtualForTemplate: [{ type: i.G }],
          cdkVirtualForTemplateCacheSize: [{ type: i.G }],
        });
      class Z {}
      (Z.ɵmod = i.Kc({ type: Z })),
        (Z.ɵinj = i.Jc({
          factory: function (e) {
            return new (e || Z)();
          },
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          i.wd(Z, { declarations: [W], exports: [W] });
      class ee {}
      (ee.ɵmod = i.Kc({ type: ee })),
        (ee.ɵinj = i.Jc({
          factory: function (e) {
            return new (e || ee)();
          },
          imports: [[V.a, F.b, Z], V.a, Z],
        })),
        ("undefined" == typeof ngJitMode || ngJitMode) &&
          i.wd(ee, {
            declarations: function () {
              return [$, X, K];
            },
            imports: function () {
              return [V.a, F.b, Z];
            },
            exports: function () {
              return [V.a, Z, $, X, K];
            },
          });
    },
    "w/SU": function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, "CampaignPageModule", function () {
          return W;
        });
      var s = n("mrSG"),
        i = n("fXoL"),
        r = n("ofXK"),
        o = n("JLX5"),
        a = n("beVS");
      let l = class {
        constructor() {}
        ngOnInit() {}
      };
      (l.ctorParameters = () => []),
        (l = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-header",
              template:
                '<div class="headerComponent">\n    <div>\n        <img class="logo" src="/assets/images/campaign-logo-PnG.svg" alt="campaign-logo">\n    </div>\n    <div class="callButton">\n        <a class="buttonData" href="tel:080-471-87451">Call 080-471-87451</a>\n    </div>\n</div>\n',
              styles: [
                '.headerComponent {\n  background-color: #fff;\n  padding: 9px 50px 9px 50px;\n  width: 100%;\n  z-index: 100;\n  top: 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.callButton {\n  background-color: #c61619;\n  padding: 8px 18px 8px 18px;\n  border: 1px solid #c61619;\n  border-radius: 20px;\n  cursor: pointer;\n  font-size: 0.8rem;\n}\n\n.callButton .buttonData {\n  color: #fff;\n  text-align: center;\n  text-decoration: none;\n  font-weight: bold;\n}\n\na {\n  font-family: "Roboto", "sans-sarif";\n}\n\n.callButton:hover {\n  background-color: #9e3032c7;\n}\n\n.logo {\n  width: 82%;\n}\n\n@media (max-width: 750px) {\n  .headerComponent {\n    padding: 5px 30px 5px 30px;\n  }\n\n  .callButton {\n    padding: 5px 15px 5px 15px;\n    font-size: 0.6rem;\n    display: flex;\n    align-items: center;\n    height: 30px;\n  }\n}\n\n@media (max-width: 500px) {\n  .logo {\n    width: 120px;\n  }\n}\n\n@media (max-width: 400px) {\n  .callButton {\n    font-size: 12px;\n  }\n}\n\n@media (max-width: 325px) {\n  .callButton {\n    font-size: 9px;\n  }\n}',
              ],
            }),
          ],
          l
        ));
      let c = class {
        constructor() {}
        ngOnInit() {}
      };
      (c.ctorParameters = () => []),
        (c = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-footer",
              template:
                '<div class="footerComponent">\n    <p class="footerText">Educational Initiatives Private Limited, The First Building, Corporate House A2, 1st Floor, Nyay Marg, Vastrapur Ahmedabad, 380015.</p>\n</div>\n',
              styles: [
                '.footerComponent {\n  background-color: #fff;\n  width: 100%;\n  padding: 9px 50px 9px 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.footerText {\n  color: rgba(0, 0, 0, 0.9);\n  text-align: center;\n  font-size: 0.8rem;\n  font-family: "Roboto", "sans-sarif";\n}\n\n@media (max-width: 750px) {\n  .footerText {\n    font-size: 0.6rem;\n  }\n}',
              ],
            }),
          ],
          c
        ));
      let u = class {
        constructor() {}
        ngOnInit() {}
      };
      (u.ctorParameters = () => []),
        (u = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-about-us",
              template:
                '<div class="aboutComponent">\n    <div class="container">\n        <div class="header">\n            <h3 class="header-about">About Us</h3>\n        </div>\n        <div>\n            <p class="header-about-details">Ei, The Learning Expert, is India\u2019s leading ed-tech company that leverages the twin levers of cutting-edge research and technology-based solutions approach to revolutionise how children engaged in the K-12 education space learn. Our vision is to create a world in which children everywhere learn with understanding. Our goal is to reach a multitude of children across different strata of society, irrespective of the kind of education they are receiving today or the curriculum they are following.</p>\n        </div>\n    </div>\n</div>\n',
              styles: [
                '.aboutComponent {\n  background-color: #f7f4ef;\n  width: 100%;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  padding: 3rem 0 0 0;\n}\n\n.header {\n  display: flex;\n  justify-content: center;\n  padding: 1rem 3rem 0 3rem;\n}\n\n.header-about {\n  color: rgba(0, 0, 0, 0.9);\n  font-size: 2rem;\n  font-weight: bold;\n  font-family: "Roboto", sans-serif;\n}\n\n.header-about-details {\n  color: rgba(0, 0, 0, 0.9);\n  text-align: center;\n  padding: 1rem 3rem 3rem 3rem;\n  font-size: 1rem;\n  font-family: "Roboto", sans-serif;\n}',
              ],
            }),
          ],
          u
        ));
      let d = class {
        constructor() {
          (this.gotoHome = new i.x()),
            (this.panelOpenState = !1),
            (this.step = 0);
        }
        goHome() {
          this.gotoHome.emit();
        }
        ngOnInit() {}
        setStep(e) {
          this.step = e;
        }
        nextStep() {
          this.step++;
        }
        prevStep() {
          this.step--;
        }
      };
      (d.ctorParameters = () => []),
        (d.propDecorators = { gotoHome: [{ type: i.S }] }),
        (d = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-faq",
              template:
                '<div class="container">\n    <div class="faq-header">\n        <h3 class="faq-header-data">Frequently Asked Questions</h3>\n    </div>\n    <div class="faq-details">\n        <div>\n            <p class="faq-que-ans"><strong>What is Ei Mindspark?</strong></p>\n            <p class="faq-que-ans">Ei Mindspark is a personalised learning software that allows children to effectively\n                advance at their own pace. It helps children improve their skills in Mathematics, English and Science.\n                It allows each student to follow a learning path that is based on their current level and at a pace they\n                are comfortable with.</p>\n        </div>\n        <div>\n            <p class="faq-que-ans"><strong>What subjects are covered in Ei Mindspark?</strong></p>\n            <p class="faq-que-ans">Ei Mindspark is currently available for Maths, English and Science.</p>\n        </div>\n        <div>\n            <p class="faq-que-ans"><strong>What classes/grades are covered in Ei Mindspark?</strong></p>\n            <p class="faq-que-ans">Ei Mindspark Maths is available for classes 1 to 10 \u2014 the classes that focus on\n                developing key mathematical concepts in students.</p>\n            <p class="faq-que-ans">Ei Mindspark English currently focuses on classes 4 to 9 \u2014 the classes where students\n                have learned the basics and need to focus on building competence, proficiency, fluency and confidence in\n                the language.</p>\n            <p class="faq-que-ans">Ei Mindspark Science is available for classes 6 to 10 - the classes where students\n                have learned the basics and need to develop robust understanding of concepts and internalise facts and\n                equations as a part of their learning journey.</p>\n        </div>\n        <div>\n            <p class="faq-que-ans"><strong>Is Ei Mindspark aligned to board exam syllabi?</strong></p>\n            <p class="faq-que-ans">Ei Mindspark Maths is aligned to ICSE, CBSE, International General Certificate of\n                Secondary Education (IGCSE - adopted by countries around the world), Curriculum Assessment Policy\n                Statements (CAPS - adopted by South Africa) and Common Core (adopted by the USA) syllabi.</p>\n            <p class="faq-que-ans">Ei Mindspark English follows national and international standards for literacy and\n                covers the learning objectives described in CBSE, ICSE and Common Core syllabi. Ei Mindspark Science is\n                aligned to ICSE and CBSE.</p>\n        </div>\n        <div>\n            <p class="faq-que-ans"><strong>What kind of content is available on Ei Mindspark?</strong></p>\n            <p class="faq-que-ans">Ei Mindspark has interactive questions, games and remedial activities. In Ei\n                Mindspark Maths, the content is divided into topics such as addition, shapes and space, angles,\n                algebraic expressions, linear equations in one variable, circles and circle properties, probability,\n                etc. In Ei Mindspark English, the content is divided into reading comprehension, listening\n                comprehension, grammar, and vocabulary skills. Students receive stories, articles, plays, conversations,\n                audiobooks, speeches and poems to build their comprehension skills. In Ei Mindspark Science, the content\n                is divided into physics, chemistry and biology.</p>\n        </div>\n        <div>\n            <p class="faq-que-ans"><strong>How will Ei Mindspark help my child?</strong></p>\n            <p class="faq-que-ans">Ei Mindspark helps students learn and build confidence in Maths, English and Science.\n                Students receive instant feedback and remediation when they make mistakes. Ei Mindspark identifies\n                misunderstandings that students have and helps them learn the concept without these misconceptions.\n                Students get to learn at a pace they are comfortable with. Ei Mindspark also uses interactive and\n                engaging content to help students develop interest and learn without feeling fear of the subject.</p>\n            <p class="faq-que-ans">If students are struggling with content, they are taken to an easier level so that\n                they can build their way up, and if they are finding the content straightforward, they are taken to a\n                higher level so that they can challenge themselves.</p>\n        </div>\n        <div>\n            <p class="faq-que-ans"><strong>Does Ei Mindspark have an App?</strong></p>\n            <p class="faq-que-ans">Ei Mindspark Maths is available on an app.</p>\n            <p class="faq-que-ans">To download on Google Play store, <a href="https://play.google.com/store/apps/details?id=com.mindspark.edicine" target="_blank">click here</a></p>\n            <p class="faq-que-ans">To download on the App Store, <a href="https://apps.apple.com/in/app/ei-mindspark-learning-app/id1541664545" target="_blank">click here</a></p>\n        </div>\n    </div>\n    <div class="faq-details-mobile">\n        <mat-accordion>\n            <mat-expansion-panel (opened)="panelOpenState = true" (closed)="panelOpenState = false">\n                <mat-expansion-panel-header>\n                    <mat-panel-title class="faq-que-ans">\n                        <strong>What is Ei Mindspark?</strong>\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <p class="faq-que-ans">Ei Mindspark is a personalised learning software that allows children to effectively advance at their own pace. It helps children improve their skills in Mathematics, English and Science. It allows each student to follow a learning path that is based on their current level and at a pace they are comfortable with.</p>\n            </mat-expansion-panel>\n            <mat-expansion-panel (opened)="panelOpenState = true" (closed)="panelOpenState = false">\n                <mat-expansion-panel-header>\n                    <mat-panel-title class="faq-que-ans">\n                        <strong>What subjects are covered in Ei Mindspark?</strong>\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <p class="faq-que-ans">Ei Mindspark is currently available for Maths, English and Science.</p>\n            </mat-expansion-panel>\n            <mat-expansion-panel (opened)="panelOpenState = true" (closed)="panelOpenState = false">\n                <mat-expansion-panel-header>\n                    <mat-panel-title class="faq-que-ans">\n                        <strong>What classes/grades are covered in Ei Mindspark?</strong>\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <p class="faq-que-ans">Ei Mindspark Maths is available for classes 1 to 10 \u2014 the classes that focus on developing key mathematical concepts in students.</p> \n                <p class="faq-que-ans">Ei Mindspark English currently focuses on classes 4 to 9 \u2014 the classes where students have learned the basics and need to focus on building competence, proficiency, fluency and confidence in the language.</p>\n                <p class="faq-que-ans">Ei Mindspark Science is available for classes 6 to 10 - the classes where students have learned the basics and need to develop robust understanding of concepts and internalise facts and equations as a part of their learning journey.</p>\n            </mat-expansion-panel>\n            <mat-expansion-panel (opened)="panelOpenState = true" (closed)="panelOpenState = false">\n                <mat-expansion-panel-header>\n                    <mat-panel-title class="faq-que-ans">\n                        <strong>Is Ei Mindspark aligned to board exam syllabi?</strong>\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <p class="faq-que-ans">Ei Mindspark Maths is aligned to ICSE, CBSE, International General Certificate of Secondary Education (IGCSE - adopted by countries around the world), Curriculum Assessment Policy Statements (CAPS - adopted by South Africa) and Common Core (adopted by the USA) syllabi.</p> \n                <p class="faq-que-ans">Ei Mindspark English follows national and international standards for literacy and covers the learning objectives described in CBSE, ICSE and Common Core syllabi. Ei Mindspark Science is aligned to ICSE and CBSE.</p>\n            </mat-expansion-panel>\n            <mat-expansion-panel (opened)="panelOpenState = true" (closed)="panelOpenState = false">\n                <mat-expansion-panel-header>\n                    <mat-panel-title class="faq-que-ans">\n                        <strong>What kind of content is available on Ei Mindspark?</strong>\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <p class="faq-que-ans">Ei Mindspark has interactive questions, games and remedial activities. In Ei Mindspark Maths, the content is divided into topics such as addition, shapes and space, angles, algebraic expressions, linear equations in one variable, circles and circle properties, probability, etc. In Ei Mindspark English, the content is divided into reading comprehension, listening comprehension, grammar, and vocabulary skills. Students receive stories, articles, plays, conversations, audiobooks, speeches and poems to build their comprehension skills. In Ei Mindspark Science, the content is divided into physics, chemistry and biology.</p>\n            </mat-expansion-panel>\n            <mat-expansion-panel (opened)="panelOpenState = true" (closed)="panelOpenState = false">\n                <mat-expansion-panel-header>\n                    <mat-panel-title class="faq-que-ans">\n                        <strong>How will Ei Mindspark help my child?</strong>\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <p class="faq-que-ans">Ei Mindspark helps students learn and build confidence in Maths, English and Science. Students receive instant feedback and remediation when they make mistakes. Ei Mindspark identifies misunderstandings that students have and helps them learn the concept without these misconceptions. Students get to learn at a pace they are comfortable with. Ei Mindspark also uses interactive and engaging content to help students develop interest and learn without feeling fear of the subject.</p>\n                <p class="faq-que-ans">If students are struggling with content, they are taken to an easier level so that they can build their way up, and if they are finding the content straightforward, they are taken to a higher level so that they can challenge themselves.</p>\n            </mat-expansion-panel>\n            <mat-expansion-panel (opened)="panelOpenState = true" (closed)="panelOpenState = false">\n                <mat-expansion-panel-header>\n                    <mat-panel-title class="faq-que-ans">\n                        <strong>Does Ei Mindspark have an App?</strong>\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <p class="faq-que-ans">Ei Mindspark Maths is available on an app.</p>\n                <p class="faq-que-ans">To download on Google Play store, <a href="https://play.google.com/store/apps/details?id=com.mindspark.edicine" target="_blank">click here</a></p>\n                <p class="faq-que-ans">To download on the App Store, <a href="https://apps.apple.com/in/app/ei-mindspark-learning-app/id1541664545" target="_blank">click here</a></p>\n            </mat-expansion-panel>\n        </mat-accordion>\n\n    </div>\n    <div class="btn-view">\n        <button type="button" class="btn-signup" (click)="goHome()">Sign Up Now</button>\n    </div>\n</div>',
              styles: [
                '.faq-header {\n  display: flex;\n  justify-content: center;\n  padding: 1rem 3rem 0 3rem;\n}\n\n.faq-header-data {\n  color: rgba(0, 0, 0, 0.9);\n  font-size: 2rem;\n  font-weight: bold;\n  font-family: "Roboto", sans-serif;\n  text-align: center;\n}\n\n.faq-details {\n  padding: 1rem 3rem 3rem 3rem;\n  color: rgba(0, 0, 0, 0.9);\n  font-family: "Roboto", sans-serif;\n  display: block;\n}\n\n.faq-details-mobile {\n  display: none;\n  padding: 1rem 0 3rem 0;\n  color: rgba(0, 0, 0, 0.9);\n  font-family: "Roboto", sans-serif;\n}\n\n.faq-que-ans {\n  font-family: "Roboto", sans-serif;\n}\n\nstrong {\n  font-family: "Roboto", "sans-sarif";\n}\n\na {\n  font-family: "Roboto", "sans-sarif";\n}\n\n@media (max-width: 750px) {\n  .faq-details-mobile {\n    display: flex;\n  }\n\n  .faq-details {\n    display: none;\n  }\n}\n\n.example-headers-align .mat-expansion-panel-header-title,\n.example-headers-align .mat-expansion-panel-header-description {\n  flex-basis: 0;\n}\n\n.example-headers-align .mat-expansion-panel-header-description {\n  justify-content: space-between;\n  align-items: center;\n}\n\n.example-headers-align .mat-form-field + .mat-form-field {\n  margin-left: 8px;\n}\n\n.btn-view {\n  display: flex;\n  justify-content: center;\n  padding: 0 3rem 2rem 3rem;\n  align-items: center;\n}\n\n.btn-signup {\n  background-color: #c61619;\n  color: #fff;\n  font-weight: bold;\n  border: 1px solid #c61619;\n  border-radius: 20px;\n  padding: 9px 50px 9px 50px;\n  outline: none;\n  font-family: "Roboto", "sans-sarif";\n  height: 50px;\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n}\n\n.btn-signup:hover {\n  background-color: #fff;\n  color: #c61619;\n}\n\n@media (max-width: 500px) {\n  .btn-signup {\n    font-size: 16px;\n    height: auto;\n  }\n}\n\n@media (max-width: 325px) {\n  .btn-signup {\n    font-size: 12px;\n  }\n}',
              ],
            }),
          ],
          d
        ));
      var h = n("7EHt"),
        p = n("qFsG"),
        m = n("kmnG"),
        f = n("NFeN"),
        g = n("d3UM");
      let y = class {
        constructor() {}
        ngOnInit() {}
      };
      (y.ctorParameters = () => []),
        (y = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-contact-us",
              template:
                '<div class="contactContainer">\n    <div class="contact-header">\n        <h3 class="contact-header-detail">Contact Us</h3>\n    </div>\n    <div>\n        <p class="phone-data"><mat-icon style="color: #c61619;">phone</mat-icon><a class="mobile-data" href="tel:18001028885">080-471-87451</a></p>\n        <p class="phone-data"><mat-icon style="color: #c61619;">mail</mat-icon><a class="mobile-data" href="mailto:info@ei.study">info@ei.study</a></p>\n    </div>\n</div>\n',
              styles: [
                '.contactContainer {\n  background-image: url("/assets/images/contact-bg.svg");\n  height: 18rem;\n}\n\n.contact-header {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem 0 2rem 0;\n}\n\n.contact-header-detail {\n  font-weight: bold;\n  color: #c61619;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.phone-data {\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.mobile-data {\n  text-decoration: none;\n  color: rgba(0, 0, 0, 0.9);\n  font-weight: bold;\n  margin-left: 5px;\n  font-size: 20px;\n  font-family: "Roboto", "sans-sarif";\n}',
              ],
            }),
          ],
          y
        ));
      let v = class {
        constructor() {}
        ngOnInit() {}
      };
      (v.ctorParameters = () => []),
        (v = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-trusted-clients",
              template:
                '<div class="partnerDiv">\n    <div class="partnerWrapper">\n        <div fxLayoutAlign="center center" class="parterTittle">Trusted by Students and Schools</div>\n        <div fxLayout.sm="column" class="numSection">\n            <div class="countSection">\n                <div class="countContainer">\n                    <h1 class="countText">5,00,000</h1>\n                    <p class="numText">Students have used Ei Mindspark</p>\n                </div>\n            </div>\n            <div class="countSection">\n                <div class="countContainer">\n                    <h1 class="countText">300+</h1>\n                    <p class="numText">Partner Schools</p>\n                </div>\n            </div>\n            <div class="countSection">\n                <div class="countContainer">\n                    <h1 class="countText">10,00,000</h1>\n                    <p class="numText">Questions delivered daily</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n',
              styles: [
                '.partnerDiv {\n  display: flex;\n  justify-content: center;\n}\n\n.partnerWrapper {\n  margin: 60px 0px;\n  max-width: 1302px;\n}\n\n.parterTittle {\n  font-size: 36px;\n  font-weight: bold;\n  line-height: 1.36;\n  text-align: center;\n  color: #212121;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.countText {\n  font-size: 76px;\n  font-weight: bold;\n  color: #c61619;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.37;\n  letter-spacing: -3.8px;\n  text-align: center;\n  margin: 0;\n  padding: 0;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.numText {\n  font-size: 18px;\n  line-height: 1.33;\n  text-align: left;\n  color: #212121;\n  margin: 10px 0px;\n  font-weight: bold;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.numSection {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  column-gap: 116px;\n  margin: 45px 0px;\n}\n\n.countSection {\n  display: flex;\n  justify-content: center;\n}\n\n@media (max-width: 1200px) {\n  .countText {\n    font-size: 50px;\n  }\n\n  .numText {\n    font-size: 15px;\n  }\n}\n\n@media (max-width: 750px) {\n  .partnerWrapper {\n    width: 100%;\n    margin: 60px 0px 0px 0px;\n  }\n\n  .numSection {\n    grid-template-columns: 1fr;\n    row-gap: 50px;\n  }\n\n  .countContainer {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n}',
              ],
            }),
          ],
          v
        ));
      let b = class {
        constructor() {
          this.rewardDetails = [
            {
              img: "/assets/images/J-pal_Logo.png",
              desc: "J-PAL, a research center at MIT established that Ei Mindspark shows a 2-4X gain in learning outcomes.",
            },
            {
              img: "/assets/images/harvard-logo.png",
              desc: "Ei Mindspark is a Harvard Business School case study.",
            },
            {
              img: "/assets/images/economist.jpg",
              desc: "Ei Mindspark has been featured twice in The Economist for its learning-by-doing approach to maths.",
            },
            {
              img: "/assets/images/ida-awards-logo.png",
              desc: "Ei Mindspark was declared Best Product of the Year by the IDA Awards at DIDAC India 2018.",
            },
          ];
        }
        ngOnInit() {}
      };
      (b.ctorParameters = () => []),
        (b = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-rewards",
              template:
                '<div class="rewardContainer">\n    <div class="reward-header">\n        Rewarded & Recognised by Experts\n    </div>\n    <div class="container">\n        <div class="reward-grid">\n            <div class="cardView" *ngFor="let item of rewardDetails">\n                <div class="imgView">\n                    <img class="imgWidth" src="{{item.img}}" alt="jpallogo">\n                </div>\n                <div class="card-text">\n                    <p>{{item.desc}}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n',
              styles: [
                '.rewardContainer {\n  background-color: #f7f4ef;\n  padding: 3rem 3rem;\n}\n\n.reward-header {\n  font-size: 36px;\n  font-weight: bold;\n  line-height: 1.36;\n  text-align: center;\n  color: #212121;\n  padding-bottom: 2rem;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.reward-grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-column-gap: 15px;\n  grid-row-gap: 15px;\n  justify-content: center;\n}\n\n.cardView {\n  background-color: #fff;\n  border: 1px solid #fff;\n  border-radius: 30px;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2);\n  transition: 3s;\n  height: 200px;\n}\n\n.cardView:hover {\n  box-shadow: 0 8px 12px 0 rgba(0, 0, 0, 0.2);\n}\n\n.imgView {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 35%;\n}\n\n.imgWidth {\n  width: 100px;\n  margin-top: 20px;\n}\n\n.card-text {\n  padding: 1rem;\n  font-size: 14px;\n  letter-spacing: 0.5px;\n  font-weight: 300;\n  text-align: center;\n  font-family: "Roboto", "sans-sarif";\n  margin-top: 5px;\n}\n\np {\n  font-family: "Roboto", "sans-sarif";\n}\n\n@media (max-width: 1100px) {\n  .reward-grid {\n    grid-template-columns: repeat(auto-fill, 20rem);\n    justify-items: center;\n  }\n}\n\n@media (max-width: 750px) {\n  .reward-header {\n    font-size: 24px;\n  }\n\n  .cardView {\n    width: 80%;\n  }\n}',
              ],
            }),
          ],
          b
        ));
      let x = class {
        constructor() {
          (this.gotoHome = new i.x()),
            (this.users = [
              { img: "/assets/images/userCard1.svg" },
              { img: "/assets/images/userCard2.svg" },
              { img: "/assets/images/userCard3.svg" },
            ]);
        }
        ngOnInit() {}
        goHome() {
          this.gotoHome.emit();
        }
      };
      (x.ctorParameters = () => []),
        (x.propDecorators = { gotoHome: [{ type: i.S }] }),
        (x = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-users",
              template:
                '<div class="userComponent">\n    <div class="container">\n        <div class="users-header">\n            Ei Mindspark Users Agree!\n        </div>\n        <div class="user-title-desc">\n            Lakhs of Mindspark users agree that the software has greatly helped improve their learning journey.\n        </div>\n        <div class="grid-view">\n            <div style="display: flex;justify-content: center;" *ngFor="let item of users">\n                <img style="width: 90%;height: 90%;" src="{{item.img}}" alt="user cards">\n            </div>\n        </div>\n        <div class="mobile-carousel">\n            <ngb-carousel *ngIf="users">\n                <ng-template ngbSlide>\n                  <div class="picsum-img-wrapper" style="display: flex;justify-content: center;">\n                    <img [src]="users[0].img" style="width: 100%;" alt="Random first slide">\n                  </div>\n                </ng-template>\n                <ng-template ngbSlide>\n                  <div class="picsum-img-wrapper" style="display: flex;justify-content: center;">\n                    <img [src]="users[1].img" style="width: 100%;" alt="Random second slide">\n                  </div>\n                </ng-template>\n                <ng-template ngbSlide>\n                  <div class="picsum-img-wrapper" style="display: flex;justify-content: center;">\n                    <img [src]="users[2].img" style="width: 100%;" alt="Random third slide">\n                  </div>\n                </ng-template>\n              </ngb-carousel>\n        </div>\n    </div>\n    <div class="btn-view">\n        <button type="button" class="btn-signup" (click)="goHome()">Sign Up Now</button>\n    </div>\n</div>',
              styles: [
                '.userComponent {\n  background-color: #fff;\n  background: url("/assets/images/quotes.svg") no-repeat center;\n  padding: 3rem;\n}\n\n.users-header {\n  font-size: 36px;\n  font-weight: bold;\n  line-height: 1.36;\n  text-align: center;\n  color: #212121;\n  margin-bottom: 2rem;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.user-title-desc {\n  font-size: 18px;\n  line-height: 1.36;\n  text-align: center;\n  color: #212121;\n  margin-bottom: 3.5rem;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.grid-view {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-column-gap: 15px;\n  grid-row-gap: 15px;\n  justify-content: center;\n}\n\n.mobile-carousel {\n  display: none;\n}\n\n.btn-view {\n  display: flex;\n  justify-content: center;\n  padding: 2rem 3rem 2rem 3rem;\n  align-items: center;\n}\n\n.btn-signup {\n  background-color: #c61619;\n  color: #fff;\n  font-weight: bold;\n  border: 1px solid #c61619;\n  border-radius: 20px;\n  padding: 9px 50px 9px 50px;\n  outline: none;\n  font-family: "Roboto", "sans-sarif";\n  height: 50px;\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n}\n\n.btn-signup:hover {\n  background-color: #fff;\n  color: #c61619;\n}\n\n@media (max-width: 1200px) {\n  .grid-view {\n    grid-template-columns: repeat(auto-fill, 25rem);\n    justify-items: center;\n  }\n}\n\n@media (max-width: 750px) {\n  .grid-view {\n    display: none;\n  }\n\n  .mobile-carousel {\n    display: block;\n    margin-bottom: 2rem;\n  }\n\n  .btn-view {\n    padding: 5px 8px;\n  }\n}\n\n@media (max-width: 500px) {\n  .btn-signup {\n    font-size: 16px;\n  }\n}\n\n@media (max-width: 325px) {\n  .btn-signup {\n    font-size: 12px;\n  }\n}',
              ],
            }),
          ],
          x
        ));
      let _ = class {
        constructor() {
          this.subjectSyllabus = "";
        }
        ngOnInit() {}
        changeSyllabusHandler(e) {
          this.subjectSyllabus = e;
        }
        getStyleforSelection(e) {
          const t = {};
          return (
            this.subjectSyllabus === e &&
              ((t.color = "#fff"), (t.backgroundColor = "#c61619")),
            t
          );
        }
      };
      (_.ctorParameters = () => []),
        (_ = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-subjects",
              template:
                '<div class="subjectComponent">\n    <div class="container">\n        <div class="subject-header">\n            Ei Mindspark is aligned with school syllabi\n        </div>\n        <div class="row">\n            <div class="col-lg-8 col-md-12 col-sm-12 col-xs-12">\n                <div class="row">\n                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6" style="text-align: center;margin-bottom: 10px;">\n                        <button class="btn-subject math-allign" [ngStyle]="getStyleforSelection(\'Math\')" type="button" (click)="changeSyllabusHandler(\'Math\')">View Math Syllabus</button>\n                    </div>\n                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6" style="text-align: center;margin-bottom: 10px;">\n                        <button class="btn-subject" type="button" [ngStyle]="getStyleforSelection(\'English\')" (click)="changeSyllabusHandler(\'English\')">View English Syllabus</button>\n                    </div>\n                </div>\n            </div>\n            <div class="col-lg-4 col-md-12 col-sm-12 col-xs-12">\n                <div class="row">\n                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="text-align: center;margin-bottom: 10px;">\n                        <button class="btn-subject science-allign" type="button" [ngStyle]="getStyleforSelection(\'Science\')" (click)="changeSyllabusHandler(\'Science\')">View Science Syllabus</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div *ngIf="subjectSyllabus === \'Math\'">\n            <app-maths></app-maths>\n        </div>\n        <div *ngIf="subjectSyllabus === \'English\'">\n            <app-english></app-english>\n        </div>\n        <div *ngIf="subjectSyllabus === \'Science\'">\n            <app-science></app-science>\n        </div>\n    </div>\n</div>\n',
              styles: [
                '.subjectComponent {\n  background-color: #f7f4ef;\n  padding: 3rem;\n}\n\n.subject-header {\n  font-size: 36px;\n  font-weight: bold;\n  text-align: center;\n  padding-bottom: 2rem;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.btn-subject {\n  padding: 0.7rem;\n  border-radius: 10px;\n  border: none;\n  background-color: rgba(0, 0, 0, 0.6);\n  color: #fff;\n  font-weight: bold;\n  outline: none;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.btn-subject:hover {\n  background-color: rgba(198, 22, 25, 0.6);\n}\n\n.btn-subject:active {\n  background-color: rgba(198, 22, 25, 0.6);\n}\n\n.math-allign {\n  float: right;\n}\n\n.science-allign {\n  float: left;\n}\n\n@media (max-width: 990px) {\n  .math-allign {\n    float: initial;\n  }\n\n  .science-allign {\n    float: initial;\n  }\n}\n\n@media (max-width: 550px) {\n  .subject-header {\n    font-size: 28px;\n  }\n\n  .btn-subject {\n    width: 200px;\n  }\n}',
              ],
            }),
          ],
          _
        ));
      var w = n("1kSV");
      let C = class {
        constructor() {
          (this.gotoHome = new i.x()),
            (this.features = [
              { img: "/assets/images/Personalized.png" },
              { img: "/assets/images/Games.png" },
              { img: "/assets/images/Explanation.png" },
              { img: "/assets/images/BadgesandTitles.png" },
            ]);
        }
        goHome() {
          this.gotoHome.emit();
        }
        ngOnInit() {}
      };
      (C.ctorParameters = () => []),
        (C.propDecorators = { gotoHome: [{ type: i.S }] }),
        (C = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-learnings",
              template:
                '<div class="learningComponent">\n    <div class="container">\n        <div class="learning-header">\n            Make Learning Fun, With Ei Mindspark!\n        </div>\n        <div class="learning-title-desc">\n            Mindspark is an AI-powered personalised learning software, now also available as an App for Android and iOS\n        </div>\n        <div class="row desktop-view">\n            <div class="col-lg-6 col-md-12">\n                <div class="row">\n                    <div class="col-lg-6 col-md-6" style="text-align: center;margin-bottom: 10px;">\n                        <img style="width: 100%;" src="{{features[0].img}}" alt="">\n                    </div>\n                    <div class="col-lg-6 col-md-6" style="text-align: center;margin-bottom: 10px;">\n                        <img style="width: 100%;" src="{{features[1].img}}" alt="">\n                    </div>\n                </div>\n            </div>\n            <div class="col-lg-6 col-md-12">\n                <div class="row">\n                    <div class="col-lg-6 col-md-6" style="text-align: center;margin-bottom: 10px;">\n                        <img style="width: 100%;" src="{{features[2].img}}" alt="">\n                    </div>\n                    <div class="col-lg-6 col-md-6" style="text-align: center;margin-bottom: 10px;">\n                        <img style="width: 100%;" src="{{features[3].img}}" alt="">\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="mobile-carousel">\n            <ngb-carousel *ngIf="features.length">\n                <ng-template ngbSlide>\n                  <div class="picsum-img-wrapper" style="display: flex;justify-content: center;text-align: center;">\n                    <img [src]="features[0].img" style="width: 100%;" alt="Random first slide">\n                  </div>\n                </ng-template>\n                <ng-template ngbSlide>\n                  <div class="picsum-img-wrapper" style="display: flex;justify-content: center;text-align: center;">\n                    <img [src]="features[1].img" style="width: 100%;" alt="Random second slide">\n                  </div>\n                </ng-template>\n                <ng-template ngbSlide>\n                  <div class="picsum-img-wrapper" style="display: flex;justify-content: center;text-align: center;">\n                    <img [src]="features[2].img" style="width: 100%;" alt="Random third slide">\n                  </div>\n                </ng-template>\n                <ng-template ngbSlide>\n                    <div class="picsum-img-wrapper" style="display: flex;justify-content: center;text-align: center;">\n                      <img [src]="features[3].img" style="width: 100%;" alt="Random third slide">\n                    </div>\n                  </ng-template>\n              </ngb-carousel>\n        </div>\n    </div>\n    <div class="btn-view">\n        <button type="button" class="btn-signup" (click)="goHome()">Sign Up Now</button>\n    </div>\n</div>\n',
              styles: [
                '.learningComponent {\n  background-color: #fff;\n  padding: 3rem;\n}\n\n.learning-header {\n  font-size: 36px;\n  font-weight: bold;\n  line-height: 1.36;\n  text-align: center;\n  color: #212121;\n  margin-bottom: 2rem;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.learning-title-desc {\n  font-size: 18px;\n  line-height: 1.36;\n  text-align: center;\n  color: #212121;\n  margin-bottom: 3.5rem;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.desktop-view {\n  display: flex;\n}\n\n.mobile-carousel {\n  display: none;\n}\n\n.btn-view {\n  display: flex;\n  justify-content: center;\n  padding: 2rem 3rem 2rem 3rem;\n  align-items: center;\n}\n\n.btn-signup {\n  background-color: #c61619;\n  color: #fff;\n  font-weight: bold;\n  border: 1px solid #c61619;\n  border-radius: 20px;\n  padding: 9px 50px 9px 50px;\n  outline: none;\n  font-family: "Roboto", "sans-sarif";\n  height: 50px;\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n}\n\n.btn-signup:hover {\n  background-color: #fff;\n  color: #c61619;\n}\n\n@media (max-width: 750px) {\n  .learning-header {\n    font-size: 24px;\n  }\n\n  .learning-title-desc {\n    font-size: 15px;\n  }\n\n  .mobile-carousel {\n    display: block;\n    margin-bottom: 2rem;\n  }\n\n  .desktop-view {\n    display: none;\n  }\n\n  .btn-view {\n    padding: 5px 8px;\n  }\n}\n\n@media (max-width: 500px) {\n  .btn-signup {\n    font-size: 16px;\n  }\n}\n\n@media (max-width: 325px) {\n  .btn-signup {\n    font-size: 12px;\n  }\n}',
              ],
            }),
          ],
          C
        ));
      let S = class {
        constructor() {
          (this.gotoHome = new i.x()),
            (this.subjects = [
              { img: "/assets/images/eiMath.svg", head: "Grade 1 - 10" },
              { img: "/assets/images/eiEnglish.svg", head: "Grade 4 - 9" },
              { img: "/assets/images/eiScience.svg", head: "Grade 6 - 10" },
            ]);
        }
        ngOnInit() {}
        goHome() {
          this.gotoHome.emit();
        }
      };
      (S.ctorParameters = () => []),
        (S.propDecorators = { gotoHome: [{ type: i.S }] }),
        (S = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-subject-details",
              template:
                '<div class="subjectDetailComponent">\n    <div class="container">\n        <div class="subject-detail-header">\n            Master Concepts Across Key Subjects\n        </div>\n        <div class="row">\n            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n                <div class="row">\n                    <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12" style="margin-bottom: 15px;">\n                        <div class="cardView">\n                            <img src="{{subjects[0].img}}" class="subjectImage" style="padding: 30px;" alt="subject_image">\n                            <div>\n                                <p class="subject-head">\n                                    {{subjects[0].head}}</p>\n                                <div>\n                                    <ul class="subjectSyllabus">\n                                        <li><span style="font-weight:bold;">Personalised learning</span> to address the\n                                            child\'s fear of Maths</li>\n                                        <li><span style="font-weight: bold;">Interactive game-based learning</span> with\n                                            exciting reward mechanisms</li>\n                                        <li><span style="font-weight: bold;">Benchmarks the child\'s learning</span>\n                                            against peer groups across India.</li>\n                                        <li>Recognised by experts at <span style="font-weight: bold;">Harvard, UNESCO\n                                                and Stanford.</span></li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12" style="margin-bottom: 15px;">\n                        <div class="cardView">\n                            <img src="{{subjects[1].img}}" class="subjectImage" style="padding: 30px;" alt="subject_image">\n                            <div>\n                                <p class="subject-head">\n                                    {{subjects[1].head}}</p>\n                                <div>\n                                    <ul class="subjectSyllabus">\n                                        <li>Focus on understanding the <span style="font-weight: bold;">concepts of grammar</span> and its application</li>\n                                        <li><span style="font-weight: bold;">Improves vocabulary</span> so children can comprehend the context in which certain words are used</li>\n                                        <li>Engaging audio clips to enhance your child\'s <span style="font-weight: bold;">listening and comprehension skills</span></li>\n                                        <li>Unique and interesting <span style="font-weight: bold;">reading exercises</span> with a variety of genres</li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12" style="margin-bottom: 15px;">\n                        <div class="cardView">\n                            <img src="{{subjects[2].img}}" class="subjectImage" style="padding: 30px;" alt="subject_image">\n                            <div>\n                                <p class="subject-head">\n                                    {{subjects[2].head}}</p>\n                                <div>\n                                    <ul class="subjectSyllabus">\n                                        <li>Focus on <span style="font-weight: bold;">understanding concepts</span> instead of rote learning</li>\n                                        <li>Covers key aspects of <span style="font-weight: bold;">Physics, Chemistry and Biology</span></li>\n                                        <li><span style="font-weight: bold;">Benchmarks the child\'s learning</span> against peer groups across India.</li>\n                                        <li>Visually attractive questions make <span style="font-weight: bold;">learning interesting</span> and enjoyable</li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    \x3c!-- <img src="{{item.img}}" alt="subjects" style="width: 90%;"> --\x3e\n\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="btn-view">\n        <button type="button" class="btn-signup" (click)="goHome()">Sign Up Now</button>\n    </div>\n</div>',
              styles: [
                '.subjectDetailComponent {\n  background-color: #f7f4ef;\n  padding: 3rem;\n}\n\n.subject-detail-header {\n  font-size: 36px;\n  font-weight: bold;\n  line-height: 1.36;\n  text-align: center;\n  color: #212121;\n  padding-bottom: 2rem;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.subjectSyllabus li {\n  list-style: disc;\n  font-family: "Roboto", "sans-sarif";\n  font-size: 15px;\n}\n\n.subject-head {\n  color: #c61619;\n  font-size: 15px;\n  font-weight: bold;\n  padding: 30px 0px 0px 30px;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.cardView {\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  transition: 0.3s;\n  background: url("/assets/images/card_bg.svg") no-repeat center scroll;\n  padding: 10px;\n  border-radius: 25px;\n  height: 450px;\n}\n\nspan {\n  font-family: "Roboto", "sans-sarif";\n}\n\n.btn-view {\n  display: flex;\n  justify-content: center;\n  padding: 2rem 3rem 2rem 3rem;\n  align-items: center;\n}\n\n.btn-signup {\n  background-color: #c61619;\n  color: #fff;\n  font-weight: bold;\n  border: 1px solid #c61619;\n  border-radius: 20px;\n  padding: 9px 50px 9px 50px;\n  outline: none;\n  font-family: "Roboto", "sans-sarif";\n  height: 50px;\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n}\n\n.btn-signup:hover {\n  background-color: #fff;\n  color: #c61619;\n}\n\n@media (max-width: 750px) {\n  .btn-view {\n    padding: 5px 8px;\n  }\n}\n\n@media (max-width: 550px) {\n  .subject-detail-header {\n    font-size: 28px;\n  }\n}\n\n@media (max-width: 500px) {\n  .btn-signup {\n    font-size: 16px;\n  }\n\n  .subjectSyllabus li {\n    font-size: 13px;\n  }\n\n  .subjectImage {\n    width: 95%;\n  }\n}\n\n@media (max-width: 325px) {\n  .btn-signup {\n    font-size: 12px;\n  }\n}',
              ],
            }),
          ],
          S
        ));
      let E = class {
        constructor() {
          (this.gotoHome = new i.x()),
            (this.features = [
              {
                img: "/assets/images/desktop.svg",
                desc: "Online question-based self-learning platform",
              },
              {
                img: "/assets/images/mind.svg",
                desc: "AI-based technology personalises learning for every child",
              },
              {
                img: "/assets/images/doc.svg",
                desc: "Intelligently curated questions with a focus on core concepts",
              },
              {
                img: "/assets/images/task.svg",
                desc: "Topic-wise accuracy reports to assess the child's understanding",
              },
              {
                img: "/assets/images/todo.svg",
                desc: "Detailed explanations after every question makes learning effective",
              },
              {
                img: "/assets/images/dice.svg",
                desc: "Learn through questions, activities and games",
              },
            ]);
        }
        ngOnInit() {}
        goHome() {
          this.gotoHome.emit();
        }
      };
      (E.ctorParameters = () => []),
        (E.propDecorators = { gotoHome: [{ type: i.S }] }),
        (E = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-feature",
              template:
                '<div class="featureComponent">\n    <div class="container">\n        <div class="feature-header">\n            <p style="font-family: \'Roboto\',\'sans-sarif\';">Features of <br class="showBreak" />Ei Mindspark</p>\n        </div>\n        <div class="row">\n            <div class="col-lg-12">\n                <div class="row">\n                    <div class="col-lg-4 col-md-6 col-sm-6 col-xs-6 gap">\n                        <div class="row">\n                            <div class="col-lg-3 iconDetail">\n                                <img src="{{features[0].img}}" alt="">\n                            </div>\n                            <div class="col-lg-9 iconDetail">\n                                <p style="font-family: \'Roboto\',\'sans-sarif\';">{{features[0].desc}}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-lg-4 col-md-6 col-sm-6 col-xs-6 gap">\n                        <div class="row">\n                            <div class="col-lg-3 iconDetail">\n                                <img src="{{features[1].img}}" alt="">\n                            </div>\n                            <div class="col-lg-9 iconDetail">\n                                <p style="font-family: \'Roboto\',\'sans-sarif\';">{{features[1].desc}}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-lg-4 col-md-6 col-sm-6 col-xs-6 gap">\n                        <div class="row">\n                            <div class="col-lg-3 iconDetail">\n                                <img src="{{features[2].img}}" alt="">\n                            </div>\n                            <div class="col-lg-9 iconDetail">\n                                <p style="font-family: \'Roboto\',\'sans-sarif\';">{{features[2].desc}}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-lg-4 col-md-6 col-sm-6 col-xs-6 gap">\n                        <div class="row">\n                            <div class="col-lg-3 iconDetail">\n                                <img src="{{features[3].img}}" alt="">\n                            </div>\n                            <div class="col-lg-9 iconDetail">\n                                <p style="font-family: \'Roboto\',\'sans-sarif\';">{{features[3].desc}}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-lg-4 col-md-6 col-sm-6 col-xs-6 gap">\n                        <div class="row">\n                            <div class="col-lg-3 iconDetail">\n                                <img src="{{features[4].img}}" alt="">\n                            </div>\n                            <div class="col-lg-9 iconDetail">\n                                <p style="font-family: \'Roboto\',\'sans-sarif\';">{{features[4].desc}}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-lg-4 col-md-6 col-sm-6 col-xs-6 gap">\n                        <div class="row">\n                            <div class="col-lg-3 iconDetail">\n                                <img src="{{features[5].img}}" alt="">\n                            </div>\n                            <div class="col-lg-9 iconDetail">\n                                <p style="font-family: \'Roboto\',\'sans-sarif\';">{{features[5].desc}}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="btn-view">\n        <button type="button" class="btn-signup" (click)="goHome()">Sign Up Now</button>\n    </div>\n</div>\n',
              styles: [
                '.featureComponent {\n  background-color: #fff;\n  padding: 3rem;\n}\n\n.feature-header {\n  font-size: 36px;\n  font-weight: bold;\n  line-height: 1.36;\n  text-align: center;\n  color: #212121;\n  margin-bottom: 4rem;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.showBreak {\n  display: none;\n}\n\n.gap {\n  margin-bottom: 3rem;\n}\n\n.iconDetail {\n  font-family: "Roboto", "sans-sarif";\n}\n\n.btn-view {\n  display: flex;\n  justify-content: center;\n  padding: 2rem 3rem 2rem 3rem;\n  align-items: center;\n}\n\n.btn-signup {\n  background-color: #c61619;\n  color: #fff;\n  font-weight: bold;\n  border: 1px solid #c61619;\n  border-radius: 20px;\n  padding: 9px 50px 9px 50px;\n  outline: none;\n  font-family: "Roboto", "sans-sarif";\n  height: 50px;\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n}\n\n.btn-signup:hover {\n  background-color: #fff;\n  color: #c61619;\n}\n\n@media (min-width: 990px) {\n  .iconDetail {\n    display: flex;\n    align-items: flex-end;\n  }\n}\n\n@media (max-width: 990px) {\n  .iconDetail {\n    text-align: center;\n  }\n}\n\n@media (max-width: 750px) {\n  .btn-view {\n    padding: 5px 8px;\n  }\n\n  .gap {\n    margin-bottom: 18px;\n  }\n}\n\n@media (max-width: 550px) {\n  .showBreak {\n    display: block;\n  }\n}\n\n@media (max-width: 500px) {\n  .btn-signup {\n    font-size: 16px;\n  }\n}\n\n@media (max-width: 325px) {\n  .btn-signup {\n    font-size: 12px;\n  }\n}',
              ],
            }),
          ],
          E
        ));
      var k = n("bUSd"),
        O = n("3Pt+"),
        I = n("ZVe6"),
        T = n("xKP8"),
        A = n("tyNb"),
        D = n("uZrY"),
        M = n("0IaG");
      let P = class {
        constructor(e, t, n, s, i, r) {
          (this.shared = e),
            (this._FormsBuilder = t),
            (this._FreeTrial = n),
            (this.subscriptionService = s),
            (this.dialog = i),
            (this.router = r),
            (this.countryNames = {}),
            (this.numericCode = "+91"),
            (this.noSelect = !1),
            (this.phoneSubmitted = !1),
            (this.submitted = !1),
            (this.nameMinLength = 4),
            (this.showGetOtpLoader = !1),
            (this.formInput = ["input1", "input2", "input3", "input4"]),
            (this.showResendOtpOption = !1),
            (this.signupButton = !1),
            (this.showOtpError = !1),
            (this.showOtpSection = !1),
            (this.verifyLoader = !1),
            (this.otpVerified = !1),
            (this.createUserLoader = !1),
            (this.isCaptchaVerified = !1),
            (this.enableErrorBorder = !1),
            (this.captchaVerififcationToken = ""),
            (this.CONST_ALLOWEDSCIENCEGRADES = [6, 7, 8]),
            (this.CONST_ALLOWEDENGLISHGRADES = [
              4,
              5,
              ...this.CONST_ALLOWEDSCIENCEGRADES,
              9,
            ]),
            (this.CONST_ALLOWEDMATHSGRADES = [
              1,
              2,
              3,
              ...this.CONST_ALLOWEDENGLISHGRADES,
              10,
            ]),
            (this.classes = [
              { class: "Select Class" },
              { class: "Class 1" },
              { class: "Class 2" },
              { class: "Class 3" },
              { class: "Class 4" },
              { class: "Class 5" },
              { class: "Class 6" },
              { class: "Class 7" },
              { class: "Class 8" },
              { class: "Class 9" },
              { class: "Class 10" },
            ]),
            (this.syllabus = [
              { syllabusType: "Select Syllabus" },
              { syllabusType: "ICSE" },
              { syllabusType: "CBSE" },
              { syllabusType: "IGCSE" },
            ]),
            (this.listList = this.syllabus),
            (this.otpBoxform = this.toFormGroup(this.formInput)),
            (this.whatsAppConsent = !0),
            (this.whatsappValue = "1");
        }
        ngOnInit() {
          (this.allCountries = this.shared.getCountries().subscribe((e) => {
            let t = [],
              n = {};
            for (let s of e)
              if (s.callingCodes.length > 0) {
                let e = Number(s.callingCodes[0]);
                e &&
                  !t.includes(e) &&
                  ((n["+" + e.toString()] = s.name), t.push(e));
              }
            (t = t.sort(function (e, t) {
              return e - t;
            })),
              (this.countryNames = n),
              (this.countryCodes = t);
          })),
            (this.signupForm = this._FormsBuilder.group({
              studentName: new O.c("", [
                O.m.required,
                O.m.minLength(this.nameMinLength),
                O.m.pattern(/^[a-zA-Z]+(?: [a-zA-Z]+)*$/),
              ]),
              email: new O.c("", [O.m.required, O.m.email]),
              classSelect: new O.c("", [O.m.required]),
              syllabusSelect: new O.c("", [O.m.required]),
            })),
            (this.phoneForm = this._FormsBuilder.group({
              phoneNumber: new O.c("", [
                O.m.required,
                O.m.pattern(/^[1-9][0-9]*$/),
              ]),
            })),
            this._FreeTrial.showSendOtp.subscribe(() => {
              this.showResendOtpOption = !0;
            }),
            this.setMinlength();
        }
        get f() {
          return this.signupForm.controls;
        }
        get p() {
          return this.phoneForm.controls;
        }
        toFormGroup(e) {
          const t = {};
          return (
            e.forEach((e) => {
              t[e] = new O.c("", O.m.required);
            }),
            new O.d(t)
          );
        }
        keyUpEvent(e, t) {
          let n = t;
          (n = 8 === e.keyCode && 8 === e.which ? t - 1 : t + 1),
            n > -1 &&
              n < this.formInput.length &&
              this.rows._results[n].nativeElement.focus();
        }
        setMinlength(e) {
          "+91" == this.numericCode
            ? ((this.phoneMinLength = 10),
              e && 10 === e.length
                ? (this.showGetOtpLoader = !0)
                : (this.showGetOtpLoader = !1))
            : ((this.phoneMinLength = 4),
              e && e.length >= 4
                ? (this.showGetOtpLoader = !0)
                : (this.showGetOtpLoader = !1));
        }
        updateClassName(e) {
          console.log(e),
            (this.classGrade = this.subscriptionService.getClassId(
              this.classSelect
            )),
            6 == this.classGrade || 7 == this.classGrade || 8 == this.classGrade
              ? (this.listList = this.syllabus.slice(0, -1))
              : (this.listList = this.syllabus);
        }
        resolvedCaptcha(e) {
          e.length > 0
            ? ((this.isCaptchaVerified = !0),
              (this.enableErrorBorder = !1),
              (this.captchaVerififcationToken = e))
            : (this.enableErrorBorder = !0);
        }
        updateSyllabusName(e) {
          console.log(e);
        }
        updateWhatsApp(e) {
          console.log(e, typeof e);
        }
        onSubmit() {
          if (((this.submitted = !0), this.signupForm.invalid)) return;
          let e = this.countryNames[this.numericCode];
          if (this.createUserLoader) return;
          this.createUserLoader = !0;
          let t = +this.classGrade,
            n = "",
            s = "";
          this.CONST_ALLOWEDMATHSGRADES.includes(t) &&
            ((n = "Mindspark"), (s = "MS1")),
            this.CONST_ALLOWEDENGLISHGRADES.includes(t) &&
              ("" == n
                ? ((n = "MSE"), (s = "MS2"))
                : ((n += ",MSE"), (s += ",MS2"))),
            this.CONST_ALLOWEDSCIENCEGRADES.includes(t) &&
              "IGCSE" != this.syllabusSelect &&
              ("" == n
                ? ((n = "MSS"), (s = "MS3"))
                : ((n += ",MSS"), (s += ",MS3"))),
            this.whatsAppConsent
              ? (this.whatsappValue = "1")
              : (this.whatsappValue = "0"),
            console.log(this.whatsAppConsent, this.whatsappValue, "asdasd"),
            this._FreeTrial
              .createUser(
                this.phoneNumber,
                this.numericCode,
                this.studentName,
                this.email,
                this.classGrade,
                this.syllabusSelect,
                e,
                this.whatsappValue,
                this.subscriptionService.utmParams
              )
              .subscribe((e) => {
                if ("success" == e.status) {
                  let t = e.userData,
                    i = e.trailPeriod,
                    r = t.username;
                  (this.signupButton = !1),
                    this._FreeTrial.getJwtToken(r, n).subscribe((e) => {
                      let t = e.redirectionData.JWT;
                      (this.createUserLoader = !1),
                        this.subscriptionService.updateJWT(t),
                        this.router.navigate(["/free-trial/thank-you"], {
                          queryParams: { trial: i, pid: s },
                        });
                    });
                } else if (
                  ((this.createUserLoader = !1),
                  (this.signupButton = !1),
                  "-666" == e.code)
                ) {
                  this.subscriptionService.updateSyllabus(this.syllabusSelect),
                    this.subscriptionService.updateApiClass(this.classGrade),
                    this.subscriptionService.updateClass(
                      "Class " + this.classGrade
                    );
                  let t = e.data || [];
                  this.dialog
                    .open(D.a, {
                      data: { students: t },
                      disableClose: !0,
                      autoFocus: !1,
                      maxHeight: "95vh",
                      maxWidth: "95vw",
                    })
                    .afterClosed()
                    .subscribe((e) => {
                      e &&
                        Object.keys(e).length > 0 &&
                        this.subscriptionService.updateActiveStudent(e),
                        this._FreeTrial.updateState("payment");
                    });
                }
              });
        }
        editPhoneNumber() {
          (this.noSelect = !1),
            (this.showOtpSection = !1),
            (this.showResendOtpOption = !0),
            this.recaptchDom.first.grecaptcha.reset();
        }
        sendOtp() {
          if (
            ((this.phoneSubmitted = !0),
            (this.enableErrorBorder = !this.isCaptchaVerified),
            this.phoneForm.invalid || !this.isCaptchaVerified)
          )
            return;
          let e = this.countryNames[this.numericCode];
          this._FreeTrial
            .sendOTP(
              this.phoneNumber,
              this.numericCode,
              e,
              this.captchaVerififcationToken
            )
            .subscribe((e) => {
              (this.showGetOtpLoader = !1),
                "Success" == e.status
                  ? ((this.showOtpError = !1),
                    (this.freetrialResult = e),
                    (this.noSelect = !0),
                    (this.showOtpSection = !0),
                    (this.showResendOtpOption = !1))
                  : (this.showOtpError = !0);
            });
        }
        onOtpSubmit() {
          (this.otpBoxform.value.input1 ||
            this.otpBoxform.value.input2 ||
            this.otpBoxform.value.input3 ||
            this.otpBoxform.value.input4) &&
            (this.verifyLoader ||
              this.showGetOtpLoader ||
              ((this.verifyLoader = !0),
              (this.otpValue =
                "" +
                this.otpBoxform.value.input1 +
                this.otpBoxform.value.input2 +
                this.otpBoxform.value.input3 +
                this.otpBoxform.value.input4),
              this._FreeTrial
                .verifyEnteredOtp(
                  this.phoneNumber,
                  this.numericCode,
                  this.otpValue
                )
                .subscribe((e) => {
                  if (((this.verifyLoader = !1), "success" == e.status)) {
                    (this.showOtpError = !1),
                      (this.signupButton = !0),
                      (this.otpVerified = !0),
                      (this.showOtpSection = !1);
                    let t = this.countryNames[this.numericCode];
                    this.subscriptionService.updateBasicInfo(
                      "contryCode",
                      this.numericCode
                    ),
                      this.subscriptionService.updateBasicInfo(
                        "countryName",
                        t
                      ),
                      this.subscriptionService.updateBasicInfo(
                        "phone",
                        this.phoneNumber
                      ),
                      this.subscriptionService.updateBasicInfo(
                        "isNumberVerified",
                        "true"
                      );
                    let n = e.userData;
                    n && n.length > 0
                      ? this.subscriptionService.showPopUp(n)
                      : this.subscriptionService.updateState("basicInfo");
                  } else this.showOtpError = !0;
                })));
        }
      };
      (P.ctorParameters = () => [
        { type: k.a },
        { type: O.b },
        { type: I.a },
        { type: T.a },
        { type: M.b },
        { type: A.b },
      ]),
        (P.propDecorators = {
          rows: [{ type: i.nb, args: ["formRow"] }],
          recaptchDom: [{ type: i.nb, args: ["recaptcha"] }],
        }),
        (P = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-home",
              template:
                '<div class="homeContainer">\n    <div class="container">\n        <div class="row">\n            <div class="col-lg-7 col-md-6 col-sm-12 col-xs-12">\n                <p class="heading">\n                    The Best Learning Outcomes <br>For Every Child\n                </p>\n                <div>\n                    <p class="subjects">Maths (Grades 1-10)  <span style="color: #000;">|</span>  English (Grades 4-9)  <span style="color: #000;">|</span>  Science (Grades 6-10)</p>\n                </div>\n                <div class="list-view">\n                    <ul>\n                        <li>AI-powered personalised learning for every child</li>\n                        <li>Focus on conceptual understanding</li>\n                        <li>Game-based learning for better retention</li>\n                        <li>Exciting reward mechanisms</li>\n                        <li>Aligned to CBSE, ICSE and IGCSE</li>\n                    </ul>\n                </div>\n                <div class="play-button-div">\n                    <a href="https://play.google.com/store/apps/details?id=com.mindspark.edicine" target="_blank"><img class="play-button" src="/assets/images/googlePlay.png" alt="google play"></a>\n                    <a href="https://apps.apple.com/in/app/ei-mindspark-learning-app/id1541664545" target="_blank"><img class="play-button" src="/assets/images/applePlay.png" alt="google play"></a>\n                </div>\n            </div>\n            <div class="col-lg-5 col-md-6 col-sm-12 col-xs-12">\n                <div class="form-div">\n                    <h3 style="text-align: center;font-family: \'Roboto\',\'sans-sarif\';font-weight: bold;">Try For Free Now!</h3>\n                    <form autocomplete="off" [formGroup]="signupForm" (ngSubmit)="onSubmit()">\n                        <div class="row">\n                            <div class="col-lg-5">\n                                <label class="lable-detail" for="name">Full Name of Student</label>\n                            </div>\n                            <div class="col-lg-7 form-group">\n                                <input class="input-field" id=\'name\' name="studentName" [(ngModel)]="studentName" formControlName="studentName" [ngClass]="{ \'is-invalid\': submitted && f.studentName.errors }" minlength={{nameMinLength}} type="text" placeholder="Name of student">\n                                <div *ngIf="f.studentName.errors" class="invalid-feedback">\n                                    <div *ngIf="f.studentName.errors.required" style="font-family: \'Roboto\',\'sans-sarif\';">Username Name is required</div>\n                                </div>\n                                <div *ngIf="f.studentName.errors?.pattern" class="invalid-feedback">\n                                    <div *ngIf="f.studentName.errors?.pattern" style="font-family: \'Roboto\',\'sans-sarif\';">Please enter a valid name</div>\n                                </div>\n                                <div *ngIf="!f.studentName.errors?.required && !f.studentName.errors?.pattern && !f.studentName?.valid"\n                                    class="invalid-feedback">\n                                    <div style="font-family: \'Roboto\',\'sans-sarif\';">Minimum length required is {{nameMinLength}}</div>\n                                </div>\n                            </div>\n                            \n                        </div>\n                        <div class="row">\n                            <div class="col-lg-5">\n                                <label class="lable-detail" for="grade">Grade</label>\n                            </div>\n                            <div class="col-lg-7 form-group">\n                                \x3c!-- <input class="input-field" id=\'grade\' type="text" placeholder="Provide Grade"> --\x3e\n                                <select class="input-field" required style="height: 30px;"\n                                    (change)="updateClassName(classSelect)" [(ngModel)]="classSelect" formControlName="classSelect" name="classSelect" [ngClass]="{ \'is-invalid\': submitted && f.classSelect.errors }">\n                                    <option *ngFor="let grade of classes;let i=index" [disabled]="i==0">{{grade.class}}\n                                    </option>\n                                </select>\n                                <div *ngIf="f.classSelect.errors" class="invalid-feedback">\n                                    <div *ngIf="f.classSelect.errors.required" style="font-family: \'Roboto\',\'sans-sarif\';">Class is required</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="row">\n                            <div class="col-lg-5">\n                                <label class="lable-detail" for="syllabus">Syllabus</label>\n                            </div>\n                            <div class="col-lg-7 form-group">\n                                \x3c!-- <input class="input-field" id=\'syllabus\' type="text" placeholder="Provide Syllabus"> --\x3e\n                                <select class="input-field" style="height: 30px;" name=\'syllabusSelect\' formControlName="syllabusSelect"\n                                    [ngClass]="{ \'is-invalid\':  submitted && f.syllabusSelect.errors }" [(ngModel)]="syllabusSelect"\n                                    (change)="updateSyllabusName(syllabusSelect)" required>\n                                    <option *ngFor="let type of listList;let i= index">\n                                        {{type.syllabusType}}</option>\n                                </select>\n                                <div *ngIf="f.syllabusSelect.errors" class="invalid-feedback">\n                                    <div *ngIf="f.syllabusSelect.errors.required" style="font-family: \'Roboto\',\'sans-sarif\';">Syllabus is required</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="row">\n                            <div class="col-lg-5">\n                                <label class="lable-detail" for="email">Parent Email ID</label>\n                            </div>\n                            <div class="col-lg-7 form-group">\n                                <input class="input-field" id=\'email\' type="email" name="email" formControlName="email" [(ngModel)]="email"\n                                    [ngClass]="{ \'is-invalid\': submitted && f.email.errors }" placeholder="Parent Email ID">\n                                <div *ngIf="f.email.errors?.required" class="invalid-feedback">\n                                    <div *ngIf="f.email.errors?.required" style="font-family: \'Roboto\',\'sans-sarif\';">Email is required</div>\n                                </div>\n                                <div *ngIf="f.email.errors?.email" class="invalid-feedback">\n                                    <div style="font-family: \'Roboto\',\'sans-sarif\';">Please enter a valid email</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="row">\n                            <div class="col-lg-5">\n                                <label class="lable-detail" for="mobile">Parent Mobile Number</label>\n                            </div>\n                            <div class="col-lg-7 form-group" style="display: flex;align-items: center;">\n                                <form autocomplete="off" [formGroup]="phoneForm" (ngSubmit)="sendOtp()">\n                                    <select class="code-info" [(ngModel)]="numericCode" [ngModelOptions]="{standalone: true}" [disabled]="noSelect"\n                                        (change)="setMinlength()">\n                                        <option *ngFor="let inTel of countryCodes;let p =  index" [selected]="p==\'41\'">\n                                            +{{inTel}}\n                                        </option>\n                                    </select>\n                                    <input class="mobile-input" name="phoneNumber" spellcheck="false" [(ngModel)]="phoneNumber"\n                                        formControlName="phoneNumber" [readonly]="noSelect" (input)="setMinlength(phoneNumber)"\n                                        minlength={{phoneMinLength}} maxlength="{{numericCode === \'+91\' ? phoneMinLength : 15}}" id=\'mobile\' type="tel" placeholder="Mobile Number"\n                                        [ngClass]="{ \'is-invalid\':  phoneSubmitted && p.phoneNumber.errors }">\n\n                                    <div *ngIf="p.phoneNumber.errors?.required " class="invalid-feedback ">\n                                        <div *ngIf="p.phoneNumber.errors.required" style="font-family: \'Roboto\',\'sans-sarif\';">Phone Number is required</div>\n                                    </div>\n                                    <div *ngIf="p.phoneNumber.errors?.pattern" class="invalid-feedback">\n                                        <div *ngIf="p.phoneNumber.errors?.pattern" style="font-family: \'Roboto\',\'sans-sarif\';">Please enter a valid phone Number</div>\n                                    </div>\n                                    <div *ngIf="!p.phoneNumber.errors?.required && !p.phoneNumber.errors?.pattern && !p.phoneNumber?.valid"\n                                        class="invalid-feedback">\n                                        <div style="font-family: \'Roboto\',\'sans-sarif\';">minimum length required is {{phoneMinLength}}</div>\n                                    </div>\n                                    <div class="captcha-wrapper"\n                                    [style.border]="enableErrorBorder ? \'2px solid red\' : \'none\'"\n                                    >\n                                        <re-captcha (resolved)="resolvedCaptcha($event)" errorMode="handled"\n                                        #recaptcha\n                                        ></re-captcha>\n                                    </div>\n                                <button type="submit" *ngIf="!showOtpSection" class="otp-btn" [disabled]="!showGetOtpLoader &&isCaptchaVerified">Send OTP</button>\n                                <button type="button" (click)="editPhoneNumber()" *ngIf="showOtpSection" class="otp-btn" style="padding: 4px 15px;">Edit</button>\n                                </form>\n                            </div>\n                        </div>\n                        <div class="row">\n                            <div class="col-lg-12">\n                                <div *ngIf="showOtpSection" class="otpSection">\n                                    <div style="font-family: \'Roboto\',\'sans-sarif\';"> Please enter the OTP received </div>\n                                    <form (ngSubmit)="onOtpSubmit()" [formGroup]="otpBoxform">\n                \n                                        <div class="row" style="display: flex;align-items: baseline;">\n                                            <div class="form-group is-invalid"  *ngFor="let input of formInput;index as i">\n                                                <input #formRow type="password" formControlName="{{input}}" class="input-field otp" maxlength="1"\n                                                    (keyup)="keyUpEvent($event, i)" inputmode="numeric">\n                                            </div>\n                                            <button class="verifyResendOtp" type="submit" *ngIf="otpBoxform.status!==\'INVALID\' && !showResendOtpOption"\n                                                [disabled]="verifyLoader">\n                                                <div class="btnContent">\n                                                    <div style="font-family: \'Roboto\',\'sans-sarif\';">Verify OTP</div>\n                                                    <app-loader *ngIf="verifyLoader"></app-loader>\n                                                </div>\n                                            </button>\n                                            <button type="button" class="verifyResendOtp" *ngIf="showResendOtpOption" (click)="sendOtp()">\n                                                <div class="btnContent">\n                                                    <div style="font-family: \'Roboto\',\'sans-sarif\';">Resend OTP</div>\n                                                    <app-loader *ngIf="showGetOtpLoader"></app-loader>\n                                                </div>\n                                            </button>\n                                        </div>\n                                        <div class="otpText" *ngIf="!showResendOtpOption" style="font-family: \'Roboto\',\'sans-sarif\';">\n                                            This OTP expires in <b>\n                                                <app-countdown-timer></app-countdown-timer>\n                                            </b> minutes\n                                        </div>\n                                        <p class="invalid" *ngIf="showOtpError==true" style="font-family: \'Roboto\',\'sans-sarif\';">OTP is invalid. Please check and enter the valid\n                                            OTP</p>\n                                        \n                                    </form>\n                                </div>\n                                <div *ngIf="otpVerified">\n                                    <p style="color: #00C72C;font-weight: bold;font-family: \'Roboto\',\'sans-sarif\';">OTP verified! <span><img style="width: 25px;" src="/assets/images/CircleWavyCheck.svg" alt="checkCircle"></span></p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="row">\n                            <div class="col-lg-12"><p class="text-info" style="margin-bottom: 0;">Login details will be shared on the registered email and contact number.</p></div>\n                        </div>\n                        <div class="row">\n                            <div class="col-lg-12">\n                                <input id="whatsapp" type="checkbox" [checked]="whatsAppConsent"\n                                (change)="whatsAppConsent = !whatsAppConsent"><p class="text-info" style="display: inline-block;margin-left: 8px;">Get important updates on WhatsApp.</p>\n                            </div>\n                        </div>\n                        <div class="row">\n                            <div class="col-lg-12 btn-view">\n                                <button class="btn-signup" type="submit" [disabled]="!signupButton">Sign Up Now <app-loader *ngIf="createUserLoader"></app-loader></button>\n                            </div>\n                        </div>\n                        <div class="row">\n                            <div class="col-lg-12"><p class="text-info">By proceeding, you agree to our <span><a href="https://mindspark-ei.s3.ap-southeast-1.amazonaws.com/website/2020%20EI_Mindspark_website_TnC.pdf"\n                                target="_blank" style="font-size: 14px;color: #0645ad;font-weight: bold;font-family: \'Roboto\',\'sans-sarif\';">Terms of Use</a></span> and <span>\n                                    <a target="_blank" href="https://mindspark-ei.s3.ap-southeast-1.amazonaws.com/website/Privacy_Policy_Document_2021.pdf" style="font-size: 14px;color: #0645ad;font-weight: bold;font-family: \'Roboto\',\'sans-sarif\';">Privacy Policy</a></span>.</p></div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n',
              styles: [
                '.homeContainer {\n  background-image: url("/assets/images/homeBg.png");\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  background-color: rgba(203, 68, 68, 0.7);\n  padding: 4rem 0;\n}\n\n.heading {\n  color: #fff;\n  font-weight: bold;\n  font-size: 36px;\n  line-height: 1.36;\n  text-align: left;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.subjects {\n  color: #fff;\n  padding: 3rem 0;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 1.36;\n  text-align: left;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.list-view li {\n  list-style: disc;\n  color: #fff;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.play-button {\n  width: 150px;\n  margin-right: 15px;\n}\n\n.play-button-div {\n  margin: 2rem;\n}\n\n.form-div {\n  background-color: rgba(255, 255, 255, 0.7);\n  padding: 20px;\n  border: 1px solid rgba(255, 255, 255, 0.7);\n  border-radius: 45px;\n}\n\n.lable-detail {\n  font-size: 14px;\n  font-family: "Roboto", "sans-sarif";\n  color: #495057;\n}\n\n.input-field {\n  display: block;\n  width: 100%;\n  padding: 5px 10px;\n  border: 1px solid #ced4da;\n  border-radius: 10px;\n  outline: none;\n  background-color: #fff;\n  font-family: "Roboto", "sans-sarif";\n  color: #495057;\n  font-size: 13px;\n}\n\n.input-field:focus {\n  color: #495057;\n  background-color: #fff;\n  border-color: #80bdff;\n  outline: 0;\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\n}\n\n.input-field::placeholder {\n  font-family: "Roboto", "sans-sarif";\n  color: #495057;\n  font-size: 13px;\n}\n\n.text-info {\n  font-size: 12px;\n  font-family: "Roboto", "sans-sarif";\n  text-align: center;\n  margin-top: 8px;\n  color: #495057 !important;\n}\n\n.code-info {\n  width: 48px;\n  height: 31px;\n  font-size: 11px;\n  border: 1px solid #ccc;\n  border-radius: 10px 0 0 10px;\n  outline: none;\n}\n\n.captcha-wrapper {\n  transform: scale(0.67);\n  transform-origin: 0 0;\n  margin-top: 10px;\n}\n\n.mobile-input {\n  display: inline-block;\n  padding: 5px 10px;\n  border: 1px solid #ced4da;\n  border-radius: 0 10px 10px 0;\n  outline: none;\n  font-family: "Roboto", "sans-sarif";\n  font-size: 13px;\n}\n\n.mobile-input::placeholder {\n  font-family: "Roboto", "sans-sarif";\n  color: #495057;\n  font-size: 13px;\n}\n\n.is-invalid {\n  border-color: #dc3545 !important;\n}\n\n.btn-view {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.btn-signup {\n  background-color: #c61619;\n  color: #fff;\n  font-weight: bold;\n  border: 1px solid #c61619;\n  border-radius: 20px;\n  padding: 9px 50px 9px 50px;\n  outline: none;\n  font-family: "Roboto", "sans-sarif";\n  height: 50px;\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n}\n\n.btn-signup:hover {\n  background-color: #9e3032c7;\n  border-color: #9e3032c7;\n}\n\n.btn-signup:disabled {\n  background-color: #837a7a;\n  color: #fff;\n  border-color: #837a7a;\n}\n\n.otp-btn {\n  color: #fff;\n  font-size: 13px;\n  background-color: #c61619;\n  border-radius: 8px;\n  border: none;\n  outline: none;\n  padding: 4px 6px;\n  height: 33px;\n  margin-left: 5px;\n  font-family: "Roboto", "sans-sarif";\n  position: relative;\n  top: -15px;\n}\n\n.otp-btn:hover {\n  background-color: #fff;\n  color: #c61619;\n}\n\n.otp-btn:disabled {\n  background-color: #fff;\n  color: #495057;\n}\n\n.otpSection {\n  margin: 30px 0px;\n}\n\n.otp {\n  margin: 5px;\n  text-align: center;\n  height: 40px;\n  width: 40px;\n}\n\n.sendOtp {\n  background-color: #c61619;\n  color: #fff;\n  font-weight: bold;\n  border: 1px solid #c61619;\n  border-radius: 20px;\n  padding: 10px;\n  outline: none;\n  font-size: 14px;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.verifyResendOtp {\n  background-color: #c61619;\n  color: #fff;\n  font-weight: bold;\n  border: 1px solid #c61619;\n  border-radius: 20px;\n  padding: 10px 20px 10px 20px;\n  margin-left: 30px;\n  outline: none;\n  font-size: 13px;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.verifyResendOtp:hover {\n  background-color: #9e3032c7;\n  border-color: #9e3032c7;\n}\n\n.btnContent {\n  display: flex;\n  justify-content: center;\n}\n\n.resendOtp {\n  padding: 5px;\n  font-size: 14px;\n  background-color: #c61619;\n  color: #fff;\n  font-weight: bold;\n  border: 1px solid #c61619;\n  border-radius: 15px;\n  outline: none;\n}\n\n.sendOtp:hover, .resendOtp:hover {\n  background-color: #fff;\n  color: #c61619;\n}\n\n::ng-deep .sendOtp {\n  cursor: pointer !important;\n}\n\n@media (max-width: 1200px) {\n  .subjects {\n    font-size: 16px;\n  }\n}\n\n@media (max-width: 750px) {\n  .btn-view {\n    padding: 5px 8px;\n  }\n\n  .play-button {\n    width: 120px;\n  }\n}\n\n@media (max-width: 500px) {\n  .btn-signup {\n    font-size: 18px;\n  }\n}\n\n@media (max-width: 360px) {\n  .play-button {\n    width: 100px;\n  }\n}\n\n@media (max-width: 325px) {\n  .btn-signup {\n    font-size: 14px;\n  }\n}',
              ],
            }),
          ],
          P
        ));
      var R = n("RZTn");
      let j = class {
        constructor(e) {
          (this.math = e),
            (this.classes = [
              "Class 1",
              "Class 2",
              "Class 3",
              "Class 4",
              "Class 5",
              "Class 6",
              "Class 7",
              "Class 8",
              "Class 9",
              "Class 10",
            ]),
            (this.selectedClass = "Class 1"),
            (this.syllabusList = ["CBSE", "ICSE", "IGCSE"]),
            (this.selectedSyllabus = "CBSE"),
            (this.syllabusDetails = []);
        }
        ngOnInit() {
          this.subscription = this.math.getJsonData("Maths").subscribe((e) => {
            (this.syllabusDetails = e),
              (this.currentSyllabus =
                this.syllabusDetails[this.selectedClass][
                  this.selectedSyllabus
                ]);
          });
        }
        changeClassHandler(e) {
          (this.selectedClass = e),
            (this.currentSyllabus =
              this.syllabusDetails[this.selectedClass][this.selectedSyllabus]);
        }
        changeSyllabusHandler(e) {
          (this.selectedSyllabus = e),
            (this.currentSyllabus =
              this.syllabusDetails[this.selectedClass][this.selectedSyllabus]);
        }
        getClassStyle(e) {
          const t = {};
          return this.selectedClass === e && (t.color = "#c61619"), t;
        }
        ngOnDestroy() {
          this.subscription.unsubscribe();
        }
      };
      (j.ctorParameters = () => [{ type: R.a }]),
        (j = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-maths",
              template:
                '<div class="MathContainer">\n    <div class="classView">\n        <div *ngFor="let class of classes" class="classText" (click)="changeClassHandler(class)" [ngStyle]="getClassStyle(class)">\n            {{class}}\n        </div>\n    </div>\n    <hr>\n    <div class="syllabusView">\n        <p class="syllabusText">Syllabus</p>\n        <select name="" id="" class="syllabiList" [(ngModel)]="selectedSyllabus" (change)="changeSyllabusHandler(selectedSyllabus)">\n            <option *ngFor="let item of syllabusList" value="{{item}}">{{item}}</option>\n        </select>\n    </div>\n    <div class="row">\n        <div class="col-lg-4">\n            <div *ngIf="currentSyllabus">\n                <div *ngFor="let syllabus of currentSyllabus[0]">\n                    <p class="syllabusText">{{ syllabus.title }}</p>\n                    <ul class="chapterList">\n                        <li *ngFor="let item of syllabus.data">{{item.title}} {{item.subText !== \'\' ? item.subText : \'\'}}</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class="col-lg-4">\n            <div *ngIf="currentSyllabus">\n                <div *ngFor="let syllabus of currentSyllabus[1]">\n                    <p class="syllabusText">{{ syllabus.title }}</p>\n                    <ul class="chapterList">\n                        <li *ngFor="let item of syllabus.data">{{item.title}} {{item.subText !== \'\' ? item.subText : \'\'}}</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class="col-lg-4">\n            <div *ngIf="currentSyllabus">\n                <div *ngFor="let syllabus of currentSyllabus[2]">\n                    <p class="syllabusText">{{ syllabus.title }}</p>\n                    <ul class="chapterList">\n                        <li *ngFor="let item of syllabus.data[0]">{{item.title}} {{item.subText !== \'\' ? item.subText : \'\'}}</li>\n                        <li *ngFor="let item of syllabus.data[1]">{{item.title}} {{item.subText !== \'\' ? item.subText : \'\'}}</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n',
              styles: [
                '.MathContainer {\n  background-color: #fff;\n  border: 1px solid #fff;\n  border-radius: 6px;\n  padding: 2rem;\n  margin: 1.5rem;\n}\n\n.classView {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 6rem);\n  align-items: center;\n  justify-content: space-between;\n}\n\n.classText {\n  font-size: 16px;\n  font-weight: bold;\n  font-family: "Roboto", "sans-sarif";\n  cursor: pointer;\n  color: #212121;\n}\n\n.classText:hover {\n  color: #c61619;\n}\n\n.syllabusView {\n  display: flex;\n  justify-content: flex-end;\n  align-items: baseline;\n}\n\n.syllabusText {\n  font-size: 16px;\n  font-family: "Roboto", "sans-sarif";\n  font-weight: bold;\n  margin-bottom: 0px;\n}\n\n.syllabiList {\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  padding: 5px 10px;\n  font-family: "Roboto", "sans-sarif";\n  font-weight: bold;\n  outline: none;\n  margin-left: 8px;\n}\n\n.chapterList {\n  padding-left: 0px;\n}\n\n.chapterList li {\n  list-style: none;\n  font-size: 16px;\n  font-family: "Roboto", "sans-sarif";\n}\n\n@media (max-width: 768px) {\n  .MathContainer {\n    margin: 0;\n  }\n\n  .classView {\n    grid-template-columns: repeat(auto-fill, 4rem);\n  }\n}',
              ],
            }),
          ],
          j
        ));
      let N = class {
        constructor(e) {
          (this.math = e),
            (this.classes = [
              "Class 4",
              "Class 5",
              "Class 6",
              "Class 7",
              "Class 8",
              "Class 9",
            ]),
            (this.selectedClass = "Class 4"),
            (this.syllabusList = ["CBSE", "ICSE", "IGCSE"]),
            (this.selectedSyllabus = "CBSE"),
            (this.syllabusDetails = []);
        }
        ngOnInit() {
          this.subscription = this.math
            .getJsonData("English")
            .subscribe((e) => {
              (this.syllabusDetails = e),
                (this.currentSyllabus =
                  this.syllabusDetails[this.selectedClass][
                    this.selectedSyllabus
                  ]);
            });
        }
        changeClassHandler(e) {
          (this.selectedClass = e),
            (this.currentSyllabus =
              this.syllabusDetails[this.selectedClass][this.selectedSyllabus]);
        }
        changeSyllabusHandler(e) {
          (this.selectedSyllabus = e),
            (this.currentSyllabus =
              this.syllabusDetails[this.selectedClass][this.selectedSyllabus]);
        }
        getClassStyle(e) {
          const t = {};
          return this.selectedClass === e && (t.color = "#c61619"), t;
        }
        ngOnDestroy() {
          this.subscription.unsubscribe();
        }
      };
      (N.ctorParameters = () => [{ type: R.a }]),
        (N = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-english",
              template:
                '<div class="MathContainer">\n    <div class="classView">\n        <div *ngFor="let class of classes" class="classText" (click)="changeClassHandler(class)" [ngStyle]="getClassStyle(class)">\n            {{class}}\n        </div>\n    </div>\n    <hr>\n    <div class="syllabusView">\n        <p class="syllabusText">Syllabus</p>\n        <select name="" id="" class="syllabiList" [(ngModel)]="selectedSyllabus" (change)="changeSyllabusHandler(selectedSyllabus)">\n            <option *ngFor="let item of syllabusList" value="{{item}}">{{item}}</option>\n        </select>\n    </div>\n    <div class="row">\n        <div class="col-lg-4">\n            <div *ngIf="currentSyllabus">\n                <div *ngFor="let syllabus of currentSyllabus[0]">\n                    <p class="syllabusText">{{ syllabus.title }}</p>\n                    <ul class="chapterList">\n                        <li *ngFor="let item of syllabus.data">{{item.title}} {{item.subText !== \'\' ? item.subText : \'\'}}</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class="col-lg-4">\n            <div *ngIf="currentSyllabus">\n                <div *ngFor="let syllabus of currentSyllabus[1]">\n                    <p class="syllabusText">{{ syllabus.title }}</p>\n                    <ul class="chapterList">\n                        <li *ngFor="let item of syllabus.data">{{item.title}} {{item.subText !== \'\' ? item.subText : \'\'}}</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class="col-lg-4">\n            <div *ngIf="currentSyllabus">\n                <div *ngFor="let syllabus of currentSyllabus[2]">\n                    <p class="syllabusText">{{ syllabus.title }}</p>\n                    <ul class="chapterList">\n                        <li *ngFor="let item of syllabus.data[0]">{{item.title}} {{item.subText !== \'\' ? item.subText : \'\'}}</li>\n                        <li *ngFor="let item of syllabus.data[1]">{{item.title}} {{item.subText !== \'\' ? item.subText : \'\'}}</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n',
              styles: [
                '.MathContainer {\n  background-color: #fff;\n  border: 1px solid #fff;\n  border-radius: 6px;\n  padding: 2rem;\n  margin: 1.5rem;\n}\n\n.classView {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 6rem);\n  align-items: center;\n  justify-content: space-between;\n}\n\n.classText {\n  font-size: 16px;\n  font-weight: bold;\n  font-family: "Roboto", "sans-sarif";\n  cursor: pointer;\n  color: #212121;\n}\n\n.classText:hover {\n  color: #c61619;\n}\n\n.syllabusView {\n  display: flex;\n  justify-content: flex-end;\n  align-items: baseline;\n}\n\n.syllabusText {\n  font-size: 16px;\n  font-family: "Roboto", "sans-sarif";\n  font-weight: bold;\n  margin-bottom: 0px;\n}\n\n.syllabiList {\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  padding: 5px 10px;\n  font-weight: bold;\n  outline: none;\n  margin-left: 8px;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.chapterList {\n  padding-left: 0px;\n}\n\n.chapterList li {\n  list-style: none;\n  font-size: 16px;\n  font-family: "Roboto", "sans-sarif";\n}\n\n@media (max-width: 768px) {\n  .MathContainer {\n    margin: 0;\n  }\n\n  .classView {\n    grid-template-columns: repeat(auto-fill, 4rem);\n  }\n}',
              ],
            }),
          ],
          N
        ));
      let F = class {
        constructor(e) {
          (this.math = e),
            (this.classes = ["Class 6", "Class 7", "Class 8"]),
            (this.selectedClass = "Class 6"),
            (this.syllabusList = ["CBSE", "ICSE"]),
            (this.selectedSyllabus = "CBSE"),
            (this.syllabusDetails = []);
        }
        ngOnInit() {
          this.subscription = this.math
            .getJsonData("Science")
            .subscribe((e) => {
              (this.syllabusDetails = e),
                (this.currentSyllabus =
                  this.syllabusDetails[this.selectedClass][
                    this.selectedSyllabus
                  ]);
            });
        }
        changeClassHandler(e) {
          (this.selectedClass = e),
            (this.currentSyllabus =
              this.syllabusDetails[this.selectedClass][this.selectedSyllabus]);
        }
        changeSyllabusHandler(e) {
          (this.selectedSyllabus = e),
            (this.currentSyllabus =
              this.syllabusDetails[this.selectedClass][this.selectedSyllabus]);
        }
        getClassStyle(e) {
          const t = {};
          return this.selectedClass === e && (t.color = "#c61619"), t;
        }
        ngOnDestroy() {
          this.subscription.unsubscribe();
        }
      };
      (F.ctorParameters = () => [{ type: R.a }]),
        (F = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-science",
              template:
                '<div class="MathContainer">\n    <div class="classView">\n        <div *ngFor="let class of classes" class="classText" (click)="changeClassHandler(class)" [ngStyle]="getClassStyle(class)">\n            {{class}}\n        </div>\n    </div>\n    <hr>\n    <div class="syllabusView">\n        <p class="syllabusText">Syllabus</p>\n        <select name="" id="" class="syllabiList" [(ngModel)]="selectedSyllabus" (change)="changeSyllabusHandler(selectedSyllabus)">\n            <option *ngFor="let item of syllabusList" value="{{item}}">{{item}}</option>\n        </select>\n    </div>\n    <div class="row">\n        <div class="col-lg-4">\n            <div *ngIf="currentSyllabus">\n                <div *ngFor="let syllabus of currentSyllabus[0]">\n                    <p class="syllabusText">{{ syllabus.title }}</p>\n                    <ul class="chapterList">\n                        <li *ngFor="let item of syllabus.data">{{item.title}} {{item.subText !== \'\' ? item.subText : \'\'}}</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class="col-lg-4">\n            <div *ngIf="currentSyllabus">\n                <div *ngFor="let syllabus of currentSyllabus[1]">\n                    <p class="syllabusText">{{ syllabus.title }}</p>\n                    <ul class="chapterList">\n                        <li *ngFor="let item of syllabus.data">{{item.title}} {{item.subText !== \'\' ? item.subText : \'\'}}</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class="col-lg-4">\n            <div *ngIf="currentSyllabus">\n                <div *ngFor="let syllabus of currentSyllabus[2]">\n                    <p class="syllabusText">{{ syllabus.title }}</p>\n                    <ul class="chapterList">\n                        <li *ngFor="let item of syllabus.data[0]">{{item.title}} {{item.subText !== \'\' ? item.subText : \'\'}}</li>\n                        <li *ngFor="let item of syllabus.data[1]">{{item.title}} {{item.subText !== \'\' ? item.subText : \'\'}}</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n',
              styles: [
                '.MathContainer {\n  background-color: #fff;\n  border: 1px solid #fff;\n  border-radius: 6px;\n  padding: 2rem;\n  margin: 1.5rem;\n}\n\n.classView {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 6rem);\n  align-items: center;\n  justify-content: space-between;\n}\n\n.classText {\n  font-size: 16px;\n  font-weight: bold;\n  font-family: "Roboto", "sans-sarif";\n  cursor: pointer;\n  color: #212121;\n}\n\n.classText:hover {\n  color: #c61619;\n}\n\n.syllabusView {\n  display: flex;\n  justify-content: flex-end;\n  align-items: baseline;\n}\n\n.syllabusText {\n  font-size: 16px;\n  font-family: "Roboto", "sans-sarif";\n  font-weight: bold;\n  margin-bottom: 0px;\n}\n\n.syllabiList {\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  padding: 5px 10px;\n  font-weight: bold;\n  outline: none;\n  margin-left: 8px;\n  font-family: "Roboto", "sans-sarif";\n}\n\n.chapterList {\n  padding-left: 0px;\n}\n\n.chapterList li {\n  list-style: none;\n  font-size: 16px;\n  font-family: "Roboto", "sans-sarif";\n}\n\n@media (max-width: 768px) {\n  .MathContainer {\n    margin: 0;\n  }\n\n  .classView {\n    grid-template-columns: repeat(auto-fill, 4rem);\n  }\n}',
              ],
            }),
          ],
          F
        ));
      var L = n("LLTW");
      let V = class {
        constructor(e) {
          (this.loaderService = e),
            (this.loading = !1),
            this.loaderService.isLoading.subscribe((e) => {
              this.loading = e;
            });
        }
        ngOnInit() {}
      };
      (V.ctorParameters = () => [{ type: L.a }]),
        (V = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-loader",
              template: '<div class="loader"></div>\n',
              styles: [
                ".loader {\n  width: 22px;\n  height: 22px;\n  display: inline-block;\n  padding: 0px;\n  border-radius: 100%;\n  margin-left: 4px;\n  border: 2.5px solid;\n  border-top-color: white;\n  border-bottom-color: #ffffff80;\n  border-left-color: #ffffff80;\n  border-right-color: #ffffff80;\n  animation: loader 0.5s linear infinite;\n}\n\n@keyframes loader {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}",
              ],
            }),
          ],
          V
        ));
      var B = n("quSY"),
        z = n("PqYM"),
        H = n("TxPR"),
        G = n("vYmM");
      let U = class {
        constructor(e, t, n, s) {
          (this.freeTrialService = e),
            (this.liveClassesService = t),
            (this.changeDetectorRef = n),
            (this.document = s),
            (this.countDown = new B.a()),
            (this.counter = 120),
            (this.type = "resendOtp"),
            (this.token = ""),
            (this.pid = "MS1"),
            (this.tick = 1e3),
            (this.autoLoginUrl = "");
          const i = this.document.location.hostname;
          this.autoLoginUrl = Object(H.a)(i);
        }
        ngOnInit() {
          this.countDown = Object(z.a)(0, this.tick).subscribe(() => {
            --this.counter,
              this.changeDetectorRef.detectChanges(),
              0 == this.counter &&
                (this.countDown.unsubscribe(),
                "resendOtp" == this.type
                  ? (this.freeTrialService.showResendOtp(),
                    this.liveClassesService.showResendOtp())
                  : (window.location.href =
                      this.autoLoginUrl + this.token + "&pid=" + this.pid));
          });
        }
        ngOnDestroy() {
          this.countDown.unsubscribe();
        }
      };
      (U.ctorParameters = () => [
        { type: I.a },
        { type: G.a },
        { type: i.k },
        { type: Document, decorators: [{ type: i.C, args: [r.c] }] },
      ]),
        (U.propDecorators = {
          counter: [{ type: i.G, args: ["countValue"] }],
          type: [{ type: i.G, args: ["counterType"] }],
          token: [{ type: i.G, args: ["token"] }],
          pid: [{ type: i.G, args: ["pid"] }],
        }),
        (U = Object(s.a)(
          [
            Object(i.n)({
              selector: "app-countdown-timer",
              template: "{{counter | formatTime}}\n",
              styles: [""],
            }),
          ],
          U
        ));
      let $ = class {
        transform(e) {
          const t = Math.floor(e / 60);
          return (
            ("00" + t).slice(-2) +
            ":" +
            ("00" + Math.floor(e - 60 * t)).slice(-2)
          );
        }
      };
      $ = Object(s.a)([Object(i.W)({ name: "formatTime" })], $);
      var q = n("jCJ1");
      let W = class {};
      W = Object(s.a)(
        [
          Object(i.L)({
            declarations: [
              o.a,
              l,
              c,
              u,
              d,
              y,
              v,
              b,
              x,
              _,
              C,
              S,
              E,
              P,
              j,
              N,
              F,
              V,
              U,
              $,
            ],
            imports: [r.b, a.b, h.a, p.a, m.d, f.a, g.a, w.a, O.f, O.l, q.b],
            exports: [o.a, h.a, p.a, m.d, f.a, g.a],
          }),
        ],
        W
      );
    },
    w1tV: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return f;
      });
      var s = n("XNiG"),
        i = n("HDdC"),
        r = n("7o/Q"),
        o = n("quSY");
      function a() {
        return function (e) {
          return e.lift(new l(e));
        };
      }
      class l {
        constructor(e) {
          this.connectable = e;
        }
        call(e, t) {
          const { connectable: n } = this;
          n._refCount++;
          const s = new c(e, n),
            i = t.subscribe(s);
          return s.closed || (s.connection = n.connect()), i;
        }
      }
      class c extends r.a {
        constructor(e, t) {
          super(e), (this.connectable = t);
        }
        _unsubscribe() {
          const { connectable: e } = this;
          if (!e) return void (this.connection = null);
          this.connectable = null;
          const t = e._refCount;
          if (t <= 0) return void (this.connection = null);
          if (((e._refCount = t - 1), t > 1))
            return void (this.connection = null);
          const { connection: n } = this,
            s = e._connection;
          (this.connection = null), !s || (n && s !== n) || s.unsubscribe();
        }
      }
      class u extends i.a {
        constructor(e, t) {
          super(),
            (this.source = e),
            (this.subjectFactory = t),
            (this._refCount = 0),
            (this._isComplete = !1);
        }
        _subscribe(e) {
          return this.getSubject().subscribe(e);
        }
        getSubject() {
          const e = this._subject;
          return (
            (e && !e.isStopped) || (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        connect() {
          let e = this._connection;
          return (
            e ||
              ((this._isComplete = !1),
              (e = this._connection = new o.a()),
              e.add(this.source.subscribe(new h(this.getSubject(), this))),
              e.closed && ((this._connection = null), (e = o.a.EMPTY))),
            e
          );
        }
        refCount() {
          return a()(this);
        }
      }
      const d = (() => {
        const e = u.prototype;
        return {
          operator: { value: null },
          _refCount: { value: 0, writable: !0 },
          _subject: { value: null, writable: !0 },
          _connection: { value: null, writable: !0 },
          _subscribe: { value: e._subscribe },
          _isComplete: { value: e._isComplete, writable: !0 },
          getSubject: { value: e.getSubject },
          connect: { value: e.connect },
          refCount: { value: e.refCount },
        };
      })();
      class h extends s.b {
        constructor(e, t) {
          super(e), (this.connectable = t);
        }
        _error(e) {
          this._unsubscribe(), super._error(e);
        }
        _complete() {
          (this.connectable._isComplete = !0),
            this._unsubscribe(),
            super._complete();
        }
        _unsubscribe() {
          const e = this.connectable;
          if (e) {
            this.connectable = null;
            const t = e._connection;
            (e._refCount = 0),
              (e._subject = null),
              (e._connection = null),
              t && t.unsubscribe();
          }
        }
      }
      r.a;
      class p {
        constructor(e, t) {
          (this.subjectFactory = e), (this.selector = t);
        }
        call(e, t) {
          const { selector: n } = this,
            s = this.subjectFactory(),
            i = n(s).subscribe(e);
          return i.add(t.subscribe(s)), i;
        }
      }
      function m() {
        return new s.a();
      }
      function f() {
        return (e) => {
          return a()(
            ((t = m),
            function (e) {
              let s;
              if (
                ((s =
                  "function" == typeof t
                    ? t
                    : function () {
                        return t;
                      }),
                "function" == typeof n)
              )
                return e.lift(new p(s, n));
              const i = Object.create(e, d);
              return (i.source = e), (i.subjectFactory = s), i;
            })(e)
          );
          var t, n;
        };
      }
    },
    xKP8: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return l;
      });
      var s = n("mrSG"),
        i = n("b6Qw"),
        r = n("fXoL"),
        o = n("tk/3"),
        a = n("AytR");
      let l = class {
        constructor(e, t) {
          (this.httpClient = e),
            (this.cookieService = t),
            (this.liveClassProducts = []),
            (this.noLiveClassProducts = []),
            (this.liveClassesPackages = {}),
            (this.noLiveClassesPackages = {}),
            (this.activeClass = "Class 6"),
            (this.activeSubject = "Math,English,Science"),
            (this.selectedProductType = "NL"),
            (this.activePlan = ""),
            (this.basicInfo = {}),
            (this.syllabus = ""),
            (this.utmParams = {}),
            (this.studentsList = []),
            (this.renewStudent = {}),
            (this.apiClass = "6"),
            (this.jwtToken = ""),
            (this.selectPlanDestails = {}),
            (this.onUpdateProduct = new r.x()),
            (this.onUpdateState = new r.x()),
            (this.showStudentSelection = new r.x()),
            (this.onUpdatePackage = new r.x()),
            (this.baseURL = a.a.API_END_POINT);
        }
        updateSelectedProductType(e) {
          this.selectedProductType = e;
        }
        updateClass(e) {
          this.activeClass = e;
        }
        updateSubject(e) {
          this.activeSubject = e;
        }
        updatePlan(e) {
          this.activePlan = e;
        }
        updateState(e) {
          this.onUpdateState.emit(e);
        }
        showPopUp(e) {
          (this.studentsList = e), this.showStudentSelection.emit(!0);
        }
        updateBasicInfo(e, t) {
          this.basicInfo[e] = t;
        }
        updateSyllabus(e) {
          this.syllabus = e;
        }
        updateActiveStudent(e) {
          this.renewStudent = e;
        }
        updateApiClass(e) {
          this.apiClass = e;
        }
        updateJWT(e) {
          this.jwtToken = e;
        }
        updatePackageEmitter() {
          this.onUpdatePackage.emit(!0);
        }
        setUTMParams(e) {
          let t = e.utm_source,
            n = e.utm_term,
            s = e.utm_medium,
            i = e.utm_content,
            r = e.utm_campaign,
            o = e.gclid;
          "yes" != this.cookieService.get("isUtmUpdated")
            ? ((this.utmParams.utm_source = t || "organic"),
              (this.utmParams.utm_medium = s || ""),
              (this.utmParams.utm_campaign = r || ""),
              (this.utmParams.utm_content = i || ""),
              (this.utmParams.utm_term = n || ""),
              (this.utmParams.gclid_Source = o || ""),
              (this.utmParams.utm_source_new = t || "organic"),
              (this.utmParams.utm_term_new = n || ""),
              (this.utmParams.utm_medium_new = s || ""),
              (this.utmParams.utm_content_new = i || ""),
              (this.utmParams.utm_campaign_new = r || ""),
              (this.utmParams.gclid_Source_new = o || ""),
              (t || s || r || i || n || o) &&
                (this.cookieService.set("isUtmUpdated", "yes"),
                this.cookieService.set("utm_source", this.utmParams.utm_source),
                this.cookieService.set("utm_term", this.utmParams.utm_term),
                this.cookieService.set("utm_medium", this.utmParams.utm_medium),
                this.cookieService.set(
                  "utm_content",
                  this.utmParams.utm_content
                ),
                this.cookieService.set(
                  "utm_campaign",
                  this.utmParams.utm_campaign
                ),
                this.cookieService.set(
                  "gclid_Source",
                  this.utmParams.gclid_Source
                )))
            : ((this.utmParams.utm_source = this.cookieService.get("utm_source")
                ? this.cookieService.get("utm_source")
                : "organic"),
              (this.utmParams.utm_medium = this.cookieService.get("utm_medium")
                ? this.cookieService.get("utm_medium")
                : ""),
              (this.utmParams.utm_campaign = this.cookieService.get(
                "utm_campaign"
              )
                ? this.cookieService.get("utm_campaign")
                : ""),
              (this.utmParams.utm_content = this.cookieService.get(
                "utm_content"
              )
                ? this.cookieService.get("utm_content")
                : ""),
              (this.utmParams.utm_term = this.cookieService.get("utm_term")
                ? this.cookieService.get("utm_term")
                : ""),
              (this.utmParams.gclid_Source = this.cookieService.get(
                "gclid_Source"
              )
                ? this.cookieService.get("gclid_Source")
                : ""),
              (this.utmParams.utm_source_new = t || ""),
              (this.utmParams.utm_term_new = n || ""),
              (this.utmParams.utm_medium_new = s || ""),
              (this.utmParams.utm_content_new = i || ""),
              (this.utmParams.utm_campaign_new = r || ""),
              (this.utmParams.gclid_Source_new = o || ""));
        }
        getUTMParams() {
          return this.utmParams;
        }
        getBasicInfo() {
          return this.basicInfo;
        }
        getPackageDataById(e) {
          let t = {};
          if ("" != this.selectedProductType) {
            t =
              "L" === this.selectedProductType
                ? this.liveClassesPackages[this.activeSubject]
                : this.noLiveClassesPackages[this.activeSubject];
            let n = t.filter((t) => t.id == e);
            this.selectPlanDestails = n[0];
          }
          return this.selectPlanDestails;
        }
        getPackages(e) {
          this.updateProductListAndPackage([], [], [], []),
            this.getPackageDataForClass(e).subscribe((e) => {
              if (555 == e.code) {
                let n = e.packageData,
                  s = [],
                  i = [],
                  r = {},
                  o = {};
                for (var t of n) {
                  let e = t.product;
                  if ("L" == t.product_type) {
                    let n = r[e] || [];
                    n.push(t), (r[e] = n), s.push(...e.toString().split(","));
                  } else {
                    let n = o[e] || [];
                    n.push(t), (o[e] = n), i.push(...e.toString().split(","));
                  }
                }
                this.updateProductListAndPackage(
                  [...new Set(s)],
                  [...new Set(i)],
                  r,
                  o
                );
              }
            });
        }
        getPackageDataForClass(e) {
          let t = new FormData();
          t.append("class", e), t.append("user_type_id", "1");
          const n = this.baseURL + "user_api/getAllPackagesApiV2";
          return this.httpClient.post(n, t);
        }
        getUserDetailsByUsername(e) {
          let t = new FormData();
          t.append("username", e);
          const n = this.baseURL + "user_api/getUserDetailsV2";
          return this.httpClient.post(n, t);
        }
        intiateRazorPay() {
          let e = new FormData();
          e.append("parentCountryCode", this.basicInfo.contryCode),
            e.append("countryListVal", this.basicInfo.countryName),
            e.append("parentMob", this.basicInfo.phone),
            e.append("curriculum", this.syllabus),
            e.append("parentName", this.basicInfo.parentName),
            e.append("parentEmail", this.basicInfo.parentEmail),
            e.append("studentName", this.basicInfo.studentName),
            e.append("grade", this.getClassId(this.activeClass)),
            e.append("package_id", this.activePlan),
            e.append("isSubscription", this.selectPlanDestails.is_autorenew),
            "Y" == this.basicInfo.promocode_applied &&
              (e.append("promoCodeApplied", "Y"),
              e.append("promoCode", this.basicInfo.promoCode)),
            "true" == this.basicInfo.isRenewStudent &&
              e.append("username", this.basicInfo.username),
            e.append("utm_source", this.utmParams.utm_source),
            e.append("utm_medium", this.utmParams.utm_medium),
            e.append("utm_campaign", this.utmParams.utm_campaign),
            e.append("utm_term", this.utmParams.utm_term),
            e.append("utm_content", this.utmParams.utm_content),
            e.append("gclid_Source", this.utmParams.gclid_Source),
            e.append("utm_source_new", this.utmParams.utm_source_new),
            e.append("utm_term_new", this.utmParams.utm_term_new),
            e.append("utm_medium_new", this.utmParams.utm_medium_new),
            e.append("utm_content_new", this.utmParams.utm_content_new),
            e.append("utm_campaign_new", this.utmParams.utm_campaign_new),
            e.append("gclid_Source_new", this.utmParams.gclid_Source_new);
          const t = this.baseURL + "user_api/initiateRazorPay";
          return this.httpClient.post(t, e);
        }
        updateRazorPayResponse(e, t, n) {
          let s = new FormData();
          s.append("paymentId", e),
            "1" == n && s.append("subscriptionId", t),
            s.append("curriculum", this.syllabus),
            s.append("userName", this.basicInfo.userName),
            s.append("parentMob", this.basicInfo.phone),
            s.append("parentCountryCode", this.basicInfo.contryCode),
            s.append("whatsAppConsent", this.basicInfo.whatsAppConsent),
            s.append("orderId", t);
          const i = this.baseURL + "user_api/updateRazorPayResponse";
          return this.httpClient.post(i, s);
        }
        validatePromocode(e) {
          let t = new FormData();
          t.append("package_id", this.activePlan),
            t.append("promo_code", e),
            t.append("user_type_id", "1");
          const n = this.baseURL + "user_api/validate_promo_code_apiV2";
          return this.httpClient.post(n, t);
        }
        getJwtToken(e, t) {
          let n = new FormData();
          n.append("hashKey", "YWNlbG90U3R1ZGVudA=="),
            n.append("PID", t),
            n.append("username", e),
            n.append("Auth", "VendorSecret");
          const s = this.baseURL + "user_api/StudentSignInFromClient";
          return this.httpClient.post(s, n);
        }
        updateProductListAndPackage(e, t, n, s) {
          if (3 == t.length) {
            "Math,Science,English" == t.join(",") &&
              (t = ["Math", "English", "Science"]);
          }
          (this.liveClassProducts = e),
            (this.noLiveClassProducts = t),
            (this.liveClassesPackages = n),
            (this.noLiveClassesPackages = s),
            this.onUpdateProduct.emit({
              liveClassProducts: this.liveClassProducts.slice(),
              noLiveClassProducts: this.noLiveClassProducts.slice(),
              liveClassPackages: this.liveClassesPackages,
              noLiveClassPackages: this.noLiveClassesPackages,
            });
        }
        getClassId(e) {
          switch (e) {
            case "Class 1":
              return "1";
            case "Class 2":
              return "2";
            case "Class 3":
              return "3";
            case "Class 4":
              return "4";
            case "Class 5":
              return "5";
            case "Class 6":
              return "6";
            case "Class 7":
              return "7";
            case "Class 8":
              return "8";
            case "Class 9":
              return "9";
            case "Class 10":
              return "10";
            default:
              return "1";
          }
        }
      };
      (l.ctorParameters = () => [{ type: o.b }, { type: i.a }]),
        (l = Object(s.a)([Object(r.D)({ providedIn: "root" })], l));
    },
    xdV4: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var s = n("mrSG"),
        i = n("fXoL");
      let r = class {
        constructor() {}
        get nativeWindow() {
          return window;
        }
      };
      (r.ctorParameters = () => []),
        (r = Object(s.a)([Object(i.D)({ providedIn: "root" })], r));
    },
    xgIS: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return a;
      });
      var s = n("HDdC"),
        i = n("DH7j"),
        r = n("n6bG"),
        o = n("lJxs");
      Object.prototype.toString;
      function a(e, t, n, c) {
        return (
          Object(r.a)(n) && ((c = n), (n = void 0)),
          c
            ? a(e, t, n).pipe(
                Object(o.a)((e) => (Object(i.a)(e) ? c(...e) : c(e)))
              )
            : new s.a((s) => {
                l(
                  e,
                  t,
                  function (e) {
                    arguments.length > 1
                      ? s.next(Array.prototype.slice.call(arguments))
                      : s.next(e);
                  },
                  s,
                  n
                );
              })
        );
      }
      function l(e, t, n, s, i) {
        let r;
        if (
          (function (e) {
            return (
              e &&
              "function" == typeof e.addEventListener &&
              "function" == typeof e.removeEventListener
            );
          })(e)
        ) {
          const s = e;
          e.addEventListener(t, n, i),
            (r = () => s.removeEventListener(t, n, i));
        } else if (
          (function (e) {
            return e && "function" == typeof e.on && "function" == typeof e.off;
          })(e)
        ) {
          const s = e;
          e.on(t, n), (r = () => s.off(t, n));
        } else if (
          (function (e) {
            return (
              e &&
              "function" == typeof e.addListener &&
              "function" == typeof e.removeListener
            );
          })(e)
        ) {
          const s = e;
          e.addListener(t, n), (r = () => s.removeListener(t, n));
        } else {
          if (!e || !e.length) throw new TypeError("Invalid event target");
          for (let r = 0, o = e.length; r < o; r++) l(e[r], t, n, s, i);
        }
        s.add(r);
      }
    },
    yCtX: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var s = n("HDdC"),
        i = n("ngJS"),
        r = n("jZKg");
      function o(e, t) {
        return t ? Object(r.a)(e, t) : new s.a(Object(i.a)(e));
      }
    },
    "z+Ro": function (e, t, n) {
      "use strict";
      function s(e) {
        return e && "function" == typeof e.schedule;
      }
      n.d(t, "a", function () {
        return s;
      });
    },
    z6cu: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      var s = n("HDdC");
      function i(e, t) {
        return t
          ? new s.a((n) => t.schedule(r, 0, { error: e, subscriber: n }))
          : new s.a((t) => t.error(e));
      }
      function r({ error: e, subscriber: t }) {
        t.error(e);
      }
    },
    zUnb: function (e, t, n) {
      "use strict";
      n.r(t);
      var s,
        i = n("fXoL");
      function r(e) {
        if (":" != e[0]) return [null, e];
        const t = e.indexOf(":", 1);
        if (-1 == t)
          throw new Error(
            `Unsupported format "${e}" expecting ":namespace:name"`
          );
        return [e.slice(1, t), e.slice(t + 1)];
      }
      function o(e) {
        return "ng-container" === r(e)[1];
      }
      function a(e) {
        return "ng-content" === r(e)[1];
      }
      function l(e) {
        return "ng-template" === r(e)[1];
      }
      function c(e) {
        return null === e ? null : r(e)[0];
      }
      function u(e, t) {
        return e ? `:${e}:${t}` : t;
      }
      !(function (e) {
        (e[(e.RAW_TEXT = 0)] = "RAW_TEXT"),
          (e[(e.ESCAPABLE_RAW_TEXT = 1)] = "ESCAPABLE_RAW_TEXT"),
          (e[(e.PARSABLE_DATA = 2)] = "PARSABLE_DATA");
      })(s || (s = {}));
      const d = {
        Aacute: "\xc1",
        aacute: "\xe1",
        Acirc: "\xc2",
        acirc: "\xe2",
        acute: "\xb4",
        AElig: "\xc6",
        aelig: "\xe6",
        Agrave: "\xc0",
        agrave: "\xe0",
        alefsym: "\u2135",
        Alpha: "\u0391",
        alpha: "\u03b1",
        amp: "&",
        and: "\u2227",
        ang: "\u2220",
        apos: "'",
        Aring: "\xc5",
        aring: "\xe5",
        asymp: "\u2248",
        Atilde: "\xc3",
        atilde: "\xe3",
        Auml: "\xc4",
        auml: "\xe4",
        bdquo: "\u201e",
        Beta: "\u0392",
        beta: "\u03b2",
        brvbar: "\xa6",
        bull: "\u2022",
        cap: "\u2229",
        Ccedil: "\xc7",
        ccedil: "\xe7",
        cedil: "\xb8",
        cent: "\xa2",
        Chi: "\u03a7",
        chi: "\u03c7",
        circ: "\u02c6",
        clubs: "\u2663",
        cong: "\u2245",
        copy: "\xa9",
        crarr: "\u21b5",
        cup: "\u222a",
        curren: "\xa4",
        dagger: "\u2020",
        Dagger: "\u2021",
        darr: "\u2193",
        dArr: "\u21d3",
        deg: "\xb0",
        Delta: "\u0394",
        delta: "\u03b4",
        diams: "\u2666",
        divide: "\xf7",
        Eacute: "\xc9",
        eacute: "\xe9",
        Ecirc: "\xca",
        ecirc: "\xea",
        Egrave: "\xc8",
        egrave: "\xe8",
        empty: "\u2205",
        emsp: "\u2003",
        ensp: "\u2002",
        Epsilon: "\u0395",
        epsilon: "\u03b5",
        equiv: "\u2261",
        Eta: "\u0397",
        eta: "\u03b7",
        ETH: "\xd0",
        eth: "\xf0",
        Euml: "\xcb",
        euml: "\xeb",
        euro: "\u20ac",
        exist: "\u2203",
        fnof: "\u0192",
        forall: "\u2200",
        frac12: "\xbd",
        frac14: "\xbc",
        frac34: "\xbe",
        frasl: "\u2044",
        Gamma: "\u0393",
        gamma: "\u03b3",
        ge: "\u2265",
        gt: ">",
        harr: "\u2194",
        hArr: "\u21d4",
        hearts: "\u2665",
        hellip: "\u2026",
        Iacute: "\xcd",
        iacute: "\xed",
        Icirc: "\xce",
        icirc: "\xee",
        iexcl: "\xa1",
        Igrave: "\xcc",
        igrave: "\xec",
        image: "\u2111",
        infin: "\u221e",
        int: "\u222b",
        Iota: "\u0399",
        iota: "\u03b9",
        iquest: "\xbf",
        isin: "\u2208",
        Iuml: "\xcf",
        iuml: "\xef",
        Kappa: "\u039a",
        kappa: "\u03ba",
        Lambda: "\u039b",
        lambda: "\u03bb",
        lang: "\u27e8",
        laquo: "\xab",
        larr: "\u2190",
        lArr: "\u21d0",
        lceil: "\u2308",
        ldquo: "\u201c",
        le: "\u2264",
        lfloor: "\u230a",
        lowast: "\u2217",
        loz: "\u25ca",
        lrm: "\u200e",
        lsaquo: "\u2039",
        lsquo: "\u2018",
        lt: "<",
        macr: "\xaf",
        mdash: "\u2014",
        micro: "\xb5",
        middot: "\xb7",
        minus: "\u2212",
        Mu: "\u039c",
        mu: "\u03bc",
        nabla: "\u2207",
        nbsp: "\xa0",
        ndash: "\u2013",
        ne: "\u2260",
        ni: "\u220b",
        not: "\xac",
        notin: "\u2209",
        nsub: "\u2284",
        Ntilde: "\xd1",
        ntilde: "\xf1",
        Nu: "\u039d",
        nu: "\u03bd",
        Oacute: "\xd3",
        oacute: "\xf3",
        Ocirc: "\xd4",
        ocirc: "\xf4",
        OElig: "\u0152",
        oelig: "\u0153",
        Ograve: "\xd2",
        ograve: "\xf2",
        oline: "\u203e",
        Omega: "\u03a9",
        omega: "\u03c9",
        Omicron: "\u039f",
        omicron: "\u03bf",
        oplus: "\u2295",
        or: "\u2228",
        ordf: "\xaa",
        ordm: "\xba",
        Oslash: "\xd8",
        oslash: "\xf8",
        Otilde: "\xd5",
        otilde: "\xf5",
        otimes: "\u2297",
        Ouml: "\xd6",
        ouml: "\xf6",
        para: "\xb6",
        permil: "\u2030",
        perp: "\u22a5",
        Phi: "\u03a6",
        phi: "\u03c6",
        Pi: "\u03a0",
        pi: "\u03c0",
        piv: "\u03d6",
        plusmn: "\xb1",
        pound: "\xa3",
        prime: "\u2032",
        Prime: "\u2033",
        prod: "\u220f",
        prop: "\u221d",
        Psi: "\u03a8",
        psi: "\u03c8",
        quot: '"',
        radic: "\u221a",
        rang: "\u27e9",
        raquo: "\xbb",
        rarr: "\u2192",
        rArr: "\u21d2",
        rceil: "\u2309",
        rdquo: "\u201d",
        real: "\u211c",
        reg: "\xae",
        rfloor: "\u230b",
        Rho: "\u03a1",
        rho: "\u03c1",
        rlm: "\u200f",
        rsaquo: "\u203a",
        rsquo: "\u2019",
        sbquo: "\u201a",
        Scaron: "\u0160",
        scaron: "\u0161",
        sdot: "\u22c5",
        sect: "\xa7",
        shy: "\xad",
        Sigma: "\u03a3",
        sigma: "\u03c3",
        sigmaf: "\u03c2",
        sim: "\u223c",
        spades: "\u2660",
        sub: "\u2282",
        sube: "\u2286",
        sum: "\u2211",
        sup: "\u2283",
        sup1: "\xb9",
        sup2: "\xb2",
        sup3: "\xb3",
        supe: "\u2287",
        szlig: "\xdf",
        Tau: "\u03a4",
        tau: "\u03c4",
        there4: "\u2234",
        Theta: "\u0398",
        theta: "\u03b8",
        thetasym: "\u03d1",
        thinsp: "\u2009",
        THORN: "\xde",
        thorn: "\xfe",
        tilde: "\u02dc",
        times: "\xd7",
        trade: "\u2122",
        Uacute: "\xda",
        uacute: "\xfa",
        uarr: "\u2191",
        uArr: "\u21d1",
        Ucirc: "\xdb",
        ucirc: "\xfb",
        Ugrave: "\xd9",
        ugrave: "\xf9",
        uml: "\xa8",
        upsih: "\u03d2",
        Upsilon: "\u03a5",
        upsilon: "\u03c5",
        Uuml: "\xdc",
        uuml: "\xfc",
        weierp: "\u2118",
        Xi: "\u039e",
        xi: "\u03be",
        Yacute: "\xdd",
        yacute: "\xfd",
        yen: "\xa5",
        yuml: "\xff",
        Yuml: "\u0178",
        Zeta: "\u0396",
        zeta: "\u03b6",
        zwj: "\u200d",
        zwnj: "\u200c",
      };
      d.ngsp = "\ue500";
      class h {
        constructor({
          closedByChildren: e,
          implicitNamespacePrefix: t,
          contentType: n = s.PARSABLE_DATA,
          closedByParent: i = !1,
          isVoid: r = !1,
          ignoreFirstLf: o = !1,
          preventNamespaceInheritance: a = !1,
        } = {}) {
          (this.closedByChildren = {}),
            (this.closedByParent = !1),
            (this.canSelfClose = !1),
            e &&
              e.length > 0 &&
              e.forEach((e) => (this.closedByChildren[e] = !0)),
            (this.isVoid = r),
            (this.closedByParent = i || r),
            (this.implicitNamespacePrefix = t || null),
            (this.contentType = n),
            (this.ignoreFirstLf = o),
            (this.preventNamespaceInheritance = a);
        }
        isClosedByChild(e) {
          return this.isVoid || e.toLowerCase() in this.closedByChildren;
        }
      }
      let p, m;
      function f(e) {
        var t, n;
        return (
          m ||
            ((p = new h()),
            (m = {
              base: new h({ isVoid: !0 }),
              meta: new h({ isVoid: !0 }),
              area: new h({ isVoid: !0 }),
              embed: new h({ isVoid: !0 }),
              link: new h({ isVoid: !0 }),
              img: new h({ isVoid: !0 }),
              input: new h({ isVoid: !0 }),
              param: new h({ isVoid: !0 }),
              hr: new h({ isVoid: !0 }),
              br: new h({ isVoid: !0 }),
              source: new h({ isVoid: !0 }),
              track: new h({ isVoid: !0 }),
              wbr: new h({ isVoid: !0 }),
              p: new h({
                closedByChildren: [
                  "address",
                  "article",
                  "aside",
                  "blockquote",
                  "div",
                  "dl",
                  "fieldset",
                  "footer",
                  "form",
                  "h1",
                  "h2",
                  "h3",
                  "h4",
                  "h5",
                  "h6",
                  "header",
                  "hgroup",
                  "hr",
                  "main",
                  "nav",
                  "ol",
                  "p",
                  "pre",
                  "section",
                  "table",
                  "ul",
                ],
                closedByParent: !0,
              }),
              thead: new h({ closedByChildren: ["tbody", "tfoot"] }),
              tbody: new h({
                closedByChildren: ["tbody", "tfoot"],
                closedByParent: !0,
              }),
              tfoot: new h({ closedByChildren: ["tbody"], closedByParent: !0 }),
              tr: new h({ closedByChildren: ["tr"], closedByParent: !0 }),
              td: new h({ closedByChildren: ["td", "th"], closedByParent: !0 }),
              th: new h({ closedByChildren: ["td", "th"], closedByParent: !0 }),
              col: new h({ isVoid: !0 }),
              svg: new h({ implicitNamespacePrefix: "svg" }),
              foreignObject: new h({
                implicitNamespacePrefix: "svg",
                preventNamespaceInheritance: !0,
              }),
              math: new h({ implicitNamespacePrefix: "math" }),
              li: new h({ closedByChildren: ["li"], closedByParent: !0 }),
              dt: new h({ closedByChildren: ["dt", "dd"] }),
              dd: new h({ closedByChildren: ["dt", "dd"], closedByParent: !0 }),
              rb: new h({
                closedByChildren: ["rb", "rt", "rtc", "rp"],
                closedByParent: !0,
              }),
              rt: new h({
                closedByChildren: ["rb", "rt", "rtc", "rp"],
                closedByParent: !0,
              }),
              rtc: new h({
                closedByChildren: ["rb", "rtc", "rp"],
                closedByParent: !0,
              }),
              rp: new h({
                closedByChildren: ["rb", "rt", "rtc", "rp"],
                closedByParent: !0,
              }),
              optgroup: new h({
                closedByChildren: ["optgroup"],
                closedByParent: !0,
              }),
              option: new h({
                closedByChildren: ["option", "optgroup"],
                closedByParent: !0,
              }),
              pre: new h({ ignoreFirstLf: !0 }),
              listing: new h({ ignoreFirstLf: !0 }),
              style: new h({ contentType: s.RAW_TEXT }),
              script: new h({ contentType: s.RAW_TEXT }),
              title: new h({ contentType: s.ESCAPABLE_RAW_TEXT }),
              textarea: new h({
                contentType: s.ESCAPABLE_RAW_TEXT,
                ignoreFirstLf: !0,
              }),
            })),
          null !==
            (n =
              null !== (t = m[e]) && void 0 !== t ? t : m[e.toLowerCase()]) &&
          void 0 !== n
            ? n
            : p
        );
      }
      const g = new RegExp(
        "(\\:not\\()|(([\\.\\#]?)[-\\w]+)|(?:\\[([-.\\w*]+)(?:=([\"']?)([^\\]\"']*)\\5)?\\])|(\\))|(\\s*,\\s*)",
        "g"
      );
      class y {
        constructor() {
          (this.element = null),
            (this.classNames = []),
            (this.attrs = []),
            (this.notSelectors = []);
        }
        static parse(e) {
          const t = [],
            n = (e, t) => {
              t.notSelectors.length > 0 &&
                !t.element &&
                0 == t.classNames.length &&
                0 == t.attrs.length &&
                (t.element = "*"),
                e.push(t);
            };
          let s,
            i = new y(),
            r = i,
            o = !1;
          for (g.lastIndex = 0; (s = g.exec(e)); ) {
            if (s[1]) {
              if (o)
                throw new Error("Nesting :not in a selector is not allowed");
              (o = !0), (r = new y()), i.notSelectors.push(r);
            }
            const e = s[2];
            if (e) {
              const t = s[3];
              "#" === t
                ? r.addAttribute("id", e.substr(1))
                : "." === t
                ? r.addClassName(e.substr(1))
                : r.setElement(e);
            }
            const a = s[4];
            if (
              (a && r.addAttribute(a, s[6]), s[7] && ((o = !1), (r = i)), s[8])
            ) {
              if (o)
                throw new Error("Multiple selectors in :not are not supported");
              n(t, i), (i = r = new y());
            }
          }
          return n(t, i), t;
        }
        isElementSelector() {
          return (
            this.hasElementSelector() &&
            0 == this.classNames.length &&
            0 == this.attrs.length &&
            0 === this.notSelectors.length
          );
        }
        hasElementSelector() {
          return !!this.element;
        }
        setElement(e = null) {
          this.element = e;
        }
        getMatchingElementTemplate() {
          const e = this.element || "div",
            t =
              this.classNames.length > 0
                ? ` class="${this.classNames.join(" ")}"`
                : "";
          let n = "";
          for (let s = 0; s < this.attrs.length; s += 2) {
            n += ` ${this.attrs[s]}${
              "" !== this.attrs[s + 1] ? `="${this.attrs[s + 1]}"` : ""
            }`;
          }
          return f(e).isVoid ? `<${e}${t}${n}/>` : `<${e}${t}${n}></${e}>`;
        }
        getAttrs() {
          const e = [];
          return (
            this.classNames.length > 0 &&
              e.push("class", this.classNames.join(" ")),
            e.concat(this.attrs)
          );
        }
        addAttribute(e, t = "") {
          this.attrs.push(e, (t && t.toLowerCase()) || "");
        }
        addClassName(e) {
          this.classNames.push(e.toLowerCase());
        }
        toString() {
          let e = this.element || "";
          if (
            (this.classNames && this.classNames.forEach((t) => (e += "." + t)),
            this.attrs)
          )
            for (let t = 0; t < this.attrs.length; t += 2) {
              const n = this.attrs[t],
                s = this.attrs[t + 1];
              e += `[${n}${s ? "=" + s : ""}]`;
            }
          return this.notSelectors.forEach((t) => (e += `:not(${t})`)), e;
        }
      }
      class v {
        constructor() {
          (this._elementMap = new Map()),
            (this._elementPartialMap = new Map()),
            (this._classMap = new Map()),
            (this._classPartialMap = new Map()),
            (this._attrValueMap = new Map()),
            (this._attrValuePartialMap = new Map()),
            (this._listContexts = []);
        }
        static createNotMatcher(e) {
          const t = new v();
          return t.addSelectables(e, null), t;
        }
        addSelectables(e, t) {
          let n = null;
          e.length > 1 && ((n = new b(e)), this._listContexts.push(n));
          for (let s = 0; s < e.length; s++) this._addSelectable(e[s], t, n);
        }
        _addSelectable(e, t, n) {
          let s = this;
          const i = e.element,
            r = e.classNames,
            o = e.attrs,
            a = new x(e, t, n);
          if (i) {
            0 === o.length && 0 === r.length
              ? this._addTerminal(s._elementMap, i, a)
              : (s = this._addPartial(s._elementPartialMap, i));
          }
          if (r)
            for (let l = 0; l < r.length; l++) {
              const e = 0 === o.length && l === r.length - 1,
                t = r[l];
              e
                ? this._addTerminal(s._classMap, t, a)
                : (s = this._addPartial(s._classPartialMap, t));
            }
          if (o)
            for (let l = 0; l < o.length; l += 2) {
              const e = l === o.length - 2,
                t = o[l],
                n = o[l + 1];
              if (e) {
                const e = s._attrValueMap;
                let i = e.get(t);
                i || ((i = new Map()), e.set(t, i)), this._addTerminal(i, n, a);
              } else {
                const e = s._attrValuePartialMap;
                let i = e.get(t);
                i || ((i = new Map()), e.set(t, i)),
                  (s = this._addPartial(i, n));
              }
            }
        }
        _addTerminal(e, t, n) {
          let s = e.get(t);
          s || ((s = []), e.set(t, s)), s.push(n);
        }
        _addPartial(e, t) {
          let n = e.get(t);
          return n || ((n = new v()), e.set(t, n)), n;
        }
        match(e, t) {
          let n = !1;
          const s = e.element,
            i = e.classNames,
            r = e.attrs;
          for (let o = 0; o < this._listContexts.length; o++)
            this._listContexts[o].alreadyMatched = !1;
          if (
            ((n = this._matchTerminal(this._elementMap, s, e, t) || n),
            (n = this._matchPartial(this._elementPartialMap, s, e, t) || n),
            i)
          )
            for (let o = 0; o < i.length; o++) {
              const s = i[o];
              (n = this._matchTerminal(this._classMap, s, e, t) || n),
                (n = this._matchPartial(this._classPartialMap, s, e, t) || n);
            }
          if (r)
            for (let o = 0; o < r.length; o += 2) {
              const s = r[o],
                i = r[o + 1],
                a = this._attrValueMap.get(s);
              i && (n = this._matchTerminal(a, "", e, t) || n),
                (n = this._matchTerminal(a, i, e, t) || n);
              const l = this._attrValuePartialMap.get(s);
              i && (n = this._matchPartial(l, "", e, t) || n),
                (n = this._matchPartial(l, i, e, t) || n);
            }
          return n;
        }
        _matchTerminal(e, t, n, s) {
          if (!e || "string" != typeof t) return !1;
          let i = e.get(t) || [];
          const r = e.get("*");
          if ((r && (i = i.concat(r)), 0 === i.length)) return !1;
          let o,
            a = !1;
          for (let l = 0; l < i.length; l++)
            (o = i[l]), (a = o.finalize(n, s) || a);
          return a;
        }
        _matchPartial(e, t, n, s) {
          if (!e || "string" != typeof t) return !1;
          const i = e.get(t);
          return !!i && i.match(n, s);
        }
      }
      class b {
        constructor(e) {
          (this.selectors = e), (this.alreadyMatched = !1);
        }
      }
      class x {
        constructor(e, t, n) {
          (this.selector = e),
            (this.cbContext = t),
            (this.listContext = n),
            (this.notSelectors = e.notSelectors);
        }
        finalize(e, t) {
          let n = !0;
          if (
            this.notSelectors.length > 0 &&
            (!this.listContext || !this.listContext.alreadyMatched)
          ) {
            n = !v.createNotMatcher(this.notSelectors).match(e, null);
          }
          return (
            !n ||
              !t ||
              (this.listContext && this.listContext.alreadyMatched) ||
              (this.listContext && (this.listContext.alreadyMatched = !0),
              t(this.selector, this.cbContext)),
            n
          );
        }
      }
      const _ = Y("Inject", (e) => ({ token: e })),
        w = Y("InjectionToken", (e) => ({ _desc: e, "\u0275prov": void 0 })),
        C = Y("Attribute", (e) => ({ attributeName: e })),
        S = Y("ContentChildren", (e, t = {}) =>
          Object.assign(
            { selector: e, first: !1, isViewQuery: !1, descendants: !1 },
            t
          )
        ),
        E = Y("ContentChild", (e, t = {}) =>
          Object.assign(
            { selector: e, first: !0, isViewQuery: !1, descendants: !0 },
            t
          )
        ),
        k = Y("ViewChildren", (e, t = {}) =>
          Object.assign(
            { selector: e, first: !1, isViewQuery: !0, descendants: !0 },
            t
          )
        ),
        O = Y("ViewChild", (e, t) =>
          Object.assign(
            { selector: e, first: !0, isViewQuery: !0, descendants: !0 },
            t
          )
        ),
        I = Y("Directive", (e = {}) => e);
      var T, A;
      !(function (e) {
        (e[(e.Emulated = 0)] = "Emulated"),
          (e[(e.None = 2)] = "None"),
          (e[(e.ShadowDom = 3)] = "ShadowDom");
      })(T || (T = {})),
        (function (e) {
          (e[(e.OnPush = 0)] = "OnPush"), (e[(e.Default = 1)] = "Default");
        })(A || (A = {}));
      const D = Y("Component", (e = {}) =>
          Object.assign({ changeDetection: A.Default }, e)
        ),
        M = Y("Pipe", (e) => Object.assign({ pure: !0 }, e)),
        P = Y("Input", (e) => ({ bindingPropertyName: e })),
        R = Y("Output", (e) => ({ bindingPropertyName: e })),
        j = Y("HostBinding", (e) => ({ hostPropertyName: e })),
        N = Y("HostListener", (e, t) => ({ eventName: e, args: t })),
        F = Y("NgModule", (e) => e),
        L = Y("Injectable", (e = {}) => e),
        V = { name: "custom-elements" },
        B = { name: "no-errors-schema" },
        z = Y("Optional"),
        H = Y("Self"),
        G = Y("SkipSelf"),
        U = Y("Host"),
        $ = Function;
      var q, W;
      function Y(e, t) {
        function n(...n) {
          const s = t ? t(...n) : {};
          return Object.assign({ ngMetadataName: e }, s);
        }
        return (
          (n.isTypeOf = (t) => t && t.ngMetadataName === e),
          (n.ngMetadataName = e),
          n
        );
      }
      function Q(e) {
        const t = (function (e) {
            const t =
              e.classNames && e.classNames.length ? [8, ...e.classNames] : [];
            return [
              e.element && "*" !== e.element ? e.element : "",
              ...e.attrs,
              ...t,
            ];
          })(e),
          n =
            e.notSelectors && e.notSelectors.length
              ? e.notSelectors.map((e) =>
                  (function (e) {
                    const t =
                      e.classNames && e.classNames.length
                        ? [8, ...e.classNames]
                        : [];
                    return e.element
                      ? [5, e.element, ...e.attrs, ...t]
                      : e.attrs.length
                      ? [3, ...e.attrs, ...t]
                      : e.classNames && e.classNames.length
                      ? [9, ...e.classNames]
                      : [];
                  })(e)
                )
              : [];
        return t.concat(...n);
      }
      function K(e) {
        return e ? y.parse(e).map(Q) : [];
      }
      !(function (e) {
        (e[(e.NONE = 0)] = "NONE"),
          (e[(e.HTML = 1)] = "HTML"),
          (e[(e.STYLE = 2)] = "STYLE"),
          (e[(e.SCRIPT = 3)] = "SCRIPT"),
          (e[(e.URL = 4)] = "URL"),
          (e[(e.RESOURCE_URL = 5)] = "RESOURCE_URL");
      })(q || (q = {})),
        (function (e) {
          (e[(e.Error = 0)] = "Error"),
            (e[(e.Warning = 1)] = "Warning"),
            (e[(e.Ignore = 2)] = "Ignore");
        })(W || (W = {}));
      var J, X;
      !(function (e) {
        e[(e.Const = 0)] = "Const";
      })(J || (J = {}));
      class Z {
        constructor(e = []) {
          this.modifiers = e;
        }
        hasModifier(e) {
          return -1 !== this.modifiers.indexOf(e);
        }
      }
      !(function (e) {
        (e[(e.Dynamic = 0)] = "Dynamic"),
          (e[(e.Bool = 1)] = "Bool"),
          (e[(e.String = 2)] = "String"),
          (e[(e.Int = 3)] = "Int"),
          (e[(e.Number = 4)] = "Number"),
          (e[(e.Function = 5)] = "Function"),
          (e[(e.Inferred = 6)] = "Inferred"),
          (e[(e.None = 7)] = "None");
      })(X || (X = {}));
      class ee extends Z {
        constructor(e, t) {
          super(t), (this.name = e);
        }
        visitType(e, t) {
          return e.visitBuiltinType(this, t);
        }
      }
      class te extends Z {
        constructor(e, t, n = null) {
          super(t), (this.value = e), (this.typeParams = n);
        }
        visitType(e, t) {
          return e.visitExpressionType(this, t);
        }
      }
      class ne extends Z {
        constructor(e, t) {
          super(t), (this.of = e);
        }
        visitType(e, t) {
          return e.visitArrayType(this, t);
        }
      }
      class se extends Z {
        constructor(e, t) {
          super(t), (this.valueType = e || null);
        }
        visitType(e, t) {
          return e.visitMapType(this, t);
        }
      }
      const ie = new ee(X.Dynamic),
        re = new ee(X.Inferred),
        oe = new ee(X.Bool),
        ae = (new ee(X.Int), new ee(X.Number)),
        le = new ee(X.String),
        ce = (new ee(X.Function), new ee(X.None));
      var ue, de, he, pe;
      function me(e, t) {
        return null == e || null == t ? e == t : e.isEquivalent(t);
      }
      function fe(e, t) {
        const n = e.length;
        if (n !== t.length) return !1;
        for (let s = 0; s < n; s++) if (!e[s].isEquivalent(t[s])) return !1;
        return !0;
      }
      !(function (e) {
        (e[(e.Minus = 0)] = "Minus"), (e[(e.Plus = 1)] = "Plus");
      })(ue || (ue = {})),
        (function (e) {
          (e[(e.Equals = 0)] = "Equals"),
            (e[(e.NotEquals = 1)] = "NotEquals"),
            (e[(e.Identical = 2)] = "Identical"),
            (e[(e.NotIdentical = 3)] = "NotIdentical"),
            (e[(e.Minus = 4)] = "Minus"),
            (e[(e.Plus = 5)] = "Plus"),
            (e[(e.Divide = 6)] = "Divide"),
            (e[(e.Multiply = 7)] = "Multiply"),
            (e[(e.Modulo = 8)] = "Modulo"),
            (e[(e.And = 9)] = "And"),
            (e[(e.Or = 10)] = "Or"),
            (e[(e.BitwiseAnd = 11)] = "BitwiseAnd"),
            (e[(e.Lower = 12)] = "Lower"),
            (e[(e.LowerEquals = 13)] = "LowerEquals"),
            (e[(e.Bigger = 14)] = "Bigger"),
            (e[(e.BiggerEquals = 15)] = "BiggerEquals");
        })(de || (de = {}));
      class ge {
        constructor(e, t) {
          (this.type = e || null), (this.sourceSpan = t || null);
        }
        prop(e, t) {
          return new Ue(this, e, null, t);
        }
        key(e, t, n) {
          return new $e(this, e, t, n);
        }
        callMethod(e, t, n) {
          return new Ce(this, e, t, null, n);
        }
        callFn(e, t, n) {
          return new Se(this, e, null, t, n);
        }
        instantiate(e, t, n) {
          return new Ee(this, e, t, n);
        }
        conditional(e, t = null, n) {
          return new Ne(this, e, t, null, n);
        }
        equals(e, t) {
          return new Ge(de.Equals, this, e, null, t);
        }
        notEquals(e, t) {
          return new Ge(de.NotEquals, this, e, null, t);
        }
        identical(e, t) {
          return new Ge(de.Identical, this, e, null, t);
        }
        notIdentical(e, t) {
          return new Ge(de.NotIdentical, this, e, null, t);
        }
        minus(e, t) {
          return new Ge(de.Minus, this, e, null, t);
        }
        plus(e, t) {
          return new Ge(de.Plus, this, e, null, t);
        }
        divide(e, t) {
          return new Ge(de.Divide, this, e, null, t);
        }
        multiply(e, t) {
          return new Ge(de.Multiply, this, e, null, t);
        }
        modulo(e, t) {
          return new Ge(de.Modulo, this, e, null, t);
        }
        and(e, t) {
          return new Ge(de.And, this, e, null, t);
        }
        bitwiseAnd(e, t, n = !0) {
          return new Ge(de.BitwiseAnd, this, e, null, t, n);
        }
        or(e, t) {
          return new Ge(de.Or, this, e, null, t);
        }
        lower(e, t) {
          return new Ge(de.Lower, this, e, null, t);
        }
        lowerEquals(e, t) {
          return new Ge(de.LowerEquals, this, e, null, t);
        }
        bigger(e, t) {
          return new Ge(de.Bigger, this, e, null, t);
        }
        biggerEquals(e, t) {
          return new Ge(de.BiggerEquals, this, e, null, t);
        }
        isBlank(e) {
          return this.equals(Je, e);
        }
        cast(e, t) {
          return new Ve(this, e, t);
        }
        toStmt() {
          return new it(this, null);
        }
      }
      !(function (e) {
        (e[(e.This = 0)] = "This"),
          (e[(e.Super = 1)] = "Super"),
          (e[(e.CatchError = 2)] = "CatchError"),
          (e[(e.CatchStack = 3)] = "CatchStack");
      })(he || (he = {}));
      class ye extends ge {
        constructor(e, t, n) {
          super(t, n),
            "string" == typeof e
              ? ((this.name = e), (this.builtin = null))
              : ((this.name = null), (this.builtin = e));
        }
        isEquivalent(e) {
          return (
            e instanceof ye &&
            this.name === e.name &&
            this.builtin === e.builtin
          );
        }
        isConstant() {
          return !1;
        }
        visitExpression(e, t) {
          return e.visitReadVarExpr(this, t);
        }
        set(e) {
          if (!this.name)
            throw new Error(
              `Built in variable ${this.builtin} can not be assigned to.`
            );
          return new xe(this.name, e, null, this.sourceSpan);
        }
      }
      class ve extends ge {
        constructor(e, t, n) {
          super(t, n), (this.expr = e);
        }
        visitExpression(e, t) {
          return e.visitTypeofExpr(this, t);
        }
        isEquivalent(e) {
          return e instanceof ve && e.expr.isEquivalent(this.expr);
        }
        isConstant() {
          return this.expr.isConstant();
        }
      }
      class be extends ge {
        constructor(e, t, n) {
          super(t, n), (this.node = e);
        }
        isEquivalent(e) {
          return e instanceof be && this.node === e.node;
        }
        isConstant() {
          return !1;
        }
        visitExpression(e, t) {
          return e.visitWrappedNodeExpr(this, t);
        }
      }
      class xe extends ge {
        constructor(e, t, n, s) {
          super(n || t.type, s), (this.name = e), (this.value = t);
        }
        isEquivalent(e) {
          return (
            e instanceof xe &&
            this.name === e.name &&
            this.value.isEquivalent(e.value)
          );
        }
        isConstant() {
          return !1;
        }
        visitExpression(e, t) {
          return e.visitWriteVarExpr(this, t);
        }
        toDeclStmt(e, t) {
          return new nt(this.name, this.value, e, t, this.sourceSpan);
        }
        toConstDecl() {
          return this.toDeclStmt(re, [Xe.Final]);
        }
      }
      class _e extends ge {
        constructor(e, t, n, s, i) {
          super(s || n.type, i),
            (this.receiver = e),
            (this.index = t),
            (this.value = n);
        }
        isEquivalent(e) {
          return (
            e instanceof _e &&
            this.receiver.isEquivalent(e.receiver) &&
            this.index.isEquivalent(e.index) &&
            this.value.isEquivalent(e.value)
          );
        }
        isConstant() {
          return !1;
        }
        visitExpression(e, t) {
          return e.visitWriteKeyExpr(this, t);
        }
      }
      class we extends ge {
        constructor(e, t, n, s, i) {
          super(s || n.type, i),
            (this.receiver = e),
            (this.name = t),
            (this.value = n);
        }
        isEquivalent(e) {
          return (
            e instanceof we &&
            this.receiver.isEquivalent(e.receiver) &&
            this.name === e.name &&
            this.value.isEquivalent(e.value)
          );
        }
        isConstant() {
          return !1;
        }
        visitExpression(e, t) {
          return e.visitWritePropExpr(this, t);
        }
      }
      !(function (e) {
        (e[(e.ConcatArray = 0)] = "ConcatArray"),
          (e[(e.SubscribeObservable = 1)] = "SubscribeObservable"),
          (e[(e.Bind = 2)] = "Bind");
      })(pe || (pe = {}));
      class Ce extends ge {
        constructor(e, t, n, s, i) {
          super(s, i),
            (this.receiver = e),
            (this.args = n),
            "string" == typeof t
              ? ((this.name = t), (this.builtin = null))
              : ((this.name = null), (this.builtin = t));
        }
        isEquivalent(e) {
          return (
            e instanceof Ce &&
            this.receiver.isEquivalent(e.receiver) &&
            this.name === e.name &&
            this.builtin === e.builtin &&
            fe(this.args, e.args)
          );
        }
        isConstant() {
          return !1;
        }
        visitExpression(e, t) {
          return e.visitInvokeMethodExpr(this, t);
        }
      }
      class Se extends ge {
        constructor(e, t, n, s, i = !1) {
          super(n, s), (this.fn = e), (this.args = t), (this.pure = i);
        }
        isEquivalent(e) {
          return (
            e instanceof Se &&
            this.fn.isEquivalent(e.fn) &&
            fe(this.args, e.args) &&
            this.pure === e.pure
          );
        }
        isConstant() {
          return !1;
        }
        visitExpression(e, t) {
          return e.visitInvokeFunctionExpr(this, t);
        }
      }
      class Ee extends ge {
        constructor(e, t, n, s) {
          super(n, s), (this.classExpr = e), (this.args = t);
        }
        isEquivalent(e) {
          return (
            e instanceof Ee &&
            this.classExpr.isEquivalent(e.classExpr) &&
            fe(this.args, e.args)
          );
        }
        isConstant() {
          return !1;
        }
        visitExpression(e, t) {
          return e.visitInstantiateExpr(this, t);
        }
      }
      class ke extends ge {
        constructor(e, t, n) {
          super(t, n), (this.value = e);
        }
        isEquivalent(e) {
          return e instanceof ke && this.value === e.value;
        }
        isConstant() {
          return !0;
        }
        visitExpression(e, t) {
          return e.visitLiteralExpr(this, t);
        }
      }
      class Oe {
        constructor(e, t) {
          (this.text = e), (this.sourceSpan = t);
        }
      }
      class Ie extends Oe {}
      class Te extends Oe {}
      class Ae extends ge {
        constructor(e, t, n, s, i) {
          super(le, i),
            (this.metaBlock = e),
            (this.messageParts = t),
            (this.placeHolderNames = n),
            (this.expressions = s);
        }
        isEquivalent(e) {
          return !1;
        }
        isConstant() {
          return !1;
        }
        visitExpression(e, t) {
          return e.visitLocalizedString(this, t);
        }
        serializeI18nHead() {
          let e = this.metaBlock.description || "";
          return (
            this.metaBlock.meaning && (e = `${this.metaBlock.meaning}|${e}`),
            this.metaBlock.customId && (e = `${e}@@${this.metaBlock.customId}`),
            this.metaBlock.legacyIds &&
              this.metaBlock.legacyIds.forEach((t) => {
                e = `${e}\u241f${t}`;
              }),
            Re(e, this.messageParts[0].text, this.getMessagePartSourceSpan(0))
          );
        }
        getMessagePartSourceSpan(e) {
          var t, n;
          return null !==
            (n =
              null === (t = this.messageParts[e]) || void 0 === t
                ? void 0
                : t.sourceSpan) && void 0 !== n
            ? n
            : this.sourceSpan;
        }
        getPlaceholderSourceSpan(e) {
          var t, n, s, i;
          return null !==
            (i =
              null !==
                (n =
                  null === (t = this.placeHolderNames[e]) || void 0 === t
                    ? void 0
                    : t.sourceSpan) && void 0 !== n
                ? n
                : null === (s = this.expressions[e]) || void 0 === s
                ? void 0
                : s.sourceSpan) && void 0 !== i
            ? i
            : this.sourceSpan;
        }
        serializeI18nTemplatePart(e) {
          return Re(
            this.placeHolderNames[e - 1].text,
            this.messageParts[e].text,
            this.getMessagePartSourceSpan(e)
          );
        }
      }
      const De = (e) => e.replace(/\\/g, "\\\\"),
        Me = (e) => e.replace(/:/g, "\\:"),
        Pe = (e) => e.replace(/`/g, "\\`").replace(/\${/g, "$\\{");
      function Re(e, t, n) {
        return "" === e
          ? {
              cooked: t,
              raw: Pe(((s = De(t)), s.replace(/^:/, "\\:"))),
              range: n,
            }
          : {
              cooked: `:${e}:${t}`,
              raw: Pe(`:${Me(De(e))}:${De(t)}`),
              range: n,
            };
        var s;
      }
      class je extends ge {
        constructor(e, t, n = null, s) {
          super(t, s), (this.value = e), (this.typeParams = n);
        }
        isEquivalent(e) {
          return (
            e instanceof je &&
            this.value.name === e.value.name &&
            this.value.moduleName === e.value.moduleName &&
            this.value.runtime === e.value.runtime
          );
        }
        isConstant() {
          return !1;
        }
        visitExpression(e, t) {
          return e.visitExternalExpr(this, t);
        }
      }
      class Ne extends ge {
        constructor(e, t, n = null, s, i) {
          super(s || t.type, i),
            (this.condition = e),
            (this.falseCase = n),
            (this.trueCase = t);
        }
        isEquivalent(e) {
          return (
            e instanceof Ne &&
            this.condition.isEquivalent(e.condition) &&
            this.trueCase.isEquivalent(e.trueCase) &&
            me(this.falseCase, e.falseCase)
          );
        }
        isConstant() {
          return !1;
        }
        visitExpression(e, t) {
          return e.visitConditionalExpr(this, t);
        }
      }
      class Fe extends ge {
        constructor(e, t) {
          super(oe, t), (this.condition = e);
        }
        isEquivalent(e) {
          return e instanceof Fe && this.condition.isEquivalent(e.condition);
        }
        isConstant() {
          return !1;
        }
        visitExpression(e, t) {
          return e.visitNotExpr(this, t);
        }
      }
      class Le extends ge {
        constructor(e, t) {
          super(e.type, t), (this.condition = e);
        }
        isEquivalent(e) {
          return e instanceof Le && this.condition.isEquivalent(e.condition);
        }
        isConstant() {
          return !1;
        }
        visitExpression(e, t) {
          return e.visitAssertNotNullExpr(this, t);
        }
      }
      class Ve extends ge {
        constructor(e, t, n) {
          super(t, n), (this.value = e);
        }
        isEquivalent(e) {
          return e instanceof Ve && this.value.isEquivalent(e.value);
        }
        isConstant() {
          return !1;
        }
        visitExpression(e, t) {
          return e.visitCastExpr(this, t);
        }
      }
      class Be {
        constructor(e, t = null) {
          (this.name = e), (this.type = t);
        }
        isEquivalent(e) {
          return this.name === e.name;
        }
      }
      class ze extends ge {
        constructor(e, t, n, s, i) {
          super(n, s),
            (this.params = e),
            (this.statements = t),
            (this.name = i);
        }
        isEquivalent(e) {
          return (
            e instanceof ze &&
            fe(this.params, e.params) &&
            fe(this.statements, e.statements)
          );
        }
        isConstant() {
          return !1;
        }
        visitExpression(e, t) {
          return e.visitFunctionExpr(this, t);
        }
        toDeclStmt(e, t) {
          return new st(
            e,
            this.params,
            this.statements,
            this.type,
            t,
            this.sourceSpan
          );
        }
      }
      class He extends ge {
        constructor(e, t, n, s, i = !0) {
          super(n || ae, s),
            (this.operator = e),
            (this.expr = t),
            (this.parens = i);
        }
        isEquivalent(e) {
          return (
            e instanceof He &&
            this.operator === e.operator &&
            this.expr.isEquivalent(e.expr)
          );
        }
        isConstant() {
          return !1;
        }
        visitExpression(e, t) {
          return e.visitUnaryOperatorExpr(this, t);
        }
      }
      class Ge extends ge {
        constructor(e, t, n, s, i, r = !0) {
          super(s || t.type, i),
            (this.operator = e),
            (this.rhs = n),
            (this.parens = r),
            (this.lhs = t);
        }
        isEquivalent(e) {
          return (
            e instanceof Ge &&
            this.operator === e.operator &&
            this.lhs.isEquivalent(e.lhs) &&
            this.rhs.isEquivalent(e.rhs)
          );
        }
        isConstant() {
          return !1;
        }
        visitExpression(e, t) {
          return e.visitBinaryOperatorExpr(this, t);
        }
      }
      class Ue extends ge {
        constructor(e, t, n, s) {
          super(n, s), (this.receiver = e), (this.name = t);
        }
        isEquivalent(e) {
          return (
            e instanceof Ue &&
            this.receiver.isEquivalent(e.receiver) &&
            this.name === e.name
          );
        }
        isConstant() {
          return !1;
        }
        visitExpression(e, t) {
          return e.visitReadPropExpr(this, t);
        }
        set(e) {
          return new we(this.receiver, this.name, e, null, this.sourceSpan);
        }
      }
      class $e extends ge {
        constructor(e, t, n, s) {
          super(n, s), (this.receiver = e), (this.index = t);
        }
        isEquivalent(e) {
          return (
            e instanceof $e &&
            this.receiver.isEquivalent(e.receiver) &&
            this.index.isEquivalent(e.index)
          );
        }
        isConstant() {
          return !1;
        }
        visitExpression(e, t) {
          return e.visitReadKeyExpr(this, t);
        }
        set(e) {
          return new _e(this.receiver, this.index, e, null, this.sourceSpan);
        }
      }
      class qe extends ge {
        constructor(e, t, n) {
          super(t, n), (this.entries = e);
        }
        isConstant() {
          return this.entries.every((e) => e.isConstant());
        }
        isEquivalent(e) {
          return e instanceof qe && fe(this.entries, e.entries);
        }
        visitExpression(e, t) {
          return e.visitLiteralArrayExpr(this, t);
        }
      }
      class We {
        constructor(e, t, n) {
          (this.key = e), (this.value = t), (this.quoted = n);
        }
        isEquivalent(e) {
          return this.key === e.key && this.value.isEquivalent(e.value);
        }
      }
      class Ye extends ge {
        constructor(e, t, n) {
          super(t, n),
            (this.entries = e),
            (this.valueType = null),
            t && (this.valueType = t.valueType);
        }
        isEquivalent(e) {
          return e instanceof Ye && fe(this.entries, e.entries);
        }
        isConstant() {
          return this.entries.every((e) => e.value.isConstant());
        }
        visitExpression(e, t) {
          return e.visitLiteralMapExpr(this, t);
        }
      }
      class Qe extends ge {
        constructor(e, t) {
          super(e[e.length - 1].type, t), (this.parts = e);
        }
        isEquivalent(e) {
          return e instanceof Qe && fe(this.parts, e.parts);
        }
        isConstant() {
          return !1;
        }
        visitExpression(e, t) {
          return e.visitCommaExpr(this, t);
        }
      }
      new ye(he.This, null, null),
        new ye(he.Super, null, null),
        new ye(he.CatchError, null, null),
        new ye(he.CatchStack, null, null);
      const Ke = new ke(null, null, null),
        Je = new ke(null, re, null);
      var Xe;
      !(function (e) {
        (e[(e.Final = 0)] = "Final"),
          (e[(e.Private = 1)] = "Private"),
          (e[(e.Exported = 2)] = "Exported"),
          (e[(e.Static = 3)] = "Static");
      })(Xe || (Xe = {}));
      class Ze {
        constructor(e, t, n) {
          (this.text = e), (this.multiline = t), (this.trailingNewline = n);
        }
        toString() {
          return this.multiline ? ` ${this.text} ` : this.text;
        }
      }
      class et extends Ze {
        constructor(e) {
          super("", !0, !0), (this.tags = e);
        }
        toString() {
          return (function (e) {
            if (0 === e.length) return "";
            if (1 === e.length && e[0].tagName && !e[0].text)
              return `*${At(e[0])} `;
            let t = "*\n";
            for (const n of e)
              (t += " *"), (t += At(n).replace(/\n/g, "\n * ")), (t += "\n");
            return (t += " "), t;
          })(this.tags);
        }
      }
      class tt {
        constructor(e = [], t = null, n) {
          (this.modifiers = e),
            (this.sourceSpan = t),
            (this.leadingComments = n);
        }
        hasModifier(e) {
          return -1 !== this.modifiers.indexOf(e);
        }
        addLeadingComment(e) {
          var t;
          (this.leadingComments =
            null !== (t = this.leadingComments) && void 0 !== t ? t : []),
            this.leadingComments.push(e);
        }
      }
      class nt extends tt {
        constructor(e, t, n, s, i, r) {
          super(s, i, r),
            (this.name = e),
            (this.value = t),
            (this.type = n || (t && t.type) || null);
        }
        isEquivalent(e) {
          return (
            e instanceof nt &&
            this.name === e.name &&
            (this.value
              ? !!e.value && this.value.isEquivalent(e.value)
              : !e.value)
          );
        }
        visitStatement(e, t) {
          return e.visitDeclareVarStmt(this, t);
        }
      }
      class st extends tt {
        constructor(e, t, n, s, i, r, o) {
          super(i, r, o),
            (this.name = e),
            (this.params = t),
            (this.statements = n),
            (this.type = s || null);
        }
        isEquivalent(e) {
          return (
            e instanceof st &&
            fe(this.params, e.params) &&
            fe(this.statements, e.statements)
          );
        }
        visitStatement(e, t) {
          return e.visitDeclareFunctionStmt(this, t);
        }
      }
      class it extends tt {
        constructor(e, t, n) {
          super([], t, n), (this.expr = e);
        }
        isEquivalent(e) {
          return e instanceof it && this.expr.isEquivalent(e.expr);
        }
        visitStatement(e, t) {
          return e.visitExpressionStmt(this, t);
        }
      }
      class rt extends tt {
        constructor(e, t = null, n) {
          super([], t, n), (this.value = e);
        }
        isEquivalent(e) {
          return e instanceof rt && this.value.isEquivalent(e.value);
        }
        visitStatement(e, t) {
          return e.visitReturnStmt(this, t);
        }
      }
      class ot {
        constructor(e = null, t = []) {
          (this.type = e), (this.modifiers = t);
        }
        hasModifier(e) {
          return -1 !== this.modifiers.indexOf(e);
        }
      }
      class at extends ot {
        constructor(e, t, n, s, i) {
          super(s, i), (this.name = e), (this.params = t), (this.body = n);
        }
        isEquivalent(e) {
          return this.name === e.name && fe(this.body, e.body);
        }
      }
      class lt extends ot {
        constructor(e, t, n, s) {
          super(n, s), (this.name = e), (this.body = t);
        }
        isEquivalent(e) {
          return this.name === e.name && fe(this.body, e.body);
        }
      }
      class ct extends tt {
        constructor(e, t, n, s, i, r, o, a, l) {
          super(o, a, l),
            (this.name = e),
            (this.parent = t),
            (this.fields = n),
            (this.getters = s),
            (this.constructorMethod = i),
            (this.methods = r);
        }
        isEquivalent(e) {
          return (
            e instanceof ct &&
            this.name === e.name &&
            me(this.parent, e.parent) &&
            fe(this.fields, e.fields) &&
            fe(this.getters, e.getters) &&
            this.constructorMethod.isEquivalent(e.constructorMethod) &&
            fe(this.methods, e.methods)
          );
        }
        visitStatement(e, t) {
          return e.visitDeclareClassStmt(this, t);
        }
      }
      class ut extends tt {
        constructor(e, t, n = [], s, i) {
          super([], s, i),
            (this.condition = e),
            (this.trueCase = t),
            (this.falseCase = n);
        }
        isEquivalent(e) {
          return (
            e instanceof ut &&
            this.condition.isEquivalent(e.condition) &&
            fe(this.trueCase, e.trueCase) &&
            fe(this.falseCase, e.falseCase)
          );
        }
        visitStatement(e, t) {
          return e.visitIfStmt(this, t);
        }
      }
      class dt extends tt {
        constructor(e, t, n = null, s) {
          super([], n, s), (this.bodyStmts = e), (this.catchStmts = t);
        }
        isEquivalent(e) {
          return (
            e instanceof dt &&
            fe(this.bodyStmts, e.bodyStmts) &&
            fe(this.catchStmts, e.catchStmts)
          );
        }
        visitStatement(e, t) {
          return e.visitTryCatchStmt(this, t);
        }
      }
      class ht extends tt {
        constructor(e, t = null, n) {
          super([], t, n), (this.error = e);
        }
        isEquivalent(e) {
          return e instanceof dt && this.error.isEquivalent(e.error);
        }
        visitStatement(e, t) {
          return e.visitThrowStmt(this, t);
        }
      }
      class pt {
        visitType(e, t) {
          return e;
        }
        visitExpression(e, t) {
          return e.type && e.type.visitType(this, t), e;
        }
        visitBuiltinType(e, t) {
          return this.visitType(e, t);
        }
        visitExpressionType(e, t) {
          return (
            e.value.visitExpression(this, t),
            null !== e.typeParams &&
              e.typeParams.forEach((e) => this.visitType(e, t)),
            this.visitType(e, t)
          );
        }
        visitArrayType(e, t) {
          return this.visitType(e, t);
        }
        visitMapType(e, t) {
          return this.visitType(e, t);
        }
        visitWrappedNodeExpr(e, t) {
          return e;
        }
        visitTypeofExpr(e, t) {
          return this.visitExpression(e, t);
        }
        visitReadVarExpr(e, t) {
          return this.visitExpression(e, t);
        }
        visitWriteVarExpr(e, t) {
          return e.value.visitExpression(this, t), this.visitExpression(e, t);
        }
        visitWriteKeyExpr(e, t) {
          return (
            e.receiver.visitExpression(this, t),
            e.index.visitExpression(this, t),
            e.value.visitExpression(this, t),
            this.visitExpression(e, t)
          );
        }
        visitWritePropExpr(e, t) {
          return (
            e.receiver.visitExpression(this, t),
            e.value.visitExpression(this, t),
            this.visitExpression(e, t)
          );
        }
        visitInvokeMethodExpr(e, t) {
          return (
            e.receiver.visitExpression(this, t),
            this.visitAllExpressions(e.args, t),
            this.visitExpression(e, t)
          );
        }
        visitInvokeFunctionExpr(e, t) {
          return (
            e.fn.visitExpression(this, t),
            this.visitAllExpressions(e.args, t),
            this.visitExpression(e, t)
          );
        }
        visitInstantiateExpr(e, t) {
          return (
            e.classExpr.visitExpression(this, t),
            this.visitAllExpressions(e.args, t),
            this.visitExpression(e, t)
          );
        }
        visitLiteralExpr(e, t) {
          return this.visitExpression(e, t);
        }
        visitLocalizedString(e, t) {
          return this.visitExpression(e, t);
        }
        visitExternalExpr(e, t) {
          return (
            e.typeParams && e.typeParams.forEach((e) => e.visitType(this, t)),
            this.visitExpression(e, t)
          );
        }
        visitConditionalExpr(e, t) {
          return (
            e.condition.visitExpression(this, t),
            e.trueCase.visitExpression(this, t),
            e.falseCase.visitExpression(this, t),
            this.visitExpression(e, t)
          );
        }
        visitNotExpr(e, t) {
          return (
            e.condition.visitExpression(this, t), this.visitExpression(e, t)
          );
        }
        visitAssertNotNullExpr(e, t) {
          return (
            e.condition.visitExpression(this, t), this.visitExpression(e, t)
          );
        }
        visitCastExpr(e, t) {
          return e.value.visitExpression(this, t), this.visitExpression(e, t);
        }
        visitFunctionExpr(e, t) {
          return (
            this.visitAllStatements(e.statements, t), this.visitExpression(e, t)
          );
        }
        visitUnaryOperatorExpr(e, t) {
          return e.expr.visitExpression(this, t), this.visitExpression(e, t);
        }
        visitBinaryOperatorExpr(e, t) {
          return (
            e.lhs.visitExpression(this, t),
            e.rhs.visitExpression(this, t),
            this.visitExpression(e, t)
          );
        }
        visitReadPropExpr(e, t) {
          return (
            e.receiver.visitExpression(this, t), this.visitExpression(e, t)
          );
        }
        visitReadKeyExpr(e, t) {
          return (
            e.receiver.visitExpression(this, t),
            e.index.visitExpression(this, t),
            this.visitExpression(e, t)
          );
        }
        visitLiteralArrayExpr(e, t) {
          return (
            this.visitAllExpressions(e.entries, t), this.visitExpression(e, t)
          );
        }
        visitLiteralMapExpr(e, t) {
          return (
            e.entries.forEach((e) => e.value.visitExpression(this, t)),
            this.visitExpression(e, t)
          );
        }
        visitCommaExpr(e, t) {
          return (
            this.visitAllExpressions(e.parts, t), this.visitExpression(e, t)
          );
        }
        visitAllExpressions(e, t) {
          e.forEach((e) => e.visitExpression(this, t));
        }
        visitDeclareVarStmt(e, t) {
          return (
            e.value && e.value.visitExpression(this, t),
            e.type && e.type.visitType(this, t),
            e
          );
        }
        visitDeclareFunctionStmt(e, t) {
          return (
            this.visitAllStatements(e.statements, t),
            e.type && e.type.visitType(this, t),
            e
          );
        }
        visitExpressionStmt(e, t) {
          return e.expr.visitExpression(this, t), e;
        }
        visitReturnStmt(e, t) {
          return e.value.visitExpression(this, t), e;
        }
        visitDeclareClassStmt(e, t) {
          return (
            e.parent.visitExpression(this, t),
            e.getters.forEach((e) => this.visitAllStatements(e.body, t)),
            e.constructorMethod &&
              this.visitAllStatements(e.constructorMethod.body, t),
            e.methods.forEach((e) => this.visitAllStatements(e.body, t)),
            e
          );
        }
        visitIfStmt(e, t) {
          return (
            e.condition.visitExpression(this, t),
            this.visitAllStatements(e.trueCase, t),
            this.visitAllStatements(e.falseCase, t),
            e
          );
        }
        visitTryCatchStmt(e, t) {
          return (
            this.visitAllStatements(e.bodyStmts, t),
            this.visitAllStatements(e.catchStmts, t),
            e
          );
        }
        visitThrowStmt(e, t) {
          return e.error.visitExpression(this, t), e;
        }
        visitAllStatements(e, t) {
          e.forEach((e) => e.visitStatement(this, t));
        }
      }
      function mt(e) {
        const t = new ft();
        return t.visitAllStatements(e, null), t.varNames;
      }
      class ft extends pt {
        constructor() {
          super(...arguments), (this.varNames = new Set());
        }
        visitDeclareFunctionStmt(e, t) {
          return e;
        }
        visitDeclareClassStmt(e, t) {
          return e;
        }
        visitReadVarExpr(e, t) {
          return e.name && this.varNames.add(e.name), null;
        }
      }
      function gt(e, t) {
        if (!t) return e;
        const n = new vt(t);
        return e.visitStatement(n, null);
      }
      function yt(e, t) {
        if (!t) return e;
        const n = new vt(t);
        return e.visitExpression(n, null);
      }
      class vt extends class {
        transformExpr(e, t) {
          return e;
        }
        transformStmt(e, t) {
          return e;
        }
        visitReadVarExpr(e, t) {
          return this.transformExpr(e, t);
        }
        visitWrappedNodeExpr(e, t) {
          return this.transformExpr(e, t);
        }
        visitTypeofExpr(e, t) {
          return this.transformExpr(
            new ve(e.expr.visitExpression(this, t), e.type, e.sourceSpan),
            t
          );
        }
        visitWriteVarExpr(e, t) {
          return this.transformExpr(
            new xe(
              e.name,
              e.value.visitExpression(this, t),
              e.type,
              e.sourceSpan
            ),
            t
          );
        }
        visitWriteKeyExpr(e, t) {
          return this.transformExpr(
            new _e(
              e.receiver.visitExpression(this, t),
              e.index.visitExpression(this, t),
              e.value.visitExpression(this, t),
              e.type,
              e.sourceSpan
            ),
            t
          );
        }
        visitWritePropExpr(e, t) {
          return this.transformExpr(
            new we(
              e.receiver.visitExpression(this, t),
              e.name,
              e.value.visitExpression(this, t),
              e.type,
              e.sourceSpan
            ),
            t
          );
        }
        visitInvokeMethodExpr(e, t) {
          const n = e.builtin || e.name;
          return this.transformExpr(
            new Ce(
              e.receiver.visitExpression(this, t),
              n,
              this.visitAllExpressions(e.args, t),
              e.type,
              e.sourceSpan
            ),
            t
          );
        }
        visitInvokeFunctionExpr(e, t) {
          return this.transformExpr(
            new Se(
              e.fn.visitExpression(this, t),
              this.visitAllExpressions(e.args, t),
              e.type,
              e.sourceSpan
            ),
            t
          );
        }
        visitInstantiateExpr(e, t) {
          return this.transformExpr(
            new Ee(
              e.classExpr.visitExpression(this, t),
              this.visitAllExpressions(e.args, t),
              e.type,
              e.sourceSpan
            ),
            t
          );
        }
        visitLiteralExpr(e, t) {
          return this.transformExpr(e, t);
        }
        visitLocalizedString(e, t) {
          return this.transformExpr(
            new Ae(
              e.metaBlock,
              e.messageParts,
              e.placeHolderNames,
              this.visitAllExpressions(e.expressions, t),
              e.sourceSpan
            ),
            t
          );
        }
        visitExternalExpr(e, t) {
          return this.transformExpr(e, t);
        }
        visitConditionalExpr(e, t) {
          return this.transformExpr(
            new Ne(
              e.condition.visitExpression(this, t),
              e.trueCase.visitExpression(this, t),
              e.falseCase.visitExpression(this, t),
              e.type,
              e.sourceSpan
            ),
            t
          );
        }
        visitNotExpr(e, t) {
          return this.transformExpr(
            new Fe(e.condition.visitExpression(this, t), e.sourceSpan),
            t
          );
        }
        visitAssertNotNullExpr(e, t) {
          return this.transformExpr(
            new Le(e.condition.visitExpression(this, t), e.sourceSpan),
            t
          );
        }
        visitCastExpr(e, t) {
          return this.transformExpr(
            new Ve(e.value.visitExpression(this, t), e.type, e.sourceSpan),
            t
          );
        }
        visitFunctionExpr(e, t) {
          return this.transformExpr(
            new ze(
              e.params,
              this.visitAllStatements(e.statements, t),
              e.type,
              e.sourceSpan
            ),
            t
          );
        }
        visitUnaryOperatorExpr(e, t) {
          return this.transformExpr(
            new He(
              e.operator,
              e.expr.visitExpression(this, t),
              e.type,
              e.sourceSpan
            ),
            t
          );
        }
        visitBinaryOperatorExpr(e, t) {
          return this.transformExpr(
            new Ge(
              e.operator,
              e.lhs.visitExpression(this, t),
              e.rhs.visitExpression(this, t),
              e.type,
              e.sourceSpan
            ),
            t
          );
        }
        visitReadPropExpr(e, t) {
          return this.transformExpr(
            new Ue(
              e.receiver.visitExpression(this, t),
              e.name,
              e.type,
              e.sourceSpan
            ),
            t
          );
        }
        visitReadKeyExpr(e, t) {
          return this.transformExpr(
            new $e(
              e.receiver.visitExpression(this, t),
              e.index.visitExpression(this, t),
              e.type,
              e.sourceSpan
            ),
            t
          );
        }
        visitLiteralArrayExpr(e, t) {
          return this.transformExpr(
            new qe(
              this.visitAllExpressions(e.entries, t),
              e.type,
              e.sourceSpan
            ),
            t
          );
        }
        visitLiteralMapExpr(e, t) {
          const n = e.entries.map(
              (e) => new We(e.key, e.value.visitExpression(this, t), e.quoted)
            ),
            s = new se(e.valueType);
          return this.transformExpr(new Ye(n, s, e.sourceSpan), t);
        }
        visitCommaExpr(e, t) {
          return this.transformExpr(
            new Qe(this.visitAllExpressions(e.parts, t), e.sourceSpan),
            t
          );
        }
        visitAllExpressions(e, t) {
          return e.map((e) => e.visitExpression(this, t));
        }
        visitDeclareVarStmt(e, t) {
          const n = e.value && e.value.visitExpression(this, t);
          return this.transformStmt(
            new nt(
              e.name,
              n,
              e.type,
              e.modifiers,
              e.sourceSpan,
              e.leadingComments
            ),
            t
          );
        }
        visitDeclareFunctionStmt(e, t) {
          return this.transformStmt(
            new st(
              e.name,
              e.params,
              this.visitAllStatements(e.statements, t),
              e.type,
              e.modifiers,
              e.sourceSpan,
              e.leadingComments
            ),
            t
          );
        }
        visitExpressionStmt(e, t) {
          return this.transformStmt(
            new it(
              e.expr.visitExpression(this, t),
              e.sourceSpan,
              e.leadingComments
            ),
            t
          );
        }
        visitReturnStmt(e, t) {
          return this.transformStmt(
            new rt(
              e.value.visitExpression(this, t),
              e.sourceSpan,
              e.leadingComments
            ),
            t
          );
        }
        visitDeclareClassStmt(e, t) {
          const n = e.parent.visitExpression(this, t),
            s = e.getters.map(
              (e) =>
                new lt(
                  e.name,
                  this.visitAllStatements(e.body, t),
                  e.type,
                  e.modifiers
                )
            ),
            i =
              e.constructorMethod &&
              new at(
                e.constructorMethod.name,
                e.constructorMethod.params,
                this.visitAllStatements(e.constructorMethod.body, t),
                e.constructorMethod.type,
                e.constructorMethod.modifiers
              ),
            r = e.methods.map(
              (e) =>
                new at(
                  e.name,
                  e.params,
                  this.visitAllStatements(e.body, t),
                  e.type,
                  e.modifiers
                )
            );
          return this.transformStmt(
            new ct(e.name, n, e.fields, s, i, r, e.modifiers, e.sourceSpan),
            t
          );
        }
        visitIfStmt(e, t) {
          return this.transformStmt(
            new ut(
              e.condition.visitExpression(this, t),
              this.visitAllStatements(e.trueCase, t),
              this.visitAllStatements(e.falseCase, t),
              e.sourceSpan,
              e.leadingComments
            ),
            t
          );
        }
        visitTryCatchStmt(e, t) {
          return this.transformStmt(
            new dt(
              this.visitAllStatements(e.bodyStmts, t),
              this.visitAllStatements(e.catchStmts, t),
              e.sourceSpan,
              e.leadingComments
            ),
            t
          );
        }
        visitThrowStmt(e, t) {
          return this.transformStmt(
            new ht(
              e.error.visitExpression(this, t),
              e.sourceSpan,
              e.leadingComments
            ),
            t
          );
        }
        visitAllStatements(e, t) {
          return e.map((e) => e.visitStatement(this, t));
        }
      } {
        constructor(e) {
          super(), (this.sourceSpan = e);
        }
        _clone(e) {
          const t = Object.create(e.constructor.prototype);
          for (let n of Object.keys(e)) t[n] = e[n];
          return t;
        }
        transformExpr(e, t) {
          return (
            e.sourceSpan || ((e = this._clone(e)).sourceSpan = this.sourceSpan),
            e
          );
        }
        transformStmt(e, t) {
          return (
            e.sourceSpan || ((e = this._clone(e)).sourceSpan = this.sourceSpan),
            e
          );
        }
      }
      function bt(e, t, n) {
        return new ye(e, t, n);
      }
      function xt(e, t = null, n) {
        return new je(e, null, t, n);
      }
      function _t(e, t, n) {
        return null != e ? wt(xt(e, t, null), n) : null;
      }
      function wt(e, t, n) {
        return new te(e, t, n);
      }
      function Ct(e) {
        return new ve(e);
      }
      function St(e, t, n) {
        return new qe(e, t, n);
      }
      function Et(e, t = null) {
        return new Ye(
          e.map((e) => new We(e.key, e.value, e.quoted)),
          t,
          null
        );
      }
      function kt(e, t, n, s, i) {
        return new ze(e, t, n, s, i);
      }
      function Ot(e, t, n, s, i) {
        return new ut(e, t, n, s, i);
      }
      function It(e, t, n) {
        return new ke(e, t, n);
      }
      function Tt(e) {
        return e instanceof ke && null === e.value;
      }
      function At(e) {
        let t = "";
        if ((e.tagName && (t += " @" + e.tagName), e.text)) {
          if (e.text.match(/\/\*|\*\//))
            throw new Error('JSDoc text cannot contain "/*" and "*/"');
          t += " " + e.text.replace(/@/g, "\\@");
        }
        return t;
      }
      const Dt = /-+([a-z0-9])/g;
      function Mt(e, t) {
        return Pt(e, ":", t);
      }
      function Pt(e, t, n) {
        const s = e.indexOf(t);
        return -1 == s ? n : [e.slice(0, s).trim(), e.slice(s + 1).trim()];
      }
      function Rt(e, t, n) {
        return Array.isArray(e)
          ? t.visitArray(e, n)
          : "object" == typeof (s = e) &&
            null !== s &&
            Object.getPrototypeOf(s) === qt
          ? t.visitStringMap(e, n)
          : null == e ||
            "string" == typeof e ||
            "number" == typeof e ||
            "boolean" == typeof e
          ? t.visitPrimitive(e, n)
          : t.visitOther(e, n);
        var s;
      }
      function jt(e) {
        return null != e;
      }
      function Nt(e) {
        return void 0 === e ? null : e;
      }
      class Ft {
        visitArray(e, t) {
          return e.map((e) => Rt(e, this, t));
        }
        visitStringMap(e, t) {
          const n = {};
          return (
            Object.keys(e).forEach((s) => {
              n[s] = Rt(e[s], this, t);
            }),
            n
          );
        }
        visitPrimitive(e, t) {
          return e;
        }
        visitOther(e, t) {
          return e;
        }
      }
      const Lt = (e) => {
          if (Kt(e))
            throw new Error("Illegal state: value cannot be a promise");
          return e;
        },
        Vt = (e, t) => (Kt(e) ? e.then(t) : t(e)),
        Bt = (e) => (e.some(Kt) ? Promise.all(e) : e);
      function zt(e) {
        throw new Error("Internal Error: " + e);
      }
      function Ht(e, t) {
        const n = Error(e);
        return (n[Gt] = !0), t && (n[Ut] = t), n;
      }
      const Gt = "ngSyntaxError",
        Ut = "ngParseErrors";
      function $t(e) {
        return e.replace(/([.*+?^=!:${}()|[\]\/\\])/g, "\\$1");
      }
      const qt = Object.getPrototypeOf({});
      function Wt(e) {
        let t = [];
        for (let n = 0; n < e.length; n++) {
          let s = e.charCodeAt(n);
          if (s >= 55296 && s <= 56319 && e.length > n + 1) {
            const t = e.charCodeAt(n + 1);
            t >= 56320 &&
              t <= 57343 &&
              (n++, (s = ((s - 55296) << 10) + t - 56320 + 65536));
          }
          s <= 127
            ? t.push(s)
            : s <= 2047
            ? t.push(((s >> 6) & 31) | 192, (63 & s) | 128)
            : s <= 65535
            ? t.push((s >> 12) | 224, ((s >> 6) & 63) | 128, (63 & s) | 128)
            : s <= 2097151 &&
              t.push(
                ((s >> 18) & 7) | 240,
                ((s >> 12) & 63) | 128,
                ((s >> 6) & 63) | 128,
                (63 & s) | 128
              );
        }
        return t;
      }
      function Yt(e) {
        if ("string" == typeof e) return e;
        if (Array.isArray(e)) return "[" + e.map(Yt).join(", ") + "]";
        if (null == e) return "" + e;
        if (e.overriddenName) return "" + e.overriddenName;
        if (e.name) return "" + e.name;
        if (!e.toString) return "object";
        const t = e.toString();
        if (null == t) return "" + t;
        const n = t.indexOf("\n");
        return -1 === n ? t : t.substring(0, n);
      }
      function Qt(e) {
        return "function" == typeof e && e.hasOwnProperty("__forward_ref__")
          ? e()
          : e;
      }
      function Kt(e) {
        return !!e && "function" == typeof e.then;
      }
      const Jt = "undefined" != typeof window && window,
        Xt =
          "undefined" != typeof self &&
          "undefined" != typeof WorkerGlobalScope &&
          self instanceof WorkerGlobalScope &&
          self,
        Zt = ("undefined" != typeof global && global) || Jt || Xt;
      function en(e, t) {
        const n = [];
        for (let s = 0; s < e; s++) n.push(t);
        return n;
      }
      const tn = bt("<unknown>"),
        nn = {};
      class sn extends ge {
        constructor(e) {
          super(e.type), (this.resolved = e), (this.original = e);
        }
        visitExpression(e, t) {
          return t === nn
            ? this.original.visitExpression(e, t)
            : this.resolved.visitExpression(e, t);
        }
        isEquivalent(e) {
          return e instanceof sn && this.resolved.isEquivalent(e.resolved);
        }
        isConstant() {
          return !0;
        }
        fixup(e) {
          (this.resolved = e), (this.shared = !0);
        }
      }
      class rn {
        constructor(e = !1) {
          (this.isClosureCompilerEnabled = e),
            (this.statements = []),
            (this.literals = new Map()),
            (this.literalFactories = new Map()),
            (this.injectorDefinitions = new Map()),
            (this.directiveDefinitions = new Map()),
            (this.componentDefinitions = new Map()),
            (this.pipeDefinitions = new Map()),
            (this.nextNameIndex = 0);
        }
        getConstLiteral(e, t) {
          if ((e instanceof ke && !cn(e)) || e instanceof sn) return e;
          const n = this.keyOf(e);
          let s = this.literals.get(n),
            i = !1;
          if (
            (s || ((s = new sn(e)), this.literals.set(n, s), (i = !0)),
            (!i && !s.shared) || (i && t))
          ) {
            const t = this.freshName();
            let n, i;
            this.isClosureCompilerEnabled && cn(e)
              ? ((n = bt(t).set(new ze([], [new rt(e)]))),
                (i = bt(t).callFn([])))
              : ((n = bt(t).set(e)), (i = bt(t))),
              this.statements.push(n.toDeclStmt(re, [Xe.Final])),
              s.fixup(i);
          }
          return s;
        }
        getDefinition(e, t, n, s = !1) {
          const i = this.definitionsOf(t);
          let r = i.get(e),
            o = !1;
          if (!r) {
            const s = this.propertyNameOf(t);
            (r = new sn(n.importExpr(e).prop(s))), i.set(e, r), (o = !0);
          }
          if ((!o && !r.shared) || (o && s)) {
            const e = this.freshName();
            this.statements.push(
              bt(e).set(r.resolved).toDeclStmt(re, [Xe.Final])
            ),
              r.fixup(bt(e));
          }
          return r;
        }
        getLiteralFactory(e) {
          if (e instanceof qe) {
            const t = e.entries.map((e) => (e.isConstant() ? e : tn)),
              n = this.keyOf(St(t));
            return this._getLiteralFactory(n, e.entries, (e) => St(e));
          }
          {
            const t = Et(
                e.entries.map((e) => ({
                  key: e.key,
                  value: e.value.isConstant() ? e.value : tn,
                  quoted: e.quoted,
                }))
              ),
              n = this.keyOf(t);
            return this._getLiteralFactory(
              n,
              e.entries.map((e) => e.value),
              (t) =>
                Et(
                  t.map((t, n) => ({
                    key: e.entries[n].key,
                    value: t,
                    quoted: e.entries[n].quoted,
                  }))
                )
            );
          }
        }
        _getLiteralFactory(e, t, n) {
          let s = this.literalFactories.get(e);
          const i = t.filter((e) => !e.isConstant());
          if (!s) {
            const i = t.map((e, t) =>
                e.isConstant() ? this.getConstLiteral(e, !0) : bt("a" + t)
              ),
              r = kt(
                i.filter(ln).map((e) => new Be(e.name, ie)),
                [new rt(n(i))],
                re
              ),
              o = this.freshName();
            this.statements.push(bt(o).set(r).toDeclStmt(re, [Xe.Final])),
              (s = bt(o)),
              this.literalFactories.set(e, s);
          }
          return { literalFactory: s, literalFactoryArguments: i };
        }
        uniqueName(e) {
          return `${e}${this.nextNameIndex++}`;
        }
        definitionsOf(e) {
          switch (e) {
            case 2:
              return this.componentDefinitions;
            case 1:
              return this.directiveDefinitions;
            case 0:
              return this.injectorDefinitions;
            case 3:
              return this.pipeDefinitions;
          }
          return zt("Unknown definition kind " + e), this.componentDefinitions;
        }
        propertyNameOf(e) {
          switch (e) {
            case 2:
              return "\u0275cmp";
            case 1:
              return "\u0275dir";
            case 0:
              return "\u0275inj";
            case 3:
              return "\u0275pipe";
          }
          return zt("Unknown definition kind " + e), "<unknown>";
        }
        freshName() {
          return this.uniqueName("_c");
        }
        keyOf(e) {
          return e.visitExpression(new on(), nn);
        }
      }
      class on {
        constructor() {
          (this.visitWrappedNodeExpr = an),
            (this.visitWriteVarExpr = an),
            (this.visitWriteKeyExpr = an),
            (this.visitWritePropExpr = an),
            (this.visitInvokeMethodExpr = an),
            (this.visitInvokeFunctionExpr = an),
            (this.visitInstantiateExpr = an),
            (this.visitConditionalExpr = an),
            (this.visitNotExpr = an),
            (this.visitAssertNotNullExpr = an),
            (this.visitCastExpr = an),
            (this.visitFunctionExpr = an),
            (this.visitUnaryOperatorExpr = an),
            (this.visitBinaryOperatorExpr = an),
            (this.visitReadPropExpr = an),
            (this.visitReadKeyExpr = an),
            (this.visitCommaExpr = an),
            (this.visitLocalizedString = an);
        }
        visitLiteralExpr(e) {
          return (
            "" + ("string" == typeof e.value ? '"' + e.value + '"' : e.value)
          );
        }
        visitLiteralArrayExpr(e, t) {
          return `[${e.entries
            .map((e) => e.visitExpression(this, t))
            .join(",")}]`;
        }
        visitLiteralMapExpr(e, t) {
          return (
            "{" +
            e.entries
              .map(
                (e) =>
                  `${((e) => {
                    const t = e.quoted ? '"' : "";
                    return `${t}${e.key}${t}`;
                  })(e)}:${e.value.visitExpression(this, t)}`
              )
              .join(",")
          );
        }
        visitExternalExpr(e) {
          return e.value.moduleName
            ? `EX:${e.value.moduleName}:${e.value.name}`
            : "EX:" + e.value.runtime.name;
        }
        visitReadVarExpr(e) {
          return "VAR:" + e.name;
        }
        visitTypeofExpr(e, t) {
          return "TYPEOF:" + e.expr.visitExpression(this, t);
        }
      }
      function an(e) {
        throw new Error(
          `Invalid state: Visitor ${this.constructor.name} doesn't handle ${e.constructor.name}`
        );
      }
      function ln(e) {
        return e instanceof ye;
      }
      function cn(e) {
        return (
          e instanceof ke && "string" == typeof e.value && e.value.length >= 50
        );
      }
      const un = "@angular/core";
      class dn {}
      function hn(e) {
        return { identifier: { reference: e } };
      }
      function pn(e, t) {
        return hn(e.resolveExternalReference(t));
      }
      (dn.ANALYZE_FOR_ENTRY_COMPONENTS = {
        name: "ANALYZE_FOR_ENTRY_COMPONENTS",
        moduleName: un,
      }),
        (dn.ElementRef = { name: "ElementRef", moduleName: un }),
        (dn.NgModuleRef = { name: "NgModuleRef", moduleName: un }),
        (dn.ViewContainerRef = { name: "ViewContainerRef", moduleName: un }),
        (dn.ChangeDetectorRef = { name: "ChangeDetectorRef", moduleName: un }),
        (dn.QueryList = { name: "QueryList", moduleName: un }),
        (dn.TemplateRef = { name: "TemplateRef", moduleName: un }),
        (dn.Renderer2 = { name: "Renderer2", moduleName: un }),
        (dn.CodegenComponentFactoryResolver = {
          name: "\u0275CodegenComponentFactoryResolver",
          moduleName: un,
        }),
        (dn.ComponentFactoryResolver = {
          name: "ComponentFactoryResolver",
          moduleName: un,
        }),
        (dn.ComponentFactory = { name: "ComponentFactory", moduleName: un }),
        (dn.ComponentRef = { name: "ComponentRef", moduleName: un }),
        (dn.NgModuleFactory = { name: "NgModuleFactory", moduleName: un }),
        (dn.createModuleFactory = { name: "\u0275cmf", moduleName: un }),
        (dn.moduleDef = { name: "\u0275mod", moduleName: un }),
        (dn.moduleProviderDef = { name: "\u0275mpd", moduleName: un }),
        (dn.RegisterModuleFactoryFn = {
          name: "\u0275registerModuleFactory",
          moduleName: un,
        }),
        (dn.inject = { name: "\u0275\u0275inject", moduleName: un }),
        (dn.directiveInject = {
          name: "\u0275\u0275directiveInject",
          moduleName: un,
        }),
        (dn.INJECTOR = { name: "INJECTOR", moduleName: un }),
        (dn.Injector = { name: "Injector", moduleName: un }),
        (dn.ɵɵdefineInjectable = {
          name: "\u0275\u0275defineInjectable",
          moduleName: un,
        }),
        (dn.InjectableDef = {
          name: "\u0275\u0275InjectableDef",
          moduleName: un,
        }),
        (dn.ViewEncapsulation = { name: "ViewEncapsulation", moduleName: un }),
        (dn.ChangeDetectionStrategy = {
          name: "ChangeDetectionStrategy",
          moduleName: un,
        }),
        (dn.SecurityContext = { name: "SecurityContext", moduleName: un }),
        (dn.LOCALE_ID = { name: "LOCALE_ID", moduleName: un }),
        (dn.TRANSLATIONS_FORMAT = {
          name: "TRANSLATIONS_FORMAT",
          moduleName: un,
        }),
        (dn.inlineInterpolate = {
          name: "\u0275inlineInterpolate",
          moduleName: un,
        }),
        (dn.interpolate = { name: "\u0275interpolate", moduleName: un }),
        (dn.EMPTY_ARRAY = { name: "\u0275EMPTY_ARRAY", moduleName: un }),
        (dn.EMPTY_MAP = { name: "\u0275EMPTY_MAP", moduleName: un }),
        (dn.Renderer = { name: "Renderer", moduleName: un }),
        (dn.viewDef = { name: "\u0275vid", moduleName: un }),
        (dn.elementDef = { name: "\u0275eld", moduleName: un }),
        (dn.anchorDef = { name: "\u0275and", moduleName: un }),
        (dn.textDef = { name: "\u0275ted", moduleName: un }),
        (dn.directiveDef = { name: "\u0275did", moduleName: un }),
        (dn.providerDef = { name: "\u0275prd", moduleName: un }),
        (dn.queryDef = { name: "\u0275qud", moduleName: un }),
        (dn.pureArrayDef = { name: "\u0275pad", moduleName: un }),
        (dn.pureObjectDef = { name: "\u0275pod", moduleName: un }),
        (dn.purePipeDef = { name: "\u0275ppd", moduleName: un }),
        (dn.pipeDef = { name: "\u0275pid", moduleName: un }),
        (dn.nodeValue = { name: "\u0275nov", moduleName: un }),
        (dn.ngContentDef = { name: "\u0275ncd", moduleName: un }),
        (dn.unwrapValue = { name: "\u0275unv", moduleName: un }),
        (dn.createRendererType2 = { name: "\u0275crt", moduleName: un }),
        (dn.RendererType2 = { name: "RendererType2", moduleName: un }),
        (dn.ViewDefinition = { name: "\u0275ViewDefinition", moduleName: un }),
        (dn.createComponentFactory = { name: "\u0275ccf", moduleName: un }),
        (dn.setClassMetadata = {
          name: "\u0275setClassMetadata",
          moduleName: un,
        });
      class mn {
        constructor(e, t, n) {
          (this.filePath = e), (this.name = t), (this.members = n);
        }
        assertNoMembers() {
          if (this.members.length)
            throw new Error(
              `Illegal state: symbol without members expected, but got ${JSON.stringify(
                this
              )}.`
            );
        }
      }
      class fn {
        constructor() {
          this.cache = new Map();
        }
        get(e, t, n) {
          const s = `"${e}".${t}${
            (n = n || []).length ? "." + n.join(".") : ""
          }`;
          let i = this.cache.get(s);
          return i || ((i = new mn(e, t, n)), this.cache.set(s, i)), i;
        }
      }
      const gn = /^(?:(?:\[([^\]]+)\])|(?:\(([^\)]+)\)))|(\@[-\w]+)$/;
      function yn(e) {
        return e.replace(/\W/g, "_");
      }
      let vn = 0;
      function bn(e) {
        if (!e || !e.reference) return null;
        const t = e.reference;
        if (t instanceof mn) return t.name;
        if (t.__anonymousType) return t.__anonymousType;
        let n = Yt(t);
        return (
          n.indexOf("(") >= 0
            ? ((n = "anonymous_" + vn++), (t.__anonymousType = n))
            : (n = yn(n)),
          n
        );
      }
      function xn(e) {
        const t = e.reference;
        return t instanceof mn ? t.filePath : "./" + Yt(t);
      }
      function _n(e, t) {
        return `View_${bn({ reference: e })}_${t}`;
      }
      function wn(e) {
        return "RenderType_" + bn({ reference: e });
      }
      function Cn(e) {
        return bn({ reference: e }) + "NgFactory";
      }
      var Sn;
      function En(e) {
        return null != e.value ? yn(e.value) : bn(e.identifier);
      }
      function kn(e) {
        return null != e.identifier ? e.identifier.reference : e.value;
      }
      !(function (e) {
        (e[(e.Pipe = 0)] = "Pipe"),
          (e[(e.Directive = 1)] = "Directive"),
          (e[(e.NgModule = 2)] = "NgModule"),
          (e[(e.Injectable = 3)] = "Injectable");
      })(Sn || (Sn = {}));
      class On {
        constructor({ moduleUrl: e, styles: t, styleUrls: n } = {}) {
          (this.moduleUrl = e || null),
            (this.styles = Pn(t)),
            (this.styleUrls = Pn(n));
        }
      }
      class In {
        constructor({
          encapsulation: e,
          template: t,
          templateUrl: n,
          htmlAst: s,
          styles: i,
          styleUrls: r,
          externalStylesheets: o,
          animations: a,
          ngContentSelectors: l,
          interpolation: c,
          isInline: u,
          preserveWhitespaces: d,
        }) {
          if (
            ((this.encapsulation = e),
            (this.template = t),
            (this.templateUrl = n),
            (this.htmlAst = s),
            (this.styles = Pn(i)),
            (this.styleUrls = Pn(r)),
            (this.externalStylesheets = Pn(o)),
            (this.animations = a ? jn(a) : []),
            (this.ngContentSelectors = l || []),
            c && 2 != c.length)
          )
            throw new Error(
              "'interpolation' should have a start and an end symbol."
            );
          (this.interpolation = c),
            (this.isInline = u),
            (this.preserveWhitespaces = d);
        }
        toSummary() {
          return {
            ngContentSelectors: this.ngContentSelectors,
            encapsulation: this.encapsulation,
            styles: this.styles,
            animations: this.animations,
          };
        }
      }
      class Tn {
        constructor({
          isHost: e,
          type: t,
          isComponent: n,
          selector: s,
          exportAs: i,
          changeDetection: r,
          inputs: o,
          outputs: a,
          hostListeners: l,
          hostProperties: c,
          hostAttributes: u,
          providers: d,
          viewProviders: h,
          queries: p,
          guards: m,
          viewQueries: f,
          entryComponents: g,
          template: y,
          componentViewType: v,
          rendererType: b,
          componentFactory: x,
        }) {
          (this.isHost = !!e),
            (this.type = t),
            (this.isComponent = n),
            (this.selector = s),
            (this.exportAs = i),
            (this.changeDetection = r),
            (this.inputs = o),
            (this.outputs = a),
            (this.hostListeners = l),
            (this.hostProperties = c),
            (this.hostAttributes = u),
            (this.providers = Pn(d)),
            (this.viewProviders = Pn(h)),
            (this.queries = Pn(p)),
            (this.guards = m),
            (this.viewQueries = Pn(f)),
            (this.entryComponents = Pn(g)),
            (this.template = y),
            (this.componentViewType = v),
            (this.rendererType = b),
            (this.componentFactory = x);
        }
        static create({
          isHost: e,
          type: t,
          isComponent: n,
          selector: s,
          exportAs: i,
          changeDetection: r,
          inputs: o,
          outputs: a,
          host: l,
          providers: c,
          viewProviders: u,
          queries: d,
          guards: h,
          viewQueries: p,
          entryComponents: m,
          template: f,
          componentViewType: g,
          rendererType: y,
          componentFactory: v,
        }) {
          const b = {},
            x = {},
            _ = {};
          null != l &&
            Object.keys(l).forEach((e) => {
              const t = l[e],
                n = e.match(gn);
              null === n
                ? (_[e] = t)
                : null != n[1]
                ? (x[n[1]] = t)
                : null != n[2] && (b[n[2]] = t);
            });
          const w = {};
          null != o &&
            o.forEach((e) => {
              const t = Mt(e, [e, e]);
              w[t[0]] = t[1];
            });
          const C = {};
          return (
            null != a &&
              a.forEach((e) => {
                const t = Mt(e, [e, e]);
                C[t[0]] = t[1];
              }),
            new Tn({
              isHost: e,
              type: t,
              isComponent: !!n,
              selector: s,
              exportAs: i,
              changeDetection: r,
              inputs: w,
              outputs: C,
              hostListeners: b,
              hostProperties: x,
              hostAttributes: _,
              providers: c,
              viewProviders: u,
              queries: d,
              guards: h,
              viewQueries: p,
              entryComponents: m,
              template: f,
              componentViewType: g,
              rendererType: y,
              componentFactory: v,
            })
          );
        }
        toSummary() {
          return {
            summaryKind: Sn.Directive,
            type: this.type,
            isComponent: this.isComponent,
            selector: this.selector,
            exportAs: this.exportAs,
            inputs: this.inputs,
            outputs: this.outputs,
            hostListeners: this.hostListeners,
            hostProperties: this.hostProperties,
            hostAttributes: this.hostAttributes,
            providers: this.providers,
            viewProviders: this.viewProviders,
            queries: this.queries,
            guards: this.guards,
            viewQueries: this.viewQueries,
            entryComponents: this.entryComponents,
            changeDetection: this.changeDetection,
            template: this.template && this.template.toSummary(),
            componentViewType: this.componentViewType,
            rendererType: this.rendererType,
            componentFactory: this.componentFactory,
          };
        }
      }
      class An {
        constructor({ type: e, name: t, pure: n }) {
          (this.type = e), (this.name = t), (this.pure = !!n);
        }
        toSummary() {
          return {
            summaryKind: Sn.Pipe,
            type: this.type,
            name: this.name,
            pure: this.pure,
          };
        }
      }
      class Dn {
        constructor({
          type: e,
          providers: t,
          declaredDirectives: n,
          exportedDirectives: s,
          declaredPipes: i,
          exportedPipes: r,
          entryComponents: o,
          bootstrapComponents: a,
          importedModules: l,
          exportedModules: c,
          schemas: u,
          transitiveModule: d,
          id: h,
        }) {
          (this.type = e || null),
            (this.declaredDirectives = Pn(n)),
            (this.exportedDirectives = Pn(s)),
            (this.declaredPipes = Pn(i)),
            (this.exportedPipes = Pn(r)),
            (this.providers = Pn(t)),
            (this.entryComponents = Pn(o)),
            (this.bootstrapComponents = Pn(a)),
            (this.importedModules = Pn(l)),
            (this.exportedModules = Pn(c)),
            (this.schemas = Pn(u)),
            (this.id = h || null),
            (this.transitiveModule = d || null);
        }
        toSummary() {
          const e = this.transitiveModule;
          return {
            summaryKind: Sn.NgModule,
            type: this.type,
            entryComponents: e.entryComponents,
            providers: e.providers,
            modules: e.modules,
            exportedDirectives: e.exportedDirectives,
            exportedPipes: e.exportedPipes,
          };
        }
      }
      class Mn {
        constructor() {
          (this.directivesSet = new Set()),
            (this.directives = []),
            (this.exportedDirectivesSet = new Set()),
            (this.exportedDirectives = []),
            (this.pipesSet = new Set()),
            (this.pipes = []),
            (this.exportedPipesSet = new Set()),
            (this.exportedPipes = []),
            (this.modulesSet = new Set()),
            (this.modules = []),
            (this.entryComponentsSet = new Set()),
            (this.entryComponents = []),
            (this.providers = []);
        }
        addProvider(e, t) {
          this.providers.push({ provider: e, module: t });
        }
        addDirective(e) {
          this.directivesSet.has(e.reference) ||
            (this.directivesSet.add(e.reference), this.directives.push(e));
        }
        addExportedDirective(e) {
          this.exportedDirectivesSet.has(e.reference) ||
            (this.exportedDirectivesSet.add(e.reference),
            this.exportedDirectives.push(e));
        }
        addPipe(e) {
          this.pipesSet.has(e.reference) ||
            (this.pipesSet.add(e.reference), this.pipes.push(e));
        }
        addExportedPipe(e) {
          this.exportedPipesSet.has(e.reference) ||
            (this.exportedPipesSet.add(e.reference),
            this.exportedPipes.push(e));
        }
        addModule(e) {
          this.modulesSet.has(e.reference) ||
            (this.modulesSet.add(e.reference), this.modules.push(e));
        }
        addEntryComponent(e) {
          this.entryComponentsSet.has(e.componentType) ||
            (this.entryComponentsSet.add(e.componentType),
            this.entryComponents.push(e));
        }
      }
      function Pn(e) {
        return e || [];
      }
      class Rn {
        constructor(
          e,
          {
            useClass: t,
            useValue: n,
            useExisting: s,
            useFactory: i,
            deps: r,
            multi: o,
          }
        ) {
          (this.token = e),
            (this.useClass = t || null),
            (this.useValue = n),
            (this.useExisting = s),
            (this.useFactory = i || null),
            (this.dependencies = r || null),
            (this.multi = !!o);
        }
      }
      function jn(e) {
        return e.reduce((e, t) => {
          const n = Array.isArray(t) ? jn(t) : t;
          return e.concat(n);
        }, []);
      }
      function Nn(e) {
        return e.replace(/(\w+:\/\/[\w:-]+)?(\/+)?/, "ng:///");
      }
      function Fn(e, t, n) {
        let s;
        return (
          (s = n.isInline
            ? t.type.reference instanceof mn
              ? `${t.type.reference.filePath}.${t.type.reference.name}.html`
              : `${bn(e)}/${bn(t.type)}.html`
            : n.templateUrl),
          t.type.reference instanceof mn ? s : Nn(s)
        );
      }
      const Ln = "@angular/core";
      class Vn {}
      function Bn(e) {
        return Et(
          Object.keys(e).map((t) => ({ key: t, value: e[t], quoted: !1 }))
        );
      }
      function zn(e, t) {
        if (0 === t) return wt(e);
        const n = [];
        for (let s = 0; s < t; s++) n.push(ie);
        return wt(e, void 0, n);
      }
      (Vn.NEW_METHOD = "factory"),
        (Vn.TRANSFORM_METHOD = "transform"),
        (Vn.PATCH_DEPS = "patchedDeps"),
        (Vn.namespaceHTML = {
          name: "\u0275\u0275namespaceHTML",
          moduleName: Ln,
        }),
        (Vn.namespaceMathML = {
          name: "\u0275\u0275namespaceMathML",
          moduleName: Ln,
        }),
        (Vn.namespaceSVG = {
          name: "\u0275\u0275namespaceSVG",
          moduleName: Ln,
        }),
        (Vn.element = { name: "\u0275\u0275element", moduleName: Ln }),
        (Vn.elementStart = {
          name: "\u0275\u0275elementStart",
          moduleName: Ln,
        }),
        (Vn.elementEnd = { name: "\u0275\u0275elementEnd", moduleName: Ln }),
        (Vn.advance = { name: "\u0275\u0275advance", moduleName: Ln }),
        (Vn.syntheticHostProperty = {
          name: "\u0275\u0275syntheticHostProperty",
          moduleName: Ln,
        }),
        (Vn.syntheticHostListener = {
          name: "\u0275\u0275syntheticHostListener",
          moduleName: Ln,
        }),
        (Vn.attribute = { name: "\u0275\u0275attribute", moduleName: Ln }),
        (Vn.attributeInterpolate1 = {
          name: "\u0275\u0275attributeInterpolate1",
          moduleName: Ln,
        }),
        (Vn.attributeInterpolate2 = {
          name: "\u0275\u0275attributeInterpolate2",
          moduleName: Ln,
        }),
        (Vn.attributeInterpolate3 = {
          name: "\u0275\u0275attributeInterpolate3",
          moduleName: Ln,
        }),
        (Vn.attributeInterpolate4 = {
          name: "\u0275\u0275attributeInterpolate4",
          moduleName: Ln,
        }),
        (Vn.attributeInterpolate5 = {
          name: "\u0275\u0275attributeInterpolate5",
          moduleName: Ln,
        }),
        (Vn.attributeInterpolate6 = {
          name: "\u0275\u0275attributeInterpolate6",
          moduleName: Ln,
        }),
        (Vn.attributeInterpolate7 = {
          name: "\u0275\u0275attributeInterpolate7",
          moduleName: Ln,
        }),
        (Vn.attributeInterpolate8 = {
          name: "\u0275\u0275attributeInterpolate8",
          moduleName: Ln,
        }),
        (Vn.attributeInterpolateV = {
          name: "\u0275\u0275attributeInterpolateV",
          moduleName: Ln,
        }),
        (Vn.classProp = { name: "\u0275\u0275classProp", moduleName: Ln }),
        (Vn.elementContainerStart = {
          name: "\u0275\u0275elementContainerStart",
          moduleName: Ln,
        }),
        (Vn.elementContainerEnd = {
          name: "\u0275\u0275elementContainerEnd",
          moduleName: Ln,
        }),
        (Vn.elementContainer = {
          name: "\u0275\u0275elementContainer",
          moduleName: Ln,
        }),
        (Vn.styleMap = { name: "\u0275\u0275styleMap", moduleName: Ln }),
        (Vn.styleMapInterpolate1 = {
          name: "\u0275\u0275styleMapInterpolate1",
          moduleName: Ln,
        }),
        (Vn.styleMapInterpolate2 = {
          name: "\u0275\u0275styleMapInterpolate2",
          moduleName: Ln,
        }),
        (Vn.styleMapInterpolate3 = {
          name: "\u0275\u0275styleMapInterpolate3",
          moduleName: Ln,
        }),
        (Vn.styleMapInterpolate4 = {
          name: "\u0275\u0275styleMapInterpolate4",
          moduleName: Ln,
        }),
        (Vn.styleMapInterpolate5 = {
          name: "\u0275\u0275styleMapInterpolate5",
          moduleName: Ln,
        }),
        (Vn.styleMapInterpolate6 = {
          name: "\u0275\u0275styleMapInterpolate6",
          moduleName: Ln,
        }),
        (Vn.styleMapInterpolate7 = {
          name: "\u0275\u0275styleMapInterpolate7",
          moduleName: Ln,
        }),
        (Vn.styleMapInterpolate8 = {
          name: "\u0275\u0275styleMapInterpolate8",
          moduleName: Ln,
        }),
        (Vn.styleMapInterpolateV = {
          name: "\u0275\u0275styleMapInterpolateV",
          moduleName: Ln,
        }),
        (Vn.classMap = { name: "\u0275\u0275classMap", moduleName: Ln }),
        (Vn.classMapInterpolate1 = {
          name: "\u0275\u0275classMapInterpolate1",
          moduleName: Ln,
        }),
        (Vn.classMapInterpolate2 = {
          name: "\u0275\u0275classMapInterpolate2",
          moduleName: Ln,
        }),
        (Vn.classMapInterpolate3 = {
          name: "\u0275\u0275classMapInterpolate3",
          moduleName: Ln,
        }),
        (Vn.classMapInterpolate4 = {
          name: "\u0275\u0275classMapInterpolate4",
          moduleName: Ln,
        }),
        (Vn.classMapInterpolate5 = {
          name: "\u0275\u0275classMapInterpolate5",
          moduleName: Ln,
        }),
        (Vn.classMapInterpolate6 = {
          name: "\u0275\u0275classMapInterpolate6",
          moduleName: Ln,
        }),
        (Vn.classMapInterpolate7 = {
          name: "\u0275\u0275classMapInterpolate7",
          moduleName: Ln,
        }),
        (Vn.classMapInterpolate8 = {
          name: "\u0275\u0275classMapInterpolate8",
          moduleName: Ln,
        }),
        (Vn.classMapInterpolateV = {
          name: "\u0275\u0275classMapInterpolateV",
          moduleName: Ln,
        }),
        (Vn.styleProp = { name: "\u0275\u0275styleProp", moduleName: Ln }),
        (Vn.stylePropInterpolate1 = {
          name: "\u0275\u0275stylePropInterpolate1",
          moduleName: Ln,
        }),
        (Vn.stylePropInterpolate2 = {
          name: "\u0275\u0275stylePropInterpolate2",
          moduleName: Ln,
        }),
        (Vn.stylePropInterpolate3 = {
          name: "\u0275\u0275stylePropInterpolate3",
          moduleName: Ln,
        }),
        (Vn.stylePropInterpolate4 = {
          name: "\u0275\u0275stylePropInterpolate4",
          moduleName: Ln,
        }),
        (Vn.stylePropInterpolate5 = {
          name: "\u0275\u0275stylePropInterpolate5",
          moduleName: Ln,
        }),
        (Vn.stylePropInterpolate6 = {
          name: "\u0275\u0275stylePropInterpolate6",
          moduleName: Ln,
        }),
        (Vn.stylePropInterpolate7 = {
          name: "\u0275\u0275stylePropInterpolate7",
          moduleName: Ln,
        }),
        (Vn.stylePropInterpolate8 = {
          name: "\u0275\u0275stylePropInterpolate8",
          moduleName: Ln,
        }),
        (Vn.stylePropInterpolateV = {
          name: "\u0275\u0275stylePropInterpolateV",
          moduleName: Ln,
        }),
        (Vn.nextContext = { name: "\u0275\u0275nextContext", moduleName: Ln }),
        (Vn.templateCreate = { name: "\u0275\u0275template", moduleName: Ln }),
        (Vn.text = { name: "\u0275\u0275text", moduleName: Ln }),
        (Vn.enableBindings = {
          name: "\u0275\u0275enableBindings",
          moduleName: Ln,
        }),
        (Vn.disableBindings = {
          name: "\u0275\u0275disableBindings",
          moduleName: Ln,
        }),
        (Vn.getCurrentView = {
          name: "\u0275\u0275getCurrentView",
          moduleName: Ln,
        }),
        (Vn.textInterpolate = {
          name: "\u0275\u0275textInterpolate",
          moduleName: Ln,
        }),
        (Vn.textInterpolate1 = {
          name: "\u0275\u0275textInterpolate1",
          moduleName: Ln,
        }),
        (Vn.textInterpolate2 = {
          name: "\u0275\u0275textInterpolate2",
          moduleName: Ln,
        }),
        (Vn.textInterpolate3 = {
          name: "\u0275\u0275textInterpolate3",
          moduleName: Ln,
        }),
        (Vn.textInterpolate4 = {
          name: "\u0275\u0275textInterpolate4",
          moduleName: Ln,
        }),
        (Vn.textInterpolate5 = {
          name: "\u0275\u0275textInterpolate5",
          moduleName: Ln,
        }),
        (Vn.textInterpolate6 = {
          name: "\u0275\u0275textInterpolate6",
          moduleName: Ln,
        }),
        (Vn.textInterpolate7 = {
          name: "\u0275\u0275textInterpolate7",
          moduleName: Ln,
        }),
        (Vn.textInterpolate8 = {
          name: "\u0275\u0275textInterpolate8",
          moduleName: Ln,
        }),
        (Vn.textInterpolateV = {
          name: "\u0275\u0275textInterpolateV",
          moduleName: Ln,
        }),
        (Vn.restoreView = { name: "\u0275\u0275restoreView", moduleName: Ln }),
        (Vn.pureFunction0 = {
          name: "\u0275\u0275pureFunction0",
          moduleName: Ln,
        }),
        (Vn.pureFunction1 = {
          name: "\u0275\u0275pureFunction1",
          moduleName: Ln,
        }),
        (Vn.pureFunction2 = {
          name: "\u0275\u0275pureFunction2",
          moduleName: Ln,
        }),
        (Vn.pureFunction3 = {
          name: "\u0275\u0275pureFunction3",
          moduleName: Ln,
        }),
        (Vn.pureFunction4 = {
          name: "\u0275\u0275pureFunction4",
          moduleName: Ln,
        }),
        (Vn.pureFunction5 = {
          name: "\u0275\u0275pureFunction5",
          moduleName: Ln,
        }),
        (Vn.pureFunction6 = {
          name: "\u0275\u0275pureFunction6",
          moduleName: Ln,
        }),
        (Vn.pureFunction7 = {
          name: "\u0275\u0275pureFunction7",
          moduleName: Ln,
        }),
        (Vn.pureFunction8 = {
          name: "\u0275\u0275pureFunction8",
          moduleName: Ln,
        }),
        (Vn.pureFunctionV = {
          name: "\u0275\u0275pureFunctionV",
          moduleName: Ln,
        }),
        (Vn.pipeBind1 = { name: "\u0275\u0275pipeBind1", moduleName: Ln }),
        (Vn.pipeBind2 = { name: "\u0275\u0275pipeBind2", moduleName: Ln }),
        (Vn.pipeBind3 = { name: "\u0275\u0275pipeBind3", moduleName: Ln }),
        (Vn.pipeBind4 = { name: "\u0275\u0275pipeBind4", moduleName: Ln }),
        (Vn.pipeBindV = { name: "\u0275\u0275pipeBindV", moduleName: Ln }),
        (Vn.hostProperty = {
          name: "\u0275\u0275hostProperty",
          moduleName: Ln,
        }),
        (Vn.property = { name: "\u0275\u0275property", moduleName: Ln }),
        (Vn.propertyInterpolate = {
          name: "\u0275\u0275propertyInterpolate",
          moduleName: Ln,
        }),
        (Vn.propertyInterpolate1 = {
          name: "\u0275\u0275propertyInterpolate1",
          moduleName: Ln,
        }),
        (Vn.propertyInterpolate2 = {
          name: "\u0275\u0275propertyInterpolate2",
          moduleName: Ln,
        }),
        (Vn.propertyInterpolate3 = {
          name: "\u0275\u0275propertyInterpolate3",
          moduleName: Ln,
        }),
        (Vn.propertyInterpolate4 = {
          name: "\u0275\u0275propertyInterpolate4",
          moduleName: Ln,
        }),
        (Vn.propertyInterpolate5 = {
          name: "\u0275\u0275propertyInterpolate5",
          moduleName: Ln,
        }),
        (Vn.propertyInterpolate6 = {
          name: "\u0275\u0275propertyInterpolate6",
          moduleName: Ln,
        }),
        (Vn.propertyInterpolate7 = {
          name: "\u0275\u0275propertyInterpolate7",
          moduleName: Ln,
        }),
        (Vn.propertyInterpolate8 = {
          name: "\u0275\u0275propertyInterpolate8",
          moduleName: Ln,
        }),
        (Vn.propertyInterpolateV = {
          name: "\u0275\u0275propertyInterpolateV",
          moduleName: Ln,
        }),
        (Vn.i18n = { name: "\u0275\u0275i18n", moduleName: Ln }),
        (Vn.i18nAttributes = {
          name: "\u0275\u0275i18nAttributes",
          moduleName: Ln,
        }),
        (Vn.i18nExp = { name: "\u0275\u0275i18nExp", moduleName: Ln }),
        (Vn.i18nStart = { name: "\u0275\u0275i18nStart", moduleName: Ln }),
        (Vn.i18nEnd = { name: "\u0275\u0275i18nEnd", moduleName: Ln }),
        (Vn.i18nApply = { name: "\u0275\u0275i18nApply", moduleName: Ln }),
        (Vn.i18nPostprocess = {
          name: "\u0275\u0275i18nPostprocess",
          moduleName: Ln,
        }),
        (Vn.pipe = { name: "\u0275\u0275pipe", moduleName: Ln }),
        (Vn.projection = { name: "\u0275\u0275projection", moduleName: Ln }),
        (Vn.projectionDef = {
          name: "\u0275\u0275projectionDef",
          moduleName: Ln,
        }),
        (Vn.reference = { name: "\u0275\u0275reference", moduleName: Ln }),
        (Vn.inject = { name: "\u0275\u0275inject", moduleName: Ln }),
        (Vn.injectAttribute = {
          name: "\u0275\u0275injectAttribute",
          moduleName: Ln,
        }),
        (Vn.injectPipeChangeDetectorRef = {
          name: "\u0275\u0275injectPipeChangeDetectorRef",
          moduleName: Ln,
        }),
        (Vn.directiveInject = {
          name: "\u0275\u0275directiveInject",
          moduleName: Ln,
        }),
        (Vn.invalidFactory = {
          name: "\u0275\u0275invalidFactory",
          moduleName: Ln,
        }),
        (Vn.invalidFactoryDep = {
          name: "\u0275\u0275invalidFactoryDep",
          moduleName: Ln,
        }),
        (Vn.templateRefExtractor = {
          name: "\u0275\u0275templateRefExtractor",
          moduleName: Ln,
        }),
        (Vn.resolveWindow = {
          name: "\u0275\u0275resolveWindow",
          moduleName: Ln,
        }),
        (Vn.resolveDocument = {
          name: "\u0275\u0275resolveDocument",
          moduleName: Ln,
        }),
        (Vn.resolveBody = { name: "\u0275\u0275resolveBody", moduleName: Ln }),
        (Vn.defineComponent = {
          name: "\u0275\u0275defineComponent",
          moduleName: Ln,
        }),
        (Vn.setComponentScope = {
          name: "\u0275\u0275setComponentScope",
          moduleName: Ln,
        }),
        (Vn.ComponentDefWithMeta = {
          name: "\u0275\u0275ComponentDefWithMeta",
          moduleName: Ln,
        }),
        (Vn.FactoryDef = { name: "\u0275\u0275FactoryDef", moduleName: Ln }),
        (Vn.defineDirective = {
          name: "\u0275\u0275defineDirective",
          moduleName: Ln,
        }),
        (Vn.DirectiveDefWithMeta = {
          name: "\u0275\u0275DirectiveDefWithMeta",
          moduleName: Ln,
        }),
        (Vn.InjectorDef = { name: "\u0275\u0275InjectorDef", moduleName: Ln }),
        (Vn.defineInjector = {
          name: "\u0275\u0275defineInjector",
          moduleName: Ln,
        }),
        (Vn.NgModuleDefWithMeta = {
          name: "\u0275\u0275NgModuleDefWithMeta",
          moduleName: Ln,
        }),
        (Vn.ModuleWithProviders = {
          name: "ModuleWithProviders",
          moduleName: Ln,
        }),
        (Vn.defineNgModule = {
          name: "\u0275\u0275defineNgModule",
          moduleName: Ln,
        }),
        (Vn.setNgModuleScope = {
          name: "\u0275\u0275setNgModuleScope",
          moduleName: Ln,
        }),
        (Vn.PipeDefWithMeta = {
          name: "\u0275\u0275PipeDefWithMeta",
          moduleName: Ln,
        }),
        (Vn.definePipe = { name: "\u0275\u0275definePipe", moduleName: Ln }),
        (Vn.queryRefresh = {
          name: "\u0275\u0275queryRefresh",
          moduleName: Ln,
        }),
        (Vn.viewQuery = { name: "\u0275\u0275viewQuery", moduleName: Ln }),
        (Vn.staticViewQuery = {
          name: "\u0275\u0275staticViewQuery",
          moduleName: Ln,
        }),
        (Vn.staticContentQuery = {
          name: "\u0275\u0275staticContentQuery",
          moduleName: Ln,
        }),
        (Vn.loadQuery = { name: "\u0275\u0275loadQuery", moduleName: Ln }),
        (Vn.contentQuery = {
          name: "\u0275\u0275contentQuery",
          moduleName: Ln,
        }),
        (Vn.NgOnChangesFeature = {
          name: "\u0275\u0275NgOnChangesFeature",
          moduleName: Ln,
        }),
        (Vn.InheritDefinitionFeature = {
          name: "\u0275\u0275InheritDefinitionFeature",
          moduleName: Ln,
        }),
        (Vn.CopyDefinitionFeature = {
          name: "\u0275\u0275CopyDefinitionFeature",
          moduleName: Ln,
        }),
        (Vn.ProvidersFeature = {
          name: "\u0275\u0275ProvidersFeature",
          moduleName: Ln,
        }),
        (Vn.listener = { name: "\u0275\u0275listener", moduleName: Ln }),
        (Vn.getFactoryOf = {
          name: "\u0275\u0275getFactoryOf",
          moduleName: Ln,
        }),
        (Vn.getInheritedFactory = {
          name: "\u0275\u0275getInheritedFactory",
          moduleName: Ln,
        }),
        (Vn.sanitizeHtml = {
          name: "\u0275\u0275sanitizeHtml",
          moduleName: Ln,
        }),
        (Vn.sanitizeStyle = {
          name: "\u0275\u0275sanitizeStyle",
          moduleName: Ln,
        }),
        (Vn.sanitizeResourceUrl = {
          name: "\u0275\u0275sanitizeResourceUrl",
          moduleName: Ln,
        }),
        (Vn.sanitizeScript = {
          name: "\u0275\u0275sanitizeScript",
          moduleName: Ln,
        }),
        (Vn.sanitizeUrl = { name: "\u0275\u0275sanitizeUrl", moduleName: Ln }),
        (Vn.sanitizeUrlOrResourceUrl = {
          name: "\u0275\u0275sanitizeUrlOrResourceUrl",
          moduleName: Ln,
        }),
        (Vn.trustConstantHtml = {
          name: "\u0275\u0275trustConstantHtml",
          moduleName: Ln,
        }),
        (Vn.trustConstantScript = {
          name: "\u0275\u0275trustConstantScript",
          moduleName: Ln,
        }),
        (Vn.trustConstantResourceUrl = {
          name: "\u0275\u0275trustConstantResourceUrl",
          moduleName: Ln,
        });
      function Hn(e) {
        return "@" + e;
      }
      function Gn(e, t) {
        return `animation_${e}_${t}`;
      }
      class Un {
        constructor(e, t) {
          (this.value = e), (this.sourceSpan = t);
        }
        visit(e) {
          return e.visitText(this);
        }
      }
      class $n {
        constructor(e, t, n) {
          (this.value = e), (this.sourceSpan = t), (this.i18n = n);
        }
        visit(e) {
          return e.visitBoundText(this);
        }
      }
      class qn {
        constructor(e, t, n, s, i) {
          (this.name = e),
            (this.value = t),
            (this.sourceSpan = n),
            (this.valueSpan = s),
            (this.i18n = i);
        }
        visit(e) {
          return e.visitTextAttribute(this);
        }
      }
      class Wn {
        constructor(e, t, n, s, i, r, o, a, l) {
          (this.name = e),
            (this.type = t),
            (this.securityContext = n),
            (this.value = s),
            (this.unit = i),
            (this.sourceSpan = r),
            (this.keySpan = o),
            (this.valueSpan = a),
            (this.i18n = l);
        }
        static fromBoundElementProperty(e, t) {
          if (void 0 === e.keySpan)
            throw new Error(
              `Unexpected state: keySpan must be defined for bound attributes but was not for ${e.name}: ${e.sourceSpan}`
            );
          return new Wn(
            e.name,
            e.type,
            e.securityContext,
            e.value,
            e.unit,
            e.sourceSpan,
            e.keySpan,
            e.valueSpan,
            t
          );
        }
        visit(e) {
          return e.visitBoundAttribute(this);
        }
      }
      class Yn {
        constructor(e, t, n, s, i, r, o) {
          (this.name = e),
            (this.type = t),
            (this.handler = n),
            (this.target = s),
            (this.phase = i),
            (this.sourceSpan = r),
            (this.handlerSpan = o);
        }
        static fromParsedEvent(e) {
          const t = 0 === e.type ? e.targetOrPhase : null,
            n = 1 === e.type ? e.targetOrPhase : null;
          return new Yn(
            e.name,
            e.type,
            e.handler,
            t,
            n,
            e.sourceSpan,
            e.handlerSpan
          );
        }
        visit(e) {
          return e.visitBoundEvent(this);
        }
      }
      class Qn {
        constructor(e, t, n, s, i, r, o, a, l, c) {
          (this.name = e),
            (this.attributes = t),
            (this.inputs = n),
            (this.outputs = s),
            (this.children = i),
            (this.references = r),
            (this.sourceSpan = o),
            (this.startSourceSpan = a),
            (this.endSourceSpan = l),
            (this.i18n = c);
        }
        visit(e) {
          return e.visitElement(this);
        }
      }
      class Kn {
        constructor(e, t, n, s, i, r, o, a, l, c, u, d) {
          (this.tagName = e),
            (this.attributes = t),
            (this.inputs = n),
            (this.outputs = s),
            (this.templateAttrs = i),
            (this.children = r),
            (this.references = o),
            (this.variables = a),
            (this.sourceSpan = l),
            (this.startSourceSpan = c),
            (this.endSourceSpan = u),
            (this.i18n = d);
        }
        visit(e) {
          return e.visitTemplate(this);
        }
      }
      class Jn {
        constructor(e, t, n, s) {
          (this.selector = e),
            (this.attributes = t),
            (this.sourceSpan = n),
            (this.i18n = s),
            (this.name = "ng-content");
        }
        visit(e) {
          return e.visitContent(this);
        }
      }
      class Xn {
        constructor(e, t, n, s, i) {
          (this.name = e),
            (this.value = t),
            (this.sourceSpan = n),
            (this.keySpan = s),
            (this.valueSpan = i);
        }
        visit(e) {
          return e.visitVariable(this);
        }
      }
      class Zn {
        constructor(e, t, n, s) {
          (this.name = e),
            (this.value = t),
            (this.sourceSpan = n),
            (this.valueSpan = s);
        }
        visit(e) {
          return e.visitReference(this);
        }
      }
      class es {
        constructor(e, t, n, s) {
          (this.vars = e),
            (this.placeholders = t),
            (this.sourceSpan = n),
            (this.i18n = s);
        }
        visit(e) {
          return e.visitIcu(this);
        }
      }
      function ts(e, t) {
        const n = [];
        if (e.visit)
          for (const s of t) {
            e.visit(s) || s.visit(e);
          }
        else
          for (const s of t) {
            const t = s.visit(e);
            t && n.push(t);
          }
        return n;
      }
      class ns {
        constructor(e, t, n, s, i, r) {
          (this.nodes = e),
            (this.placeholders = t),
            (this.placeholderToMessage = n),
            (this.meaning = s),
            (this.description = i),
            (this.customId = r),
            (this.id = this.customId),
            (this.legacyIds = []),
            e.length
              ? (this.sources = [
                  {
                    filePath: e[0].sourceSpan.start.file.url,
                    startLine: e[0].sourceSpan.start.line + 1,
                    startCol: e[0].sourceSpan.start.col + 1,
                    endLine: e[e.length - 1].sourceSpan.end.line + 1,
                    endCol: e[0].sourceSpan.start.col + 1,
                  },
                ])
              : (this.sources = []);
        }
      }
      class ss {
        constructor(e, t) {
          (this.value = e), (this.sourceSpan = t);
        }
        visit(e, t) {
          return e.visitText(this, t);
        }
      }
      class is {
        constructor(e, t) {
          (this.children = e), (this.sourceSpan = t);
        }
        visit(e, t) {
          return e.visitContainer(this, t);
        }
      }
      class rs {
        constructor(e, t, n, s) {
          (this.expression = e),
            (this.type = t),
            (this.cases = n),
            (this.sourceSpan = s);
        }
        visit(e, t) {
          return e.visitIcu(this, t);
        }
      }
      class os {
        constructor(e, t, n, s, i, r, o, a, l) {
          (this.tag = e),
            (this.attrs = t),
            (this.startName = n),
            (this.closeName = s),
            (this.children = i),
            (this.isVoid = r),
            (this.sourceSpan = o),
            (this.startSourceSpan = a),
            (this.endSourceSpan = l);
        }
        visit(e, t) {
          return e.visitTagPlaceholder(this, t);
        }
      }
      class as {
        constructor(e, t, n) {
          (this.value = e), (this.name = t), (this.sourceSpan = n);
        }
        visit(e, t) {
          return e.visitPlaceholder(this, t);
        }
      }
      class ls {
        constructor(e, t, n) {
          (this.value = e), (this.name = t), (this.sourceSpan = n);
        }
        visit(e, t) {
          return e.visitIcuPlaceholder(this, t);
        }
      }
      class cs {
        constructor(e) {
          this.digits = e;
        }
        static zero() {
          return new cs([0]);
        }
        static one() {
          return new cs([1]);
        }
        clone() {
          return new cs(this.digits.slice());
        }
        add(e) {
          const t = this.clone();
          return t.addToSelf(e), t;
        }
        addToSelf(e) {
          const t = Math.max(this.digits.length, e.digits.length);
          let n = 0;
          for (let s = 0; s < t; s++) {
            let t = n;
            s < this.digits.length && (t += this.digits[s]),
              s < e.digits.length && (t += e.digits[s]),
              t >= 10
                ? ((this.digits[s] = t - 10), (n = 1))
                : ((this.digits[s] = t), (n = 0));
          }
          n > 0 && (this.digits[t] = 1);
        }
        toString() {
          let e = "";
          for (let t = this.digits.length - 1; t >= 0; t--) e += this.digits[t];
          return e;
        }
      }
      class us {
        constructor(e) {
          this.powerOfTwos = [e];
        }
        getValue() {
          return this.powerOfTwos[0];
        }
        multiplyBy(e) {
          const t = cs.zero();
          return this.multiplyByAndAddTo(e, t), t;
        }
        multiplyByAndAddTo(e, t) {
          for (let n = 0; 0 !== e; e >>>= 1, n++)
            if (1 & e) {
              const e = this.getMultipliedByPowerOfTwo(n);
              t.addToSelf(e);
            }
        }
        getMultipliedByPowerOfTwo(e) {
          for (let t = this.powerOfTwos.length; t <= e; t++) {
            const e = this.powerOfTwos[t - 1];
            this.powerOfTwos[t] = e.add(e);
          }
          return this.powerOfTwos[e];
        }
      }
      function ds(e) {
        return e.id || hs(e);
      }
      function hs(e) {
        return (function (e) {
          const t = Wt(e),
            n = (function (e, t) {
              const n = (e.length + 3) >>> 2,
                s = [];
              for (let i = 0; i < n; i++) s[i] = Is(e, 4 * i, t);
              return s;
            })(t, ws.Big),
            s = 8 * t.length,
            i = en(80);
          let r = 1732584193,
            o = 4023233417,
            a = 2562383102,
            l = 271733878,
            c = 3285377520;
          (n[s >> 5] |= 128 << (24 - (s % 32))),
            (n[15 + (((s + 64) >> 9) << 4)] = s);
          for (let u = 0; u < n.length; u += 16) {
            const e = r,
              t = o,
              s = a,
              d = l,
              h = c;
            for (let p = 0; p < 80; p++) {
              i[p] =
                p < 16
                  ? n[u + p]
                  : ks(i[p - 3] ^ i[p - 8] ^ i[p - 14] ^ i[p - 16], 1);
              const e = vs(p, o, a, l),
                t = e[0],
                s = e[1],
                d = [ks(r, 5), t, c, s, i[p]].reduce(Cs);
              (c = l), (l = a), (a = ks(o, 30)), (o = r), (r = d);
            }
            (r = Cs(r, e)),
              (o = Cs(o, t)),
              (a = Cs(a, s)),
              (l = Cs(l, d)),
              (c = Cs(c, h));
          }
          return (function (e) {
            let t = "";
            for (let n = 0; n < e.length; n++) {
              const s = Os(e, n);
              t += (s >>> 4).toString(16) + (15 & s).toString(16);
            }
            return t.toLowerCase();
          })(
            (function (e) {
              return e.reduce(
                (e, t) =>
                  e.concat(
                    (function (e) {
                      let t = [];
                      for (let n = 0; n < 4; n++)
                        t.push((e >>> (8 * (3 - n))) & 255);
                      return t;
                    })(t)
                  ),
                []
              );
            })([r, o, a, l, c])
          );
        })(
          ((t = e.nodes), t.map((e) => e.visit(gs, null))).join("") +
            `[${e.meaning}]`
        );
        var t;
      }
      function ps(e) {
        return e.id || ms(e);
      }
      function ms(e) {
        const t = new ys();
        return (function (e, t = "") {
          let n = bs(e);
          if (t) {
            const e = bs(t);
            n = (function (e, t) {
              const n = e[0],
                s = e[1],
                i = t[0],
                r = t[1],
                o = Ss(s, r),
                a = o[0],
                l = o[1];
              return [Cs(Cs(n, i), a), l];
            })(
              (function (e, t) {
                const n = e[0],
                  s = e[1];
                return [
                  (n << t) | (s >>> (32 - t)),
                  (s << t) | (n >>> (32 - t)),
                ];
              })(n, 1),
              e
            );
          }
          const s = n[0],
            i = n[1];
          return (function (e, t) {
            const n = Ts.toThePowerOf(0).multiplyBy(t);
            return Ts.toThePowerOf(4).multiplyByAndAddTo(e, n), n.toString();
          })(2147483647 & s, i);
        })(e.nodes.map((e) => e.visit(t, null)).join(""), e.meaning);
      }
      class fs {
        visitText(e, t) {
          return e.value;
        }
        visitContainer(e, t) {
          return `[${e.children.map((e) => e.visit(this)).join(", ")}]`;
        }
        visitIcu(e, t) {
          const n = Object.keys(e.cases).map(
            (t) => `${t} {${e.cases[t].visit(this)}}`
          );
          return `{${e.expression}, ${e.type}, ${n.join(", ")}}`;
        }
        visitTagPlaceholder(e, t) {
          return e.isVoid
            ? `<ph tag name="${e.startName}"/>`
            : `<ph tag name="${e.startName}">${e.children
                .map((e) => e.visit(this))
                .join(", ")}</ph name="${e.closeName}">`;
        }
        visitPlaceholder(e, t) {
          return e.value
            ? `<ph name="${e.name}">${e.value}</ph>`
            : `<ph name="${e.name}"/>`;
        }
        visitIcuPlaceholder(e, t) {
          return `<ph icu name="${e.name}">${e.value.visit(this)}</ph>`;
        }
      }
      const gs = new fs();
      class ys extends fs {
        visitIcu(e, t) {
          let n = Object.keys(e.cases).map(
            (t) => `${t} {${e.cases[t].visit(this)}}`
          );
          return `{${e.type}, ${n.join(", ")}}`;
        }
      }
      function vs(e, t, n, s) {
        return e < 20
          ? [(t & n) | (~t & s), 1518500249]
          : e < 40
          ? [t ^ n ^ s, 1859775393]
          : e < 60
          ? [(t & n) | (t & s) | (n & s), 2400959708]
          : [t ^ n ^ s, 3395469782];
      }
      function bs(e) {
        const t = Wt(e);
        let n = xs(t, 0),
          s = xs(t, 102072);
        return (
          0 != n ||
            (0 != s && 1 != s) ||
            ((n ^= 319790063), (s ^= -1801410264)),
          [n, s]
        );
      }
      function xs(e, t) {
        let n,
          s = 2654435769,
          i = 2654435769;
        const r = e.length;
        for (n = 0; n + 12 <= r; n += 12) {
          (s = Cs(s, Is(e, n, ws.Little))),
            (i = Cs(i, Is(e, n + 4, ws.Little)));
          const r = _s(s, i, (t = Cs(t, Is(e, n + 8, ws.Little))));
          (s = r[0]), (i = r[1]), (t = r[2]);
        }
        return (
          (s = Cs(s, Is(e, n, ws.Little))),
          (i = Cs(i, Is(e, n + 4, ws.Little))),
          (t = Cs(t, r)),
          _s(s, i, (t = Cs(t, Is(e, n + 8, ws.Little) << 8)))[2]
        );
      }
      function _s(e, t, n) {
        return (
          (e = Es(e, t)),
          (e = Es(e, n)),
          (e ^= n >>> 13),
          (t = Es(t, n)),
          (t = Es(t, e)),
          (t ^= e << 8),
          (n = Es(n, e)),
          (n = Es(n, t)),
          (n ^= t >>> 13),
          (e = Es(e, t)),
          (e = Es(e, n)),
          (e ^= n >>> 12),
          (t = Es(t, n)),
          (t = Es(t, e)),
          (t ^= e << 16),
          (n = Es(n, e)),
          (n = Es(n, t)),
          (n ^= t >>> 5),
          (e = Es(e, t)),
          (e = Es(e, n)),
          (e ^= n >>> 3),
          (t = Es(t, n)),
          (t = Es(t, e)),
          (t ^= e << 10),
          (n = Es(n, e)),
          (n = Es(n, t)),
          [e, t, (n ^= t >>> 15)]
        );
      }
      var ws;
      function Cs(e, t) {
        return Ss(e, t)[1];
      }
      function Ss(e, t) {
        const n = (65535 & e) + (65535 & t),
          s = (e >>> 16) + (t >>> 16) + (n >>> 16);
        return [s >>> 16, (s << 16) | (65535 & n)];
      }
      function Es(e, t) {
        const n = (65535 & e) - (65535 & t);
        return (((e >> 16) - (t >> 16) + (n >> 16)) << 16) | (65535 & n);
      }
      function ks(e, t) {
        return (e << t) | (e >>> (32 - t));
      }
      function Os(e, t) {
        return t >= e.length ? 0 : e[t];
      }
      function Is(e, t, n) {
        let s = 0;
        if (n === ws.Big)
          for (let i = 0; i < 4; i++) s += Os(e, t + i) << (24 - 8 * i);
        else for (let i = 0; i < 4; i++) s += Os(e, t + i) << (8 * i);
        return s;
      }
      !(function (e) {
        (e[(e.Little = 0)] = "Little"), (e[(e.Big = 1)] = "Big");
      })(ws || (ws = {}));
      const Ts = new (class {
        constructor(e) {
          (this.base = e), (this.exponents = [new us(cs.one())]);
        }
        toThePowerOf(e) {
          for (let t = this.exponents.length; t <= e; t++) {
            const e = this.exponents[t - 1].multiplyBy(this.base);
            this.exponents[t] = new us(e);
          }
          return this.exponents[e];
        }
      })(256);
      class As {
        createNameMapper(e) {
          return null;
        }
      }
      class Ds extends class {
        visitText(e, t) {}
        visitContainer(e, t) {
          e.children.forEach((e) => e.visit(this));
        }
        visitIcu(e, t) {
          Object.keys(e.cases).forEach((t) => {
            e.cases[t].visit(this);
          });
        }
        visitTagPlaceholder(e, t) {
          e.children.forEach((e) => e.visit(this));
        }
        visitPlaceholder(e, t) {}
        visitIcuPlaceholder(e, t) {}
      } {
        constructor(e, t) {
          super(),
            (this.mapName = t),
            (this.internalToPublic = {}),
            (this.publicToNextId = {}),
            (this.publicToInternal = {}),
            e.nodes.forEach((e) => e.visit(this));
        }
        toPublicName(e) {
          return this.internalToPublic.hasOwnProperty(e)
            ? this.internalToPublic[e]
            : null;
        }
        toInternalName(e) {
          return this.publicToInternal.hasOwnProperty(e)
            ? this.publicToInternal[e]
            : null;
        }
        visitText(e, t) {
          return null;
        }
        visitTagPlaceholder(e, t) {
          this.visitPlaceholderName(e.startName),
            super.visitTagPlaceholder(e, t),
            this.visitPlaceholderName(e.closeName);
        }
        visitPlaceholder(e, t) {
          this.visitPlaceholderName(e.name);
        }
        visitIcuPlaceholder(e, t) {
          this.visitPlaceholderName(e.name);
        }
        visitPlaceholderName(e) {
          if (!e || this.internalToPublic.hasOwnProperty(e)) return;
          let t = this.mapName(e);
          if (this.publicToInternal.hasOwnProperty(t)) {
            const e = this.publicToNextId[t];
            (this.publicToNextId[t] = e + 1), (t = `${t}_${e}`);
          } else this.publicToNextId[t] = 1;
          (this.internalToPublic[e] = t), (this.publicToInternal[t] = e);
        }
      }
      const Ms = new (class {
        visitTag(e) {
          const t = this._serializeAttributes(e.attrs);
          if (0 == e.children.length) return `<${e.name}${t}/>`;
          const n = e.children.map((e) => e.visit(this));
          return `<${e.name}${t}>${n.join("")}</${e.name}>`;
        }
        visitText(e) {
          return e.value;
        }
        visitDeclaration(e) {
          return `<?xml${this._serializeAttributes(e.attrs)} ?>`;
        }
        _serializeAttributes(e) {
          const t = Object.keys(e)
            .map((t) => `${t}="${e[t]}"`)
            .join(" ");
          return t.length > 0 ? " " + t : "";
        }
        visitDoctype(e) {
          return `<!DOCTYPE ${e.rootTag} [\n${e.dtd}\n]>`;
        }
      })();
      function Ps(e) {
        return e.map((e) => e.visit(Ms)).join("");
      }
      class Rs {
        constructor(e) {
          (this.attrs = {}),
            Object.keys(e).forEach((t) => {
              this.attrs[t] = Bs(e[t]);
            });
        }
        visit(e) {
          return e.visitDeclaration(this);
        }
      }
      class js {
        constructor(e, t) {
          (this.rootTag = e), (this.dtd = t);
        }
        visit(e) {
          return e.visitDoctype(this);
        }
      }
      class Ns {
        constructor(e, t = {}, n = []) {
          (this.name = e),
            (this.children = n),
            (this.attrs = {}),
            Object.keys(t).forEach((e) => {
              this.attrs[e] = Bs(t[e]);
            });
        }
        visit(e) {
          return e.visitTag(this);
        }
      }
      class Fs {
        constructor(e) {
          this.value = Bs(e);
        }
        visit(e) {
          return e.visitText(this);
        }
      }
      class Ls extends Fs {
        constructor(e = 0) {
          super("\n" + new Array(e + 1).join(" "));
        }
      }
      const Vs = [
        [/&/g, "&amp;"],
        [/"/g, "&quot;"],
        [/'/g, "&apos;"],
        [/</g, "&lt;"],
        [/>/g, "&gt;"],
      ];
      function Bs(e) {
        return Vs.reduce((e, t) => e.replace(t[0], t[1]), e);
      }
      const zs = "messagebundle",
        Hs = "ph",
        Gs = "ex";
      class Us extends As {
        write(e, t) {
          const n = new Ws(),
            s = new $s();
          let i = new Ns(zs);
          return (
            e.forEach((e) => {
              const t = { id: e.id };
              e.description && (t.desc = e.description),
                e.meaning && (t.meaning = e.meaning);
              let n = [];
              e.sources.forEach((e) => {
                n.push(
                  new Ns("source", {}, [
                    new Fs(
                      `${e.filePath}:${e.startLine}${
                        e.endLine !== e.startLine ? "," + e.endLine : ""
                      }`
                    ),
                  ])
                );
              }),
                i.children.push(
                  new Ls(2),
                  new Ns("msg", t, [...n, ...s.serialize(e.nodes)])
                );
            }),
            i.children.push(new Ls()),
            Ps([
              new Rs({ version: "1.0", encoding: "UTF-8" }),
              new Ls(),
              new js(
                zs,
                '<!ELEMENT messagebundle (msg)*>\n<!ATTLIST messagebundle class CDATA #IMPLIED>\n\n<!ELEMENT msg (#PCDATA|ph|source)*>\n<!ATTLIST msg id CDATA #IMPLIED>\n<!ATTLIST msg seq CDATA #IMPLIED>\n<!ATTLIST msg name CDATA #IMPLIED>\n<!ATTLIST msg desc CDATA #IMPLIED>\n<!ATTLIST msg meaning CDATA #IMPLIED>\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\n<!ATTLIST msg xml:space (default|preserve) "default">\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\n\n<!ELEMENT source (#PCDATA)>\n\n<!ELEMENT ph (#PCDATA|ex)*>\n<!ATTLIST ph name CDATA #REQUIRED>\n\n<!ELEMENT ex (#PCDATA)>'
              ),
              new Ls(),
              n.addDefaultExamples(i),
              new Ls(),
            ])
          );
        }
        load(e, t) {
          throw new Error("Unsupported");
        }
        digest(e) {
          return qs(e);
        }
        createNameMapper(e) {
          return new Ds(e, Ys);
        }
      }
      class $s {
        visitText(e, t) {
          return [new Fs(e.value)];
        }
        visitContainer(e, t) {
          const n = [];
          return e.children.forEach((e) => n.push(...e.visit(this))), n;
        }
        visitIcu(e, t) {
          const n = [new Fs(`{${e.expressionPlaceholder}, ${e.type}, `)];
          return (
            Object.keys(e.cases).forEach((t) => {
              n.push(new Fs(t + " {"), ...e.cases[t].visit(this), new Fs("} "));
            }),
            n.push(new Fs("}")),
            n
          );
        }
        visitTagPlaceholder(e, t) {
          const n = new Fs(`<${e.tag}>`),
            s = new Ns(Gs, {}, [n]),
            i = new Ns(Hs, { name: e.startName }, [s, n]);
          if (e.isVoid) return [i];
          const r = new Fs(`</${e.tag}>`),
            o = new Ns(Gs, {}, [r]),
            a = new Ns(Hs, { name: e.closeName }, [o, r]);
          return [i, ...this.serialize(e.children), a];
        }
        visitPlaceholder(e, t) {
          const n = new Fs(`{{${e.value}}}`),
            s = new Ns(Gs, {}, [n]);
          return [new Ns(Hs, { name: e.name }, [s, n])];
        }
        visitIcuPlaceholder(e, t) {
          const n = e.value.expression,
            s = e.value.type,
            i = Object.keys(e.value.cases)
              .map((e) => e + " {...}")
              .join(" "),
            r = new Fs(`{${n}, ${s}, ${i}}`),
            o = new Ns(Gs, {}, [r]);
          return [new Ns(Hs, { name: e.name }, [o, r])];
        }
        serialize(e) {
          return [].concat(...e.map((e) => e.visit(this)));
        }
      }
      function qs(e) {
        return ps(e);
      }
      class Ws {
        addDefaultExamples(e) {
          return e.visit(this), e;
        }
        visitTag(e) {
          if (e.name === Hs) {
            if (!e.children || 0 == e.children.length) {
              const t = new Fs(e.attrs.name || "...");
              e.children = [new Ns(Gs, {}, [t])];
            }
          } else e.children && e.children.forEach((e) => e.visit(this));
        }
        visitText(e) {}
        visitDeclaration(e) {}
        visitDoctype(e) {}
      }
      function Ys(e) {
        return e.toUpperCase().replace(/[^A-Z0-9_]/g, "_");
      }
      const Qs = "i18n",
        Ks = "i18n-";
      function Js(e) {
        return e === Qs || e.startsWith(Ks);
      }
      function Xs(e) {
        return e instanceof ns;
      }
      function Zs(e) {
        return Xs(e) && 1 === e.nodes.length && e.nodes[0] instanceof rs;
      }
      function ei(e) {
        return !!e.i18n;
      }
      function ti(e) {
        return e.nodes[0];
      }
      function ni(e, t = 0) {
        return `\ufffd${e}${t > 0 ? ":" + t : ""}\ufffd`;
      }
      function si(e = 0) {
        let t = e;
        return () => t++;
      }
      function ii(e) {
        const t = {};
        return (
          e.forEach((e, n) => {
            t[n] = It(e.length > 1 ? `[${e.join("|")}]` : e[0]);
          }),
          t
        );
      }
      function ri(e, t, ...n) {
        const s = e.get(t) || [];
        s.push(...n), e.set(t, s);
      }
      function oi(e, t = 0, n = 0) {
        const s = t,
          i = new Map(),
          r = e instanceof ns ? e.nodes.find((e) => e instanceof is) : e;
        return (
          r &&
            r.children
              .filter((e) => e instanceof as)
              .forEach((e, t) => {
                const r = ni(s + t, n);
                ri(i, e.name, r);
              }),
          i
        );
      }
      function ai(e = {}, t) {
        const n = {};
        return (
          e &&
            Object.keys(e).length &&
            Object.keys(e).forEach((s) => (n[li(s, t)] = e[s])),
          n
        );
      }
      function li(e, t = !0) {
        const n = Ys(e);
        if (!t) return n;
        const s = n.split("_");
        if (1 === s.length) return e.toLowerCase();
        let i;
        /^\d+$/.test(s[s.length - 1]) && (i = s.pop());
        let r = s.shift().toLowerCase();
        return (
          s.length &&
            (r += s
              .map((e) => e.charAt(0).toUpperCase() + e.slice(1).toLowerCase())
              .join("")),
          i ? `${r}_${i}` : r
        );
      }
      function ci(e) {
        return ("MSG_" + e).toUpperCase();
      }
      function ui(e) {
        return new nt(e.name, void 0, re, void 0, e.sourceSpan);
      }
      const di = /[-.]/,
        hi = "_t",
        pi = "ctx",
        mi = "rf";
      function fi(e, t) {
        let n = null;
        return () => (n || (e.push(new nt(hi, void 0, ie)), (n = bt(t))), n);
      }
      function gi(e) {
        if (this)
          throw new Error(
            `Builder ${this.constructor.name} doesn't support ${e} yet`
          );
        throw new Error(`Feature ${e} is not supported yet`);
      }
      function yi(e) {
        throw new Error(
          `Invalid state: Visitor ${this.constructor.name} doesn't handle ${e.constructor.name}`
        );
      }
      function vi(e) {
        return Array.isArray(e) ? St(e.map(vi)) : It(e, re);
      }
      function bi(e, t) {
        return Object.getOwnPropertyNames(e).length > 0
          ? (function (e, t) {
              return Et(
                Object.getOwnPropertyNames(e).map((n) => {
                  const s = e[n];
                  let i, r, o;
                  return (
                    Array.isArray(s) ? ([r, i] = s) : ([i, r] = Mt(n, [n, s])),
                    (o = i),
                    {
                      key: o,
                      quoted: di.test(o),
                      value: t && r !== i ? St([vi(r), vi(i)]) : vi(r),
                    }
                  );
                })
              );
            })(e, t)
          : null;
      }
      function xi(e) {
        for (; Tt(e[e.length - 1]); ) e.pop();
        return e;
      }
      function _i(e, t) {
        if (Array.isArray(e.predicate)) {
          let n = [];
          return (
            e.predicate.forEach((e) => {
              const t = e.split(",").map((e) => It(e.trim()));
              n.push(...t);
            }),
            t.getConstLiteral(St(n), !0)
          );
        }
        return e.predicate;
      }
      class wi {
        constructor() {
          this.values = [];
        }
        set(e, t) {
          t && this.values.push({ key: e, value: t, quoted: !1 });
        }
        toLiteralMap() {
          return Et(this.values);
        }
      }
      function Ci(e) {
        const t = {};
        return (
          e instanceof Kn && "ng-template" !== e.tagName
            ? e.templateAttrs.forEach((e) => (t[e.name] = ""))
            : (e.attributes.forEach((e) => {
                Js(e.name) || (t[e.name] = e.value);
              }),
              e.inputs.forEach((e) => {
                t[e.name] = "";
              }),
              e.outputs.forEach((e) => {
                t[e.name] = "";
              })),
          t
        );
      }
      function Si(e, t, n) {
        let s = xt(e, null, n);
        if (t.length > 0)
          for (let i = 0; i < t.length; i++) s = s.callFn(t[i], n);
        else s = s.callFn([], n);
        return s;
      }
      function Ei(e) {
        const { expressions: t, strings: n } = e;
        return 1 === t.length && 2 === n.length && "" === n[0] && "" === n[1]
          ? 1
          : t.length + n.length;
      }
      var ki, Oi, Ii;
      function Ti(e) {
        const t = bt("t"),
          n = [];
        let s = ce;
        const i = Di(e) ? t : new Ge(de.Or, t, e.internalType);
        let r = null;
        if (null !== e.deps)
          "invalid" !== e.deps &&
            ((r = new Ee(i, Ai(e.deps, e.injectFn, e.target === Oi.Pipe))),
            (s = (function (e) {
              let t = !1;
              const n = e.map((e) => {
                const n = (function (e) {
                  const t = [];
                  e.resolved === Ii.Attribute &&
                    null !== e.attribute &&
                    t.push({
                      key: "attribute",
                      value: e.attribute,
                      quoted: !1,
                    });
                  e.optional &&
                    t.push({ key: "optional", value: It(!0), quoted: !1 });
                  e.host && t.push({ key: "host", value: It(!0), quoted: !1 });
                  e.self && t.push({ key: "self", value: It(!0), quoted: !1 });
                  e.skipSelf &&
                    t.push({ key: "skipSelf", value: It(!0), quoted: !1 });
                  return t.length > 0 ? Et(t) : null;
                })(e);
                return null !== n ? ((t = !0), n) : It(null);
              });
              return t ? wt(St(n)) : ce;
            })(e.deps)));
        else {
          const t = bt(`\u0275${e.name}_BaseFactory`),
            s = xt(Vn.getInheritedFactory),
            o = t
              .set(s.callFn([e.internalType], void 0, !0))
              .toDeclStmt(re, [Xe.Exported, Xe.Final]);
          n.push(o), (r = t.callFn([i]));
        }
        const o = r,
          a = [];
        let l = null;
        function c(e) {
          const n = bt("r");
          a.push(n.set(Ke).toDeclStmt());
          let s = null;
          return (
            (s =
              null !== o
                ? n.set(o).toStmt()
                : xt(Vn.invalidFactory).callFn([]).toStmt()),
            a.push(Ot(t, [s], [n.set(e).toStmt()])),
            n
          );
        }
        if (Di(e) && e.delegateType === ki.Factory) {
          const t = bt(`\u0275${e.name}_BaseFactory`),
            s = xt(Vn.getFactoryOf);
          if (e.delegate.isEquivalent(e.internalType))
            throw new Error(
              "Illegal state: compiling factory that delegates to itself"
            );
          const i = t
            .set(s.callFn([e.delegate]))
            .toDeclStmt(re, [Xe.Exported, Xe.Final]);
          n.push(i), (l = c(t.callFn([])));
        } else if (Di(e)) {
          const t = Ai(e.delegateDeps, e.injectFn, e.target === Oi.Pipe);
          l = c(new (e.delegateType === ki.Class ? Ee : Se)(e.delegate, t));
        } else
          l = (function (e) {
            return void 0 !== e.expression;
          })(e)
            ? c(e.expression)
            : r;
        return (
          null !== l
            ? a.push(new rt(l))
            : a.push(xt(Vn.invalidFactory).callFn([]).toStmt()),
          {
            factory: kt([new Be("t", ie)], a, re, void 0, e.name + "_Factory"),
            statements: n,
            type: wt(
              xt(Vn.FactoryDef, [zn(e.type.type, e.typeArgumentCount), s])
            ),
          }
        );
      }
      function Ai(e, t, n) {
        return e.map((e, s) =>
          (function (e, t, n, s) {
            switch (e.resolved) {
              case Ii.Token:
              case Ii.ChangeDetectorRef:
                const i =
                  0 |
                  (e.self ? 2 : 0) |
                  (e.skipSelf ? 4 : 0) |
                  (e.host ? 1 : 0) |
                  (e.optional ? 8 : 0);
                let r = 0 !== i || e.optional ? It(i) : null;
                if (n && e.resolved === Ii.ChangeDetectorRef)
                  return xt(Vn.injectPipeChangeDetectorRef).callFn(
                    r ? [r] : []
                  );
                const o = [e.token];
                return r && o.push(r), xt(t).callFn(o);
              case Ii.Attribute:
                return xt(Vn.injectAttribute).callFn([e.token]);
              case Ii.Invalid:
                return xt(Vn.invalidFactoryDep).callFn([It(s)]);
              default:
                return gi(
                  "Unknown R3ResolvedDependencyType: " + Ii[e.resolved]
                );
            }
          })(e, t, n, s)
        );
      }
      function Di(e) {
        return void 0 !== e.delegateType;
      }
      function Mi(e, t) {
        return {
          statements: [],
          factory:
            e.node === t.node
              ? t.prop("\u0275fac")
              : kt(
                  [new Be("t", ie)],
                  [new rt(t.callMethod("\u0275fac", [bt("t")]))]
                ),
        };
      }
      function Pi(e, t) {
        if (null != t) {
          if (!Array.isArray(t))
            throw new Error(`Expected '${e}' to be an array of strings.`);
          for (let n = 0; n < t.length; n += 1)
            if ("string" != typeof t[n])
              throw new Error(`Expected '${e}' to be an array of strings.`);
        }
      }
      !(function (e) {
        (e[(e.Class = 0)] = "Class"),
          (e[(e.Function = 1)] = "Function"),
          (e[(e.Factory = 2)] = "Factory");
      })(ki || (ki = {})),
        (function (e) {
          (e[(e.Directive = 0)] = "Directive"),
            (e[(e.Component = 1)] = "Component"),
            (e[(e.Injectable = 2)] = "Injectable"),
            (e[(e.Pipe = 3)] = "Pipe"),
            (e[(e.NgModule = 4)] = "NgModule");
        })(Oi || (Oi = {})),
        (function (e) {
          (e[(e.Token = 0)] = "Token"),
            (e[(e.Attribute = 1)] = "Attribute"),
            (e[(e.ChangeDetectorRef = 2)] = "ChangeDetectorRef"),
            (e[(e.Invalid = 3)] = "Invalid");
        })(Ii || (Ii = {}));
      const Ri = [/^\s*$/, /[<>]/, /^[{}]$/, /&(#|[a-z])/i, /^\/\//];
      function ji(e, t) {
        if (!(null == t || (Array.isArray(t) && 2 == t.length)))
          throw new Error(`Expected '${e}' to be an array, [start, end].`);
        if (null != t) {
          const e = t[0],
            n = t[1];
          Ri.forEach((t) => {
            if (t.test(e) || t.test(n))
              throw new Error(
                `['${e}', '${n}'] contains unusable interpolation symbol.`
              );
          });
        }
      }
      class Ni {
        constructor(e, t) {
          (this.start = e), (this.end = t);
        }
        static fromArray(e) {
          return e ? (ji("interpolation", e), new Ni(e[0], e[1])) : Fi;
        }
      }
      const Fi = new Ni("{{", "}}");
      class Li {
        constructor(e = null) {
          (this.file = e),
            (this.sourcesContent = new Map()),
            (this.lines = []),
            (this.lastCol0 = 0),
            (this.hasMappings = !1);
        }
        addSource(e, t = null) {
          return (
            this.sourcesContent.has(e) || this.sourcesContent.set(e, t), this
          );
        }
        addLine() {
          return this.lines.push([]), (this.lastCol0 = 0), this;
        }
        addMapping(e, t, n, s) {
          if (!this.currentLine)
            throw new Error(
              "A line must be added before mappings can be added"
            );
          if (null != t && !this.sourcesContent.has(t))
            throw new Error(`Unknown source file "${t}"`);
          if (null == e)
            throw new Error(
              "The column in the generated code must be provided"
            );
          if (e < this.lastCol0)
            throw new Error("Mapping should be added in output order");
          if (t && (null == n || null == s))
            throw new Error(
              "The source location must be provided when a source url is provided"
            );
          return (
            (this.hasMappings = !0),
            (this.lastCol0 = e),
            this.currentLine.push({
              col0: e,
              sourceUrl: t,
              sourceLine0: n,
              sourceCol0: s,
            }),
            this
          );
        }
        get currentLine() {
          return this.lines.slice(-1)[0];
        }
        toJSON() {
          if (!this.hasMappings) return null;
          const e = new Map(),
            t = [],
            n = [];
          Array.from(this.sourcesContent.keys()).forEach((s, i) => {
            e.set(s, i), t.push(s), n.push(this.sourcesContent.get(s) || null);
          });
          let s = "",
            i = 0,
            r = 0,
            o = 0,
            a = 0;
          return (
            this.lines.forEach((t) => {
              (i = 0),
                (s += t
                  .map((t) => {
                    let n = Vi(t.col0 - i);
                    return (
                      (i = t.col0),
                      null != t.sourceUrl &&
                        ((n += Vi(e.get(t.sourceUrl) - r)),
                        (r = e.get(t.sourceUrl)),
                        (n += Vi(t.sourceLine0 - o)),
                        (o = t.sourceLine0),
                        (n += Vi(t.sourceCol0 - a)),
                        (a = t.sourceCol0)),
                      n
                    );
                  })
                  .join(",")),
                (s += ";");
            }),
            (s = s.slice(0, -1)),
            {
              file: this.file || "",
              version: 3,
              sourceRoot: "",
              sources: t,
              sourcesContent: n,
              mappings: s,
            }
          );
        }
        toJsComment() {
          return this.hasMappings
            ? "//# sourceMappingURL=data:application/json;base64," +
                (function (e) {
                  let t = "";
                  const n = Wt(e);
                  for (let s = 0; s < n.length; ) {
                    const e = n[s++],
                      i = s < n.length ? n[s++] : null,
                      r = s < n.length ? n[s++] : null;
                    (t += Bi(e >> 2)),
                      (t += Bi(((3 & e) << 4) | (null === i ? 0 : i >> 4))),
                      (t +=
                        null === i
                          ? "="
                          : Bi(((15 & i) << 2) | (null === r ? 0 : r >> 6))),
                      (t += null === i || null === r ? "=" : Bi(63 & r));
                  }
                  return t;
                })(JSON.stringify(this, null, 0))
            : "";
        }
      }
      function Vi(e) {
        e = e < 0 ? 1 + (-e << 1) : e << 1;
        let t = "";
        do {
          let n = 31 & e;
          (e >>= 5) > 0 && (n |= 32), (t += Bi(n));
        } while (e > 0);
        return t;
      }
      function Bi(e) {
        if (e < 0 || e >= 64)
          throw new Error("Can only encode value in the range [0, 63]");
        return "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[
          e
        ];
      }
      const zi = /'|\\|\n|\r|\$/g,
        Hi = /^[$A-Z_][0-9A-Z_$]*$/i,
        Gi = "  ",
        Ui = bt("error", null, null),
        $i = bt("stack", null, null);
      class qi {
        constructor(e) {
          (this.indent = e),
            (this.partsLength = 0),
            (this.parts = []),
            (this.srcSpans = []);
        }
      }
      class Wi {
        constructor(e) {
          (this._indent = e),
            (this._classes = []),
            (this._preambleLineCount = 0),
            (this._lines = [new qi(e)]);
        }
        static createRoot() {
          return new Wi(0);
        }
        get _currentLine() {
          return this._lines[this._lines.length - 1];
        }
        println(e, t = "") {
          this.print(e || null, t, !0);
        }
        lineIsEmpty() {
          return 0 === this._currentLine.parts.length;
        }
        lineLength() {
          return (
            this._currentLine.indent * Gi.length + this._currentLine.partsLength
          );
        }
        print(e, t, n = !1) {
          t.length > 0 &&
            (this._currentLine.parts.push(t),
            (this._currentLine.partsLength += t.length),
            this._currentLine.srcSpans.push((e && e.sourceSpan) || null)),
            n && this._lines.push(new qi(this._indent));
        }
        removeEmptyLastLine() {
          this.lineIsEmpty() && this._lines.pop();
        }
        incIndent() {
          this._indent++,
            this.lineIsEmpty() && (this._currentLine.indent = this._indent);
        }
        decIndent() {
          this._indent--,
            this.lineIsEmpty() && (this._currentLine.indent = this._indent);
        }
        pushClass(e) {
          this._classes.push(e);
        }
        popClass() {
          return this._classes.pop();
        }
        get currentClass() {
          return this._classes.length > 0
            ? this._classes[this._classes.length - 1]
            : null;
        }
        toSource() {
          return this.sourceLines
            .map((e) =>
              e.parts.length > 0 ? Ki(e.indent) + e.parts.join("") : ""
            )
            .join("\n");
        }
        toSourceMapGenerator(e, t = 0) {
          const n = new Li(e);
          let s = !1;
          const i = () => {
            s || (n.addSource(e, " ").addMapping(0, e, 0, 0), (s = !0));
          };
          for (let r = 0; r < t; r++) n.addLine(), i();
          return (
            this.sourceLines.forEach((e, t) => {
              n.addLine();
              const r = e.srcSpans,
                o = e.parts;
              let a = e.indent * Gi.length,
                l = 0;
              for (; l < r.length && !r[l]; ) (a += o[l].length), l++;
              for (
                l < r.length && 0 === t && 0 === a ? (s = !0) : i();
                l < r.length;

              ) {
                const e = r[l],
                  t = e.start.file,
                  s = e.start.line,
                  i = e.start.col;
                for (
                  n.addSource(t.url, t.content).addMapping(a, t.url, s, i),
                    a += o[l].length,
                    l++;
                  l < r.length && (e === r[l] || !r[l]);

                )
                  (a += o[l].length), l++;
              }
            }),
            n
          );
        }
        setPreambleLineCount(e) {
          return (this._preambleLineCount = e);
        }
        spanOf(e, t) {
          const n = this._lines[e - this._preambleLineCount];
          if (n) {
            let e = t - Ki(n.indent).length;
            for (let t = 0; t < n.parts.length; t++) {
              const s = n.parts[t];
              if (s.length > e) return n.srcSpans[t];
              e -= s.length;
            }
          }
          return null;
        }
        get sourceLines() {
          return this._lines.length &&
            0 === this._lines[this._lines.length - 1].parts.length
            ? this._lines.slice(0, -1)
            : this._lines;
        }
      }
      class Yi {
        constructor(e) {
          this._escapeDollarInStrings = e;
        }
        printLeadingComments(e, t) {
          if (void 0 !== e.leadingComments)
            for (const n of e.leadingComments)
              n instanceof et
                ? t.print(e, `/*${n.toString()}*/`, n.trailingNewline)
                : n.multiline
                ? t.print(e, `/* ${n.text} */`, n.trailingNewline)
                : n.text.split("\n").forEach((n) => {
                    t.println(e, "// " + n);
                  });
        }
        visitExpressionStmt(e, t) {
          return (
            this.printLeadingComments(e, t),
            e.expr.visitExpression(this, t),
            t.println(e, ";"),
            null
          );
        }
        visitReturnStmt(e, t) {
          return (
            this.printLeadingComments(e, t),
            t.print(e, "return "),
            e.value.visitExpression(this, t),
            t.println(e, ";"),
            null
          );
        }
        visitIfStmt(e, t) {
          this.printLeadingComments(e, t),
            t.print(e, "if ("),
            e.condition.visitExpression(this, t),
            t.print(e, ") {");
          const n = null != e.falseCase && e.falseCase.length > 0;
          return (
            e.trueCase.length <= 1 && !n
              ? (t.print(e, " "),
                this.visitAllStatements(e.trueCase, t),
                t.removeEmptyLastLine(),
                t.print(e, " "))
              : (t.println(),
                t.incIndent(),
                this.visitAllStatements(e.trueCase, t),
                t.decIndent(),
                n &&
                  (t.println(e, "} else {"),
                  t.incIndent(),
                  this.visitAllStatements(e.falseCase, t),
                  t.decIndent())),
            t.println(e, "}"),
            null
          );
        }
        visitThrowStmt(e, t) {
          return (
            this.printLeadingComments(e, t),
            t.print(e, "throw "),
            e.error.visitExpression(this, t),
            t.println(e, ";"),
            null
          );
        }
        visitWriteVarExpr(e, t) {
          const n = t.lineIsEmpty();
          return (
            n || t.print(e, "("),
            t.print(e, e.name + " = "),
            e.value.visitExpression(this, t),
            n || t.print(e, ")"),
            null
          );
        }
        visitWriteKeyExpr(e, t) {
          const n = t.lineIsEmpty();
          return (
            n || t.print(e, "("),
            e.receiver.visitExpression(this, t),
            t.print(e, "["),
            e.index.visitExpression(this, t),
            t.print(e, "] = "),
            e.value.visitExpression(this, t),
            n || t.print(e, ")"),
            null
          );
        }
        visitWritePropExpr(e, t) {
          const n = t.lineIsEmpty();
          return (
            n || t.print(e, "("),
            e.receiver.visitExpression(this, t),
            t.print(e, `.${e.name} = `),
            e.value.visitExpression(this, t),
            n || t.print(e, ")"),
            null
          );
        }
        visitInvokeMethodExpr(e, t) {
          e.receiver.visitExpression(this, t);
          let n = e.name;
          return (
            (null != e.builtin &&
              ((n = this.getBuiltinMethodName(e.builtin)), null == n)) ||
              (t.print(e, `.${n}(`),
              this.visitAllExpressions(e.args, t, ","),
              t.print(e, ")")),
            null
          );
        }
        visitInvokeFunctionExpr(e, t) {
          return (
            e.fn.visitExpression(this, t),
            t.print(e, "("),
            this.visitAllExpressions(e.args, t, ","),
            t.print(e, ")"),
            null
          );
        }
        visitWrappedNodeExpr(e, t) {
          throw new Error("Abstract emitter cannot visit WrappedNodeExpr.");
        }
        visitTypeofExpr(e, t) {
          t.print(e, "typeof "), e.expr.visitExpression(this, t);
        }
        visitReadVarExpr(e, t) {
          let n = e.name;
          if (null != e.builtin)
            switch (e.builtin) {
              case he.Super:
                n = "super";
                break;
              case he.This:
                n = "this";
                break;
              case he.CatchError:
                n = Ui.name;
                break;
              case he.CatchStack:
                n = $i.name;
                break;
              default:
                throw new Error("Unknown builtin variable " + e.builtin);
            }
          return t.print(e, n), null;
        }
        visitInstantiateExpr(e, t) {
          return (
            t.print(e, "new "),
            e.classExpr.visitExpression(this, t),
            t.print(e, "("),
            this.visitAllExpressions(e.args, t, ","),
            t.print(e, ")"),
            null
          );
        }
        visitLiteralExpr(e, t) {
          const n = e.value;
          return (
            "string" == typeof n
              ? t.print(e, Qi(n, this._escapeDollarInStrings))
              : t.print(e, "" + n),
            null
          );
        }
        visitLocalizedString(e, t) {
          const n = e.serializeI18nHead();
          t.print(e, "$localize `" + n.raw);
          for (let s = 1; s < e.messageParts.length; s++)
            t.print(e, "${"),
              e.expressions[s - 1].visitExpression(this, t),
              t.print(e, "}" + e.serializeI18nTemplatePart(s).raw);
          return t.print(e, "`"), null;
        }
        visitConditionalExpr(e, t) {
          return (
            t.print(e, "("),
            e.condition.visitExpression(this, t),
            t.print(e, "? "),
            e.trueCase.visitExpression(this, t),
            t.print(e, ": "),
            e.falseCase.visitExpression(this, t),
            t.print(e, ")"),
            null
          );
        }
        visitNotExpr(e, t) {
          return t.print(e, "!"), e.condition.visitExpression(this, t), null;
        }
        visitAssertNotNullExpr(e, t) {
          return e.condition.visitExpression(this, t), null;
        }
        visitUnaryOperatorExpr(e, t) {
          let n;
          switch (e.operator) {
            case ue.Plus:
              n = "+";
              break;
            case ue.Minus:
              n = "-";
              break;
            default:
              throw new Error("Unknown operator " + e.operator);
          }
          return (
            e.parens && t.print(e, "("),
            t.print(e, n),
            e.expr.visitExpression(this, t),
            e.parens && t.print(e, ")"),
            null
          );
        }
        visitBinaryOperatorExpr(e, t) {
          let n;
          switch (e.operator) {
            case de.Equals:
              n = "==";
              break;
            case de.Identical:
              n = "===";
              break;
            case de.NotEquals:
              n = "!=";
              break;
            case de.NotIdentical:
              n = "!==";
              break;
            case de.And:
              n = "&&";
              break;
            case de.BitwiseAnd:
              n = "&";
              break;
            case de.Or:
              n = "||";
              break;
            case de.Plus:
              n = "+";
              break;
            case de.Minus:
              n = "-";
              break;
            case de.Divide:
              n = "/";
              break;
            case de.Multiply:
              n = "*";
              break;
            case de.Modulo:
              n = "%";
              break;
            case de.Lower:
              n = "<";
              break;
            case de.LowerEquals:
              n = "<=";
              break;
            case de.Bigger:
              n = ">";
              break;
            case de.BiggerEquals:
              n = ">=";
              break;
            default:
              throw new Error("Unknown operator " + e.operator);
          }
          return (
            e.parens && t.print(e, "("),
            e.lhs.visitExpression(this, t),
            t.print(e, ` ${n} `),
            e.rhs.visitExpression(this, t),
            e.parens && t.print(e, ")"),
            null
          );
        }
        visitReadPropExpr(e, t) {
          return (
            e.receiver.visitExpression(this, t),
            t.print(e, "."),
            t.print(e, e.name),
            null
          );
        }
        visitReadKeyExpr(e, t) {
          return (
            e.receiver.visitExpression(this, t),
            t.print(e, "["),
            e.index.visitExpression(this, t),
            t.print(e, "]"),
            null
          );
        }
        visitLiteralArrayExpr(e, t) {
          return (
            t.print(e, "["),
            this.visitAllExpressions(e.entries, t, ","),
            t.print(e, "]"),
            null
          );
        }
        visitLiteralMapExpr(e, t) {
          return (
            t.print(e, "{"),
            this.visitAllObjects(
              (n) => {
                t.print(
                  e,
                  Qi(n.key, this._escapeDollarInStrings, n.quoted) + ":"
                ),
                  n.value.visitExpression(this, t);
              },
              e.entries,
              t,
              ","
            ),
            t.print(e, "}"),
            null
          );
        }
        visitCommaExpr(e, t) {
          return (
            t.print(e, "("),
            this.visitAllExpressions(e.parts, t, ","),
            t.print(e, ")"),
            null
          );
        }
        visitAllExpressions(e, t, n) {
          this.visitAllObjects((e) => e.visitExpression(this, t), e, t, n);
        }
        visitAllObjects(e, t, n, s) {
          let i = !1;
          for (let r = 0; r < t.length; r++)
            r > 0 &&
              (n.lineLength() > 80
                ? (n.print(null, s, !0),
                  i || (n.incIndent(), n.incIndent(), (i = !0)))
                : n.print(null, s, !1)),
              e(t[r]);
          i && (n.decIndent(), n.decIndent());
        }
        visitAllStatements(e, t) {
          e.forEach((e) => e.visitStatement(this, t));
        }
      }
      function Qi(e, t, n = !0) {
        if (null == e) return null;
        const s = e.replace(zi, (...e) =>
          "$" == e[0]
            ? t
              ? "\\$"
              : "$"
            : "\n" == e[0]
            ? "\\n"
            : "\r" == e[0]
            ? "\\r"
            : "\\" + e[0]
        );
        return n || !Hi.test(s) ? `'${s}'` : s;
      }
      function Ki(e) {
        let t = "";
        for (let n = 0; n < e; n++) t += Gi;
        return t;
      }
      class Ji extends Yi {
        constructor() {
          super(!1);
        }
        visitDeclareClassStmt(e, t) {
          return (
            t.pushClass(e),
            this._visitClassConstructor(e, t),
            null != e.parent &&
              (t.print(e, e.name + ".prototype = Object.create("),
              e.parent.visitExpression(this, t),
              t.println(e, ".prototype);")),
            e.getters.forEach((n) => this._visitClassGetter(e, n, t)),
            e.methods.forEach((n) => this._visitClassMethod(e, n, t)),
            t.popClass(),
            null
          );
        }
        _visitClassConstructor(e, t) {
          t.print(e, `function ${e.name}(`),
            null != e.constructorMethod &&
              this._visitParams(e.constructorMethod.params, t),
            t.println(e, ") {"),
            t.incIndent(),
            null != e.constructorMethod &&
              e.constructorMethod.body.length > 0 &&
              (t.println(e, "var self = this;"),
              this.visitAllStatements(e.constructorMethod.body, t)),
            t.decIndent(),
            t.println(e, "}");
        }
        _visitClassGetter(e, t, n) {
          n.println(
            e,
            `Object.defineProperty(${e.name}.prototype, '${t.name}', { get: function() {`
          ),
            n.incIndent(),
            t.body.length > 0 &&
              (n.println(e, "var self = this;"),
              this.visitAllStatements(t.body, n)),
            n.decIndent(),
            n.println(e, "}});");
        }
        _visitClassMethod(e, t, n) {
          n.print(e, `${e.name}.prototype.${t.name} = function(`),
            this._visitParams(t.params, n),
            n.println(e, ") {"),
            n.incIndent(),
            t.body.length > 0 &&
              (n.println(e, "var self = this;"),
              this.visitAllStatements(t.body, n)),
            n.decIndent(),
            n.println(e, "};");
        }
        visitWrappedNodeExpr(e, t) {
          throw new Error("Cannot emit a WrappedNodeExpr in Javascript.");
        }
        visitReadVarExpr(e, t) {
          if (e.builtin === he.This) t.print(e, "self");
          else {
            if (e.builtin === he.Super)
              throw new Error(
                "'super' needs to be handled at a parent ast node, not at the variable level!"
              );
            super.visitReadVarExpr(e, t);
          }
          return null;
        }
        visitDeclareVarStmt(e, t) {
          return (
            t.print(e, "var " + e.name),
            e.value && (t.print(e, " = "), e.value.visitExpression(this, t)),
            t.println(e, ";"),
            null
          );
        }
        visitCastExpr(e, t) {
          return e.value.visitExpression(this, t), null;
        }
        visitInvokeFunctionExpr(e, t) {
          const n = e.fn;
          return (
            n instanceof ye && n.builtin === he.Super
              ? (t.currentClass.parent.visitExpression(this, t),
                t.print(e, ".call(this"),
                e.args.length > 0 &&
                  (t.print(e, ", "), this.visitAllExpressions(e.args, t, ",")),
                t.print(e, ")"))
              : super.visitInvokeFunctionExpr(e, t),
            null
          );
        }
        visitFunctionExpr(e, t) {
          return (
            t.print(e, `function${e.name ? " " + e.name : ""}(`),
            this._visitParams(e.params, t),
            t.println(e, ") {"),
            t.incIndent(),
            this.visitAllStatements(e.statements, t),
            t.decIndent(),
            t.print(e, "}"),
            null
          );
        }
        visitDeclareFunctionStmt(e, t) {
          return (
            t.print(e, `function ${e.name}(`),
            this._visitParams(e.params, t),
            t.println(e, ") {"),
            t.incIndent(),
            this.visitAllStatements(e.statements, t),
            t.decIndent(),
            t.println(e, "}"),
            null
          );
        }
        visitTryCatchStmt(e, t) {
          t.println(e, "try {"),
            t.incIndent(),
            this.visitAllStatements(e.bodyStmts, t),
            t.decIndent(),
            t.println(e, `} catch (${Ui.name}) {`),
            t.incIndent();
          const n = [
            $i.set(Ui.prop("stack")).toDeclStmt(null, [Xe.Final]),
          ].concat(e.catchStmts);
          return (
            this.visitAllStatements(n, t),
            t.decIndent(),
            t.println(e, "}"),
            null
          );
        }
        visitLocalizedString(e, t) {
          t.print(
            e,
            '$localize((this&&this.__makeTemplateObject||function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e})('
          );
          const n = [e.serializeI18nHead()];
          for (let s = 1; s < e.messageParts.length; s++)
            n.push(e.serializeI18nTemplatePart(s));
          return (
            t.print(e, `[${n.map((e) => Qi(e.cooked, !1)).join(", ")}], `),
            t.print(e, `[${n.map((e) => Qi(e.raw, !1)).join(", ")}])`),
            e.expressions.forEach((n) => {
              t.print(e, ", "), n.visitExpression(this, t);
            }),
            t.print(e, ")"),
            null
          );
        }
        _visitParams(e, t) {
          this.visitAllObjects((e) => t.print(null, e.name), e, t, ",");
        }
        getBuiltinMethodName(e) {
          let t;
          switch (e) {
            case pe.ConcatArray:
              t = "concat";
              break;
            case pe.SubscribeObservable:
              t = "subscribe";
              break;
            case pe.Bind:
              t = "bind";
              break;
            default:
              throw new Error("Unknown builtin method: " + e);
          }
          return t;
        }
      }
      class Xi {
        evaluateStatements(e, t, n, s) {
          const i = new Zi(n),
            r = Wi.createRoot();
          return (
            t.length > 0 &&
              !t[0].isEquivalent(It("use strict").toStmt()) &&
              (t = [It("use strict").toStmt(), ...t]),
            i.visitAllStatements(t, r),
            i.createReturnStmt(r),
            this.evaluateCode(e, r, i.getArgs(), s)
          );
        }
        evaluateCode(e, t, n, s) {
          let i = `"use strict";${t.toSource()}\n//# sourceURL=${e}`;
          const r = [],
            o = [];
          for (const l in n) o.push(n[l]), r.push(l);
          if (s) {
            const n = new Function(...r.concat("return null;")).toString(),
              s = n.slice(0, n.indexOf("return null;")).split("\n").length - 1;
            i += "\n" + t.toSourceMapGenerator(e, s).toJsComment();
          }
          const a = new Function(...r.concat(i));
          return this.executeFunction(a, o);
        }
        executeFunction(e, t) {
          return e(...t);
        }
      }
      class Zi extends Ji {
        constructor(e) {
          super(),
            (this.reflector = e),
            (this._evalArgNames = []),
            (this._evalArgValues = []),
            (this._evalExportedVars = []);
        }
        createReturnStmt(e) {
          new rt(
            new Ye(this._evalExportedVars.map((e) => new We(e, bt(e), !1)))
          ).visitStatement(this, e);
        }
        getArgs() {
          const e = {};
          for (let t = 0; t < this._evalArgNames.length; t++)
            e[this._evalArgNames[t]] = this._evalArgValues[t];
          return e;
        }
        visitExternalExpr(e, t) {
          return (
            this._emitReferenceToExternal(
              e,
              this.reflector.resolveExternalReference(e.value),
              t
            ),
            null
          );
        }
        visitWrappedNodeExpr(e, t) {
          return this._emitReferenceToExternal(e, e.node, t), null;
        }
        visitDeclareVarStmt(e, t) {
          return (
            e.hasModifier(Xe.Exported) && this._evalExportedVars.push(e.name),
            super.visitDeclareVarStmt(e, t)
          );
        }
        visitDeclareFunctionStmt(e, t) {
          return (
            e.hasModifier(Xe.Exported) && this._evalExportedVars.push(e.name),
            super.visitDeclareFunctionStmt(e, t)
          );
        }
        visitDeclareClassStmt(e, t) {
          return (
            e.hasModifier(Xe.Exported) && this._evalExportedVars.push(e.name),
            super.visitDeclareClassStmt(e, t)
          );
        }
        _emitReferenceToExternal(e, t, n) {
          let s = this._evalArgValues.indexOf(t);
          if (-1 === s) {
            (s = this._evalArgValues.length), this._evalArgValues.push(t);
            const e = bn({ reference: t }) || "val";
            this._evalArgNames.push(`jit_${e}_${s}`);
          }
          n.print(e, this._evalArgNames[s]);
        }
      }
      const er = 10,
        tr = 41,
        nr = 44,
        sr = 47,
        ir = 58,
        rr = 59,
        or = 60,
        ar = 61,
        lr = 62,
        cr = 97,
        ur = 122,
        dr = 123,
        hr = 125;
      function pr(e) {
        return (e >= 9 && e <= 32) || 160 == e;
      }
      function mr(e) {
        return 48 <= e && e <= 57;
      }
      function fr(e) {
        return (e >= cr && e <= ur) || (e >= 65 && e <= 90);
      }
      function gr(e) {
        return e === er || 13 === e;
      }
      function yr(e) {
        return 48 <= e && e <= 55;
      }
      class vr {
        constructor(e, t, n, s) {
          (this.file = e), (this.offset = t), (this.line = n), (this.col = s);
        }
        toString() {
          return null != this.offset
            ? `${this.file.url}@${this.line}:${this.col}`
            : this.file.url;
        }
        moveBy(e) {
          const t = this.file.content,
            n = t.length;
          let s = this.offset,
            i = this.line,
            r = this.col;
          for (; s > 0 && e < 0; ) {
            s--, e++;
            if (t.charCodeAt(s) == er) {
              i--;
              const e = t.substr(0, s - 1).lastIndexOf(String.fromCharCode(er));
              r = e > 0 ? s - e : s;
            } else r--;
          }
          for (; s < n && e > 0; ) {
            const n = t.charCodeAt(s);
            s++, e--, n == er ? (i++, (r = 0)) : r++;
          }
          return new vr(this.file, s, i, r);
        }
        getContext(e, t) {
          const n = this.file.content;
          let s = this.offset;
          if (null != s) {
            s > n.length - 1 && (s = n.length - 1);
            let i = s,
              r = 0,
              o = 0;
            for (; r < e && s > 0 && (s--, r++, "\n" != n[s] || ++o != t); );
            for (
              r = 0, o = 0;
              r < e && i < n.length - 1 && (i++, r++, "\n" != n[i] || ++o != t);

            );
            return {
              before: n.substring(s, this.offset),
              after: n.substring(this.offset, i + 1),
            };
          }
          return null;
        }
      }
      class br {
        constructor(e, t) {
          (this.content = e), (this.url = t);
        }
      }
      class xr {
        constructor(e, t, n = e, s = null) {
          (this.start = e),
            (this.end = t),
            (this.fullStart = n),
            (this.details = s);
        }
        toString() {
          return this.start.file.content.substring(
            this.start.offset,
            this.end.offset
          );
        }
      }
      var _r, wr, Cr, Sr;
      !(function (e) {
        (e[(e.WARNING = 0)] = "WARNING"), (e[(e.ERROR = 1)] = "ERROR");
      })(_r || (_r = {}));
      class Er {
        constructor(e, t, n = _r.ERROR) {
          (this.span = e), (this.msg = t), (this.level = n);
        }
        contextualMessage() {
          const e = this.span.start.getContext(100, 3);
          return e
            ? `${this.msg} ("${e.before}[${_r[this.level]} ->]${e.after}")`
            : this.msg;
        }
        toString() {
          const e = this.span.details ? ", " + this.span.details : "";
          return `${this.contextualMessage()}: ${this.span.start}${e}`;
        }
      }
      class kr {
        constructor(e) {
          this.context = e;
        }
        resolveExternalReference(e) {
          if ("@angular/core" !== e.moduleName)
            throw new Error(
              `Cannot resolve external reference to ${e.moduleName}, only references to @angular/core are supported.`
            );
          if (!this.context.hasOwnProperty(e.name))
            throw new Error(
              `No value provided for @angular/core symbol '${e.name}'.`
            );
          return this.context[e.name];
        }
        parameters(e) {
          throw new Error("Not implemented.");
        }
        annotations(e) {
          throw new Error("Not implemented.");
        }
        shallowAnnotations(e) {
          throw new Error("Not implemented.");
        }
        tryAnnotations(e) {
          throw new Error("Not implemented.");
        }
        propMetadata(e) {
          throw new Error("Not implemented.");
        }
        hasLifecycleHook(e, t) {
          throw new Error("Not implemented.");
        }
        guards(e) {
          throw new Error("Not implemented.");
        }
        componentModuleUrl(e, t) {
          throw new Error("Not implemented.");
        }
      }
      function Or(e, t = !1) {
        return Et(
          Object.keys(e).map((n) => ({ key: n, quoted: t, value: e[n] }))
        );
      }
      function Ir(e) {
        const {
            internalType: t,
            type: n,
            bootstrap: s,
            declarations: i,
            imports: r,
            exports: o,
            schemas: a,
            containsForwardDecls: l,
            emitInline: c,
            id: u,
          } = e,
          d = [],
          h = { type: t };
        if ((s.length && (h.bootstrap = Ar(s, l)), c))
          i.length && (h.declarations = Ar(i, l)),
            r.length && (h.imports = Ar(r, l)),
            o.length && (h.exports = Ar(o, l));
        else {
          const t = (function (e) {
            const {
                adjacentType: t,
                declarations: n,
                imports: s,
                exports: i,
                containsForwardDecls: r,
              } = e,
              o = {};
            n.length && (o.declarations = Ar(n, r));
            s.length && (o.imports = Ar(s, r));
            i.length && (o.exports = Ar(i, r));
            if (0 === Object.keys(o).length) return null;
            const a = (function (e) {
                const t = new je({ name: "ngJitMode", moduleName: null }),
                  n = new Ge(de.Identical, new ve(t), It("undefined")),
                  s = new Ge(de.Or, n, t, void 0, void 0, !0);
                return new Ge(de.And, s, e);
              })(new Se(xt(Vn.setNgModuleScope), [t, Bn(o)])),
              l = new ze([], [a.toStmt()]);
            return new Se(l, []).toStmt();
          })(e);
          null !== t && d.push(t);
        }
        a && a.length && (h.schemas = St(a.map((e) => e.value))),
          u && (h.id = u);
        return {
          expression: xt(Vn.defineNgModule).callFn([Bn(h)]),
          type: new te(
            xt(Vn.NgModuleDefWithMeta, [new te(n.type), Tr(i), Tr(r), Tr(o)])
          ),
          additionalStatements: d,
        };
      }
      function Tr(e) {
        const t = e.map((e) => Ct(e.type));
        return e.length > 0 ? wt(St(t)) : ce;
      }
      function Ar(e, t) {
        const n = St(e.map((e) => e.value));
        return t ? kt([], [new rt(n)]) : n;
      }
      function Dr(e) {
        const t = [];
        t.push({ key: "name", value: It(e.pipeName), quoted: !1 }),
          t.push({ key: "type", value: e.type.value, quoted: !1 }),
          t.push({ key: "pure", value: It(e.pure), quoted: !1 });
        return {
          expression: xt(Vn.definePipe).callFn([Et(t)]),
          type: new te(
            xt(Vn.PipeDefWithMeta, [
              zn(e.type.type, e.typeArgumentCount),
              new te(new ke(e.pipeName)),
            ])
          ),
        };
      }
      class Mr {
        constructor(e, t, n, s) {
          (this.input = t),
            (this.errLocation = n),
            (this.ctxLocation = s),
            (this.message = `Parser Error: ${e} ${n} [${t}] in ${s}`);
        }
      }
      class Pr {
        constructor(e, t) {
          (this.start = e), (this.end = t);
        }
        toAbsolute(e) {
          return new ro(e + this.start, e + this.end);
        }
      }
      class Rr {
        constructor(e, t) {
          (this.span = e), (this.sourceSpan = t);
        }
        visit(e, t = null) {
          return null;
        }
        toString() {
          return "AST";
        }
      }
      class jr extends Rr {
        constructor(e, t, n) {
          super(e, t), (this.nameSpan = n);
        }
      }
      class Nr extends Rr {
        constructor(e, t, n, s, i) {
          super(e, t),
            (this.prefix = n),
            (this.uninterpretedExpression = s),
            (this.location = i);
        }
        visit(e, t = null) {
          return e.visitQuote(this, t);
        }
        toString() {
          return "Quote";
        }
      }
      class Fr extends Rr {
        visit(e, t = null) {}
      }
      class Lr extends Rr {
        visit(e, t = null) {
          return e.visitImplicitReceiver(this, t);
        }
      }
      class Vr extends Lr {
        visit(e, t = null) {
          var n;
          return null === (n = e.visitThisReceiver) || void 0 === n
            ? void 0
            : n.call(e, this, t);
        }
      }
      class Br extends Rr {
        constructor(e, t, n) {
          super(e, t), (this.expressions = n);
        }
        visit(e, t = null) {
          return e.visitChain(this, t);
        }
      }
      class zr extends Rr {
        constructor(e, t, n, s, i) {
          super(e, t),
            (this.condition = n),
            (this.trueExp = s),
            (this.falseExp = i);
        }
        visit(e, t = null) {
          return e.visitConditional(this, t);
        }
      }
      class Hr extends jr {
        constructor(e, t, n, s, i) {
          super(e, t, n), (this.receiver = s), (this.name = i);
        }
        visit(e, t = null) {
          return e.visitPropertyRead(this, t);
        }
      }
      class Gr extends jr {
        constructor(e, t, n, s, i, r) {
          super(e, t, n),
            (this.receiver = s),
            (this.name = i),
            (this.value = r);
        }
        visit(e, t = null) {
          return e.visitPropertyWrite(this, t);
        }
      }
      class Ur extends jr {
        constructor(e, t, n, s, i) {
          super(e, t, n), (this.receiver = s), (this.name = i);
        }
        visit(e, t = null) {
          return e.visitSafePropertyRead(this, t);
        }
      }
      class $r extends Rr {
        constructor(e, t, n, s) {
          super(e, t), (this.obj = n), (this.key = s);
        }
        visit(e, t = null) {
          return e.visitKeyedRead(this, t);
        }
      }
      class qr extends Rr {
        constructor(e, t, n, s, i) {
          super(e, t), (this.obj = n), (this.key = s), (this.value = i);
        }
        visit(e, t = null) {
          return e.visitKeyedWrite(this, t);
        }
      }
      class Wr extends jr {
        constructor(e, t, n, s, i, r) {
          super(e, t, r), (this.exp = n), (this.name = s), (this.args = i);
        }
        visit(e, t = null) {
          return e.visitPipe(this, t);
        }
      }
      class Yr extends Rr {
        constructor(e, t, n) {
          super(e, t), (this.value = n);
        }
        visit(e, t = null) {
          return e.visitLiteralPrimitive(this, t);
        }
      }
      class Qr extends Rr {
        constructor(e, t, n) {
          super(e, t), (this.expressions = n);
        }
        visit(e, t = null) {
          return e.visitLiteralArray(this, t);
        }
      }
      class Kr extends Rr {
        constructor(e, t, n, s) {
          super(e, t), (this.keys = n), (this.values = s);
        }
        visit(e, t = null) {
          return e.visitLiteralMap(this, t);
        }
      }
      class Jr extends Rr {
        constructor(e, t, n, s) {
          super(e, t), (this.strings = n), (this.expressions = s);
        }
        visit(e, t = null) {
          return e.visitInterpolation(this, t);
        }
      }
      class Xr extends Rr {
        constructor(e, t, n, s, i) {
          super(e, t), (this.operation = n), (this.left = s), (this.right = i);
        }
        visit(e, t = null) {
          return e.visitBinary(this, t);
        }
      }
      class Zr extends Xr {
        constructor(e, t, n, s, i, r, o) {
          super(e, t, i, r, o), (this.operator = n), (this.expr = s);
        }
        static createMinus(e, t, n) {
          return new Zr(e, t, "-", n, "-", new Yr(e, t, 0), n);
        }
        static createPlus(e, t, n) {
          return new Zr(e, t, "+", n, "-", n, new Yr(e, t, 0));
        }
        visit(e, t = null) {
          return void 0 !== e.visitUnary
            ? e.visitUnary(this, t)
            : e.visitBinary(this, t);
        }
      }
      class eo extends Rr {
        constructor(e, t, n) {
          super(e, t), (this.expression = n);
        }
        visit(e, t = null) {
          return e.visitPrefixNot(this, t);
        }
      }
      class to extends Rr {
        constructor(e, t, n) {
          super(e, t), (this.expression = n);
        }
        visit(e, t = null) {
          return e.visitNonNullAssert(this, t);
        }
      }
      class no extends jr {
        constructor(e, t, n, s, i, r) {
          super(e, t, n), (this.receiver = s), (this.name = i), (this.args = r);
        }
        visit(e, t = null) {
          return e.visitMethodCall(this, t);
        }
      }
      class so extends jr {
        constructor(e, t, n, s, i, r) {
          super(e, t, n), (this.receiver = s), (this.name = i), (this.args = r);
        }
        visit(e, t = null) {
          return e.visitSafeMethodCall(this, t);
        }
      }
      class io extends Rr {
        constructor(e, t, n, s) {
          super(e, t), (this.target = n), (this.args = s);
        }
        visit(e, t = null) {
          return e.visitFunctionCall(this, t);
        }
      }
      class ro {
        constructor(e, t) {
          (this.start = e), (this.end = t);
        }
      }
      class oo extends Rr {
        constructor(e, t, n, s, i) {
          super(
            new Pr(0, null === t ? 0 : t.length),
            new ro(s, null === t ? s : s + t.length)
          ),
            (this.ast = e),
            (this.source = t),
            (this.location = n),
            (this.errors = i);
        }
        visit(e, t = null) {
          return e.visitASTWithSource
            ? e.visitASTWithSource(this, t)
            : this.ast.visit(e, t);
        }
        toString() {
          return `${this.source} in ${this.location}`;
        }
      }
      class ao {
        constructor(e, t, n) {
          (this.sourceSpan = e), (this.key = t), (this.value = n);
        }
      }
      class lo {
        constructor(e, t, n) {
          (this.sourceSpan = e), (this.key = t), (this.value = n);
        }
      }
      class co {
        visit(e, t) {
          e.visit(this, t);
        }
        visitUnary(e, t) {
          this.visit(e.expr, t);
        }
        visitBinary(e, t) {
          this.visit(e.left, t), this.visit(e.right, t);
        }
        visitChain(e, t) {
          this.visitAll(e.expressions, t);
        }
        visitConditional(e, t) {
          this.visit(e.condition, t),
            this.visit(e.trueExp, t),
            this.visit(e.falseExp, t);
        }
        visitPipe(e, t) {
          this.visit(e.exp, t), this.visitAll(e.args, t);
        }
        visitFunctionCall(e, t) {
          e.target && this.visit(e.target, t), this.visitAll(e.args, t);
        }
        visitImplicitReceiver(e, t) {}
        visitThisReceiver(e, t) {}
        visitInterpolation(e, t) {
          this.visitAll(e.expressions, t);
        }
        visitKeyedRead(e, t) {
          this.visit(e.obj, t), this.visit(e.key, t);
        }
        visitKeyedWrite(e, t) {
          this.visit(e.obj, t), this.visit(e.key, t), this.visit(e.value, t);
        }
        visitLiteralArray(e, t) {
          this.visitAll(e.expressions, t);
        }
        visitLiteralMap(e, t) {
          this.visitAll(e.values, t);
        }
        visitLiteralPrimitive(e, t) {}
        visitMethodCall(e, t) {
          this.visit(e.receiver, t), this.visitAll(e.args, t);
        }
        visitPrefixNot(e, t) {
          this.visit(e.expression, t);
        }
        visitNonNullAssert(e, t) {
          this.visit(e.expression, t);
        }
        visitPropertyRead(e, t) {
          this.visit(e.receiver, t);
        }
        visitPropertyWrite(e, t) {
          this.visit(e.receiver, t), this.visit(e.value, t);
        }
        visitSafePropertyRead(e, t) {
          this.visit(e.receiver, t);
        }
        visitSafeMethodCall(e, t) {
          this.visit(e.receiver, t), this.visitAll(e.args, t);
        }
        visitQuote(e, t) {}
        visitAll(e, t) {
          for (const n of e) this.visit(n, t);
        }
      }
      class uo {
        constructor(e, t, n, s, i, r) {
          (this.name = e),
            (this.expression = t),
            (this.type = n),
            (this.sourceSpan = s),
            (this.keySpan = i),
            (this.valueSpan = r),
            (this.isLiteral = this.type === wr.LITERAL_ATTR),
            (this.isAnimation = this.type === wr.ANIMATION);
        }
      }
      !(function (e) {
        (e[(e.DEFAULT = 0)] = "DEFAULT"),
          (e[(e.LITERAL_ATTR = 1)] = "LITERAL_ATTR"),
          (e[(e.ANIMATION = 2)] = "ANIMATION");
      })(wr || (wr = {}));
      class ho {
        constructor(e, t, n, s, i, r) {
          (this.name = e),
            (this.targetOrPhase = t),
            (this.type = n),
            (this.handler = s),
            (this.sourceSpan = i),
            (this.handlerSpan = r);
        }
      }
      class po {
        constructor(e, t, n, s, i) {
          (this.name = e),
            (this.value = t),
            (this.sourceSpan = n),
            (this.keySpan = s),
            (this.valueSpan = i);
        }
      }
      class mo {
        constructor(e, t, n, s, i, r, o, a) {
          (this.name = e),
            (this.type = t),
            (this.securityContext = n),
            (this.value = s),
            (this.unit = i),
            (this.sourceSpan = r),
            (this.keySpan = o),
            (this.valueSpan = a);
        }
      }
      class fo {}
      fo.event = bt("$event");
      class go {
        constructor(e, t) {
          (this.stmts = e),
            (this.allowDefault = t),
            (this.render3Stmts = e.map((e) => {
              if (
                e instanceof nt &&
                e.name == t.name &&
                e.value instanceof Ge
              ) {
                const t = e.value.lhs;
                return new rt(t.value);
              }
              return e;
            }));
        }
      }
      function yo(e, t, n, s, i, r, o, a) {
        e || (e = new To(a));
        const l = vo(
            {
              createLiteralArrayConverter: (e) => (e) => St(e),
              createLiteralMapConverter: (e) => (t) =>
                Et(
                  e.map((e, n) => ({
                    key: e.key,
                    value: t[n],
                    quoted: e.quoted,
                  }))
                ),
              createPipeConverter: (e) => {
                throw new Error(
                  "Illegal State: Actions are not allowed to contain pipes. Pipe: " +
                    e
                );
              },
            },
            n
          ),
          c = new Oo(e, t, s, i, r, o),
          u = [];
        Io(l.visit(c, Sr.Statement), u),
          (function (e, t, n) {
            for (let s = e - 1; s >= 0; s--) n.unshift(Co(t, s));
          })(c.temporaryCount, s, u),
          c.usesImplicitReceiver && e.notifyImplicitReceiverUse();
        const d = u.length - 1;
        let h = null;
        if (d >= 0) {
          const e = (function (e) {
            if (e instanceof it) return e.expr;
            if (e instanceof rt) return e.value;
            return null;
          })(u[d]);
          e &&
            ((h = (function (e) {
              return bt("pd_" + e);
            })(s)),
            (u[d] = h
              .set(e.cast(ie).notIdentical(It(!1)))
              .toDeclStmt(null, [Xe.Final])));
        }
        return new go(u, h);
      }
      function vo(e, t) {
        return (function (e, t) {
          const n = new ko(e);
          return t.visit(n);
        })(e, t);
      }
      class bo {
        constructor(e, t) {
          (this.stmts = e), (this.currValExpr = t);
        }
      }
      function xo(e, t, n, s, i, r) {
        e || (e = new To());
        const o = new Oo(e, t, s, r),
          a = n.visit(o, Sr.Expression),
          l = _o(o, s);
        if (
          (o.usesImplicitReceiver && e.notifyImplicitReceiverUse(),
          0 === o.temporaryCount && i == Cr.TrySimple)
        )
          return new bo([], a);
        if (i === Cr.Expression) return new bo(l, a);
        const c = (function (e) {
          return bt("currVal_" + e);
        })(s);
        return l.push(c.set(a).toDeclStmt(ie, [Xe.Final])), new bo(l, c);
      }
      function _o(e, t) {
        const n = [];
        for (let s = 0; s < e.temporaryCount; s++) n.push(Co(t, s));
        return n;
      }
      function wo(e, t) {
        return `tmp_${e}_${t}`;
      }
      function Co(e, t) {
        return new nt(wo(e, t), Ke);
      }
      function So(e, t) {
        if (e !== Sr.Expression)
          throw new Error("Expected an expression, but saw " + t);
      }
      function Eo(e, t) {
        return e === Sr.Statement ? t.toStmt() : t;
      }
      !(function (e) {
        (e[(e.General = 0)] = "General"),
          (e[(e.TrySimple = 1)] = "TrySimple"),
          (e[(e.Expression = 2)] = "Expression");
      })(Cr || (Cr = {})),
        (function (e) {
          (e[(e.Statement = 0)] = "Statement"),
            (e[(e.Expression = 1)] = "Expression");
        })(Sr || (Sr = {}));
      class ko extends class {
        visitImplicitReceiver(e, t) {
          return e;
        }
        visitThisReceiver(e, t) {
          return e;
        }
        visitInterpolation(e, t) {
          return new Jr(
            e.span,
            e.sourceSpan,
            e.strings,
            this.visitAll(e.expressions)
          );
        }
        visitLiteralPrimitive(e, t) {
          return new Yr(e.span, e.sourceSpan, e.value);
        }
        visitPropertyRead(e, t) {
          return new Hr(
            e.span,
            e.sourceSpan,
            e.nameSpan,
            e.receiver.visit(this),
            e.name
          );
        }
        visitPropertyWrite(e, t) {
          return new Gr(
            e.span,
            e.sourceSpan,
            e.nameSpan,
            e.receiver.visit(this),
            e.name,
            e.value.visit(this)
          );
        }
        visitSafePropertyRead(e, t) {
          return new Ur(
            e.span,
            e.sourceSpan,
            e.nameSpan,
            e.receiver.visit(this),
            e.name
          );
        }
        visitMethodCall(e, t) {
          return new no(
            e.span,
            e.sourceSpan,
            e.nameSpan,
            e.receiver.visit(this),
            e.name,
            this.visitAll(e.args)
          );
        }
        visitSafeMethodCall(e, t) {
          return new so(
            e.span,
            e.sourceSpan,
            e.nameSpan,
            e.receiver.visit(this),
            e.name,
            this.visitAll(e.args)
          );
        }
        visitFunctionCall(e, t) {
          return new io(
            e.span,
            e.sourceSpan,
            e.target.visit(this),
            this.visitAll(e.args)
          );
        }
        visitLiteralArray(e, t) {
          return new Qr(e.span, e.sourceSpan, this.visitAll(e.expressions));
        }
        visitLiteralMap(e, t) {
          return new Kr(e.span, e.sourceSpan, e.keys, this.visitAll(e.values));
        }
        visitUnary(e, t) {
          switch (e.operator) {
            case "+":
              return Zr.createPlus(e.span, e.sourceSpan, e.expr.visit(this));
            case "-":
              return Zr.createMinus(e.span, e.sourceSpan, e.expr.visit(this));
            default:
              throw new Error("Unknown unary operator " + e.operator);
          }
        }
        visitBinary(e, t) {
          return new Xr(
            e.span,
            e.sourceSpan,
            e.operation,
            e.left.visit(this),
            e.right.visit(this)
          );
        }
        visitPrefixNot(e, t) {
          return new eo(e.span, e.sourceSpan, e.expression.visit(this));
        }
        visitNonNullAssert(e, t) {
          return new to(e.span, e.sourceSpan, e.expression.visit(this));
        }
        visitConditional(e, t) {
          return new zr(
            e.span,
            e.sourceSpan,
            e.condition.visit(this),
            e.trueExp.visit(this),
            e.falseExp.visit(this)
          );
        }
        visitPipe(e, t) {
          return new Wr(
            e.span,
            e.sourceSpan,
            e.exp.visit(this),
            e.name,
            this.visitAll(e.args),
            e.nameSpan
          );
        }
        visitKeyedRead(e, t) {
          return new $r(
            e.span,
            e.sourceSpan,
            e.obj.visit(this),
            e.key.visit(this)
          );
        }
        visitKeyedWrite(e, t) {
          return new qr(
            e.span,
            e.sourceSpan,
            e.obj.visit(this),
            e.key.visit(this),
            e.value.visit(this)
          );
        }
        visitAll(e) {
          const t = [];
          for (let n = 0; n < e.length; ++n) t[n] = e[n].visit(this);
          return t;
        }
        visitChain(e, t) {
          return new Br(e.span, e.sourceSpan, this.visitAll(e.expressions));
        }
        visitQuote(e, t) {
          return new Nr(
            e.span,
            e.sourceSpan,
            e.prefix,
            e.uninterpretedExpression,
            e.location
          );
        }
      } {
        constructor(e) {
          super(), (this._converterFactory = e);
        }
        visitPipe(e, t) {
          const n = [e.exp, ...e.args].map((e) => e.visit(this, t));
          return new Ao(
            e.span,
            e.sourceSpan,
            n,
            this._converterFactory.createPipeConverter(e.name, n.length)
          );
        }
        visitLiteralArray(e, t) {
          const n = e.expressions.map((e) => e.visit(this, t));
          return new Ao(
            e.span,
            e.sourceSpan,
            n,
            this._converterFactory.createLiteralArrayConverter(
              e.expressions.length
            )
          );
        }
        visitLiteralMap(e, t) {
          const n = e.values.map((e) => e.visit(this, t));
          return new Ao(
            e.span,
            e.sourceSpan,
            n,
            this._converterFactory.createLiteralMapConverter(e.keys)
          );
        }
      }
      class Oo {
        constructor(e, t, n, s, i, r) {
          (this._localResolver = e),
            (this._implicitReceiver = t),
            (this.bindingId = n),
            (this.interpolationFunction = s),
            (this.baseSourceSpan = i),
            (this.implicitReceiverAccesses = r),
            (this._nodeMap = new Map()),
            (this._resultMap = new Map()),
            (this._currentTemporary = 0),
            (this.temporaryCount = 0),
            (this.usesImplicitReceiver = !1);
        }
        visitUnary(e, t) {
          let n;
          switch (e.operator) {
            case "+":
              n = ue.Plus;
              break;
            case "-":
              n = ue.Minus;
              break;
            default:
              throw new Error("Unsupported operator " + e.operator);
          }
          return Eo(
            t,
            new He(
              n,
              this._visit(e.expr, Sr.Expression),
              void 0,
              this.convertSourceSpan(e.span)
            )
          );
        }
        visitBinary(e, t) {
          let n;
          switch (e.operation) {
            case "+":
              n = de.Plus;
              break;
            case "-":
              n = de.Minus;
              break;
            case "*":
              n = de.Multiply;
              break;
            case "/":
              n = de.Divide;
              break;
            case "%":
              n = de.Modulo;
              break;
            case "&&":
              n = de.And;
              break;
            case "||":
              n = de.Or;
              break;
            case "==":
              n = de.Equals;
              break;
            case "!=":
              n = de.NotEquals;
              break;
            case "===":
              n = de.Identical;
              break;
            case "!==":
              n = de.NotIdentical;
              break;
            case "<":
              n = de.Lower;
              break;
            case ">":
              n = de.Bigger;
              break;
            case "<=":
              n = de.LowerEquals;
              break;
            case ">=":
              n = de.BiggerEquals;
              break;
            default:
              throw new Error("Unsupported operation " + e.operation);
          }
          return Eo(
            t,
            new Ge(
              n,
              this._visit(e.left, Sr.Expression),
              this._visit(e.right, Sr.Expression),
              void 0,
              this.convertSourceSpan(e.span)
            )
          );
        }
        visitChain(e, t) {
          return (
            (function (e, t) {
              if (e !== Sr.Statement)
                throw new Error("Expected a statement, but saw " + t);
            })(t, e),
            this.visitAll(e.expressions, t)
          );
        }
        visitConditional(e, t) {
          return Eo(
            t,
            this._visit(e.condition, Sr.Expression).conditional(
              this._visit(e.trueExp, Sr.Expression),
              this._visit(e.falseExp, Sr.Expression),
              this.convertSourceSpan(e.span)
            )
          );
        }
        visitPipe(e, t) {
          throw new Error(
            "Illegal state: Pipes should have been converted into functions. Pipe: " +
              e.name
          );
        }
        visitFunctionCall(e, t) {
          const n = this.visitAll(e.args, Sr.Expression);
          let s;
          return (
            (s =
              e instanceof Ao
                ? e.converter(n)
                : this._visit(e.target, Sr.Expression).callFn(
                    n,
                    this.convertSourceSpan(e.span)
                  )),
            Eo(t, s)
          );
        }
        visitImplicitReceiver(e, t) {
          return (
            So(t, e), (this.usesImplicitReceiver = !0), this._implicitReceiver
          );
        }
        visitThisReceiver(e, t) {
          return this.visitImplicitReceiver(e, t);
        }
        visitInterpolation(e, t) {
          So(t, e);
          const n = [It(e.expressions.length)];
          for (let s = 0; s < e.strings.length - 1; s++)
            n.push(It(e.strings[s])),
              n.push(this._visit(e.expressions[s], Sr.Expression));
          return (
            n.push(It(e.strings[e.strings.length - 1])),
            this.interpolationFunction
              ? this.interpolationFunction(n)
              : e.expressions.length <= 9
              ? xt(dn.inlineInterpolate).callFn(n)
              : xt(dn.interpolate).callFn([
                  n[0],
                  St(n.slice(1), void 0, this.convertSourceSpan(e.span)),
                ])
          );
        }
        visitKeyedRead(e, t) {
          const n = this.leftMostSafeNode(e);
          return n
            ? this.convertSafeAccess(e, n, t)
            : Eo(
                t,
                this._visit(e.obj, Sr.Expression).key(
                  this._visit(e.key, Sr.Expression)
                )
              );
        }
        visitKeyedWrite(e, t) {
          const n = this._visit(e.obj, Sr.Expression),
            s = this._visit(e.key, Sr.Expression),
            i = this._visit(e.value, Sr.Expression);
          return Eo(t, n.key(s).set(i));
        }
        visitLiteralArray(e, t) {
          throw new Error(
            "Illegal State: literal arrays should have been converted into functions"
          );
        }
        visitLiteralMap(e, t) {
          throw new Error(
            "Illegal State: literal maps should have been converted into functions"
          );
        }
        visitLiteralPrimitive(e, t) {
          const n =
            null === e.value ||
            void 0 === e.value ||
            !0 === e.value ||
            !0 === e.value
              ? re
              : void 0;
          return Eo(t, It(e.value, n, this.convertSourceSpan(e.span)));
        }
        _getLocal(e, t) {
          var n;
          return (null === (n = this._localResolver.globals) || void 0 === n
            ? void 0
            : n.has(e)) && t instanceof Vr
            ? null
            : this._localResolver.getLocal(e);
        }
        visitMethodCall(e, t) {
          if (
            e.receiver instanceof Lr &&
            !(e.receiver instanceof Vr) &&
            "$any" === e.name
          ) {
            const t = this.visitAll(e.args, Sr.Expression);
            if (1 != t.length)
              throw new Error(
                "Invalid call to $any, expected 1 argument but received " +
                  (t.length || "none")
              );
            return t[0].cast(ie, this.convertSourceSpan(e.span));
          }
          const n = this.leftMostSafeNode(e);
          if (n) return this.convertSafeAccess(e, n, t);
          {
            const n = this.visitAll(e.args, Sr.Expression),
              s = this.usesImplicitReceiver;
            let i = null;
            const r = this._visit(e.receiver, Sr.Expression);
            if (r === this._implicitReceiver) {
              const t = this._getLocal(e.name, e.receiver);
              t &&
                ((this.usesImplicitReceiver = s),
                (i = t.callFn(n)),
                this.addImplicitReceiverAccess(e.name));
            }
            return (
              null == i &&
                (i = r.callMethod(e.name, n, this.convertSourceSpan(e.span))),
              Eo(t, i)
            );
          }
        }
        visitPrefixNot(e, t) {
          return Eo(
            t,
            ((n = this._visit(e.expression, Sr.Expression)), new Fe(n, s))
          );
          var n, s;
        }
        visitNonNullAssert(e, t) {
          return Eo(
            t,
            ((n = this._visit(e.expression, Sr.Expression)), new Le(n, s))
          );
          var n, s;
        }
        visitPropertyRead(e, t) {
          const n = this.leftMostSafeNode(e);
          if (n) return this.convertSafeAccess(e, n, t);
          {
            let n = null;
            const s = this.usesImplicitReceiver,
              i = this._visit(e.receiver, Sr.Expression);
            return (
              i === this._implicitReceiver &&
                ((n = this._getLocal(e.name, e.receiver)),
                n &&
                  ((this.usesImplicitReceiver = s),
                  this.addImplicitReceiverAccess(e.name))),
              null == n && (n = i.prop(e.name)),
              Eo(t, n)
            );
          }
        }
        visitPropertyWrite(e, t) {
          const n = this._visit(e.receiver, Sr.Expression),
            s = this.usesImplicitReceiver;
          let i = null;
          if (n === this._implicitReceiver) {
            const t = this._getLocal(e.name, e.receiver);
            if (t) {
              if (!(t instanceof Ue)) {
                const t = e.name,
                  n = e.value instanceof Hr ? e.value.name : void 0;
                throw new Error(
                  `Cannot assign value "${n}" to template variable "${t}". Template variables are read-only.`
                );
              }
              (i = t),
                (this.usesImplicitReceiver = s),
                this.addImplicitReceiverAccess(e.name);
            }
          }
          return (
            null === i && (i = n.prop(e.name)),
            Eo(t, i.set(this._visit(e.value, Sr.Expression)))
          );
        }
        visitSafePropertyRead(e, t) {
          return this.convertSafeAccess(e, this.leftMostSafeNode(e), t);
        }
        visitSafeMethodCall(e, t) {
          return this.convertSafeAccess(e, this.leftMostSafeNode(e), t);
        }
        visitAll(e, t) {
          return e.map((e) => this._visit(e, t));
        }
        visitQuote(e, t) {
          throw new Error(
            `Quotes are not supported for evaluation!\n        Statement: ${e.uninterpretedExpression} located at ${e.location}`
          );
        }
        _visit(e, t) {
          const n = this._resultMap.get(e);
          return n || (this._nodeMap.get(e) || e).visit(this, t);
        }
        convertSafeAccess(e, t, n) {
          let s = this._visit(t.receiver, Sr.Expression),
            i = void 0;
          this.needsTemporary(t.receiver) &&
            ((i = this.allocateTemporary()),
            (s = i.set(s)),
            this._resultMap.set(t.receiver, i));
          const r = s.isBlank();
          t instanceof so
            ? this._nodeMap.set(
                t,
                new no(
                  t.span,
                  t.sourceSpan,
                  t.nameSpan,
                  t.receiver,
                  t.name,
                  t.args
                )
              )
            : this._nodeMap.set(
                t,
                new Hr(t.span, t.sourceSpan, t.nameSpan, t.receiver, t.name)
              );
          const o = this._visit(e, Sr.Expression);
          return (
            this._nodeMap.delete(t),
            i && this.releaseTemporary(i),
            Eo(n, r.conditional(It(null), o))
          );
        }
        leftMostSafeNode(e) {
          const t = (e, t) => (this._nodeMap.get(t) || t).visit(e);
          return e.visit({
            visitUnary: (e) => null,
            visitBinary: (e) => null,
            visitChain: (e) => null,
            visitConditional: (e) => null,
            visitFunctionCall: (e) => null,
            visitImplicitReceiver: (e) => null,
            visitThisReceiver: (e) => null,
            visitInterpolation: (e) => null,
            visitKeyedRead(e) {
              return t(this, e.obj);
            },
            visitKeyedWrite: (e) => null,
            visitLiteralArray: (e) => null,
            visitLiteralMap: (e) => null,
            visitLiteralPrimitive: (e) => null,
            visitMethodCall(e) {
              return t(this, e.receiver);
            },
            visitPipe: (e) => null,
            visitPrefixNot: (e) => null,
            visitNonNullAssert: (e) => null,
            visitPropertyRead(e) {
              return t(this, e.receiver);
            },
            visitPropertyWrite: (e) => null,
            visitQuote: (e) => null,
            visitSafeMethodCall(e) {
              return t(this, e.receiver) || e;
            },
            visitSafePropertyRead(e) {
              return t(this, e.receiver) || e;
            },
          });
        }
        needsTemporary(e) {
          const t = (e, t) => t && (this._nodeMap.get(t) || t).visit(e);
          return e.visit({
            visitUnary(e) {
              return t(this, e.expr);
            },
            visitBinary(e) {
              return t(this, e.left) || t(this, e.right);
            },
            visitChain: (e) => !1,
            visitConditional(e) {
              return (
                t(this, e.condition) ||
                t(this, e.trueExp) ||
                t(this, e.falseExp)
              );
            },
            visitFunctionCall: (e) => !0,
            visitImplicitReceiver: (e) => !1,
            visitThisReceiver: (e) => !1,
            visitInterpolation(e) {
              return ((e, n) => n.some((n) => t(e, n)))(this, e.expressions);
            },
            visitKeyedRead: (e) => !1,
            visitKeyedWrite: (e) => !1,
            visitLiteralArray: (e) => !0,
            visitLiteralMap: (e) => !0,
            visitLiteralPrimitive: (e) => !1,
            visitMethodCall: (e) => !0,
            visitPipe: (e) => !0,
            visitPrefixNot(e) {
              return t(this, e.expression);
            },
            visitNonNullAssert(e) {
              return t(this, e.expression);
            },
            visitPropertyRead: (e) => !1,
            visitPropertyWrite: (e) => !1,
            visitQuote: (e) => !1,
            visitSafeMethodCall: (e) => !0,
            visitSafePropertyRead: (e) => !1,
          });
        }
        allocateTemporary() {
          const e = this._currentTemporary++;
          return (
            (this.temporaryCount = Math.max(
              this._currentTemporary,
              this.temporaryCount
            )),
            new ye(wo(this.bindingId, e))
          );
        }
        releaseTemporary(e) {
          if (
            (this._currentTemporary--,
            e.name != wo(this.bindingId, this._currentTemporary))
          )
            throw new Error(`Temporary ${e.name} released out of order`);
        }
        convertSourceSpan(e) {
          if (this.baseSourceSpan) {
            const t = this.baseSourceSpan.start.moveBy(e.start),
              n = this.baseSourceSpan.start.moveBy(e.end),
              s = this.baseSourceSpan.fullStart.moveBy(e.start);
            return new xr(t, n, s);
          }
          return null;
        }
        addImplicitReceiverAccess(e) {
          this.implicitReceiverAccesses && this.implicitReceiverAccesses.add(e);
        }
      }
      function Io(e, t) {
        Array.isArray(e) ? e.forEach((e) => Io(e, t)) : t.push(e);
      }
      class To {
        constructor(e) {
          this.globals = e;
        }
        notifyImplicitReceiverUse() {}
        getLocal(e) {
          return e === fo.event.name ? fo.event : null;
        }
      }
      class Ao extends io {
        constructor(e, t, n, s) {
          super(e, t, null, n), (this.args = n), (this.converter = s);
        }
      }
      class Do {
        constructor() {
          this.strictStyling = !0;
        }
        shimCssText(e, t, n = "") {
          const s = e.match(Ko) || [];
          (e = (function (e) {
            return e.replace(Qo, "");
          })(e)),
            (e = this._insertDirectives(e));
          return [this._scopeCssText(e, t, n), ...s].join("\n");
        }
        _insertDirectives(e) {
          return (
            (e = this._insertPolyfillDirectivesInCssText(e)),
            this._insertPolyfillRulesInCssText(e)
          );
        }
        _insertPolyfillDirectivesInCssText(e) {
          return e.replace(Po, function (...e) {
            return e[2] + "{";
          });
        }
        _insertPolyfillRulesInCssText(e) {
          return e.replace(Ro, (...e) => {
            const t = e[0].replace(e[1], "").replace(e[2], "");
            return e[4] + t;
          });
        }
        _scopeCssText(e, t, n) {
          const s = this._extractUnscopedRulesFromCssText(e);
          return (
            (e = this._insertPolyfillHostInCssText(e)),
            (e = this._convertColonHost(e)),
            (e = this._convertColonHostContext(e)),
            (e = this._convertShadowDOMSelectors(e)),
            t && (e = this._scopeSelectors(e, t, n)),
            (e = e + "\n" + s).trim()
          );
        }
        _extractUnscopedRulesFromCssText(e) {
          let t,
            n = "";
          for (jo.lastIndex = 0; null !== (t = jo.exec(e)); ) {
            n += t[0].replace(t[2], "").replace(t[1], t[4]) + "\n\n";
          }
          return n;
        }
        _convertColonHost(e) {
          return this._convertColonRule(e, Vo, this._colonHostPartReplacer);
        }
        _convertColonHostContext(e) {
          return this._convertColonRule(
            e,
            Bo,
            this._colonHostContextPartReplacer
          );
        }
        _convertColonRule(e, t, n) {
          return e.replace(t, function (...e) {
            if (e[2]) {
              const t = e[2].split(","),
                s = [];
              for (let i = 0; i < t.length; i++) {
                const r = t[i].trim();
                if (!r) break;
                s.push(n(zo, r, e[3]));
              }
              return s.join(",");
            }
            return zo + e[3];
          });
        }
        _colonHostContextPartReplacer(e, t, n) {
          return t.indexOf(No) > -1
            ? this._colonHostPartReplacer(e, t, n)
            : e + t + n + ", " + t + " " + e + n;
        }
        _colonHostPartReplacer(e, t, n) {
          return e + t.replace(No, "") + n;
        }
        _convertShadowDOMSelectors(e) {
          return Go.reduce((e, t) => e.replace(t, " "), e);
        }
        _scopeSelectors(e, t, n) {
          return (function (e, t) {
            const n = ra(e, na, Xo),
              s = ra(n.escapedString, ta, Jo);
            let i = 0,
              r = 0;
            return s.escapedString
              .replace(Zo, (...e) => {
                const n = e[2];
                let r = "",
                  o = e[4],
                  a = "";
                o &&
                  o.startsWith("{%BLOCK%") &&
                  ((r = s.blocks[i++]),
                  (o = o.substring(Jo.length + 1)),
                  (a = "{"));
                const l = t(new sa(n, r));
                return `${e[1]}${l.selector}${e[3]}${a}${l.content}${o}`;
              })
              .replace(ea, () => n.blocks[r++]);
          })(e, (e) => {
            let s = e.selector,
              i = e.content;
            return (
              "@" != e.selector[0]
                ? (s = this._scopeSelector(
                    e.selector,
                    t,
                    n,
                    this.strictStyling
                  ))
                : (e.selector.startsWith("@media") ||
                    e.selector.startsWith("@supports") ||
                    e.selector.startsWith("@page") ||
                    e.selector.startsWith("@document")) &&
                  (i = this._scopeSelectors(e.content, t, n)),
              new sa(s, i)
            );
          });
        }
        _scopeSelector(e, t, n, s) {
          return e
            .split(",")
            .map((e) => e.trim().split(Uo))
            .map((e) => {
              const [i, ...r] = e;
              return [
                ((e) =>
                  this._selectorNeedsScoping(e, t)
                    ? s
                      ? this._applyStrictSelectorScope(e, t, n)
                      : this._applySelectorScope(e, t, n)
                    : e)(i),
                ...r,
              ].join(" ");
            })
            .join(", ");
        }
        _selectorNeedsScoping(e, t) {
          return !this._makeScopeMatcher(t).test(e);
        }
        _makeScopeMatcher(e) {
          return (
            (e = e.replace(/\[/g, "\\[").replace(/\]/g, "\\]")),
            new RegExp("^(" + e + ")" + $o, "m")
          );
        }
        _applySelectorScope(e, t, n) {
          return this._applySimpleSelectorScope(e, t, n);
        }
        _applySimpleSelectorScope(e, t, n) {
          if (((qo.lastIndex = 0), qo.test(e))) {
            const s = this.strictStyling ? `[${n}]` : t;
            return e
              .replace(Ho, (e, t) =>
                t.replace(/([^:]*)(:*)(.*)/, (e, t, n, i) => t + s + n + i)
              )
              .replace(qo, s + " ");
          }
          return t + " " + e;
        }
        _applyStrictSelectorScope(e, t, n) {
          const s =
              "[" +
              (t = t.replace(/\[is=([^\]]*)\]/g, (e, ...t) => t[0])) +
              "]",
            i = (e) => {
              let i = e.trim();
              if (!i) return "";
              if (e.indexOf(zo) > -1)
                i = this._applySimpleSelectorScope(e, t, n);
              else {
                const t = e.replace(qo, "");
                if (t.length > 0) {
                  const e = t.match(/([^:]*)(:*)(.*)/);
                  e && (i = e[1] + s + e[2] + e[3]);
                }
              }
              return i;
            },
            r = new Mo(e);
          let o,
            a = "",
            l = 0;
          const c = /( |>|\+|~(?!=))\s*/g;
          let u = !((e = r.content()).indexOf(zo) > -1);
          for (; null !== (o = c.exec(e)); ) {
            const t = o[1],
              n = e.slice(l, o.index).trim();
            u = u || n.indexOf(zo) > -1;
            (a += `${u ? i(n) : n} ${t} `), (l = c.lastIndex);
          }
          const d = e.substring(l);
          return (
            (u = u || d.indexOf(zo) > -1), (a += u ? i(d) : d), r.restore(a)
          );
        }
        _insertPolyfillHostInCssText(e) {
          return e.replace(Yo, Fo).replace(Wo, No);
        }
      }
      class Mo {
        constructor(e) {
          (this.placeholders = []),
            (this.index = 0),
            (e = e.replace(/(\[[^\]]*\])/g, (e, t) => {
              const n = `__ph-${this.index}__`;
              return this.placeholders.push(t), this.index++, n;
            })),
            (this._content = e.replace(
              /(:nth-[-\w]+)(\([^)]+\))/g,
              (e, t, n) => {
                const s = `__ph-${this.index}__`;
                return this.placeholders.push(n), this.index++, t + s;
              }
            ));
        }
        restore(e) {
          return e.replace(/__ph-(\d+)__/g, (e, t) => this.placeholders[+t]);
        }
        content() {
          return this._content;
        }
      }
      const Po =
          /polyfill-next-selector[^}]*content:[\s]*?(['"])(.*?)\1[;\s]*}([^{]*?){/gim,
        Ro = /(polyfill-rule)[^}]*(content:[\s]*(['"])(.*?)\3)[;\s]*[^}]*}/gim,
        jo =
          /(polyfill-unscoped-rule)[^}]*(content:[\s]*(['"])(.*?)\3)[;\s]*[^}]*}/gim,
        No = "-shadowcsshost",
        Fo = "-shadowcsscontext",
        Lo = ")(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))?([^,{]*)",
        Vo = new RegExp("(" + No + Lo, "gim"),
        Bo = new RegExp("(" + Fo + Lo, "gim"),
        zo = No + "-no-combinator",
        Ho = /-shadowcsshost-no-combinator([^\s]*)/,
        Go = [/::shadow/g, /::content/g, /\/shadow-deep\//g, /\/shadow\//g],
        Uo = /(?:>>>)|(?:\/deep\/)|(?:::ng-deep)/g,
        $o = "([>\\s~+[.,{:][\\s\\S]*)?$",
        qo = /-shadowcsshost/gim,
        Wo = /:host/gim,
        Yo = /:host-context/gim,
        Qo = /\/\*\s*[\s\S]*?\*\//g;
      const Ko = /\/\*\s*#\s*source(Mapping)?URL=[\s\S]+?\*\//g;
      const Jo = "%BLOCK%",
        Xo = "%QUOTED%",
        Zo = /(\s*)([^;\{\}]+?)(\s*)((?:{%BLOCK%}?\s*;?)|(?:\s*;))/g,
        ea = /%QUOTED%/g,
        ta = new Map([["{", "}"]]),
        na = new Map([
          ['"', '"'],
          ["'", "'"],
        ]);
      class sa {
        constructor(e, t) {
          (this.selector = e), (this.content = t);
        }
      }
      class ia {
        constructor(e, t) {
          (this.escapedString = e), (this.blocks = t);
        }
      }
      function ra(e, t, n) {
        const s = [],
          i = [];
        let r,
          o,
          a = 0,
          l = 0,
          c = -1;
        for (let u = 0; u < e.length; u++) {
          const d = e[u];
          "\\" === d
            ? u++
            : d === o
            ? (a--,
              0 === a &&
                (i.push(e.substring(c, u)),
                s.push(n),
                (l = u),
                (c = -1),
                (r = o = void 0)))
            : d === r
            ? a++
            : 0 === a &&
              t.has(d) &&
              ((r = d),
              (o = t.get(d)),
              (a = 1),
              (c = u + 1),
              s.push(e.substring(l, c)));
        }
        return (
          -1 !== c
            ? (i.push(e.substring(c)), s.push(n))
            : s.push(e.substring(l)),
          new ia(s.join(""), i)
        );
      }
      const oa = "_nghost-%COMP%",
        aa = "_ngcontent-%COMP%";
      class la {
        constructor(e, t, n) {
          (this.name = e), (this.moduleUrl = t), (this.setValue = n);
        }
      }
      class ca {
        constructor(e, t, n, s, i) {
          (this.outputCtx = e),
            (this.stylesVar = t),
            (this.dependencies = n),
            (this.isShimmed = s),
            (this.meta = i);
        }
      }
      class ua {
        constructor(e) {
          (this._urlResolver = e), (this._shadowCss = new Do());
        }
        compileComponent(e, t) {
          const n = t.template;
          return this._compileStyles(
            e,
            t,
            new On({
              styles: n.styles,
              styleUrls: n.styleUrls,
              moduleUrl: xn(t.type),
            }),
            this.needsStyleShim(t),
            !0
          );
        }
        compileStyles(e, t, n, s = this.needsStyleShim(t)) {
          return this._compileStyles(e, t, n, s, !1);
        }
        needsStyleShim(e) {
          return e.template.encapsulation === T.Emulated;
        }
        _compileStyles(e, t, n, s, i) {
          const r = n.styles.map((e) => It(this._shimIfNeeded(e, s))),
            o = [];
          n.styleUrls.forEach((t) => {
            const n = r.length;
            r.push(null),
              o.push(new la(da(null), t, (t) => (r[n] = e.importExpr(t))));
          });
          const a = da(i ? t : null),
            l = bt(a)
              .set(St(r, new ne(ie, [J.Const])))
              .toDeclStmt(null, i ? [Xe.Final] : [Xe.Final, Xe.Exported]);
          return e.statements.push(l), new ca(e, a, o, s, n);
        }
        _shimIfNeeded(e, t) {
          return t ? this._shadowCss.shimCssText(e, aa, oa) : e;
        }
      }
      function da(e) {
        let t = "styles";
        return e && (t += "_" + bn(e.type)), t;
      }
      class ha {
        constructor(e, t) {
          (this.sourceSpan = e), (this.i18n = t);
        }
      }
      class pa extends ha {
        constructor(e, t, n) {
          super(t, n), (this.value = e);
        }
        visit(e, t) {
          return e.visitText(this, t);
        }
      }
      class ma extends ha {
        constructor(e, t, n, s, i, r) {
          super(s, r),
            (this.switchValue = e),
            (this.type = t),
            (this.cases = n),
            (this.switchValueSourceSpan = i);
        }
        visit(e, t) {
          return e.visitExpansion(this, t);
        }
      }
      class fa {
        constructor(e, t, n, s, i) {
          (this.value = e),
            (this.expression = t),
            (this.sourceSpan = n),
            (this.valueSourceSpan = s),
            (this.expSourceSpan = i);
        }
        visit(e, t) {
          return e.visitExpansionCase(this, t);
        }
      }
      class ga extends ha {
        constructor(e, t, n, s, i) {
          super(n, i), (this.name = e), (this.value = t), (this.valueSpan = s);
        }
        visit(e, t) {
          return e.visitAttribute(this, t);
        }
      }
      class ya extends ha {
        constructor(e, t, n, s, i, r = null, o) {
          super(s, o),
            (this.name = e),
            (this.attrs = t),
            (this.children = n),
            (this.startSourceSpan = i),
            (this.endSourceSpan = r);
        }
        visit(e, t) {
          return e.visitElement(this, t);
        }
      }
      class va {
        constructor(e, t) {
          (this.value = e), (this.sourceSpan = t);
        }
        visit(e, t) {
          return e.visitComment(this, t);
        }
      }
      function ba(e, t, n = null) {
        const s = [],
          i = e.visit
            ? (t) => e.visit(t, n) || t.visit(e, n)
            : (t) => t.visit(e, n);
        return (
          t.forEach((e) => {
            const t = i(e);
            t && s.push(t);
          }),
          s
        );
      }
      var xa;
      !(function (e) {
        (e[(e.TAG_OPEN_START = 0)] = "TAG_OPEN_START"),
          (e[(e.TAG_OPEN_END = 1)] = "TAG_OPEN_END"),
          (e[(e.TAG_OPEN_END_VOID = 2)] = "TAG_OPEN_END_VOID"),
          (e[(e.TAG_CLOSE = 3)] = "TAG_CLOSE"),
          (e[(e.INCOMPLETE_TAG_OPEN = 4)] = "INCOMPLETE_TAG_OPEN"),
          (e[(e.TEXT = 5)] = "TEXT"),
          (e[(e.ESCAPABLE_RAW_TEXT = 6)] = "ESCAPABLE_RAW_TEXT"),
          (e[(e.RAW_TEXT = 7)] = "RAW_TEXT"),
          (e[(e.COMMENT_START = 8)] = "COMMENT_START"),
          (e[(e.COMMENT_END = 9)] = "COMMENT_END"),
          (e[(e.CDATA_START = 10)] = "CDATA_START"),
          (e[(e.CDATA_END = 11)] = "CDATA_END"),
          (e[(e.ATTR_NAME = 12)] = "ATTR_NAME"),
          (e[(e.ATTR_QUOTE = 13)] = "ATTR_QUOTE"),
          (e[(e.ATTR_VALUE = 14)] = "ATTR_VALUE"),
          (e[(e.DOC_TYPE = 15)] = "DOC_TYPE"),
          (e[(e.EXPANSION_FORM_START = 16)] = "EXPANSION_FORM_START"),
          (e[(e.EXPANSION_CASE_VALUE = 17)] = "EXPANSION_CASE_VALUE"),
          (e[(e.EXPANSION_CASE_EXP_START = 18)] = "EXPANSION_CASE_EXP_START"),
          (e[(e.EXPANSION_CASE_EXP_END = 19)] = "EXPANSION_CASE_EXP_END"),
          (e[(e.EXPANSION_FORM_END = 20)] = "EXPANSION_FORM_END"),
          (e[(e.EOF = 21)] = "EOF");
      })(xa || (xa = {}));
      class _a {
        constructor(e, t, n) {
          (this.type = e), (this.parts = t), (this.sourceSpan = n);
        }
      }
      class wa extends Er {
        constructor(e, t, n) {
          super(n, e), (this.tokenType = t);
        }
      }
      class Ca {
        constructor(e, t, n) {
          (this.tokens = e),
            (this.errors = t),
            (this.nonNormalizedIcuExpressions = n);
        }
      }
      function Sa(e, t, n, s = {}) {
        const i = new Aa(new br(e, t), n, s);
        return (
          i.tokenize(),
          new Ca(
            (function (e) {
              const t = [];
              let n = void 0;
              for (let s = 0; s < e.length; s++) {
                const i = e[s];
                n && n.type == xa.TEXT && i.type == xa.TEXT
                  ? ((n.parts[0] += i.parts[0]),
                    (n.sourceSpan.end = i.sourceSpan.end))
                  : ((n = i), t.push(n));
              }
              return t;
            })(i.tokens),
            i.errors,
            i.nonNormalizedIcuExpressions
          )
        );
      }
      const Ea = /\r\n?/g;
      function ka(e) {
        return `Unexpected character "${
          0 === e ? "EOF" : String.fromCharCode(e)
        }"`;
      }
      function Oa(e) {
        return `Unknown entity "${e}" - use the "&#<decimal>;" or  "&#x<hex>;" syntax`;
      }
      var Ia;
      !(function (e) {
        (e.HEX = "hexadecimal"), (e.DEC = "decimal");
      })(Ia || (Ia = {}));
      class Ta {
        constructor(e) {
          this.error = e;
        }
      }
      class Aa {
        constructor(e, t, n) {
          (this._getTagDefinition = t),
            (this._currentTokenStart = null),
            (this._currentTokenType = null),
            (this._expansionCaseStack = []),
            (this._inInterpolation = !1),
            (this.tokens = []),
            (this.errors = []),
            (this.nonNormalizedIcuExpressions = []),
            (this._tokenizeIcu = n.tokenizeExpansionForms || !1),
            (this._interpolationConfig = n.interpolationConfig || Fi),
            (this._leadingTriviaCodePoints =
              n.leadingTriviaChars &&
              n.leadingTriviaChars.map((e) => e.codePointAt(0) || 0));
          const s = n.range || {
            endPos: e.content.length,
            startPos: 0,
            startLine: 0,
            startCol: 0,
          };
          (this._cursor = n.escapedString ? new Fa(e, s) : new Na(e, s)),
            (this._preserveLineEndings = n.preserveLineEndings || !1),
            (this._escapedString = n.escapedString || !1),
            (this._i18nNormalizeLineEndingsInICUs =
              n.i18nNormalizeLineEndingsInICUs || !1);
          try {
            this._cursor.init();
          } catch (i) {
            this.handleError(i);
          }
        }
        _processCarriageReturns(e) {
          return this._preserveLineEndings ? e : e.replace(Ea, "\n");
        }
        tokenize() {
          for (; 0 !== this._cursor.peek(); ) {
            const t = this._cursor.clone();
            try {
              this._attemptCharCode(or)
                ? this._attemptCharCode(33)
                  ? this._attemptCharCode(91)
                    ? this._consumeCdata(t)
                    : this._attemptCharCode(45)
                    ? this._consumeComment(t)
                    : this._consumeDocType(t)
                  : this._attemptCharCode(sr)
                  ? this._consumeTagClose(t)
                  : this._consumeTagOpen(t)
                : (this._tokenizeIcu && this._tokenizeExpansionForm()) ||
                  this._consumeText();
            } catch (e) {
              this.handleError(e);
            }
          }
          this._beginToken(xa.EOF), this._endToken([]);
        }
        _tokenizeExpansionForm() {
          if (this.isExpansionFormStart())
            return this._consumeExpansionFormStart(), !0;
          if (this._cursor.peek() !== hr && this._isInExpansionForm())
            return this._consumeExpansionCaseStart(), !0;
          if (this._cursor.peek() === hr) {
            if (this._isInExpansionCase())
              return this._consumeExpansionCaseEnd(), !0;
            if (this._isInExpansionForm())
              return this._consumeExpansionFormEnd(), !0;
          }
          return !1;
        }
        _beginToken(e, t = this._cursor.clone()) {
          (this._currentTokenStart = t), (this._currentTokenType = e);
        }
        _endToken(e, t) {
          if (null === this._currentTokenStart)
            throw new wa(
              "Programming error - attempted to end a token when there was no start to the token",
              this._currentTokenType,
              this._cursor.getSpan(t)
            );
          if (null === this._currentTokenType)
            throw new wa(
              "Programming error - attempted to end a token which has no token type",
              null,
              this._cursor.getSpan(this._currentTokenStart)
            );
          const n = new _a(
            this._currentTokenType,
            e,
            this._cursor.getSpan(
              this._currentTokenStart,
              this._leadingTriviaCodePoints
            )
          );
          return (
            this.tokens.push(n),
            (this._currentTokenStart = null),
            (this._currentTokenType = null),
            n
          );
        }
        _createError(e, t) {
          this._isInExpansionForm() &&
            (e +=
              ' (Do you have an unescaped "{" in your template? Use "{{ \'{\' }}") to escape it.)');
          const n = new wa(e, this._currentTokenType, t);
          return (
            (this._currentTokenStart = null),
            (this._currentTokenType = null),
            new Ta(n)
          );
        }
        handleError(e) {
          if (
            (e instanceof La &&
              (e = this._createError(e.msg, this._cursor.getSpan(e.cursor))),
            !(e instanceof Ta))
          )
            throw e;
          this.errors.push(e.error);
        }
        _attemptCharCode(e) {
          return this._cursor.peek() === e && (this._cursor.advance(), !0);
        }
        _attemptCharCodeCaseInsensitive(e) {
          return (
            (t = this._cursor.peek()),
            (n = e),
            ja(t) == ja(n) && (this._cursor.advance(), !0)
          );
          var t, n;
        }
        _requireCharCode(e) {
          const t = this._cursor.clone();
          if (!this._attemptCharCode(e))
            throw this._createError(
              ka(this._cursor.peek()),
              this._cursor.getSpan(t)
            );
        }
        _attemptStr(e) {
          const t = e.length;
          if (this._cursor.charsLeft() < t) return !1;
          const n = this._cursor.clone();
          for (let s = 0; s < t; s++)
            if (!this._attemptCharCode(e.charCodeAt(s)))
              return (this._cursor = n), !1;
          return !0;
        }
        _attemptStrCaseInsensitive(e) {
          for (let t = 0; t < e.length; t++)
            if (!this._attemptCharCodeCaseInsensitive(e.charCodeAt(t)))
              return !1;
          return !0;
        }
        _requireStr(e) {
          const t = this._cursor.clone();
          if (!this._attemptStr(e))
            throw this._createError(
              ka(this._cursor.peek()),
              this._cursor.getSpan(t)
            );
        }
        _attemptCharCodeUntilFn(e) {
          for (; !e(this._cursor.peek()); ) this._cursor.advance();
        }
        _requireCharCodeUntilFn(e, t) {
          const n = this._cursor.clone();
          if ((this._attemptCharCodeUntilFn(e), this._cursor.diff(n) < t))
            throw this._createError(
              ka(this._cursor.peek()),
              this._cursor.getSpan(n)
            );
        }
        _attemptUntilChar(e) {
          for (; this._cursor.peek() !== e; ) this._cursor.advance();
        }
        _readChar(e) {
          if (e && 38 === this._cursor.peek()) return this._decodeEntity();
          {
            const e = String.fromCodePoint(this._cursor.peek());
            return this._cursor.advance(), e;
          }
        }
        _decodeEntity() {
          const e = this._cursor.clone();
          if ((this._cursor.advance(), !this._attemptCharCode(35))) {
            const t = this._cursor.clone();
            if ((this._attemptCharCodeUntilFn(Ra), this._cursor.peek() != rr))
              return (this._cursor = t), "&";
            const n = this._cursor.getChars(t);
            this._cursor.advance();
            const s = d[n];
            if (!s) throw this._createError(Oa(n), this._cursor.getSpan(e));
            return s;
          }
          {
            const s = this._attemptCharCode(120) || this._attemptCharCode(88),
              i = this._cursor.clone();
            if ((this._attemptCharCodeUntilFn(Pa), this._cursor.peek() != rr)) {
              this._cursor.advance();
              const n = s ? Ia.HEX : Ia.DEC;
              throw this._createError(
                ((t = n),
                `Unable to parse entity "${this._cursor.getChars(
                  e
                )}" - ${t} character reference entities must end with ";"`),
                this._cursor.getSpan()
              );
            }
            const r = this._cursor.getChars(i);
            this._cursor.advance();
            try {
              const e = parseInt(r, s ? 16 : 10);
              return String.fromCharCode(e);
            } catch (n) {
              throw this._createError(
                Oa(this._cursor.getChars(e)),
                this._cursor.getSpan()
              );
            }
          }
          var t;
        }
        _consumeRawText(e, t) {
          this._beginToken(e ? xa.ESCAPABLE_RAW_TEXT : xa.RAW_TEXT);
          const n = [];
          for (;;) {
            const s = this._cursor.clone(),
              i = t();
            if (((this._cursor = s), i)) break;
            n.push(this._readChar(e));
          }
          return this._endToken([this._processCarriageReturns(n.join(""))]);
        }
        _consumeComment(e) {
          this._beginToken(xa.COMMENT_START, e),
            this._requireCharCode(45),
            this._endToken([]),
            this._consumeRawText(!1, () => this._attemptStr("--\x3e")),
            this._beginToken(xa.COMMENT_END),
            this._requireStr("--\x3e"),
            this._endToken([]);
        }
        _consumeCdata(e) {
          this._beginToken(xa.CDATA_START, e),
            this._requireStr("CDATA["),
            this._endToken([]),
            this._consumeRawText(!1, () => this._attemptStr("]]>")),
            this._beginToken(xa.CDATA_END),
            this._requireStr("]]>"),
            this._endToken([]);
        }
        _consumeDocType(e) {
          this._beginToken(xa.DOC_TYPE, e);
          const t = this._cursor.clone();
          this._attemptUntilChar(lr);
          const n = this._cursor.getChars(t);
          this._cursor.advance(), this._endToken([n]);
        }
        _consumePrefixAndName() {
          const e = this._cursor.clone();
          let t = "";
          for (
            ;
            this._cursor.peek() !== ir &&
            !(
              ((n = this._cursor.peek()) < cr || ur < n) &&
              (n < 65 || 90 < n) &&
              (n < 48 || n > 57)
            );

          )
            this._cursor.advance();
          var n;
          let s;
          this._cursor.peek() === ir
            ? ((t = this._cursor.getChars(e)),
              this._cursor.advance(),
              (s = this._cursor.clone()))
            : (s = e),
            this._requireCharCodeUntilFn(Ma, "" === t ? 0 : 1);
          return [t, this._cursor.getChars(s)];
        }
        _consumeTagOpen(e) {
          let t, n, i;
          try {
            if (!fr(this._cursor.peek()))
              throw this._createError(
                ka(this._cursor.peek()),
                this._cursor.getSpan(e)
              );
            for (
              i = this._consumeTagOpenStart(e),
                n = i.parts[0],
                t = i.parts[1],
                this._attemptCharCodeUntilFn(Da);
              this._cursor.peek() !== sr &&
              this._cursor.peek() !== lr &&
              this._cursor.peek() !== or;

            )
              this._consumeAttributeName(),
                this._attemptCharCodeUntilFn(Da),
                this._attemptCharCode(ar) &&
                  (this._attemptCharCodeUntilFn(Da),
                  this._consumeAttributeValue()),
                this._attemptCharCodeUntilFn(Da);
            this._consumeTagOpenEnd();
          } catch (o) {
            if (o instanceof Ta)
              return void (i
                ? (i.type = xa.INCOMPLETE_TAG_OPEN)
                : (this._beginToken(xa.TEXT, e), this._endToken(["<"])));
            throw o;
          }
          const r = this._getTagDefinition(t).contentType;
          r === s.RAW_TEXT
            ? this._consumeRawTextWithTagClose(n, t, !1)
            : r === s.ESCAPABLE_RAW_TEXT &&
              this._consumeRawTextWithTagClose(n, t, !0);
        }
        _consumeRawTextWithTagClose(e, t, n) {
          this._consumeRawText(
            n,
            () =>
              !!this._attemptCharCode(or) &&
              !!this._attemptCharCode(sr) &&
              (this._attemptCharCodeUntilFn(Da),
              !!this._attemptStrCaseInsensitive(t) &&
                (this._attemptCharCodeUntilFn(Da), this._attemptCharCode(lr)))
          );
          this._beginToken(xa.TAG_CLOSE),
            this._requireCharCodeUntilFn((e) => e === lr, 3),
            this._cursor.advance(),
            this._endToken([e, t]);
        }
        _consumeTagOpenStart(e) {
          this._beginToken(xa.TAG_OPEN_START, e);
          const t = this._consumePrefixAndName();
          return this._endToken(t);
        }
        _consumeAttributeName() {
          const e = this._cursor.peek();
          if (39 === e || 34 === e)
            throw this._createError(ka(e), this._cursor.getSpan());
          this._beginToken(xa.ATTR_NAME);
          const t = this._consumePrefixAndName();
          this._endToken(t);
        }
        _consumeAttributeValue() {
          let e;
          if (39 === this._cursor.peek() || 34 === this._cursor.peek()) {
            this._beginToken(xa.ATTR_QUOTE);
            const t = this._cursor.peek();
            this._cursor.advance(),
              this._endToken([String.fromCodePoint(t)]),
              this._beginToken(xa.ATTR_VALUE);
            const n = [];
            for (; this._cursor.peek() !== t; ) n.push(this._readChar(!0));
            (e = n.join("")),
              this._endToken([this._processCarriageReturns(e)]),
              this._beginToken(xa.ATTR_QUOTE),
              this._cursor.advance(),
              this._endToken([String.fromCodePoint(t)]);
          } else {
            this._beginToken(xa.ATTR_VALUE);
            const t = this._cursor.clone();
            this._requireCharCodeUntilFn(Ma, 1),
              (e = this._cursor.getChars(t)),
              this._endToken([this._processCarriageReturns(e)]);
          }
        }
        _consumeTagOpenEnd() {
          const e = this._attemptCharCode(sr)
            ? xa.TAG_OPEN_END_VOID
            : xa.TAG_OPEN_END;
          this._beginToken(e), this._requireCharCode(lr), this._endToken([]);
        }
        _consumeTagClose(e) {
          this._beginToken(xa.TAG_CLOSE, e), this._attemptCharCodeUntilFn(Da);
          const t = this._consumePrefixAndName();
          this._attemptCharCodeUntilFn(Da),
            this._requireCharCode(lr),
            this._endToken(t);
        }
        _consumeExpansionFormStart() {
          this._beginToken(xa.EXPANSION_FORM_START),
            this._requireCharCode(dr),
            this._endToken([]),
            this._expansionCaseStack.push(xa.EXPANSION_FORM_START),
            this._beginToken(xa.RAW_TEXT);
          const e = this._readUntil(nr),
            t = this._processCarriageReturns(e);
          if (this._i18nNormalizeLineEndingsInICUs) this._endToken([t]);
          else {
            const n = this._endToken([e]);
            t !== e && this.nonNormalizedIcuExpressions.push(n);
          }
          this._requireCharCode(nr),
            this._attemptCharCodeUntilFn(Da),
            this._beginToken(xa.RAW_TEXT);
          const n = this._readUntil(nr);
          this._endToken([n]),
            this._requireCharCode(nr),
            this._attemptCharCodeUntilFn(Da);
        }
        _consumeExpansionCaseStart() {
          this._beginToken(xa.EXPANSION_CASE_VALUE);
          const e = this._readUntil(dr).trim();
          this._endToken([e]),
            this._attemptCharCodeUntilFn(Da),
            this._beginToken(xa.EXPANSION_CASE_EXP_START),
            this._requireCharCode(dr),
            this._endToken([]),
            this._attemptCharCodeUntilFn(Da),
            this._expansionCaseStack.push(xa.EXPANSION_CASE_EXP_START);
        }
        _consumeExpansionCaseEnd() {
          this._beginToken(xa.EXPANSION_CASE_EXP_END),
            this._requireCharCode(hr),
            this._endToken([]),
            this._attemptCharCodeUntilFn(Da),
            this._expansionCaseStack.pop();
        }
        _consumeExpansionFormEnd() {
          this._beginToken(xa.EXPANSION_FORM_END),
            this._requireCharCode(hr),
            this._endToken([]),
            this._expansionCaseStack.pop();
        }
        _consumeText() {
          const e = this._cursor.clone();
          this._beginToken(xa.TEXT, e);
          const t = [];
          do {
            this._interpolationConfig &&
            this._attemptStr(this._interpolationConfig.start)
              ? (t.push(this._interpolationConfig.start),
                (this._inInterpolation = !0))
              : this._interpolationConfig &&
                this._inInterpolation &&
                this._attemptStr(this._interpolationConfig.end)
              ? (t.push(this._interpolationConfig.end),
                (this._inInterpolation = !1))
              : t.push(this._readChar(!0));
          } while (!this._isTextEnd());
          this._endToken([this._processCarriageReturns(t.join(""))]);
        }
        _isTextEnd() {
          if (this._cursor.peek() === or || 0 === this._cursor.peek())
            return !0;
          if (this._tokenizeIcu && !this._inInterpolation) {
            if (this.isExpansionFormStart()) return !0;
            if (this._cursor.peek() === hr && this._isInExpansionCase())
              return !0;
          }
          return !1;
        }
        _readUntil(e) {
          const t = this._cursor.clone();
          return this._attemptUntilChar(e), this._cursor.getChars(t);
        }
        _isInExpansionCase() {
          return (
            this._expansionCaseStack.length > 0 &&
            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===
              xa.EXPANSION_CASE_EXP_START
          );
        }
        _isInExpansionForm() {
          return (
            this._expansionCaseStack.length > 0 &&
            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===
              xa.EXPANSION_FORM_START
          );
        }
        isExpansionFormStart() {
          if (this._cursor.peek() !== dr) return !1;
          if (this._interpolationConfig) {
            const e = this._cursor.clone(),
              t = this._attemptStr(this._interpolationConfig.start);
            return (this._cursor = e), !t;
          }
          return !0;
        }
      }
      function Da(e) {
        return !pr(e) || 0 === e;
      }
      function Ma(e) {
        return (
          pr(e) ||
          e === lr ||
          e === or ||
          e === sr ||
          39 === e ||
          34 === e ||
          e === ar
        );
      }
      function Pa(e) {
        return (
          e == rr ||
          0 == e ||
          !(function (e) {
            return (e >= cr && e <= 102) || (e >= 65 && e <= 70) || mr(e);
          })(e)
        );
      }
      function Ra(e) {
        return e == rr || 0 == e || !fr(e);
      }
      function ja(e) {
        return e >= cr && e <= ur ? e - cr + 65 : e;
      }
      class Na {
        constructor(e, t) {
          if (e instanceof Na) {
            (this.file = e.file), (this.input = e.input), (this.end = e.end);
            const t = e.state;
            this.state = {
              peek: t.peek,
              offset: t.offset,
              line: t.line,
              column: t.column,
            };
          } else {
            if (!t)
              throw new Error(
                "Programming error: the range argument must be provided with a file argument."
              );
            (this.file = e),
              (this.input = e.content),
              (this.end = t.endPos),
              (this.state = {
                peek: -1,
                offset: t.startPos,
                line: t.startLine,
                column: t.startCol,
              });
          }
        }
        clone() {
          return new Na(this);
        }
        peek() {
          return this.state.peek;
        }
        charsLeft() {
          return this.end - this.state.offset;
        }
        diff(e) {
          return this.state.offset - e.state.offset;
        }
        advance() {
          this.advanceState(this.state);
        }
        init() {
          this.updatePeek(this.state);
        }
        getSpan(e, t) {
          let n = (e = e || this);
          if (t)
            for (; this.diff(e) > 0 && -1 !== t.indexOf(e.peek()); )
              n === e && (e = e.clone()), e.advance();
          const s = this.locationFromCursor(e),
            i = this.locationFromCursor(this),
            r = n !== e ? this.locationFromCursor(n) : s;
          return new xr(s, i, r);
        }
        getChars(e) {
          return this.input.substring(e.state.offset, this.state.offset);
        }
        charAt(e) {
          return this.input.charCodeAt(e);
        }
        advanceState(e) {
          if (e.offset >= this.end)
            throw (
              ((this.state = e), new La('Unexpected character "EOF"', this))
            );
          const t = this.charAt(e.offset);
          t === er ? (e.line++, (e.column = 0)) : gr(t) || e.column++,
            e.offset++,
            this.updatePeek(e);
        }
        updatePeek(e) {
          e.peek = e.offset >= this.end ? 0 : this.charAt(e.offset);
        }
        locationFromCursor(e) {
          return new vr(e.file, e.state.offset, e.state.line, e.state.column);
        }
      }
      class Fa extends Na {
        constructor(e, t) {
          e instanceof Fa
            ? (super(e),
              (this.internalState = Object.assign({}, e.internalState)))
            : (super(e, t), (this.internalState = this.state));
        }
        advance() {
          (this.state = this.internalState),
            super.advance(),
            this.processEscapeSequence();
        }
        init() {
          super.init(), this.processEscapeSequence();
        }
        clone() {
          return new Fa(this);
        }
        getChars(e) {
          const t = e.clone();
          let n = "";
          for (; t.internalState.offset < this.internalState.offset; )
            (n += String.fromCodePoint(t.peek())), t.advance();
          return n;
        }
        processEscapeSequence() {
          const e = () => this.internalState.peek;
          if (92 === e())
            if (
              ((this.internalState = Object.assign({}, this.state)),
              this.advanceState(this.internalState),
              110 === e())
            )
              this.state.peek = er;
            else if (114 === e()) this.state.peek = 13;
            else if (118 === e()) this.state.peek = 11;
            else if (116 === e()) this.state.peek = 9;
            else if (98 === e()) this.state.peek = 8;
            else if (102 === e()) this.state.peek = 12;
            else if (117 === e())
              if ((this.advanceState(this.internalState), e() === dr)) {
                this.advanceState(this.internalState);
                const t = this.clone();
                let n = 0;
                for (; e() !== hr; ) this.advanceState(this.internalState), n++;
                this.state.peek = this.decodeHexDigits(t, n);
              } else {
                const e = this.clone();
                this.advanceState(this.internalState),
                  this.advanceState(this.internalState),
                  this.advanceState(this.internalState),
                  (this.state.peek = this.decodeHexDigits(e, 4));
              }
            else if (120 === e()) {
              this.advanceState(this.internalState);
              const e = this.clone();
              this.advanceState(this.internalState),
                (this.state.peek = this.decodeHexDigits(e, 2));
            } else if (yr(e())) {
              let t = "",
                n = 0,
                s = this.clone();
              for (; yr(e()) && n < 3; )
                (s = this.clone()),
                  (t += String.fromCodePoint(e())),
                  this.advanceState(this.internalState),
                  n++;
              (this.state.peek = parseInt(t, 8)),
                (this.internalState = s.internalState);
            } else
              gr(this.internalState.peek)
                ? (this.advanceState(this.internalState),
                  (this.state = this.internalState))
                : (this.state.peek = this.internalState.peek);
        }
        decodeHexDigits(e, t) {
          const n = this.input.substr(e.internalState.offset, t),
            s = parseInt(n, 16);
          if (isNaN(s))
            throw (
              ((e.state = e.internalState),
              new La("Invalid hexadecimal escape sequence", e))
            );
          return s;
        }
      }
      class La {
        constructor(e, t) {
          (this.msg = e), (this.cursor = t);
        }
      }
      class Va extends Er {
        constructor(e, t, n) {
          super(t, n), (this.elementName = e);
        }
        static create(e, t, n) {
          return new Va(e, t, n);
        }
      }
      class Ba {
        constructor(e, t) {
          (this.rootNodes = e), (this.errors = t);
        }
      }
      class za {
        constructor(e) {
          this.getTagDefinition = e;
        }
        parse(e, t, n) {
          const s = Sa(e, t, this.getTagDefinition, n),
            i = new Ha(s.tokens, this.getTagDefinition);
          return i.build(), new Ba(i.rootNodes, s.errors.concat(i.errors));
        }
      }
      class Ha {
        constructor(e, t) {
          (this.tokens = e),
            (this.getTagDefinition = t),
            (this._index = -1),
            (this._elementStack = []),
            (this.rootNodes = []),
            (this.errors = []),
            this._advance();
        }
        build() {
          for (; this._peek.type !== xa.EOF; )
            this._peek.type === xa.TAG_OPEN_START ||
            this._peek.type === xa.INCOMPLETE_TAG_OPEN
              ? this._consumeStartTag(this._advance())
              : this._peek.type === xa.TAG_CLOSE
              ? this._consumeEndTag(this._advance())
              : this._peek.type === xa.CDATA_START
              ? (this._closeVoidElement(), this._consumeCdata(this._advance()))
              : this._peek.type === xa.COMMENT_START
              ? (this._closeVoidElement(),
                this._consumeComment(this._advance()))
              : this._peek.type === xa.TEXT ||
                this._peek.type === xa.RAW_TEXT ||
                this._peek.type === xa.ESCAPABLE_RAW_TEXT
              ? (this._closeVoidElement(), this._consumeText(this._advance()))
              : this._peek.type === xa.EXPANSION_FORM_START
              ? this._consumeExpansion(this._advance())
              : this._advance();
        }
        _advance() {
          const e = this._peek;
          return (
            this._index < this.tokens.length - 1 && this._index++,
            (this._peek = this.tokens[this._index]),
            e
          );
        }
        _advanceIf(e) {
          return this._peek.type === e ? this._advance() : null;
        }
        _consumeCdata(e) {
          this._consumeText(this._advance()), this._advanceIf(xa.CDATA_END);
        }
        _consumeComment(e) {
          const t = this._advanceIf(xa.RAW_TEXT);
          this._advanceIf(xa.COMMENT_END);
          const n = null != t ? t.parts[0].trim() : null;
          this._addToParent(new va(n, e.sourceSpan));
        }
        _consumeExpansion(e) {
          const t = this._advance(),
            n = this._advance(),
            s = [];
          for (; this._peek.type === xa.EXPANSION_CASE_VALUE; ) {
            const e = this._parseExpansionCase();
            if (!e) return;
            s.push(e);
          }
          if (this._peek.type !== xa.EXPANSION_FORM_END)
            return void this.errors.push(
              Va.create(
                null,
                this._peek.sourceSpan,
                "Invalid ICU message. Missing '}'."
              )
            );
          const i = new xr(
            e.sourceSpan.start,
            this._peek.sourceSpan.end,
            e.sourceSpan.fullStart
          );
          this._addToParent(new ma(t.parts[0], n.parts[0], s, i, t.sourceSpan)),
            this._advance();
        }
        _parseExpansionCase() {
          const e = this._advance();
          if (this._peek.type !== xa.EXPANSION_CASE_EXP_START)
            return (
              this.errors.push(
                Va.create(
                  null,
                  this._peek.sourceSpan,
                  "Invalid ICU message. Missing '{'."
                )
              ),
              null
            );
          const t = this._advance(),
            n = this._collectExpansionExpTokens(t);
          if (!n) return null;
          const s = this._advance();
          n.push(new _a(xa.EOF, [], s.sourceSpan));
          const i = new Ha(n, this.getTagDefinition);
          if ((i.build(), i.errors.length > 0))
            return (this.errors = this.errors.concat(i.errors)), null;
          const r = new xr(
              e.sourceSpan.start,
              s.sourceSpan.end,
              e.sourceSpan.fullStart
            ),
            o = new xr(
              t.sourceSpan.start,
              s.sourceSpan.end,
              t.sourceSpan.fullStart
            );
          return new fa(e.parts[0], i.rootNodes, r, e.sourceSpan, o);
        }
        _collectExpansionExpTokens(e) {
          const t = [],
            n = [xa.EXPANSION_CASE_EXP_START];
          for (;;) {
            if (
              ((this._peek.type !== xa.EXPANSION_FORM_START &&
                this._peek.type !== xa.EXPANSION_CASE_EXP_START) ||
                n.push(this._peek.type),
              this._peek.type === xa.EXPANSION_CASE_EXP_END)
            ) {
              if (!Ga(n, xa.EXPANSION_CASE_EXP_START))
                return (
                  this.errors.push(
                    Va.create(
                      null,
                      e.sourceSpan,
                      "Invalid ICU message. Missing '}'."
                    )
                  ),
                  null
                );
              if ((n.pop(), 0 == n.length)) return t;
            }
            if (this._peek.type === xa.EXPANSION_FORM_END) {
              if (!Ga(n, xa.EXPANSION_FORM_START))
                return (
                  this.errors.push(
                    Va.create(
                      null,
                      e.sourceSpan,
                      "Invalid ICU message. Missing '}'."
                    )
                  ),
                  null
                );
              n.pop();
            }
            if (this._peek.type === xa.EOF)
              return (
                this.errors.push(
                  Va.create(
                    null,
                    e.sourceSpan,
                    "Invalid ICU message. Missing '}'."
                  )
                ),
                null
              );
            t.push(this._advance());
          }
        }
        _consumeText(e) {
          let t = e.parts[0];
          if (t.length > 0 && "\n" == t[0]) {
            const e = this._getParentElement();
            null != e &&
              0 == e.children.length &&
              this.getTagDefinition(e.name).ignoreFirstLf &&
              (t = t.substring(1));
          }
          t.length > 0 && this._addToParent(new pa(t, e.sourceSpan));
        }
        _closeVoidElement() {
          const e = this._getParentElement();
          e && this.getTagDefinition(e.name).isVoid && this._elementStack.pop();
        }
        _consumeStartTag(e) {
          const [t, n] = e.parts,
            s = [];
          for (; this._peek.type === xa.ATTR_NAME; )
            s.push(this._consumeAttr(this._advance()));
          const i = this._getElementFullName(t, n, this._getParentElement());
          let r = !1;
          if (this._peek.type === xa.TAG_OPEN_END_VOID) {
            this._advance(), (r = !0);
            const t = this.getTagDefinition(i);
            t.canSelfClose ||
              null !== c(i) ||
              t.isVoid ||
              this.errors.push(
                Va.create(
                  i,
                  e.sourceSpan,
                  `Only void and foreign elements can be self closed "${e.parts[1]}"`
                )
              );
          } else
            this._peek.type === xa.TAG_OPEN_END && (this._advance(), (r = !1));
          const o = this._peek.sourceSpan.start,
            a = new xr(e.sourceSpan.start, o, e.sourceSpan.fullStart),
            l = new xr(e.sourceSpan.start, o, e.sourceSpan.fullStart),
            u = new ya(i, s, [], a, l, void 0);
          this._pushElement(u),
            r
              ? this._popElement(i, a)
              : e.type === xa.INCOMPLETE_TAG_OPEN &&
                (this._popElement(i, null),
                this.errors.push(
                  Va.create(i, a, `Opening tag "${i}" not terminated.`)
                ));
        }
        _pushElement(e) {
          const t = this._getParentElement();
          t &&
            this.getTagDefinition(t.name).isClosedByChild(e.name) &&
            this._elementStack.pop(),
            this._addToParent(e),
            this._elementStack.push(e);
        }
        _consumeEndTag(e) {
          const t = this._getElementFullName(
            e.parts[0],
            e.parts[1],
            this._getParentElement()
          );
          if (this.getTagDefinition(t).isVoid)
            this.errors.push(
              Va.create(
                t,
                e.sourceSpan,
                `Void elements do not have end tags "${e.parts[1]}"`
              )
            );
          else if (!this._popElement(t, e.sourceSpan)) {
            const n = `Unexpected closing tag "${t}". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags`;
            this.errors.push(Va.create(t, e.sourceSpan, n));
          }
        }
        _popElement(e, t) {
          for (let n = this._elementStack.length - 1; n >= 0; n--) {
            const s = this._elementStack[n];
            if (s.name == e)
              return (
                (s.endSourceSpan = t),
                (s.sourceSpan.end = null !== t ? t.end : s.sourceSpan.end),
                this._elementStack.splice(n, this._elementStack.length - n),
                !0
              );
            if (!this.getTagDefinition(s.name).closedByParent) return !1;
          }
          return !1;
        }
        _consumeAttr(e) {
          const t = u(e.parts[0], e.parts[1]);
          let n = e.sourceSpan.end,
            s = "",
            i = void 0;
          if (
            (this._peek.type === xa.ATTR_QUOTE && this._advance(),
            this._peek.type === xa.ATTR_VALUE)
          ) {
            const e = this._advance();
            (s = e.parts[0]), (n = e.sourceSpan.end), (i = e.sourceSpan);
          }
          if (this._peek.type === xa.ATTR_QUOTE) {
            n = this._advance().sourceSpan.end;
          }
          return new ga(
            t,
            s,
            new xr(e.sourceSpan.start, n, e.sourceSpan.fullStart),
            i
          );
        }
        _getParentElement() {
          return this._elementStack.length > 0
            ? this._elementStack[this._elementStack.length - 1]
            : null;
        }
        _addToParent(e) {
          const t = this._getParentElement();
          null != t ? t.children.push(e) : this.rootNodes.push(e);
        }
        _getElementFullName(e, t, n) {
          if (
            "" === e &&
            "" ===
              (e = this.getTagDefinition(t).implicitNamespacePrefix || "") &&
            null != n
          ) {
            const t = r(n.name)[1];
            this.getTagDefinition(t).preventNamespaceInheritance ||
              (e = c(n.name));
          }
          return u(e, t);
        }
      }
      function Ga(e, t) {
        return e.length > 0 && e[e.length - 1] === t;
      }
      class Ua extends za {
        constructor() {
          super(f);
        }
        parse(e, t, n) {
          return super.parse(e, t, n);
        }
      }
      const $a = "ngPreserveWhitespaces",
        qa = new Set(["pre", "template", "textarea", "script", "style"]),
        Wa =
          " \f\n\r\t\v\u1680\u180e\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff",
        Ya = new RegExp(`[^${Wa}]`),
        Qa = new RegExp(`[${Wa}]{2,}`, "g");
      function Ka(e) {
        return e.replace(new RegExp("\ue500", "g"), " ");
      }
      class Ja {
        visitElement(e, t) {
          return qa.has(e.name) || e.attrs.some((e) => e.name === $a)
            ? new ya(
                e.name,
                ba(this, e.attrs),
                e.children,
                e.sourceSpan,
                e.startSourceSpan,
                e.endSourceSpan,
                e.i18n
              )
            : new ya(
                e.name,
                e.attrs,
                (function (e, t) {
                  const n = [];
                  return (
                    t.forEach((s, i) => {
                      const r = { prev: t[i - 1], next: t[i + 1] },
                        o = s.visit(e, r);
                      o && n.push(o);
                    }),
                    n
                  );
                })(this, e.children),
                e.sourceSpan,
                e.startSourceSpan,
                e.endSourceSpan,
                e.i18n
              );
        }
        visitAttribute(e, t) {
          return e.name !== $a ? e : null;
        }
        visitText(e, t) {
          const n = e.value.match(Ya),
            s = t && (t.prev instanceof ma || t.next instanceof ma);
          return n || s
            ? new pa(Ka(e.value).replace(Qa, " "), e.sourceSpan, e.i18n)
            : null;
        }
        visitComment(e, t) {
          return e;
        }
        visitExpansion(e, t) {
          return e;
        }
        visitExpansionCase(e, t) {
          return e;
        }
      }
      function Xa(e) {
        return new Ba(ba(new Ja(), e.rootNodes), e.errors);
      }
      const Za = ["zero", "one", "two", "few", "many", "other"];
      function el(e) {
        const t = new sl();
        return new tl(ba(t, e), t.isExpanded, t.errors);
      }
      class tl {
        constructor(e, t, n) {
          (this.nodes = e), (this.expanded = t), (this.errors = n);
        }
      }
      class nl extends Er {
        constructor(e, t) {
          super(e, t);
        }
      }
      class sl {
        constructor() {
          (this.isExpanded = !1), (this.errors = []);
        }
        visitElement(e, t) {
          return new ya(
            e.name,
            e.attrs,
            ba(this, e.children),
            e.sourceSpan,
            e.startSourceSpan,
            e.endSourceSpan
          );
        }
        visitAttribute(e, t) {
          return e;
        }
        visitText(e, t) {
          return e;
        }
        visitComment(e, t) {
          return e;
        }
        visitExpansion(e, t) {
          return (
            (this.isExpanded = !0),
            "plural" == e.type
              ? (function (e, t) {
                  const n = e.cases.map((e) => {
                      -1 != Za.indexOf(e.value) ||
                        e.value.match(/^=\d+$/) ||
                        t.push(
                          new nl(
                            e.valueSourceSpan,
                            'Plural cases should be "=<number>" or one of ' +
                              Za.join(", ")
                          )
                        );
                      const n = el(e.expression);
                      return (
                        t.push(...n.errors),
                        new ya(
                          "ng-template",
                          [
                            new ga(
                              "ngPluralCase",
                              "" + e.value,
                              e.valueSourceSpan
                            ),
                          ],
                          n.nodes,
                          e.sourceSpan,
                          e.sourceSpan,
                          e.sourceSpan
                        )
                      );
                    }),
                    s = new ga(
                      "[ngPlural]",
                      e.switchValue,
                      e.switchValueSourceSpan
                    );
                  return new ya(
                    "ng-container",
                    [s],
                    n,
                    e.sourceSpan,
                    e.sourceSpan,
                    e.sourceSpan
                  );
                })(e, this.errors)
              : (function (e, t) {
                  const n = e.cases.map((e) => {
                      const n = el(e.expression);
                      return (
                        t.push(...n.errors),
                        "other" === e.value
                          ? new ya(
                              "ng-template",
                              [
                                new ga(
                                  "ngSwitchDefault",
                                  "",
                                  e.valueSourceSpan
                                ),
                              ],
                              n.nodes,
                              e.sourceSpan,
                              e.sourceSpan,
                              e.sourceSpan
                            )
                          : new ya(
                              "ng-template",
                              [
                                new ga(
                                  "ngSwitchCase",
                                  "" + e.value,
                                  e.valueSourceSpan
                                ),
                              ],
                              n.nodes,
                              e.sourceSpan,
                              e.sourceSpan,
                              e.sourceSpan
                            )
                      );
                    }),
                    s = new ga(
                      "[ngSwitch]",
                      e.switchValue,
                      e.switchValueSourceSpan
                    );
                  return new ya(
                    "ng-container",
                    [s],
                    n,
                    e.sourceSpan,
                    e.sourceSpan,
                    e.sourceSpan
                  );
                })(e, this.errors)
          );
        }
        visitExpansionCase(e, t) {
          throw new Error("Should not be reached");
        }
      }
      class il {
        constructor(e, t, n) {
          (this.value = e), (this.ngContentIndex = t), (this.sourceSpan = n);
        }
        visit(e, t) {
          return e.visitText(this, t);
        }
      }
      class rl {
        constructor(e, t, n) {
          (this.value = e), (this.ngContentIndex = t), (this.sourceSpan = n);
        }
        visit(e, t) {
          return e.visitBoundText(this, t);
        }
      }
      class ol {
        constructor(e, t, n) {
          (this.name = e), (this.value = t), (this.sourceSpan = n);
        }
        visit(e, t) {
          return e.visitAttr(this, t);
        }
      }
      const al = { 4: 4, 1: 1, 2: 2, 0: 0, 3: 3 };
      class ll {
        constructor(e, t, n, s, i, r) {
          (this.name = e),
            (this.type = t),
            (this.securityContext = n),
            (this.value = s),
            (this.unit = i),
            (this.sourceSpan = r),
            (this.isAnimation = 4 === this.type);
        }
        static fromBoundProperty(e) {
          const t = al[e.type];
          return new ll(
            e.name,
            t,
            e.securityContext,
            e.value,
            e.unit,
            e.sourceSpan
          );
        }
        visit(e, t) {
          return e.visitElementProperty(this, t);
        }
      }
      class cl {
        constructor(e, t, n, s, i, r) {
          (this.name = e),
            (this.target = t),
            (this.phase = n),
            (this.handler = s),
            (this.sourceSpan = i),
            (this.handlerSpan = r),
            (this.fullName = cl.calcFullName(
              this.name,
              this.target,
              this.phase
            )),
            (this.isAnimation = !!this.phase);
        }
        static calcFullName(e, t, n) {
          return t ? `${t}:${e}` : n ? `@${e}.${n}` : e;
        }
        static fromParsedEvent(e) {
          const t = 0 === e.type ? e.targetOrPhase : null,
            n = 1 === e.type ? e.targetOrPhase : null;
          return new cl(e.name, t, n, e.handler, e.sourceSpan, e.handlerSpan);
        }
        visit(e, t) {
          return e.visitEvent(this, t);
        }
      }
      class ul {
        constructor(e, t, n, s) {
          (this.name = e),
            (this.value = t),
            (this.originalValue = n),
            (this.sourceSpan = s);
        }
        visit(e, t) {
          return e.visitReference(this, t);
        }
      }
      class dl {
        constructor(e, t, n, s) {
          (this.name = e),
            (this.value = t),
            (this.sourceSpan = n),
            (this.valueSpan = s);
        }
        static fromParsedVariable(e) {
          return new dl(e.name, e.value, e.sourceSpan, e.valueSpan);
        }
        visit(e, t) {
          return e.visitVariable(this, t);
        }
      }
      class hl {
        constructor(e, t, n, s, i, r, o, a, l, c, u, d, h) {
          (this.name = e),
            (this.attrs = t),
            (this.inputs = n),
            (this.outputs = s),
            (this.references = i),
            (this.directives = r),
            (this.providers = o),
            (this.hasViewContainer = a),
            (this.queryMatches = l),
            (this.children = c),
            (this.ngContentIndex = u),
            (this.sourceSpan = d),
            (this.endSourceSpan = h);
        }
        visit(e, t) {
          return e.visitElement(this, t);
        }
      }
      class pl {
        constructor(e, t, n, s, i, r, o, a, l, c, u) {
          (this.attrs = e),
            (this.outputs = t),
            (this.references = n),
            (this.variables = s),
            (this.directives = i),
            (this.providers = r),
            (this.hasViewContainer = o),
            (this.queryMatches = a),
            (this.children = l),
            (this.ngContentIndex = c),
            (this.sourceSpan = u);
        }
        visit(e, t) {
          return e.visitEmbeddedTemplate(this, t);
        }
      }
      class ml {
        constructor(e, t, n, s) {
          (this.directiveName = e),
            (this.templateName = t),
            (this.value = n),
            (this.sourceSpan = s);
        }
        visit(e, t) {
          return e.visitDirectiveProperty(this, t);
        }
      }
      class fl {
        constructor(e, t, n, s, i, r) {
          (this.directive = e),
            (this.inputs = t),
            (this.hostProperties = n),
            (this.hostEvents = s),
            (this.contentQueryStartId = i),
            (this.sourceSpan = r);
        }
        visit(e, t) {
          return e.visitDirective(this, t);
        }
      }
      class gl {
        constructor(e, t, n, s, i, r, o, a) {
          (this.token = e),
            (this.multiProvider = t),
            (this.eager = n),
            (this.providers = s),
            (this.providerType = i),
            (this.lifecycleHooks = r),
            (this.sourceSpan = o),
            (this.isModule = a);
        }
        visit(e, t) {
          return null;
        }
      }
      var yl;
      !(function (e) {
        (e[(e.PublicService = 0)] = "PublicService"),
          (e[(e.PrivateService = 1)] = "PrivateService"),
          (e[(e.Component = 2)] = "Component"),
          (e[(e.Directive = 3)] = "Directive"),
          (e[(e.Builtin = 4)] = "Builtin");
      })(yl || (yl = {}));
      class vl {
        constructor(e, t, n) {
          (this.index = e), (this.ngContentIndex = t), (this.sourceSpan = n);
        }
        visit(e, t) {
          return e.visitNgContent(this, t);
        }
      }
      function bl(e, t, n = null) {
        const s = [],
          i = e.visit
            ? (t) => e.visit(t, n) || t.visit(e, n)
            : (t) => t.visit(e, n);
        return (
          t.forEach((e) => {
            const t = i(e);
            t && s.push(t);
          }),
          s
        );
      }
      class xl extends Er {
        constructor(e, t) {
          super(t, e);
        }
      }
      class _l {
        constructor(e, t) {
          (this.reflector = e),
            (this.component = t),
            (this.errors = []),
            (this.viewQueries = (function (e) {
              let t = 1;
              const n = new Map();
              e.viewQueries &&
                e.viewQueries.forEach((e) => Ol(n, { meta: e, queryId: t++ }));
              return n;
            })(t)),
            (this.viewProviders = new Map()),
            t.viewProviders.forEach((e) => {
              null == this.viewProviders.get(kn(e.token)) &&
                this.viewProviders.set(kn(e.token), !0);
            });
        }
      }
      class wl {
        constructor(e, t, n, s, i, r, o, a, l) {
          (this.viewContext = e),
            (this._parent = t),
            (this._isViewRoot = n),
            (this._directiveAsts = s),
            (this._sourceSpan = l),
            (this._transformedProviders = new Map()),
            (this._seenProviders = new Map()),
            (this._queriedTokens = new Map()),
            (this.transformedHasViewContainer = !1),
            (this._attrs = {}),
            i.forEach((e) => (this._attrs[e.name] = e.value));
          const c = s.map((e) => e.directive);
          if (
            ((this._allProviders = (function (e, t, n) {
              const s = new Map();
              e.forEach((e) => {
                kl(
                  [{ token: { identifier: e.type }, useClass: e.type }],
                  e.isComponent ? yl.Component : yl.Directive,
                  !0,
                  t,
                  n,
                  s,
                  !1
                );
              });
              return (
                e
                  .filter((e) => e.isComponent)
                  .concat(e.filter((e) => !e.isComponent))
                  .forEach((e) => {
                    kl(e.providers, yl.PublicService, !1, t, n, s, !1),
                      kl(e.viewProviders, yl.PrivateService, !1, t, n, s, !1);
                  }),
                s
              );
            })(c, l, e.errors)),
            (this._contentQueries = (function (e, t) {
              let n = e;
              const s = new Map();
              return (
                t.forEach((e, t) => {
                  e.queries &&
                    e.queries.forEach((e) => Ol(s, { meta: e, queryId: n++ }));
                }),
                s
              );
            })(a, c)),
            Array.from(this._allProviders.values()).forEach((e) => {
              this._addQueryReadsTo(e.token, e.token, this._queriedTokens);
            }),
            o)
          ) {
            const e = pn(this.viewContext.reflector, dn.TemplateRef);
            this._addQueryReadsTo(e, e, this._queriedTokens);
          }
          r.forEach((e) => {
            let t = e.value || pn(this.viewContext.reflector, dn.ElementRef);
            this._addQueryReadsTo({ value: e.name }, t, this._queriedTokens);
          }),
            this._queriedTokens.get(
              this.viewContext.reflector.resolveExternalReference(
                dn.ViewContainerRef
              )
            ) && (this.transformedHasViewContainer = !0),
            Array.from(this._allProviders.values()).forEach((e) => {
              (e.eager || this._queriedTokens.get(kn(e.token))) &&
                this._getOrCreateLocalProvider(e.providerType, e.token, !0);
            });
        }
        afterElement() {
          Array.from(this._allProviders.values()).forEach((e) => {
            this._getOrCreateLocalProvider(e.providerType, e.token, !1);
          });
        }
        get transformProviders() {
          const e = [],
            t = [];
          return (
            this._transformedProviders.forEach((n) => {
              n.eager ? t.push(n) : e.push(n);
            }),
            e.concat(t)
          );
        }
        get transformedDirectiveAsts() {
          const e = this.transformProviders.map((e) => e.token.identifier),
            t = this._directiveAsts.slice();
          return (
            t.sort(
              (t, n) =>
                e.indexOf(t.directive.type) - e.indexOf(n.directive.type)
            ),
            t
          );
        }
        get queryMatches() {
          const e = [];
          return (
            this._queriedTokens.forEach((t) => {
              e.push(...t);
            }),
            e
          );
        }
        _addQueryReadsTo(e, t, n) {
          this._getQueriesFor(e).forEach((e) => {
            const s = e.meta.read || t,
              i = kn(s);
            let r = n.get(i);
            r || ((r = []), n.set(i, r)),
              r.push({ queryId: e.queryId, value: s });
          });
        }
        _getQueriesFor(e) {
          const t = [];
          let n,
            s = this,
            i = 0;
          for (; null !== s; )
            (n = s._contentQueries.get(kn(e))),
              n && t.push(...n.filter((e) => e.meta.descendants || i <= 1)),
              s._directiveAsts.length > 0 && i++,
              (s = s._parent);
          return (
            (n = this.viewContext.viewQueries.get(kn(e))), n && t.push(...n), t
          );
        }
        _getOrCreateLocalProvider(e, t, n) {
          const s = this._allProviders.get(kn(t));
          if (
            !s ||
            ((e === yl.Directive || e === yl.PublicService) &&
              s.providerType === yl.PrivateService) ||
            ((e === yl.PrivateService || e === yl.PublicService) &&
              s.providerType === yl.Builtin)
          )
            return null;
          let i = this._transformedProviders.get(kn(t));
          if (i) return i;
          if (null != this._seenProviders.get(kn(t)))
            return (
              this.viewContext.errors.push(
                new xl(
                  "Cannot instantiate cyclic dependency! " + En(t),
                  this._sourceSpan
                )
              ),
              null
            );
          this._seenProviders.set(kn(t), !0);
          const r = s.providers.map((e) => {
            let t = e.useValue,
              i = e.useExisting,
              r = void 0;
            if (null != e.useExisting) {
              const r = this._getDependency(
                s.providerType,
                { token: e.useExisting },
                n
              );
              null != r.token ? (i = r.token) : ((i = null), (t = r.value));
            } else if (e.useFactory) {
              r = (e.deps || e.useFactory.diDeps).map((e) =>
                this._getDependency(s.providerType, e, n)
              );
            } else if (e.useClass) {
              r = (e.deps || e.useClass.diDeps).map((e) =>
                this._getDependency(s.providerType, e, n)
              );
            }
            return Sl(e, { useExisting: i, useValue: t, deps: r });
          });
          return (
            (i = El(s, { eager: n, providers: r })),
            this._transformedProviders.set(kn(t), i),
            i
          );
        }
        _getLocalDependency(e, t, n = !1) {
          if (t.isAttribute) {
            const e = this._attrs[t.token.value];
            return { isValue: !0, value: null == e ? null : e };
          }
          if (null != t.token) {
            if (e === yl.Directive || e === yl.Component) {
              if (
                kn(t.token) ===
                  this.viewContext.reflector.resolveExternalReference(
                    dn.Renderer
                  ) ||
                kn(t.token) ===
                  this.viewContext.reflector.resolveExternalReference(
                    dn.ElementRef
                  ) ||
                kn(t.token) ===
                  this.viewContext.reflector.resolveExternalReference(
                    dn.ChangeDetectorRef
                  ) ||
                kn(t.token) ===
                  this.viewContext.reflector.resolveExternalReference(
                    dn.TemplateRef
                  )
              )
                return t;
              kn(t.token) ===
                this.viewContext.reflector.resolveExternalReference(
                  dn.ViewContainerRef
                ) && (this.transformedHasViewContainer = !0);
            }
            if (
              kn(t.token) ===
              this.viewContext.reflector.resolveExternalReference(dn.Injector)
            )
              return t;
            if (null != this._getOrCreateLocalProvider(e, t.token, n)) return t;
          }
          return null;
        }
        _getDependency(e, t, n = !1) {
          let s = this,
            i = n,
            r = null;
          if (
            (t.isSkipSelf || (r = this._getLocalDependency(e, t, n)), t.isSelf)
          )
            !r && t.isOptional && (r = { isValue: !0, value: null });
          else {
            for (; !r && s._parent; ) {
              const e = s;
              (s = s._parent),
                e._isViewRoot && (i = !1),
                (r = s._getLocalDependency(yl.PublicService, t, i));
            }
            r ||
              (r =
                !t.isHost ||
                this.viewContext.component.isHost ||
                this.viewContext.component.type.reference === kn(t.token) ||
                null != this.viewContext.viewProviders.get(kn(t.token))
                  ? t
                  : t.isOptional
                  ? { isValue: !0, value: null }
                  : null);
          }
          return (
            r ||
              this.viewContext.errors.push(
                new xl("No provider for " + En(t.token), this._sourceSpan)
              ),
            r
          );
        }
      }
      class Cl {
        constructor(e, t, n, s) {
          (this.reflector = e),
            (this._transformedProviders = new Map()),
            (this._seenProviders = new Map()),
            (this._errors = []),
            (this._allProviders = new Map()),
            t.transitiveModule.modules.forEach((e) => {
              kl(
                [{ token: { identifier: e }, useClass: e }],
                yl.PublicService,
                !0,
                s,
                this._errors,
                this._allProviders,
                !0
              );
            }),
            kl(
              t.transitiveModule.providers.map((e) => e.provider).concat(n),
              yl.PublicService,
              !1,
              s,
              this._errors,
              this._allProviders,
              !1
            );
        }
        parse() {
          if (
            (Array.from(this._allProviders.values()).forEach((e) => {
              this._getOrCreateLocalProvider(e.token, e.eager);
            }),
            this._errors.length > 0)
          ) {
            const e = this._errors.join("\n");
            throw new Error("Provider parse errors:\n" + e);
          }
          const e = [],
            t = [];
          return (
            this._transformedProviders.forEach((n) => {
              n.eager ? t.push(n) : e.push(n);
            }),
            e.concat(t)
          );
        }
        _getOrCreateLocalProvider(e, t) {
          const n = this._allProviders.get(kn(e));
          if (!n) return null;
          let s = this._transformedProviders.get(kn(e));
          if (s) return s;
          if (null != this._seenProviders.get(kn(e)))
            return (
              this._errors.push(
                new xl(
                  "Cannot instantiate cyclic dependency! " + En(e),
                  n.sourceSpan
                )
              ),
              null
            );
          this._seenProviders.set(kn(e), !0);
          const i = n.providers.map((e) => {
            let s = e.useValue,
              i = e.useExisting,
              r = void 0;
            if (null != e.useExisting) {
              const r = this._getDependency(
                { token: e.useExisting },
                t,
                n.sourceSpan
              );
              null != r.token ? (i = r.token) : ((i = null), (s = r.value));
            } else if (e.useFactory) {
              r = (e.deps || e.useFactory.diDeps).map((e) =>
                this._getDependency(e, t, n.sourceSpan)
              );
            } else if (e.useClass) {
              r = (e.deps || e.useClass.diDeps).map((e) =>
                this._getDependency(e, t, n.sourceSpan)
              );
            }
            return Sl(e, { useExisting: i, useValue: s, deps: r });
          });
          return (
            (s = El(n, { eager: t, providers: i })),
            this._transformedProviders.set(kn(e), s),
            s
          );
        }
        _getDependency(e, t = !1, n) {
          let s = !1;
          return (
            e.isSkipSelf ||
              null == e.token ||
              ((kn(e.token) ===
                this.reflector.resolveExternalReference(dn.Injector) ||
                kn(e.token) ===
                  this.reflector.resolveExternalReference(
                    dn.ComponentFactoryResolver
                  ) ||
                null != this._getOrCreateLocalProvider(e.token, t)) &&
                (s = !0)),
            e
          );
        }
      }
      function Sl(e, { useExisting: t, useValue: n, deps: s }) {
        return {
          token: e.token,
          useClass: e.useClass,
          useExisting: t,
          useFactory: e.useFactory,
          useValue: n,
          deps: s,
          multi: e.multi,
        };
      }
      function El(e, { eager: t, providers: n }) {
        return new gl(
          e.token,
          e.multiProvider,
          e.eager || t,
          n,
          e.providerType,
          e.lifecycleHooks,
          e.sourceSpan,
          e.isModule
        );
      }
      function kl(e, t, n, s, i, r, o) {
        e.forEach((e) => {
          let a = r.get(kn(e.token));
          if (
            (null != a &&
              !!a.multiProvider != !!e.multi &&
              i.push(
                new xl(
                  "Mixing multi and non multi provider is not possible for token " +
                    En(a.token),
                  s
                )
              ),
            a)
          )
            e.multi || (a.providers.length = 0), a.providers.push(e);
          else {
            const i =
                e.token.identifier && e.token.identifier.lifecycleHooks
                  ? e.token.identifier.lifecycleHooks
                  : [],
              l = !(e.useClass || e.useExisting || e.useFactory);
            (a = new gl(e.token, !!e.multi, n || l, [e], t, i, s, o)),
              r.set(kn(e.token), a);
          }
        });
      }
      function Ol(e, t) {
        t.meta.selectors.forEach((n) => {
          let s = e.get(kn(n));
          s || ((s = []), e.set(kn(n), s)), s.push(t);
        });
      }
      class Il {
        constructor(e, t) {
          (this.style = e), (this.styleUrls = t);
        }
      }
      function Tl(e) {
        if (null == e || 0 === e.length || "/" == e[0]) return !1;
        const t = e.match(Ml);
        return null === t || "package" == t[1] || "asset" == t[1];
      }
      const Al =
          /@import\s+(?:url\()?\s*(?:(?:['"]([^'"]*))|([^;\)\s]*))[^;]*;?/g,
        Dl = /\/\*(?!#\s*(?:sourceURL|sourceMappingURL)=)[\s\S]+?\*\//g,
        Ml = /^([^:/?#]+):/,
        Pl = "animate-";
      class Rl {
        constructor(e, t, n, s, i) {
          if (
            ((this._exprParser = e),
            (this._interpolationConfig = t),
            (this._schemaRegistry = n),
            (this.errors = i),
            (this.pipesByName = null),
            (this._usedPipes = new Map()),
            s)
          ) {
            const e = new Map();
            s.forEach((t) => e.set(t.name, t)), (this.pipesByName = e);
          }
        }
        get interpolationConfig() {
          return this._interpolationConfig;
        }
        getUsedPipes() {
          return Array.from(this._usedPipes.values());
        }
        createBoundHostProperties(e, t) {
          if (e.hostProperties) {
            const n = [];
            return (
              Object.keys(e.hostProperties).forEach((s) => {
                const i = e.hostProperties[s];
                "string" == typeof i
                  ? this.parsePropertyBinding(
                      s,
                      i,
                      !0,
                      t,
                      t.start.offset,
                      void 0,
                      [],
                      n,
                      t
                    )
                  : this._reportError(
                      `Value of the host property binding "${s}" needs to be a string representing an expression but got "${i}" (${typeof i})`,
                      t
                    );
              }),
              n
            );
          }
          return null;
        }
        createDirectiveHostPropertyAsts(e, t, n) {
          const s = this.createBoundHostProperties(e, n);
          return s && s.map((e) => this.createBoundElementProperty(t, e));
        }
        createDirectiveHostEventAsts(e, t) {
          if (e.hostListeners) {
            const n = [];
            return (
              Object.keys(e.hostListeners).forEach((s) => {
                const i = e.hostListeners[s];
                "string" == typeof i
                  ? this.parseEvent(s, i, t, t, [], n)
                  : this._reportError(
                      `Value of the host listener "${s}" needs to be a string representing an expression but got "${i}" (${typeof i})`,
                      t
                    );
              }),
              n
            );
          }
          return null;
        }
        parseInterpolation(e, t) {
          const n = t.start.toString();
          try {
            const s = this._exprParser.parseInterpolation(
              e,
              n,
              t.start.offset,
              this._interpolationConfig
            );
            return (
              s && this._reportExpressionParserErrors(s.errors, t),
              this._checkPipes(s, t),
              s
            );
          } catch (s) {
            return (
              this._reportError("" + s, t),
              this._exprParser.wrapLiteralPrimitive("ERROR", n, t.start.offset)
            );
          }
        }
        parseInterpolationExpression(e, t) {
          const n = t.start.toString();
          try {
            const s = this._exprParser.parseInterpolationExpression(
              e,
              n,
              t.start.offset
            );
            return (
              s && this._reportExpressionParserErrors(s.errors, t),
              this._checkPipes(s, t),
              s
            );
          } catch (s) {
            return (
              this._reportError("" + s, t),
              this._exprParser.wrapLiteralPrimitive("ERROR", n, t.start.offset)
            );
          }
        }
        parseInlineTemplateBinding(e, t, n, s, i, r, o, a) {
          const l = n.start.offset + "*".length,
            c = this._parseTemplateBindings(e, t, n, l, s);
          for (const u of c) {
            const e = Ll(n, u.sourceSpan),
              t = u.key.source,
              l = Ll(n, u.key.span);
            if (u instanceof ao) {
              const s = u.value ? u.value.source : "$implicit",
                i = u.value ? Ll(n, u.value.span) : void 0;
              o.push(new po(t, s, e, l, i));
            } else if (u.value) {
              const s = a ? e : n,
                o = Ll(n, u.value.ast.sourceSpan);
              this._parsePropertyAst(t, u.value, s, l, o, i, r);
            } else
              i.push([t, ""]),
                this.parseLiteralAttr(t, null, l, s, void 0, i, r, l);
          }
        }
        _parseTemplateBindings(e, t, n, s, i) {
          const r = n.start.toString();
          try {
            const o = this._exprParser.parseTemplateBindings(e, t, r, s, i);
            return (
              this._reportExpressionParserErrors(o.errors, n),
              o.templateBindings.forEach((e) => {
                e.value instanceof oo && this._checkPipes(e.value, n);
              }),
              o.warnings.forEach((e) => {
                this._reportError(e, n, _r.WARNING);
              }),
              o.templateBindings
            );
          } catch (o) {
            return this._reportError("" + o, n), [];
          }
        }
        parseLiteralAttr(e, t, n, s, i, r, o, a) {
          Nl(e)
            ? ((e = e.substring(1)),
              t &&
                this._reportError(
                  'Assigning animation triggers via @prop="exp" attributes with an expression is invalid. Use property bindings (e.g. [@prop]="exp") or use an attribute without a value (e.g. @prop) instead.',
                  n,
                  _r.ERROR
                ),
              this._parseAnimation(e, t, n, s, a, i, r, o))
            : o.push(
                new uo(
                  e,
                  this._exprParser.wrapLiteralPrimitive(t, "", s),
                  wr.LITERAL_ATTR,
                  n,
                  a,
                  i
                )
              );
        }
        parsePropertyBinding(e, t, n, s, i, r, o, a, l) {
          0 === e.length &&
            this._reportError("Property name is missing in binding", s);
          let c = !1;
          e.startsWith(Pl)
            ? ((c = !0), (e = e.substring(Pl.length)))
            : Nl(e) && ((c = !0), (e = e.substring(1))),
            c
              ? this._parseAnimation(e, t, s, i, l, r, o, a)
              : this._parsePropertyAst(
                  e,
                  this._parseBinding(t, n, r || s, i),
                  s,
                  l,
                  r,
                  o,
                  a
                );
        }
        parsePropertyInterpolation(e, t, n, s, i, r, o) {
          const a = this.parseInterpolation(t, s || n);
          return !!a && (this._parsePropertyAst(e, a, n, o, s, i, r), !0);
        }
        _parsePropertyAst(e, t, n, s, i, r, o) {
          r.push([e, t.source]), o.push(new uo(e, t, wr.DEFAULT, n, s, i));
        }
        _parseAnimation(e, t, n, s, i, r, o, a) {
          0 === e.length &&
            this._reportError("Animation trigger is missing", n);
          const l = this._parseBinding(t || "undefined", !1, r || n, s);
          o.push([e, l.source]), a.push(new uo(e, l, wr.ANIMATION, n, i, r));
        }
        _parseBinding(e, t, n, s) {
          const i = ((n && n.start) || "(unknown)").toString();
          try {
            const r = t
              ? this._exprParser.parseSimpleBinding(
                  e,
                  i,
                  s,
                  this._interpolationConfig
                )
              : this._exprParser.parseBinding(
                  e,
                  i,
                  s,
                  this._interpolationConfig
                );
            return (
              r && this._reportExpressionParserErrors(r.errors, n),
              this._checkPipes(r, n),
              r
            );
          } catch (r) {
            return (
              this._reportError("" + r, n),
              this._exprParser.wrapLiteralPrimitive("ERROR", i, s)
            );
          }
        }
        createBoundElementProperty(e, t, n = !1, s = !0) {
          if (t.isAnimation)
            return new mo(
              t.name,
              4,
              q.NONE,
              t.expression,
              null,
              t.sourceSpan,
              t.keySpan,
              t.valueSpan
            );
          let i = null,
            r = void 0,
            o = null;
          const a = t.name.split(".");
          let l = void 0;
          if (a.length > 1)
            if ("attr" == a[0]) {
              (o = a.slice(1).join(".")),
                n || this._validatePropertyOrAttributeName(o, t.sourceSpan, !0),
                (l = Fl(this._schemaRegistry, e, o, !0));
              const s = o.indexOf(":");
              if (s > -1) {
                const e = o.substring(0, s),
                  t = o.substring(s + 1);
                o = u(e, t);
              }
              r = 1;
            } else
              "class" == a[0]
                ? ((o = a[1]), (r = 2), (l = [q.NONE]))
                : "style" == a[0] &&
                  ((i = a.length > 2 ? a[2] : null),
                  (o = a[1]),
                  (r = 3),
                  (l = [q.STYLE]));
          if (null === o) {
            const i = this._schemaRegistry.getMappedPropName(t.name);
            (o = s ? i : t.name),
              (l = Fl(this._schemaRegistry, e, i, !1)),
              (r = 0),
              n || this._validatePropertyOrAttributeName(i, t.sourceSpan, !1);
          }
          return new mo(
            o,
            r,
            l[0],
            t.expression,
            i,
            t.sourceSpan,
            t.keySpan,
            t.valueSpan
          );
        }
        parseEvent(e, t, n, s, i, r) {
          0 === e.length &&
            this._reportError("Event name is missing in binding", n),
            Nl(e)
              ? ((e = e.substr(1)), this._parseAnimationEvent(e, t, n, s, r))
              : this._parseRegularEvent(e, t, n, s, i, r);
        }
        calcPossibleSecurityContexts(e, t, n) {
          const s = this._schemaRegistry.getMappedPropName(t);
          return Fl(this._schemaRegistry, e, s, n);
        }
        _parseAnimationEvent(e, t, n, s, i) {
          const r = Pt(e, ".", [e, ""]);
          const o = r[0],
            a = r[1].toLowerCase();
          if (a)
            switch (a) {
              case "start":
              case "done":
                const e = this._parseAction(t, s);
                i.push(new ho(o, a, 1, e, n, s));
                break;
              default:
                this._reportError(
                  `The provided animation output phase value "${a}" for "@${o}" is not supported (use start or done)`,
                  n
                );
            }
          else
            this._reportError(
              `The animation trigger output event (@${o}) is missing its phase value name (start or done are currently supported)`,
              n
            );
        }
        _parseRegularEvent(e, t, n, s, i, r) {
          const [o, a] = Mt(e, [null, e]),
            l = this._parseAction(t, s);
          i.push([e, l.source]), r.push(new ho(a, o, 0, l, n, s));
        }
        _parseAction(e, t) {
          const n = ((t && t.start) || "(unknown").toString(),
            s = t && t.start ? t.start.offset : 0;
          try {
            const i = this._exprParser.parseAction(
              e,
              n,
              s,
              this._interpolationConfig
            );
            return (
              i && this._reportExpressionParserErrors(i.errors, t),
              !i || i.ast instanceof Fr
                ? (this._reportError("Empty expressions are not allowed", t),
                  this._exprParser.wrapLiteralPrimitive("ERROR", n, s))
                : (this._checkPipes(i, t), i)
            );
          } catch (i) {
            return (
              this._reportError("" + i, t),
              this._exprParser.wrapLiteralPrimitive("ERROR", n, s)
            );
          }
        }
        _reportError(e, t, n = _r.ERROR) {
          this.errors.push(new Er(t, e, n));
        }
        _reportExpressionParserErrors(e, t) {
          for (const n of e) this._reportError(n.message, t);
        }
        _checkPipes(e, t) {
          if (e && this.pipesByName) {
            const n = new jl();
            e.visit(n),
              n.pipes.forEach((e, n) => {
                const s = this.pipesByName.get(n);
                s
                  ? this._usedPipes.set(n, s)
                  : this._reportError(
                      `The pipe '${n}' could not be found`,
                      new xr(
                        t.start.moveBy(e.span.start),
                        t.start.moveBy(e.span.end)
                      )
                    );
              });
          }
        }
        _validatePropertyOrAttributeName(e, t, n) {
          const s = n
            ? this._schemaRegistry.validateAttribute(e)
            : this._schemaRegistry.validateProperty(e);
          s.error && this._reportError(s.msg, t, _r.ERROR);
        }
      }
      class jl extends co {
        constructor() {
          super(...arguments), (this.pipes = new Map());
        }
        visitPipe(e, t) {
          return (
            this.pipes.set(e.name, e),
            e.exp.visit(this),
            this.visitAll(e.args, t),
            null
          );
        }
      }
      function Nl(e) {
        return "@" == e[0];
      }
      function Fl(e, t, n, s) {
        const i = [];
        return (
          y.parse(t).forEach((t) => {
            const r = t.element ? [t.element] : e.allKnownElementNames(),
              o = new Set(
                t.notSelectors
                  .filter((e) => e.isElementSelector())
                  .map((e) => e.element)
              ),
              a = r.filter((e) => !o.has(e));
            i.push(...a.map((t) => e.securityContext(t, n, s)));
          }),
          0 === i.length ? [q.NONE] : Array.from(new Set(i)).sort()
        );
      }
      function Ll(e, t) {
        const n = t.start - e.start.offset,
          s = t.end - e.end.offset;
        return new xr(
          e.start.moveBy(n),
          e.end.moveBy(s),
          e.fullStart.moveBy(n),
          e.details
        );
      }
      function Vl(e) {
        let t = null,
          n = null,
          s = null,
          i = !1,
          r = "";
        e.attrs.forEach((e) => {
          const o = e.name.toLowerCase();
          "select" == o
            ? (t = e.value)
            : "href" == o
            ? (n = e.value)
            : "rel" == o
            ? (s = e.value)
            : "ngNonBindable" == e.name
            ? (i = !0)
            : "ngProjectAs" == e.name && e.value.length > 0 && (r = e.value);
        }),
          (t = (function (e) {
            if (null === e || 0 === e.length) return "*";
            return e;
          })(t));
        const o = e.name.toLowerCase();
        let l = Bl.OTHER;
        return (
          a(o)
            ? (l = Bl.NG_CONTENT)
            : "style" == o
            ? (l = Bl.STYLE)
            : "script" == o
            ? (l = Bl.SCRIPT)
            : "link" == o && "stylesheet" == s && (l = Bl.STYLESHEET),
          new zl(l, t, n, i, r)
        );
      }
      var Bl;
      !(function (e) {
        (e[(e.NG_CONTENT = 0)] = "NG_CONTENT"),
          (e[(e.STYLE = 1)] = "STYLE"),
          (e[(e.STYLESHEET = 2)] = "STYLESHEET"),
          (e[(e.SCRIPT = 3)] = "SCRIPT"),
          (e[(e.OTHER = 4)] = "OTHER");
      })(Bl || (Bl = {}));
      class zl {
        constructor(e, t, n, s, i) {
          (this.type = e),
            (this.selectAttr = t),
            (this.hrefAttr = n),
            (this.nonBindable = s),
            (this.projectAs = i);
        }
      }
      const Hl =
        /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.*))|\[\(([^\)]+)\)\]|\[([^\]]+)\]|\(([^\)]+)\))$/;
      let Gl;
      function Ul() {
        return Gl || (Gl = y.parse("*")[0]), Gl;
      }
      class $l extends Er {
        constructor(e, t, n) {
          super(t, e, n);
        }
      }
      class ql {
        constructor(e, t, n) {
          (this.templateAst = e), (this.usedPipes = t), (this.errors = n);
        }
      }
      class Wl {
        constructor(e, t, n, s, i, r, o) {
          (this._config = e),
            (this._reflector = t),
            (this._exprParser = n),
            (this._schemaRegistry = s),
            (this._htmlParser = i),
            (this._console = r),
            (this.transforms = o);
        }
        get expressionParser() {
          return this._exprParser;
        }
        parse(e, t, n, s, i, r, o) {
          var a;
          const l = this.tryParse(e, t, n, s, i, r, o),
            c = l.errors.filter((e) => e.level === _r.WARNING),
            u = l.errors.filter((e) => e.level === _r.ERROR);
          if (
            (c.length > 0 &&
              (null === (a = this._console) ||
                void 0 === a ||
                a.warn("Template parse warnings:\n" + c.join("\n"))),
            u.length > 0)
          ) {
            throw Ht("Template parse errors:\n" + u.join("\n"), u);
          }
          return { template: l.templateAst, pipes: l.usedPipes };
        }
        tryParse(e, t, n, s, i, r, o) {
          let a =
            "string" == typeof t
              ? this._htmlParser.parse(t, r, {
                  tokenizeExpansionForms: !0,
                  interpolationConfig: this.getInterpolationConfig(e),
                })
              : t;
          return (
            o || (a = Xa(a)), this.tryParseHtml(this.expandHtml(a), e, n, s, i)
          );
        }
        tryParseHtml(e, t, n, s, i) {
          let r;
          const o = e.errors,
            a = [];
          if (e.rootNodes.length > 0) {
            const l = tc(n),
              c = tc(s),
              u = new _l(this._reflector, t);
            let d = void 0;
            t.template &&
              t.template.interpolation &&
              (d = {
                start: t.template.interpolation[0],
                end: t.template.interpolation[1],
              });
            const h = new Rl(this._exprParser, d, this._schemaRegistry, c, o),
              p = new Yl(
                this._reflector,
                this._config,
                u,
                l,
                h,
                this._schemaRegistry,
                i,
                o
              );
            (r = ba(p, e.rootNodes, Xl)),
              o.push(...u.errors),
              a.push(...h.getUsedPipes());
          } else r = [];
          return (
            this._assertNoReferenceDuplicationOnTemplate(r, o),
            o.length > 0 ||
              (this.transforms &&
                this.transforms.forEach((e) => {
                  r = bl(e, r);
                })),
            new ql(r, a, o)
          );
        }
        expandHtml(e, t = !1) {
          const n = e.errors;
          if (0 == n.length || t) {
            const t = el(e.rootNodes);
            n.push(...t.errors), (e = new Ba(t.nodes, n));
          }
          return e;
        }
        getInterpolationConfig(e) {
          if (e.template) return Ni.fromArray(e.template.interpolation);
        }
        _assertNoReferenceDuplicationOnTemplate(e, t) {
          const n = [];
          e.filter((e) => !!e.references).forEach((e) =>
            e.references.forEach((e) => {
              const s = e.name;
              if (n.indexOf(s) < 0) n.push(s);
              else {
                const n = new $l(
                  `Reference "#${s}" is defined several times`,
                  e.sourceSpan,
                  _r.ERROR
                );
                t.push(n);
              }
            })
          );
        }
      }
      class Yl {
        constructor(e, t, n, s, i, r, o, a) {
          (this.reflector = e),
            (this.config = t),
            (this.providerViewContext = n),
            (this._bindingParser = i),
            (this._schemaRegistry = r),
            (this._schemas = o),
            (this._targetErrors = a),
            (this.selectorMatcher = new v()),
            (this.directivesIndex = new Map()),
            (this.ngContentCount = 0),
            (this.contentQueryStartId = n.component.viewQueries.length + 1),
            s.forEach((e, t) => {
              const n = y.parse(e.selector);
              this.selectorMatcher.addSelectables(n, e),
                this.directivesIndex.set(e, t);
            });
        }
        visitExpansion(e, t) {
          return null;
        }
        visitExpansionCase(e, t) {
          return null;
        }
        visitText(e, t) {
          const n = t.findNgContentIndex(Ul()),
            s = Ka(e.value),
            i = this._bindingParser.parseInterpolation(s, e.sourceSpan);
          return i ? new rl(i, n, e.sourceSpan) : new il(s, n, e.sourceSpan);
        }
        visitAttribute(e, t) {
          return new ol(e.name, e.value, e.sourceSpan);
        }
        visitComment(e, t) {
          return null;
        }
        visitElement(e, t) {
          const n = this.contentQueryStartId,
            s = e.name,
            i = Vl(e);
          if (i.type === Bl.SCRIPT || i.type === Bl.STYLE) return null;
          if (i.type === Bl.STYLESHEET && Tl(i.hrefAttr)) return null;
          const r = [],
            o = [],
            a = [],
            c = [],
            u = [],
            d = [],
            h = [],
            p = [];
          let m = !1;
          const f = [],
            g = l(e.name);
          e.attrs.forEach((e) => {
            const t = this._parseAttr(g, e, r, o, u, a, c);
            let n, s;
            c.push(...[].map((e) => dl.fromParsedVariable(e)));
            const i = this._normalizeAttributeName(e.name);
            i.startsWith("*") && ((n = e.value), (s = i.substring("*".length)));
            const l = null != n;
            if (l) {
              m &&
                this._reportError(
                  "Can't have multiple template bindings on one element. Use only one attribute prefixed with *",
                  e.sourceSpan
                ),
                (m = !0);
              const t = [],
                i = (e.valueSpan || e.sourceSpan).start.offset;
              this._bindingParser.parseInlineTemplateBinding(
                s,
                n,
                e.sourceSpan,
                i,
                h,
                d,
                t,
                !1
              ),
                p.push(...t.map((e) => dl.fromParsedVariable(e)));
            }
            t ||
              l ||
              (f.push(this.visitAttribute(e, null)), r.push([e.name, e.value]));
          });
          const v = Jl(s, r),
            { directives: b, matchElement: x } = this._parseDirectives(
              this.selectorMatcher,
              v
            ),
            _ = [],
            w = new Set(),
            C = this._createDirectiveAsts(
              g,
              e.name,
              b,
              o,
              a,
              e.sourceSpan,
              _,
              w
            ),
            S = this._createElementPropertyAsts(e.name, o, w),
            E = t.isTemplateElement || m,
            k = new wl(
              this.providerViewContext,
              t.providerContext,
              E,
              C,
              f,
              _,
              g,
              n,
              e.sourceSpan
            ),
            O = ba(
              i.nonBindable ? Zl : this,
              e.children,
              Kl.create(g, C, g ? t.providerContext : k)
            );
          k.afterElement();
          const I = "" != i.projectAs ? y.parse(i.projectAs)[0] : v,
            T = t.findNgContentIndex(I);
          let A;
          if (i.type === Bl.NG_CONTENT)
            e.children &&
              !e.children.every(ec) &&
              this._reportError(
                "<ng-content> element cannot have content.",
                e.sourceSpan
              ),
              (A = new vl(this.ngContentCount++, m ? null : T, e.sourceSpan));
          else if (g)
            this._assertAllEventsPublishedByDirectives(C, u),
              this._assertNoComponentsNorElementBindingsOnTemplate(
                C,
                S,
                e.sourceSpan
              ),
              (A = new pl(
                f,
                u,
                _,
                c,
                k.transformedDirectiveAsts,
                k.transformProviders,
                k.transformedHasViewContainer,
                k.queryMatches,
                O,
                m ? null : T,
                e.sourceSpan
              ));
          else {
            this._assertElementExists(x, e),
              this._assertOnlyOneComponent(C, e.sourceSpan);
            const n = m ? null : t.findNgContentIndex(I);
            A = new hl(
              s,
              f,
              S,
              u,
              _,
              k.transformedDirectiveAsts,
              k.transformProviders,
              k.transformedHasViewContainer,
              k.queryMatches,
              O,
              m ? null : n,
              e.sourceSpan,
              e.endSourceSpan || null
            );
          }
          if (m) {
            const n = this.contentQueryStartId,
              i = Jl("ng-template", h),
              { directives: r } = this._parseDirectives(
                this.selectorMatcher,
                i
              ),
              o = new Set(),
              a = this._createDirectiveAsts(
                !0,
                s,
                r,
                d,
                [],
                e.sourceSpan,
                [],
                o
              ),
              l = this._createElementPropertyAsts(s, d, o);
            this._assertNoComponentsNorElementBindingsOnTemplate(
              a,
              l,
              e.sourceSpan
            );
            const c = new wl(
              this.providerViewContext,
              t.providerContext,
              t.isTemplateElement,
              a,
              [],
              [],
              !0,
              n,
              e.sourceSpan
            );
            c.afterElement(),
              (A = new pl(
                [],
                [],
                [],
                p,
                c.transformedDirectiveAsts,
                c.transformProviders,
                c.transformedHasViewContainer,
                c.queryMatches,
                [A],
                T,
                e.sourceSpan
              ));
          }
          return A;
        }
        _parseAttr(e, t, n, s, i, r, o) {
          const a = this._normalizeAttributeName(t.name),
            l = t.value,
            c = t.sourceSpan,
            u = t.valueSpan ? t.valueSpan.start.offset : c.start.offset,
            d = [],
            h = a.match(Hl);
          let p = !1;
          if (null !== h)
            if (((p = !0), null != h[1]))
              this._bindingParser.parsePropertyBinding(
                h[7],
                l,
                !1,
                c,
                u,
                t.valueSpan,
                n,
                s
              );
            else if (h[2])
              if (e) {
                const e = h[7];
                this._parseVariable(e, l, c, o);
              } else
                this._reportError(
                  '"let-" is only supported on ng-template elements.',
                  c
                );
            else if (h[3]) {
              const e = h[7];
              this._parseReference(e, l, c, r);
            } else
              h[4]
                ? this._bindingParser.parseEvent(
                    h[7],
                    l,
                    c,
                    t.valueSpan || c,
                    n,
                    d
                  )
                : h[5]
                ? (this._bindingParser.parsePropertyBinding(
                    h[7],
                    l,
                    !1,
                    c,
                    u,
                    t.valueSpan,
                    n,
                    s
                  ),
                  this._parseAssignmentEvent(
                    h[7],
                    l,
                    c,
                    t.valueSpan || c,
                    n,
                    d
                  ))
                : h[6]
                ? this._bindingParser.parseLiteralAttr(
                    a,
                    l,
                    c,
                    u,
                    t.valueSpan,
                    n,
                    s
                  )
                : h[8]
                ? (this._bindingParser.parsePropertyBinding(
                    h[8],
                    l,
                    !1,
                    c,
                    u,
                    t.valueSpan,
                    n,
                    s
                  ),
                  this._parseAssignmentEvent(
                    h[8],
                    l,
                    c,
                    t.valueSpan || c,
                    n,
                    d
                  ))
                : h[9]
                ? this._bindingParser.parsePropertyBinding(
                    h[9],
                    l,
                    !1,
                    c,
                    u,
                    t.valueSpan,
                    n,
                    s
                  )
                : h[10] &&
                  this._bindingParser.parseEvent(
                    h[10],
                    l,
                    c,
                    t.valueSpan || c,
                    n,
                    d
                  );
          else
            p = this._bindingParser.parsePropertyInterpolation(
              a,
              l,
              c,
              t.valueSpan,
              n,
              s
            );
          return (
            p ||
              this._bindingParser.parseLiteralAttr(
                a,
                l,
                c,
                u,
                t.valueSpan,
                n,
                s
              ),
            i.push(...d.map((e) => cl.fromParsedEvent(e))),
            p
          );
        }
        _normalizeAttributeName(e) {
          return /^data-/i.test(e) ? e.substring(5) : e;
        }
        _parseVariable(e, t, n, s) {
          e.indexOf("-") > -1
            ? this._reportError('"-" is not allowed in variable names', n)
            : 0 === e.length &&
              this._reportError("Variable does not have a name", n),
            s.push(new dl(e, t, n));
        }
        _parseReference(e, t, n, s) {
          e.indexOf("-") > -1
            ? this._reportError('"-" is not allowed in reference names', n)
            : 0 === e.length &&
              this._reportError("Reference does not have a name", n),
            s.push(new Ql(e, t, n));
        }
        _parseAssignmentEvent(e, t, n, s, i, r) {
          this._bindingParser.parseEvent(
            e + "Change",
            t + "=$event",
            n,
            s,
            i,
            r
          );
        }
        _parseDirectives(e, t) {
          const n = en(this.directivesIndex.size);
          let s = !1;
          return (
            e.match(t, (e, t) => {
              (n[this.directivesIndex.get(t)] = t),
                (s = s || e.hasElementSelector());
            }),
            { directives: n.filter((e) => !!e), matchElement: s }
          );
        }
        _createDirectiveAsts(e, t, n, s, i, r, o, a) {
          const l = new Set();
          let c = null;
          const u = n.map((e) => {
            const n = new xr(
              r.start,
              r.end,
              r.fullStart,
              "Directive " + bn(e.type)
            );
            e.isComponent && (c = e);
            const u = [];
            let d = this._bindingParser
              .createDirectiveHostPropertyAsts(e, t, n)
              .map((e) => ll.fromBoundProperty(e));
            d = this._checkPropertiesInSchema(t, d);
            const h = this._bindingParser.createDirectiveHostEventAsts(e, n);
            this._createDirectivePropertyAsts(e.inputs, s, u, a),
              i.forEach((t) => {
                ((0 === t.value.length && e.isComponent) ||
                  t.isReferenceToDirective(e)) &&
                  (o.push(
                    new ul(t.name, hn(e.type.reference), t.value, t.sourceSpan)
                  ),
                  l.add(t.name));
              });
            const p = h.map((e) => cl.fromParsedEvent(e)),
              m = this.contentQueryStartId;
            return (
              (this.contentQueryStartId += e.queries.length),
              new fl(e, u, d, p, m, n)
            );
          });
          return (
            i.forEach((t) => {
              if (t.value.length > 0)
                l.has(t.name) ||
                  this._reportError(
                    `There is no directive with "exportAs" set to "${t.value}"`,
                    t.sourceSpan
                  );
              else if (!c) {
                let n = null;
                e && (n = pn(this.reflector, dn.TemplateRef)),
                  o.push(new ul(t.name, n, t.value, t.sourceSpan));
              }
            }),
            u
          );
        }
        _createDirectivePropertyAsts(e, t, n, s) {
          if (e) {
            const i = new Map();
            t.forEach((e) => {
              const t = i.get(e.name);
              (t && !t.isLiteral) || i.set(e.name, e);
            }),
              Object.keys(e).forEach((t) => {
                const r = e[t],
                  o = i.get(r);
                o &&
                  (s.add(o.name),
                  nc(o.expression) ||
                    n.push(new ml(t, o.name, o.expression, o.sourceSpan)));
              });
          }
        }
        _createElementPropertyAsts(e, t, n) {
          const s = [];
          return (
            t.forEach((t) => {
              if (!t.isLiteral && !n.has(t.name)) {
                const n = this._bindingParser.createBoundElementProperty(e, t);
                s.push(ll.fromBoundProperty(n));
              }
            }),
            this._checkPropertiesInSchema(e, s)
          );
        }
        _findComponentDirectives(e) {
          return e.filter((e) => e.directive.isComponent);
        }
        _findComponentDirectiveNames(e) {
          return this._findComponentDirectives(e).map((e) =>
            bn(e.directive.type)
          );
        }
        _assertOnlyOneComponent(e, t) {
          const n = this._findComponentDirectiveNames(e);
          n.length > 1 &&
            this._reportError(
              "More than one component matched on this element.\nMake sure that only one component's selector can match a given element.\nConflicting components: " +
                n.join(","),
              t
            );
        }
        _assertElementExists(e, t) {
          const n = t.name.replace(/^:xhtml:/, "");
          if (!e && !this._schemaRegistry.hasElement(n, this._schemas)) {
            let e = `'${n}' is not a known element:\n`;
            (e += `1. If '${n}' is an Angular component, then verify that it is part of this module.\n`),
              n.indexOf("-") > -1
                ? (e += `2. If '${n}' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.`)
                : (e +=
                    "2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component."),
              this._reportError(e, t.sourceSpan);
          }
        }
        _assertNoComponentsNorElementBindingsOnTemplate(e, t, n) {
          const s = this._findComponentDirectiveNames(e);
          s.length > 0 &&
            this._reportError(
              "Components on an embedded template: " + s.join(","),
              n
            ),
            t.forEach((e) => {
              this._reportError(
                `Property binding ${e.name} not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the "@NgModule.declarations".`,
                n
              );
            });
        }
        _assertAllEventsPublishedByDirectives(e, t) {
          const n = new Set();
          e.forEach((e) => {
            Object.keys(e.directive.outputs).forEach((t) => {
              const s = e.directive.outputs[t];
              n.add(s);
            });
          }),
            t.forEach((e) => {
              (null == e.target && n.has(e.name)) ||
                this._reportError(
                  `Event binding ${e.fullName} not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the "@NgModule.declarations".`,
                  e.sourceSpan
                );
            });
        }
        _checkPropertiesInSchema(e, t) {
          return t.filter((t) => {
            if (
              0 === t.type &&
              !this._schemaRegistry.hasProperty(e, t.name, this._schemas)
            ) {
              let n = `Can't bind to '${t.name}' since it isn't a known property of '${e}'.`;
              e.startsWith("ng-")
                ? (n += `\n1. If '${t.name}' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`)
                : e.indexOf("-") > -1 &&
                  (n += `\n1. If '${e}' is an Angular component and it has '${t.name}' input, then verify that it is part of this module.\n2. If '${e}' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`),
                this._reportError(n, t.sourceSpan);
            }
            return !nc(t.value);
          });
        }
        _reportError(e, t, n = _r.ERROR) {
          this._targetErrors.push(new Er(t, e, n));
        }
      }
      class Ql {
        constructor(e, t, n) {
          (this.name = e), (this.value = t), (this.sourceSpan = n);
        }
        isReferenceToDirective(e) {
          return (
            -1 !==
            ((t = e.exportAs),
            t ? t.split(",").map((e) => e.trim()) : []).indexOf(this.value)
          );
          var t;
        }
      }
      class Kl {
        constructor(e, t, n, s) {
          (this.isTemplateElement = e),
            (this._ngContentIndexMatcher = t),
            (this._wildcardNgContentIndex = n),
            (this.providerContext = s);
        }
        static create(e, t, n) {
          const s = new v();
          let i = null;
          const r = t.find((e) => e.directive.isComponent);
          if (r) {
            const e = r.directive.template.ngContentSelectors;
            for (let t = 0; t < e.length; t++) {
              "*" === e[t] ? (i = t) : s.addSelectables(y.parse(e[t]), t);
            }
          }
          return new Kl(e, s, i, n);
        }
        findNgContentIndex(e) {
          const t = [];
          return (
            this._ngContentIndexMatcher.match(e, (e, n) => {
              t.push(n);
            }),
            t.sort(),
            null != this._wildcardNgContentIndex &&
              t.push(this._wildcardNgContentIndex),
            t.length > 0 ? t[0] : null
          );
        }
      }
      function Jl(e, t) {
        const n = new y(),
          s = r(e)[1];
        n.setElement(s);
        for (let i = 0; i < t.length; i++) {
          const e = t[i][0],
            s = r(e)[1],
            o = t[i][1];
          if ((n.addAttribute(s, o), "class" == e.toLowerCase())) {
            o.trim()
              .split(/\s+/g)
              .forEach((e) => n.addClassName(e));
          }
        }
        return n;
      }
      const Xl = new Kl(!0, new v(), null, null),
        Zl = new (class {
          visitElement(e, t) {
            const n = Vl(e);
            if (
              n.type === Bl.SCRIPT ||
              n.type === Bl.STYLE ||
              n.type === Bl.STYLESHEET
            )
              return null;
            const s = e.attrs.map((e) => [e.name, e.value]),
              i = Jl(e.name, s),
              r = t.findNgContentIndex(i),
              o = ba(this, e.children, Xl);
            return new hl(
              e.name,
              ba(this, e.attrs),
              [],
              [],
              [],
              [],
              [],
              !1,
              [],
              o,
              r,
              e.sourceSpan,
              e.endSourceSpan
            );
          }
          visitComment(e, t) {
            return null;
          }
          visitAttribute(e, t) {
            return new ol(e.name, e.value, e.sourceSpan);
          }
          visitText(e, t) {
            const n = t.findNgContentIndex(Ul());
            return new il(e.value, n, e.sourceSpan);
          }
          visitExpansion(e, t) {
            return e;
          }
          visitExpansionCase(e, t) {
            return e;
          }
        })();
      function ec(e) {
        return e instanceof pa && 0 == e.value.trim().length;
      }
      function tc(e) {
        const t = new Map();
        return (
          e.forEach((e) => {
            t.get(e.type.reference) || t.set(e.type.reference, e);
          }),
          Array.from(t.values())
        );
      }
      function nc(e) {
        return e instanceof oo && (e = e.ast), e instanceof Fr;
      }
      function sc(e) {
        const t = e.charCodeAt(0);
        if (t == e.charCodeAt(e.length - 1) && (39 == t || 34 == t)) {
          const t = e.substring(1, e.length - 1);
          -1 == t.indexOf("'") && -1 == t.indexOf('"') && (e = t);
        }
        return e;
      }
      function ic(e) {
        return e
          .replace(/[a-z][A-Z]/g, (e) => e.charAt(0) + "-" + e.charAt(1))
          .toLowerCase();
      }
      class rc {
        constructor(e) {
          (this._directiveExpr = e),
            (this._hasInitialValues = !1),
            (this.hasBindings = !1),
            (this.hasBindingsWithPipes = !1),
            (this._classMapInput = null),
            (this._styleMapInput = null),
            (this._singleStyleInputs = null),
            (this._singleClassInputs = null),
            (this._lastStylingInput = null),
            (this._firstStylingInput = null),
            (this._stylesIndex = new Map()),
            (this._classesIndex = new Map()),
            (this._initialStyleValues = []),
            (this._initialClassValues = []);
        }
        registerBoundInput(e) {
          let t = null,
            n = e.name;
          switch (e.type) {
            case 0:
              t = this.registerInputBasedOnName(n, e.value, e.sourceSpan);
              break;
            case 3:
              t = this.registerStyleInput(n, !1, e.value, e.sourceSpan, e.unit);
              break;
            case 2:
              t = this.registerClassInput(n, !1, e.value, e.sourceSpan);
          }
          return !!t;
        }
        registerInputBasedOnName(e, t, n) {
          let s = null;
          const i = e.substring(0, 6),
            r = "style" === e || "style." === i || "style!" === i;
          if (
            r ||
            (!r && ("class" === e || "class." === i || "class!" === i))
          ) {
            const i = "." !== e.charAt(5),
              o = e.substr(i ? 5 : 6);
            s = r
              ? this.registerStyleInput(o, i, t, n)
              : this.registerClassInput(o, i, t, n);
          }
          return s;
        }
        registerStyleInput(e, t, n, s, i) {
          if (nc(n)) return null;
          e = ic(e);
          const { property: r, hasOverrideFlag: o, suffix: a } = ac(e),
            l = {
              name: r,
              suffix: (i = "string" == typeof i && 0 !== i.length ? i : a),
              value: n,
              sourceSpan: s,
              hasOverrideFlag: o,
            };
          return (
            t
              ? (this._styleMapInput = l)
              : ((this._singleStyleInputs = this._singleStyleInputs || []).push(
                  l
                ),
                oc(this._stylesIndex, r)),
            (this._lastStylingInput = l),
            (this._firstStylingInput = this._firstStylingInput || l),
            this._checkForPipes(n),
            (this.hasBindings = !0),
            l
          );
        }
        registerClassInput(e, t, n, s) {
          if (nc(n)) return null;
          const { property: i, hasOverrideFlag: r } = ac(e),
            o = {
              name: i,
              value: n,
              sourceSpan: s,
              hasOverrideFlag: r,
              suffix: null,
            };
          if (t) {
            if (this._classMapInput)
              throw new Error(
                "[class] and [className] bindings cannot be used on the same element simultaneously"
              );
            this._classMapInput = o;
          } else
            (this._singleClassInputs = this._singleClassInputs || []).push(o),
              oc(this._classesIndex, i);
          return (
            (this._lastStylingInput = o),
            (this._firstStylingInput = this._firstStylingInput || o),
            this._checkForPipes(n),
            (this.hasBindings = !0),
            o
          );
        }
        _checkForPipes(e) {
          e instanceof oo &&
            e.ast instanceof Wr &&
            (this.hasBindingsWithPipes = !0);
        }
        registerStyleAttr(e) {
          (this._initialStyleValues = (function (e) {
            const t = [];
            let n = 0,
              s = 0,
              i = 0,
              r = 0,
              o = 0,
              a = null,
              l = !1;
            for (; n < e.length; )
              switch (e.charCodeAt(n++)) {
                case 40:
                  s++;
                  break;
                case 41:
                  s--;
                  break;
                case 39:
                  (l = l || r > 0),
                    0 === i
                      ? (i = 39)
                      : 39 === i && 92 !== e.charCodeAt(n - 1) && (i = 0);
                  break;
                case 34:
                  (l = l || r > 0),
                    0 === i
                      ? (i = 34)
                      : 34 === i && 92 !== e.charCodeAt(n - 1) && (i = 0);
                  break;
                case 58:
                  a ||
                    0 !== s ||
                    0 !== i ||
                    ((a = ic(e.substring(o, n - 1).trim())), (r = n));
                  break;
                case 59:
                  if (a && r > 0 && 0 === s && 0 === i) {
                    const s = e.substring(r, n - 1).trim();
                    t.push(a, l ? sc(s) : s),
                      (o = n),
                      (r = 0),
                      (a = null),
                      (l = !1);
                  }
              }
            if (a && r) {
              const n = e.substr(r).trim();
              t.push(a, l ? sc(n) : n);
            }
            return t;
          })(e)),
            (this._hasInitialValues = !0);
        }
        registerClassAttr(e) {
          (this._initialClassValues = e.trim().split(/\s+/g)),
            (this._hasInitialValues = !0);
        }
        populateInitialStylingAttrs(e) {
          if (this._initialClassValues.length) {
            e.push(It(1));
            for (let t = 0; t < this._initialClassValues.length; t++)
              e.push(It(this._initialClassValues[t]));
          }
          if (this._initialStyleValues.length) {
            e.push(It(2));
            for (let t = 0; t < this._initialStyleValues.length; t += 2)
              e.push(
                It(this._initialStyleValues[t]),
                It(this._initialStyleValues[t + 1])
              );
          }
        }
        assignHostAttrs(e, t) {
          this._directiveExpr &&
            (e.length || this._hasInitialValues) &&
            (this.populateInitialStylingAttrs(e), t.set("hostAttrs", St(e)));
        }
        buildClassMapInstruction(e) {
          return this._classMapInput
            ? this._buildMapBasedInstruction(e, !0, this._classMapInput)
            : null;
        }
        buildStyleMapInstruction(e) {
          return this._styleMapInput
            ? this._buildMapBasedInstruction(e, !1, this._styleMapInput)
            : null;
        }
        _buildMapBasedInstruction(e, t, n) {
          let s = 2;
          const i = n.value.visit(e);
          let r;
          return (
            i instanceof Jr
              ? ((s += i.expressions.length),
                (r = t
                  ? (function (e) {
                      switch (Ei(e)) {
                        case 1:
                          return Vn.classMap;
                        case 3:
                          return Vn.classMapInterpolate1;
                        case 5:
                          return Vn.classMapInterpolate2;
                        case 7:
                          return Vn.classMapInterpolate3;
                        case 9:
                          return Vn.classMapInterpolate4;
                        case 11:
                          return Vn.classMapInterpolate5;
                        case 13:
                          return Vn.classMapInterpolate6;
                        case 15:
                          return Vn.classMapInterpolate7;
                        case 17:
                          return Vn.classMapInterpolate8;
                        default:
                          return Vn.classMapInterpolateV;
                      }
                    })(i)
                  : (function (e) {
                      switch (Ei(e)) {
                        case 1:
                          return Vn.styleMap;
                        case 3:
                          return Vn.styleMapInterpolate1;
                        case 5:
                          return Vn.styleMapInterpolate2;
                        case 7:
                          return Vn.styleMapInterpolate3;
                        case 9:
                          return Vn.styleMapInterpolate4;
                        case 11:
                          return Vn.styleMapInterpolate5;
                        case 13:
                          return Vn.styleMapInterpolate6;
                        case 15:
                          return Vn.styleMapInterpolate7;
                        case 17:
                          return Vn.styleMapInterpolate8;
                        default:
                          return Vn.styleMapInterpolateV;
                      }
                    })(i)))
              : (r = t ? Vn.classMap : Vn.styleMap),
            {
              reference: r,
              calls: [
                {
                  supportsInterpolation: !0,
                  sourceSpan: n.sourceSpan,
                  allocateBindingSlots: s,
                  params: (e) => {
                    const t = e(i);
                    return Array.isArray(t) ? t : [t];
                  },
                },
              ],
            }
          );
        }
        _buildSingleInputs(e, t, n, s, i) {
          const r = [];
          return (
            t.forEach((t) => {
              const o = r[r.length - 1],
                a = t.value.visit(n);
              let l = e,
                c = 2;
              a instanceof Jr && ((c += a.expressions.length), s && (l = s(a)));
              const u = {
                sourceSpan: t.sourceSpan,
                allocateBindingSlots: c,
                supportsInterpolation: !!s,
                params: (e) => {
                  const n = [];
                  n.push(It(t.name));
                  const s = e(a);
                  return (
                    Array.isArray(s) ? n.push(...s) : n.push(s),
                    i || null === t.suffix || n.push(It(t.suffix)),
                    n
                  );
                },
              };
              o && o.reference === l
                ? o.calls.push(u)
                : r.push({ reference: l, calls: [u] });
            }),
            r
          );
        }
        _buildClassInputs(e) {
          return this._singleClassInputs
            ? this._buildSingleInputs(
                Vn.classProp,
                this._singleClassInputs,
                e,
                null,
                !0
              )
            : [];
        }
        _buildStyleInputs(e) {
          return this._singleStyleInputs
            ? this._buildSingleInputs(
                Vn.styleProp,
                this._singleStyleInputs,
                e,
                lc,
                !1
              )
            : [];
        }
        buildUpdateLevelInstructions(e) {
          const t = [];
          if (this.hasBindings) {
            const n = this.buildStyleMapInstruction(e);
            n && t.push(n);
            const s = this.buildClassMapInstruction(e);
            s && t.push(s),
              t.push(...this._buildStyleInputs(e)),
              t.push(...this._buildClassInputs(e));
          }
          return t;
        }
      }
      function oc(e, t) {
        e.has(t) || e.set(t, e.size);
      }
      function ac(e) {
        let t = !1;
        const n = e.indexOf("!important");
        -1 !== n && ((e = n > 0 ? e.substring(0, n) : ""), (t = !0));
        let s = null,
          i = e;
        const r = e.lastIndexOf(".");
        return (
          r > 0 && ((s = e.substr(r + 1)), (i = e.substring(0, r))),
          { property: i, suffix: s, hasOverrideFlag: t }
        );
      }
      function lc(e) {
        switch (Ei(e)) {
          case 1:
            return Vn.styleProp;
          case 3:
            return Vn.stylePropInterpolate1;
          case 5:
            return Vn.stylePropInterpolate2;
          case 7:
            return Vn.stylePropInterpolate3;
          case 9:
            return Vn.stylePropInterpolate4;
          case 11:
            return Vn.stylePropInterpolate5;
          case 13:
            return Vn.stylePropInterpolate6;
          case 15:
            return Vn.stylePropInterpolate7;
          case 17:
            return Vn.stylePropInterpolate8;
          default:
            return Vn.stylePropInterpolateV;
        }
      }
      var cc;
      !(function (e) {
        (e[(e.Character = 0)] = "Character"),
          (e[(e.Identifier = 1)] = "Identifier"),
          (e[(e.Keyword = 2)] = "Keyword"),
          (e[(e.String = 3)] = "String"),
          (e[(e.Operator = 4)] = "Operator"),
          (e[(e.Number = 5)] = "Number"),
          (e[(e.Error = 6)] = "Error");
      })(cc || (cc = {}));
      const uc = [
        "var",
        "let",
        "as",
        "null",
        "undefined",
        "true",
        "false",
        "if",
        "else",
        "this",
      ];
      class dc {
        tokenize(e) {
          const t = new gc(e),
            n = [];
          let s = t.scanToken();
          for (; null != s; ) n.push(s), (s = t.scanToken());
          return n;
        }
      }
      class hc {
        constructor(e, t, n, s, i) {
          (this.index = e),
            (this.end = t),
            (this.type = n),
            (this.numValue = s),
            (this.strValue = i);
        }
        isCharacter(e) {
          return this.type == cc.Character && this.numValue == e;
        }
        isNumber() {
          return this.type == cc.Number;
        }
        isString() {
          return this.type == cc.String;
        }
        isOperator(e) {
          return this.type == cc.Operator && this.strValue == e;
        }
        isIdentifier() {
          return this.type == cc.Identifier;
        }
        isKeyword() {
          return this.type == cc.Keyword;
        }
        isKeywordLet() {
          return this.type == cc.Keyword && "let" == this.strValue;
        }
        isKeywordAs() {
          return this.type == cc.Keyword && "as" == this.strValue;
        }
        isKeywordNull() {
          return this.type == cc.Keyword && "null" == this.strValue;
        }
        isKeywordUndefined() {
          return this.type == cc.Keyword && "undefined" == this.strValue;
        }
        isKeywordTrue() {
          return this.type == cc.Keyword && "true" == this.strValue;
        }
        isKeywordFalse() {
          return this.type == cc.Keyword && "false" == this.strValue;
        }
        isKeywordThis() {
          return this.type == cc.Keyword && "this" == this.strValue;
        }
        isError() {
          return this.type == cc.Error;
        }
        toNumber() {
          return this.type == cc.Number ? this.numValue : -1;
        }
        toString() {
          switch (this.type) {
            case cc.Character:
            case cc.Identifier:
            case cc.Keyword:
            case cc.Operator:
            case cc.String:
            case cc.Error:
              return this.strValue;
            case cc.Number:
              return this.numValue.toString();
            default:
              return null;
          }
        }
      }
      function pc(e, t, n) {
        return new hc(e, t, cc.Character, n, String.fromCharCode(n));
      }
      function mc(e, t, n) {
        return new hc(e, t, cc.Operator, 0, n);
      }
      const fc = new hc(-1, -1, cc.Character, 0, "");
      class gc {
        constructor(e) {
          (this.input = e),
            (this.peek = 0),
            (this.index = -1),
            (this.length = e.length),
            this.advance();
        }
        advance() {
          this.peek =
            ++this.index >= this.length ? 0 : this.input.charCodeAt(this.index);
        }
        scanToken() {
          const e = this.input,
            t = this.length;
          let n = this.peek,
            s = this.index;
          for (; n <= 32; ) {
            if (++s >= t) {
              n = 0;
              break;
            }
            n = e.charCodeAt(s);
          }
          if (((this.peek = n), (this.index = s), s >= t)) return null;
          if (yc(n)) return this.scanIdentifier();
          if (mr(n)) return this.scanNumber(s);
          const i = s;
          switch (n) {
            case 46:
              return (
                this.advance(),
                mr(this.peek) ? this.scanNumber(i) : pc(i, this.index, 46)
              );
            case 40:
            case tr:
            case dr:
            case hr:
            case 91:
            case 93:
            case nr:
            case ir:
            case rr:
              return this.scanCharacter(i, n);
            case 39:
            case 34:
              return this.scanString();
            case 35:
            case 43:
            case 45:
            case 42:
            case sr:
            case 37:
            case 94:
              return this.scanOperator(i, String.fromCharCode(n));
            case 63:
              return this.scanComplexOperator(i, "?", 46, ".");
            case or:
            case lr:
              return this.scanComplexOperator(
                i,
                String.fromCharCode(n),
                ar,
                "="
              );
            case 33:
            case ar:
              return this.scanComplexOperator(
                i,
                String.fromCharCode(n),
                ar,
                "=",
                ar,
                "="
              );
            case 38:
              return this.scanComplexOperator(i, "&", 38, "&");
            case 124:
              return this.scanComplexOperator(i, "|", 124, "|");
            case 160:
              for (; pr(this.peek); ) this.advance();
              return this.scanToken();
          }
          return (
            this.advance(),
            this.error(`Unexpected character [${String.fromCharCode(n)}]`, 0)
          );
        }
        scanCharacter(e, t) {
          return this.advance(), pc(e, this.index, t);
        }
        scanOperator(e, t) {
          return this.advance(), mc(e, this.index, t);
        }
        scanComplexOperator(e, t, n, s, i, r) {
          this.advance();
          let o = t;
          return (
            this.peek == n && (this.advance(), (o += s)),
            null != i && this.peek == i && (this.advance(), (o += r)),
            mc(e, this.index, o)
          );
        }
        scanIdentifier() {
          const e = this.index;
          for (this.advance(); vc(this.peek); ) this.advance();
          const t = this.input.substring(e, this.index);
          return uc.indexOf(t) > -1
            ? ((n = e),
              (s = this.index),
              (i = t),
              new hc(n, s, cc.Keyword, 0, i))
            : (function (e, t, n) {
                return new hc(e, t, cc.Identifier, 0, n);
              })(e, this.index, t);
          var n, s, i;
        }
        scanNumber(e) {
          let t = this.index === e;
          for (this.advance(); ; ) {
            if (mr(this.peek));
            else if (46 == this.peek) t = !1;
            else {
              if (101 != (n = this.peek) && 69 != n) break;
              if (
                (this.advance(),
                bc(this.peek) && this.advance(),
                !mr(this.peek))
              )
                return this.error("Invalid exponent", -1);
              t = !1;
            }
            this.advance();
          }
          var n;
          const s = this.input.substring(e, this.index),
            i = t
              ? (function (e) {
                  const t = parseInt(e);
                  if (isNaN(t))
                    throw new Error(
                      "Invalid integer literal when parsing " + e
                    );
                  return t;
                })(s)
              : parseFloat(s);
          return (
            (r = e), (o = this.index), (a = i), new hc(r, o, cc.Number, a, "")
          );
          var r, o, a;
        }
        scanString() {
          const e = this.index,
            t = this.peek;
          this.advance();
          let n = "",
            s = this.index;
          const i = this.input;
          for (; this.peek != t; )
            if (92 == this.peek) {
              let e;
              if (
                ((n += i.substring(s, this.index)),
                this.advance(),
                (this.peek = this.peek),
                117 == this.peek)
              ) {
                const t = i.substring(this.index + 1, this.index + 5);
                if (!/^[0-9a-f]+$/i.test(t))
                  return this.error(`Invalid unicode escape [\\u${t}]`, 0);
                e = parseInt(t, 16);
                for (let e = 0; e < 5; e++) this.advance();
              } else (e = xc(this.peek)), this.advance();
              (n += String.fromCharCode(e)), (s = this.index);
            } else {
              if (0 == this.peek) return this.error("Unterminated quote", 0);
              this.advance();
            }
          const r = i.substring(s, this.index);
          return (
            this.advance(),
            (o = e),
            (a = this.index),
            (l = n + r),
            new hc(o, a, cc.String, 0, l)
          );
          var o, a, l;
        }
        error(e, t) {
          const n = this.index + t;
          return (function (e, t, n) {
            return new hc(e, t, cc.Error, 0, n);
          })(
            n,
            this.index,
            `Lexer Error: ${e} at column ${n} in expression [${this.input}]`
          );
        }
      }
      function yc(e) {
        return (
          (cr <= e && e <= ur) || (65 <= e && e <= 90) || 95 == e || 36 == e
        );
      }
      function vc(e) {
        return fr(e) || mr(e) || 95 == e || 36 == e;
      }
      function bc(e) {
        return 45 == e || 43 == e;
      }
      function xc(e) {
        switch (e) {
          case 110:
            return er;
          case 102:
            return 12;
          case 114:
            return 13;
          case 116:
            return 9;
          case 118:
            return 11;
          default:
            return e;
        }
      }
      class _c {
        constructor(e, t, n, s, i) {
          (this.strings = e),
            (this.stringSpans = t),
            (this.expressions = n),
            (this.expressionsSpans = s),
            (this.offsets = i);
        }
      }
      class wc {
        constructor(e, t, n) {
          (this.templateBindings = e), (this.warnings = t), (this.errors = n);
        }
      }
      const Cc = Sc(Fi);
      function Sc(e) {
        const t = $t(e.start) + "([\\s\\S]*?)" + $t(e.end);
        return new RegExp(t, "g");
      }
      class Ec {
        constructor(e) {
          (this._lexer = e),
            (this.errors = []),
            (this.simpleExpressionChecker = Tc);
        }
        parseAction(e, t, n, s = Fi) {
          this._checkNoInterpolation(e, t, s);
          const i = this._stripComments(e),
            r = this._lexer.tokenize(this._stripComments(e)),
            o = new Ic(
              e,
              t,
              n,
              r,
              i.length,
              !0,
              this.errors,
              e.length - i.length
            ).parseChain();
          return new oo(o, e, t, n, this.errors);
        }
        parseBinding(e, t, n, s = Fi) {
          const i = this._parseBindingAst(e, t, n, s);
          return new oo(i, e, t, n, this.errors);
        }
        checkSimpleExpression(e) {
          const t = new this.simpleExpressionChecker();
          return e.visit(t), t.errors;
        }
        parseSimpleBinding(e, t, n, s = Fi) {
          const i = this._parseBindingAst(e, t, n, s),
            r = this.checkSimpleExpression(i);
          return (
            r.length > 0 &&
              this._reportError(
                "Host binding expression cannot contain " + r.join(" "),
                e,
                t
              ),
            new oo(i, e, t, n, this.errors)
          );
        }
        _reportError(e, t, n, s) {
          this.errors.push(new Mr(e, t, n, s));
        }
        _parseBindingAst(e, t, n, s) {
          const i = this._parseQuote(e, t, n);
          if (null != i) return i;
          this._checkNoInterpolation(e, t, s);
          const r = this._stripComments(e),
            o = this._lexer.tokenize(r);
          return new Ic(
            e,
            t,
            n,
            o,
            r.length,
            !1,
            this.errors,
            e.length - r.length
          ).parseChain();
        }
        _parseQuote(e, t, n) {
          if (null == e) return null;
          const s = e.indexOf(":");
          if (-1 == s) return null;
          const i = e.substring(0, s).trim();
          if (
            !(function (e) {
              if (0 == e.length) return !1;
              const t = new gc(e);
              if (!yc(t.peek)) return !1;
              for (t.advance(); 0 !== t.peek; ) {
                if (!vc(t.peek)) return !1;
                t.advance();
              }
              return !0;
            })(i)
          )
            return null;
          const r = e.substring(s + 1),
            o = new Pr(0, e.length);
          return new Nr(o, o.toAbsolute(n), i, r, t);
        }
        parseTemplateBindings(e, t, n, s, i) {
          const r = this._lexer.tokenize(t);
          return new Ic(
            t,
            n,
            i,
            r,
            t.length,
            !1,
            this.errors,
            0
          ).parseTemplateBindings({ source: e, span: new ro(s, s + e.length) });
        }
        parseInterpolation(e, t, n, s = Fi) {
          const i = this.splitInterpolation(e, t, s);
          if (null == i) return null;
          const r = [];
          for (let o = 0; o < i.expressions.length; ++o) {
            const s = i.expressions[o],
              a = this._stripComments(s),
              l = this._lexer.tokenize(a),
              c = new Ic(
                e,
                t,
                n,
                l,
                a.length,
                !1,
                this.errors,
                i.offsets[o] + (s.length - a.length)
              ).parseChain();
            r.push(c);
          }
          return this.createInterpolationAst(i.strings, r, e, t, n);
        }
        parseInterpolationExpression(e, t, n) {
          const s = this._stripComments(e),
            i = this._lexer.tokenize(s),
            r = new Ic(e, t, n, i, s.length, !1, this.errors, 0).parseChain();
          return this.createInterpolationAst(["", ""], [r], e, t, n);
        }
        createInterpolationAst(e, t, n, s, i) {
          const r = new Pr(0, n.length),
            o = new Jr(r, r.toAbsolute(i), e, t);
          return new oo(o, n, s, i, this.errors);
        }
        splitInterpolation(e, t, n = Fi) {
          const s = [],
            i = [],
            r = [],
            o = [],
            a = [];
          let l = 0,
            c = !1,
            u = !1,
            { start: d, end: h } = n;
          for (; l < e.length; )
            if (c) {
              const n = l,
                s = n + d.length,
                o = e.indexOf(h, s);
              if (-1 === o) {
                (c = !1), (u = !0);
                break;
              }
              const p = o + h.length,
                m = e.substring(s, o);
              m.trim().length > 0
                ? i.push(m)
                : (this._reportError(
                    "Blank expressions are not allowed in interpolated strings",
                    e,
                    `at column ${l} in`,
                    t
                  ),
                  i.push("$implicit")),
                r.push(s),
                a.push({ start: n, end: p }),
                (l = p),
                (c = !1);
            } else {
              const t = l;
              (l = e.indexOf(d, l)), -1 === l && (l = e.length);
              const n = e.substring(t, l);
              s.push(n), o.push({ start: t, end: l }), (c = !0);
            }
          return (
            c ||
              (u
                ? ((s[s.length - 1] += e.substring(l)),
                  (o[o.length - 1].end = e.length))
                : (s.push(e.substring(l)),
                  o.push({ start: l, end: e.length }))),
            0 === i.length ? null : new _c(s, o, i, a, r)
          );
        }
        wrapLiteralPrimitive(e, t, n) {
          const s = new Pr(0, null == e ? 0 : e.length);
          return new oo(new Yr(s, s.toAbsolute(n), e), e, t, n, this.errors);
        }
        _stripComments(e) {
          const t = this._commentStart(e);
          return null != t ? e.substring(0, t).trim() : e;
        }
        _commentStart(e) {
          let t = null;
          for (let s = 0; s < e.length - 1; s++) {
            const i = e.charCodeAt(s),
              r = e.charCodeAt(s + 1);
            if (i === sr && r == sr && null == t) return s;
            t === i
              ? (t = null)
              : null == t &&
                (39 === (n = i) || 34 === n || 96 === n) &&
                (t = i);
          }
          var n;
          return null;
        }
        _checkNoInterpolation(e, t, n) {
          const s = (i = n) === Fi ? Cc : Sc(i);
          var i;
          const r = e.split(s);
          r.length > 1 &&
            this._reportError(
              `Got interpolation (${n.start}${n.end}) where expression was expected`,
              e,
              `at column ${this._findInterpolationErrorColumn(r, 1, n)} in`,
              t
            );
        }
        _findInterpolationErrorColumn(e, t, n) {
          let s = "";
          for (let i = 0; i < t; i++)
            s += i % 2 == 0 ? e[i] : `${n.start}${e[i]}${n.end}`;
          return s.length;
        }
      }
      class kc extends Ec {
        constructor() {
          super(...arguments), (this.simpleExpressionChecker = Ac);
        }
      }
      var Oc;
      !(function (e) {
        (e[(e.None = 0)] = "None"), (e[(e.Writable = 1)] = "Writable");
      })(Oc || (Oc = {}));
      class Ic {
        constructor(e, t, n, s, i, r, o, a) {
          (this.input = e),
            (this.location = t),
            (this.absoluteOffset = n),
            (this.tokens = s),
            (this.inputLength = i),
            (this.parseAction = r),
            (this.errors = o),
            (this.offset = a),
            (this.rparensExpected = 0),
            (this.rbracketsExpected = 0),
            (this.rbracesExpected = 0),
            (this.context = Oc.None),
            (this.sourceSpanCache = new Map()),
            (this.index = 0);
        }
        peek(e) {
          const t = this.index + e;
          return t < this.tokens.length ? this.tokens[t] : fc;
        }
        get next() {
          return this.peek(0);
        }
        get atEOF() {
          return this.index >= this.tokens.length;
        }
        get inputIndex() {
          return this.atEOF
            ? this.currentEndIndex
            : this.next.index + this.offset;
        }
        get currentEndIndex() {
          if (this.index > 0) {
            return this.peek(-1).end + this.offset;
          }
          return 0 === this.tokens.length
            ? this.inputLength + this.offset
            : this.next.index + this.offset;
        }
        get currentAbsoluteOffset() {
          return this.absoluteOffset + this.inputIndex;
        }
        span(e) {
          return new Pr(e, this.currentEndIndex);
        }
        sourceSpan(e) {
          const t = `${e}@${this.inputIndex}`;
          return (
            this.sourceSpanCache.has(t) ||
              this.sourceSpanCache.set(
                t,
                this.span(e).toAbsolute(this.absoluteOffset)
              ),
            this.sourceSpanCache.get(t)
          );
        }
        advance() {
          this.index++;
        }
        withContext(e, t) {
          this.context |= e;
          const n = t();
          return (this.context ^= e), n;
        }
        consumeOptionalCharacter(e) {
          return !!this.next.isCharacter(e) && (this.advance(), !0);
        }
        peekKeywordLet() {
          return this.next.isKeywordLet();
        }
        peekKeywordAs() {
          return this.next.isKeywordAs();
        }
        expectCharacter(e) {
          this.consumeOptionalCharacter(e) ||
            this.error("Missing expected " + String.fromCharCode(e));
        }
        consumeOptionalOperator(e) {
          return !!this.next.isOperator(e) && (this.advance(), !0);
        }
        expectOperator(e) {
          this.consumeOptionalOperator(e) ||
            this.error("Missing expected operator " + e);
        }
        prettyPrintToken(e) {
          return e === fc ? "end of input" : "token " + e;
        }
        expectIdentifierOrKeyword() {
          const e = this.next;
          return e.isIdentifier() || e.isKeyword()
            ? (this.advance(), e.toString())
            : (this.error(
                `Unexpected ${this.prettyPrintToken(
                  e
                )}, expected identifier or keyword`
              ),
              "");
        }
        expectIdentifierOrKeywordOrString() {
          const e = this.next;
          return e.isIdentifier() || e.isKeyword() || e.isString()
            ? (this.advance(), e.toString())
            : (this.error(
                `Unexpected ${this.prettyPrintToken(
                  e
                )}, expected identifier, keyword, or string`
              ),
              "");
        }
        parseChain() {
          const e = [],
            t = this.inputIndex;
          for (; this.index < this.tokens.length; ) {
            const t = this.parsePipe();
            if ((e.push(t), this.consumeOptionalCharacter(rr)))
              for (
                this.parseAction ||
                this.error(
                  "Binding expression cannot contain chained expression"
                );
                this.consumeOptionalCharacter(rr);

              );
            else
              this.index < this.tokens.length &&
                this.error(`Unexpected token '${this.next}'`);
          }
          return 0 == e.length
            ? new Fr(this.span(t), this.sourceSpan(t))
            : 1 == e.length
            ? e[0]
            : new Br(this.span(t), this.sourceSpan(t), e);
        }
        parsePipe() {
          let e = this.parseExpression();
          if (this.consumeOptionalOperator("|")) {
            this.parseAction &&
              this.error("Cannot have a pipe in an action expression");
            do {
              const t = this.inputIndex,
                n = this.expectIdentifierOrKeyword(),
                s = this.sourceSpan(t),
                i = [];
              for (; this.consumeOptionalCharacter(ir); )
                i.push(this.parseExpression());
              const { start: r } = e.span;
              e = new Wr(this.span(r), this.sourceSpan(r), e, n, i, s);
            } while (this.consumeOptionalOperator("|"));
          }
          return e;
        }
        parseExpression() {
          return this.parseConditional();
        }
        parseConditional() {
          const e = this.inputIndex,
            t = this.parseLogicalOr();
          if (this.consumeOptionalOperator("?")) {
            const n = this.parsePipe();
            let s;
            if (this.consumeOptionalCharacter(ir)) s = this.parsePipe();
            else {
              const t = this.inputIndex,
                n = this.input.substring(e, t);
              this.error(
                `Conditional expression ${n} requires all 3 expressions`
              ),
                (s = new Fr(this.span(e), this.sourceSpan(e)));
            }
            return new zr(this.span(e), this.sourceSpan(e), t, n, s);
          }
          return t;
        }
        parseLogicalOr() {
          let e = this.parseLogicalAnd();
          for (; this.consumeOptionalOperator("||"); ) {
            const t = this.parseLogicalAnd(),
              { start: n } = e.span;
            e = new Xr(this.span(n), this.sourceSpan(n), "||", e, t);
          }
          return e;
        }
        parseLogicalAnd() {
          let e = this.parseEquality();
          for (; this.consumeOptionalOperator("&&"); ) {
            const t = this.parseEquality(),
              { start: n } = e.span;
            e = new Xr(this.span(n), this.sourceSpan(n), "&&", e, t);
          }
          return e;
        }
        parseEquality() {
          let e = this.parseRelational();
          for (; this.next.type == cc.Operator; ) {
            const t = this.next.strValue;
            switch (t) {
              case "==":
              case "===":
              case "!=":
              case "!==":
                this.advance();
                const n = this.parseRelational(),
                  { start: s } = e.span;
                e = new Xr(this.span(s), this.sourceSpan(s), t, e, n);
                continue;
            }
            break;
          }
          return e;
        }
        parseRelational() {
          let e = this.parseAdditive();
          for (; this.next.type == cc.Operator; ) {
            const t = this.next.strValue;
            switch (t) {
              case "<":
              case ">":
              case "<=":
              case ">=":
                this.advance();
                const n = this.parseAdditive(),
                  { start: s } = e.span;
                e = new Xr(this.span(s), this.sourceSpan(s), t, e, n);
                continue;
            }
            break;
          }
          return e;
        }
        parseAdditive() {
          let e = this.parseMultiplicative();
          for (; this.next.type == cc.Operator; ) {
            const t = this.next.strValue;
            switch (t) {
              case "+":
              case "-":
                this.advance();
                let n = this.parseMultiplicative();
                const { start: s } = e.span;
                e = new Xr(this.span(s), this.sourceSpan(s), t, e, n);
                continue;
            }
            break;
          }
          return e;
        }
        parseMultiplicative() {
          let e = this.parsePrefix();
          for (; this.next.type == cc.Operator; ) {
            const t = this.next.strValue;
            switch (t) {
              case "*":
              case "%":
              case "/":
                this.advance();
                let n = this.parsePrefix();
                const { start: s } = e.span;
                e = new Xr(this.span(s), this.sourceSpan(s), t, e, n);
                continue;
            }
            break;
          }
          return e;
        }
        parsePrefix() {
          if (this.next.type == cc.Operator) {
            const e = this.inputIndex;
            let t;
            switch (this.next.strValue) {
              case "+":
                return (
                  this.advance(),
                  (t = this.parsePrefix()),
                  Zr.createPlus(this.span(e), this.sourceSpan(e), t)
                );
              case "-":
                return (
                  this.advance(),
                  (t = this.parsePrefix()),
                  Zr.createMinus(this.span(e), this.sourceSpan(e), t)
                );
              case "!":
                return (
                  this.advance(),
                  (t = this.parsePrefix()),
                  new eo(this.span(e), this.sourceSpan(e), t)
                );
            }
          }
          return this.parseCallChain();
        }
        parseCallChain() {
          let e = this.parsePrimary();
          const t = e.span.start;
          for (;;)
            if (this.consumeOptionalCharacter(46))
              e = this.parseAccessMemberOrMethodCall(e, !1);
            else if (this.consumeOptionalOperator("?."))
              e = this.parseAccessMemberOrMethodCall(e, !0);
            else if (this.consumeOptionalCharacter(91))
              this.withContext(Oc.Writable, () => {
                this.rbracketsExpected++;
                const n = this.parsePipe();
                if (
                  (n instanceof Fr && this.error("Key access cannot be empty"),
                  this.rbracketsExpected--,
                  this.expectCharacter(93),
                  this.consumeOptionalOperator("="))
                ) {
                  const s = this.parseConditional();
                  e = new qr(this.span(t), this.sourceSpan(t), e, n, s);
                } else e = new $r(this.span(t), this.sourceSpan(t), e, n);
              });
            else if (this.consumeOptionalCharacter(40)) {
              this.rparensExpected++;
              const n = this.parseCallArguments();
              this.rparensExpected--,
                this.expectCharacter(tr),
                (e = new io(this.span(t), this.sourceSpan(t), e, n));
            } else {
              if (!this.consumeOptionalOperator("!")) return e;
              e = new to(this.span(t), this.sourceSpan(t), e);
            }
        }
        parsePrimary() {
          const e = this.inputIndex;
          if (this.consumeOptionalCharacter(40)) {
            this.rparensExpected++;
            const e = this.parsePipe();
            return this.rparensExpected--, this.expectCharacter(tr), e;
          }
          if (this.next.isKeywordNull())
            return (
              this.advance(), new Yr(this.span(e), this.sourceSpan(e), null)
            );
          if (this.next.isKeywordUndefined())
            return (
              this.advance(), new Yr(this.span(e), this.sourceSpan(e), void 0)
            );
          if (this.next.isKeywordTrue())
            return this.advance(), new Yr(this.span(e), this.sourceSpan(e), !0);
          if (this.next.isKeywordFalse())
            return this.advance(), new Yr(this.span(e), this.sourceSpan(e), !1);
          if (this.next.isKeywordThis())
            return this.advance(), new Vr(this.span(e), this.sourceSpan(e));
          if (this.consumeOptionalCharacter(91)) {
            this.rbracketsExpected++;
            const t = this.parseExpressionList(93);
            return (
              this.rbracketsExpected--,
              this.expectCharacter(93),
              new Qr(this.span(e), this.sourceSpan(e), t)
            );
          }
          if (this.next.isCharacter(dr)) return this.parseLiteralMap();
          if (this.next.isIdentifier())
            return this.parseAccessMemberOrMethodCall(
              new Lr(this.span(e), this.sourceSpan(e)),
              !1
            );
          if (this.next.isNumber()) {
            const t = this.next.toNumber();
            return this.advance(), new Yr(this.span(e), this.sourceSpan(e), t);
          }
          if (this.next.isString()) {
            const t = this.next.toString();
            return this.advance(), new Yr(this.span(e), this.sourceSpan(e), t);
          }
          return this.index >= this.tokens.length
            ? (this.error("Unexpected end of expression: " + this.input),
              new Fr(this.span(e), this.sourceSpan(e)))
            : (this.error("Unexpected token " + this.next),
              new Fr(this.span(e), this.sourceSpan(e)));
        }
        parseExpressionList(e) {
          const t = [];
          if (!this.next.isCharacter(e))
            do {
              t.push(this.parsePipe());
            } while (this.consumeOptionalCharacter(nr));
          return t;
        }
        parseLiteralMap() {
          const e = [],
            t = [],
            n = this.inputIndex;
          if ((this.expectCharacter(dr), !this.consumeOptionalCharacter(hr))) {
            this.rbracesExpected++;
            do {
              const n = this.next.isString(),
                s = this.expectIdentifierOrKeywordOrString();
              e.push({ key: s, quoted: n }),
                this.expectCharacter(ir),
                t.push(this.parsePipe());
            } while (this.consumeOptionalCharacter(nr));
            this.rbracesExpected--, this.expectCharacter(hr);
          }
          return new Kr(this.span(n), this.sourceSpan(n), e, t);
        }
        parseAccessMemberOrMethodCall(e, t = !1) {
          const n = e.span.start,
            s = this.inputIndex,
            i = this.expectIdentifierOrKeyword(),
            r = this.sourceSpan(s);
          if (this.consumeOptionalCharacter(40)) {
            this.rparensExpected++;
            const s = this.parseCallArguments();
            this.expectCharacter(tr), this.rparensExpected--;
            const o = this.span(n),
              a = this.sourceSpan(n);
            return t ? new so(o, a, r, e, i, s) : new no(o, a, r, e, i, s);
          }
          if (t)
            return this.consumeOptionalOperator("=")
              ? (this.error(
                  "The '?.' operator cannot be used in the assignment"
                ),
                new Fr(this.span(n), this.sourceSpan(n)))
              : new Ur(this.span(n), this.sourceSpan(n), r, e, i);
          if (this.consumeOptionalOperator("=")) {
            if (!this.parseAction)
              return (
                this.error("Bindings cannot contain assignments"),
                new Fr(this.span(n), this.sourceSpan(n))
              );
            const t = this.parseConditional();
            return new Gr(this.span(n), this.sourceSpan(n), r, e, i, t);
          }
          return new Hr(this.span(n), this.sourceSpan(n), r, e, i);
        }
        parseCallArguments() {
          if (this.next.isCharacter(tr)) return [];
          const e = [];
          do {
            e.push(this.parsePipe());
          } while (this.consumeOptionalCharacter(nr));
          return e;
        }
        expectTemplateBindingKey() {
          let e = "",
            t = !1;
          const n = this.currentAbsoluteOffset;
          do {
            (e += this.expectIdentifierOrKeywordOrString()),
              (t = this.consumeOptionalOperator("-")),
              t && (e += "-");
          } while (t);
          return { source: e, span: new ro(n, n + e.length) };
        }
        parseTemplateBindings(e) {
          const t = [];
          for (
            t.push(...this.parseDirectiveKeywordBindings(e));
            this.index < this.tokens.length;

          ) {
            const n = this.parseLetBinding();
            if (n) t.push(n);
            else {
              const n = this.expectTemplateBindingKey(),
                s = this.parseAsBinding(n);
              s
                ? t.push(s)
                : ((n.source =
                    e.source +
                    n.source[0].toUpperCase() +
                    n.source.substring(1)),
                  t.push(...this.parseDirectiveKeywordBindings(n)));
            }
            this.consumeStatementTerminator();
          }
          return new wc(t, [], this.errors);
        }
        parseDirectiveKeywordBindings(e) {
          const t = [];
          this.consumeOptionalCharacter(ir);
          const n = this.getDirectiveBoundTarget();
          let s = this.currentAbsoluteOffset;
          const i = this.parseAsBinding(e);
          i ||
            (this.consumeStatementTerminator(),
            (s = this.currentAbsoluteOffset));
          const r = new ro(e.span.start, s);
          return t.push(new lo(r, e, n)), i && t.push(i), t;
        }
        getDirectiveBoundTarget() {
          if (this.next === fc || this.peekKeywordAs() || this.peekKeywordLet())
            return null;
          const e = this.parsePipe(),
            { start: t, end: n } = e.span,
            s = this.input.substring(t, n);
          return new oo(
            e,
            s,
            this.location,
            this.absoluteOffset + t,
            this.errors
          );
        }
        parseAsBinding(e) {
          if (!this.peekKeywordAs()) return null;
          this.advance();
          const t = this.expectTemplateBindingKey();
          this.consumeStatementTerminator();
          const n = new ro(e.span.start, this.currentAbsoluteOffset);
          return new ao(n, t, e);
        }
        parseLetBinding() {
          if (!this.peekKeywordLet()) return null;
          const e = this.currentAbsoluteOffset;
          this.advance();
          const t = this.expectTemplateBindingKey();
          let n = null;
          this.consumeOptionalOperator("=") &&
            (n = this.expectTemplateBindingKey()),
            this.consumeStatementTerminator();
          const s = new ro(e, this.currentAbsoluteOffset);
          return new ao(s, t, n);
        }
        consumeStatementTerminator() {
          this.consumeOptionalCharacter(rr) ||
            this.consumeOptionalCharacter(nr);
        }
        error(e, t = null) {
          this.errors.push(
            new Mr(e, this.input, this.locationText(t), this.location)
          ),
            this.skip();
        }
        locationText(e = null) {
          return (
            null == e && (e = this.index),
            e < this.tokens.length
              ? `at column ${this.tokens[e].index + 1} in`
              : "at the end of the expression"
          );
        }
        skip() {
          let e = this.next;
          for (
            ;
            !(
              !(this.index < this.tokens.length) ||
              e.isCharacter(rr) ||
              (!(this.rparensExpected <= 0) && e.isCharacter(tr)) ||
              (!(this.rbracesExpected <= 0) && e.isCharacter(hr)) ||
              (!(this.rbracketsExpected <= 0) && e.isCharacter(93)) ||
              (this.context & Oc.Writable && e.isOperator("="))
            );

          )
            this.next.isError() &&
              this.errors.push(
                new Mr(
                  this.next.toString(),
                  this.input,
                  this.locationText(),
                  this.location
                )
              ),
              this.advance(),
              (e = this.next);
        }
      }
      class Tc {
        constructor() {
          this.errors = [];
        }
        visitImplicitReceiver(e, t) {}
        visitThisReceiver(e, t) {}
        visitInterpolation(e, t) {}
        visitLiteralPrimitive(e, t) {}
        visitPropertyRead(e, t) {}
        visitPropertyWrite(e, t) {}
        visitSafePropertyRead(e, t) {}
        visitMethodCall(e, t) {}
        visitSafeMethodCall(e, t) {}
        visitFunctionCall(e, t) {}
        visitLiteralArray(e, t) {
          this.visitAll(e.expressions, t);
        }
        visitLiteralMap(e, t) {
          this.visitAll(e.values, t);
        }
        visitUnary(e, t) {}
        visitBinary(e, t) {}
        visitPrefixNot(e, t) {}
        visitNonNullAssert(e, t) {}
        visitConditional(e, t) {}
        visitPipe(e, t) {
          this.errors.push("pipes");
        }
        visitKeyedRead(e, t) {}
        visitKeyedWrite(e, t) {}
        visitAll(e, t) {
          return e.map((e) => e.visit(this, t));
        }
        visitChain(e, t) {}
        visitQuote(e, t) {}
      }
      class Ac extends co {
        constructor() {
          super(...arguments), (this.errors = []);
        }
        visitPipe() {
          this.errors.push("pipes");
        }
      }
      let Dc;
      function Mc() {
        return (
          Dc ||
            ((Dc = {}),
            Pc(q.HTML, ["iframe|srcdoc", "*|innerHTML", "*|outerHTML"]),
            Pc(q.STYLE, ["*|style"]),
            Pc(q.URL, [
              "*|formAction",
              "area|href",
              "area|ping",
              "audio|src",
              "a|href",
              "a|ping",
              "blockquote|cite",
              "body|background",
              "del|cite",
              "form|action",
              "img|src",
              "img|srcset",
              "input|src",
              "ins|cite",
              "q|cite",
              "source|src",
              "source|srcset",
              "track|src",
              "video|poster",
              "video|src",
            ]),
            Pc(q.RESOURCE_URL, [
              "applet|code",
              "applet|codebase",
              "base|href",
              "embed|src",
              "frame|src",
              "head|profile",
              "html|manifest",
              "iframe|src",
              "link|href",
              "media|src",
              "object|codebase",
              "object|data",
              "script|src",
            ])),
          Dc
        );
      }
      function Pc(e, t) {
        for (const n of t) Dc[n.toLowerCase()] = e;
      }
      class Rc {}
      const jc = [
          "[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot,*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored",
          "[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate",
          "abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate",
          "media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume",
          ":svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex",
          ":svg:graphics^:svg:|",
          ":svg:animation^:svg:|*begin,*end,*repeat",
          ":svg:geometry^:svg:|",
          ":svg:componentTransferFunction^:svg:|",
          ":svg:gradient^:svg:|",
          ":svg:textContent^:svg:graphics|",
          ":svg:textPositioning^:svg:textContent|",
          "a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username",
          "area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username",
          "audio^media|",
          "br^[HTMLElement]|clear",
          "base^[HTMLElement]|href,target",
          "body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink",
          "button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value",
          "canvas^[HTMLElement]|#height,#width",
          "content^[HTMLElement]|select",
          "dl^[HTMLElement]|!compact",
          "datalist^[HTMLElement]|",
          "details^[HTMLElement]|!open",
          "dialog^[HTMLElement]|!open,returnValue",
          "dir^[HTMLElement]|!compact",
          "div^[HTMLElement]|align",
          "embed^[HTMLElement]|align,height,name,src,type,width",
          "fieldset^[HTMLElement]|!disabled,name",
          "font^[HTMLElement]|color,face,size",
          "form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target",
          "frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src",
          "frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows",
          "hr^[HTMLElement]|align,color,!noShade,size,width",
          "head^[HTMLElement]|",
          "h1,h2,h3,h4,h5,h6^[HTMLElement]|align",
          "html^[HTMLElement]|version",
          "iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width",
          "img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width",
          "input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width",
          "li^[HTMLElement]|type,#value",
          "label^[HTMLElement]|htmlFor",
          "legend^[HTMLElement]|align",
          "link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type",
          "map^[HTMLElement]|name",
          "marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width",
          "menu^[HTMLElement]|!compact",
          "meta^[HTMLElement]|content,httpEquiv,name,scheme",
          "meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value",
          "ins,del^[HTMLElement]|cite,dateTime",
          "ol^[HTMLElement]|!compact,!reversed,#start,type",
          "object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width",
          "optgroup^[HTMLElement]|!disabled,label",
          "option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value",
          "output^[HTMLElement]|defaultValue,%htmlFor,name,value",
          "p^[HTMLElement]|align",
          "param^[HTMLElement]|name,type,value,valueType",
          "picture^[HTMLElement]|",
          "pre^[HTMLElement]|#width",
          "progress^[HTMLElement]|#max,#value",
          "q,blockquote,cite^[HTMLElement]|",
          "script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type",
          "select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value",
          "shadow^[HTMLElement]|",
          "slot^[HTMLElement]|name",
          "source^[HTMLElement]|media,sizes,src,srcset,type",
          "span^[HTMLElement]|",
          "style^[HTMLElement]|!disabled,media,type",
          "caption^[HTMLElement]|align",
          "th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width",
          "col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width",
          "table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width",
          "tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign",
          "tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign",
          "template^[HTMLElement]|",
          "textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap",
          "title^[HTMLElement]|text",
          "track^[HTMLElement]|!default,kind,label,src,srclang",
          "ul^[HTMLElement]|!compact,type",
          "unknown^[HTMLElement]|",
          "video^media|#height,poster,#width",
          ":svg:a^:svg:graphics|",
          ":svg:animate^:svg:animation|",
          ":svg:animateMotion^:svg:animation|",
          ":svg:animateTransform^:svg:animation|",
          ":svg:circle^:svg:geometry|",
          ":svg:clipPath^:svg:graphics|",
          ":svg:defs^:svg:graphics|",
          ":svg:desc^:svg:|",
          ":svg:discard^:svg:|",
          ":svg:ellipse^:svg:geometry|",
          ":svg:feBlend^:svg:|",
          ":svg:feColorMatrix^:svg:|",
          ":svg:feComponentTransfer^:svg:|",
          ":svg:feComposite^:svg:|",
          ":svg:feConvolveMatrix^:svg:|",
          ":svg:feDiffuseLighting^:svg:|",
          ":svg:feDisplacementMap^:svg:|",
          ":svg:feDistantLight^:svg:|",
          ":svg:feDropShadow^:svg:|",
          ":svg:feFlood^:svg:|",
          ":svg:feFuncA^:svg:componentTransferFunction|",
          ":svg:feFuncB^:svg:componentTransferFunction|",
          ":svg:feFuncG^:svg:componentTransferFunction|",
          ":svg:feFuncR^:svg:componentTransferFunction|",
          ":svg:feGaussianBlur^:svg:|",
          ":svg:feImage^:svg:|",
          ":svg:feMerge^:svg:|",
          ":svg:feMergeNode^:svg:|",
          ":svg:feMorphology^:svg:|",
          ":svg:feOffset^:svg:|",
          ":svg:fePointLight^:svg:|",
          ":svg:feSpecularLighting^:svg:|",
          ":svg:feSpotLight^:svg:|",
          ":svg:feTile^:svg:|",
          ":svg:feTurbulence^:svg:|",
          ":svg:filter^:svg:|",
          ":svg:foreignObject^:svg:graphics|",
          ":svg:g^:svg:graphics|",
          ":svg:image^:svg:graphics|",
          ":svg:line^:svg:geometry|",
          ":svg:linearGradient^:svg:gradient|",
          ":svg:mpath^:svg:|",
          ":svg:marker^:svg:|",
          ":svg:mask^:svg:|",
          ":svg:metadata^:svg:|",
          ":svg:path^:svg:geometry|",
          ":svg:pattern^:svg:|",
          ":svg:polygon^:svg:geometry|",
          ":svg:polyline^:svg:geometry|",
          ":svg:radialGradient^:svg:gradient|",
          ":svg:rect^:svg:geometry|",
          ":svg:svg^:svg:graphics|#currentScale,#zoomAndPan",
          ":svg:script^:svg:|type",
          ":svg:set^:svg:animation|",
          ":svg:stop^:svg:|",
          ":svg:style^:svg:|!disabled,media,title,type",
          ":svg:switch^:svg:graphics|",
          ":svg:symbol^:svg:|",
          ":svg:tspan^:svg:textPositioning|",
          ":svg:text^:svg:textPositioning|",
          ":svg:textPath^:svg:textContent|",
          ":svg:title^:svg:|",
          ":svg:use^:svg:graphics|",
          ":svg:view^:svg:|#zoomAndPan",
          "data^[HTMLElement]|value",
          "keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name",
          "menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default",
          "summary^[HTMLElement]|",
          "time^[HTMLElement]|dateTime",
          ":svg:cursor^:svg:|",
        ],
        Nc = {
          class: "className",
          for: "htmlFor",
          formaction: "formAction",
          innerHtml: "innerHTML",
          readonly: "readOnly",
          tabindex: "tabIndex",
        };
      class Fc extends Rc {
        constructor() {
          super(),
            (this._schema = {}),
            jc.forEach((e) => {
              const t = {},
                [n, s] = e.split("|"),
                i = s.split(","),
                [r, o] = n.split("^");
              r.split(",").forEach((e) => (this._schema[e.toLowerCase()] = t));
              const a = o && this._schema[o.toLowerCase()];
              a &&
                Object.keys(a).forEach((e) => {
                  t[e] = a[e];
                }),
                i.forEach((e) => {
                  if (e.length > 0)
                    switch (e[0]) {
                      case "*":
                        break;
                      case "!":
                        t[e.substring(1)] = "boolean";
                        break;
                      case "#":
                        t[e.substring(1)] = "number";
                        break;
                      case "%":
                        t[e.substring(1)] = "object";
                        break;
                      default:
                        t[e] = "string";
                    }
                });
            });
        }
        hasProperty(e, t, n) {
          if (n.some((e) => e.name === B.name)) return !0;
          if (e.indexOf("-") > -1) {
            if (o(e) || a(e)) return !1;
            if (n.some((e) => e.name === V.name)) return !0;
          }
          return !!(this._schema[e.toLowerCase()] || this._schema.unknown)[t];
        }
        hasElement(e, t) {
          if (t.some((e) => e.name === B.name)) return !0;
          if (e.indexOf("-") > -1) {
            if (o(e) || a(e)) return !0;
            if (t.some((e) => e.name === V.name)) return !0;
          }
          return !!this._schema[e.toLowerCase()];
        }
        securityContext(e, t, n) {
          n && (t = this.getMappedPropName(t)),
            (e = e.toLowerCase()),
            (t = t.toLowerCase());
          let s = Mc()[e + "|" + t];
          return s || ((s = Mc()["*|" + t]), s || q.NONE);
        }
        getMappedPropName(e) {
          return Nc[e] || e;
        }
        getDefaultComponentElementName() {
          return "ng-component";
        }
        validateProperty(e) {
          if (e.toLowerCase().startsWith("on")) {
            return {
              error: !0,
              msg: `Binding to event property '${e}' is disallowed for security reasons, please use (${e.slice(
                2
              )})=...\nIf '${e}' is a directive input, make sure the directive is imported by the current module.`,
            };
          }
          return { error: !1 };
        }
        validateAttribute(e) {
          if (e.toLowerCase().startsWith("on")) {
            return {
              error: !0,
              msg: `Binding to event attribute '${e}' is disallowed for security reasons, please use (${e.slice(
                2
              )})=...`,
            };
          }
          return { error: !1 };
        }
        allKnownElementNames() {
          return Object.keys(this._schema);
        }
        normalizeAnimationStyleProperty(e) {
          return e.replace(Dt, (...e) => e[1].toUpperCase());
        }
        normalizeAnimationStyleValue(e, t, n) {
          let s = "";
          const i = n.toString().trim();
          let r = null;
          if (
            (function (e) {
              switch (e) {
                case "width":
                case "height":
                case "minWidth":
                case "minHeight":
                case "maxWidth":
                case "maxHeight":
                case "left":
                case "top":
                case "bottom":
                case "right":
                case "fontSize":
                case "outlineWidth":
                case "outlineOffset":
                case "paddingTop":
                case "paddingLeft":
                case "paddingBottom":
                case "paddingRight":
                case "marginTop":
                case "marginLeft":
                case "marginBottom":
                case "marginRight":
                case "borderRadius":
                case "borderWidth":
                case "borderTopWidth":
                case "borderLeftWidth":
                case "borderRightWidth":
                case "borderBottomWidth":
                case "textIndent":
                  return !0;
                default:
                  return !1;
              }
            })(e) &&
            0 !== n &&
            "0" !== n
          )
            if ("number" == typeof n) s = "px";
            else {
              const e = n.match(/^[+-]?[\d\.]+([a-z]*)$/);
              e &&
                0 == e[1].length &&
                (r = `Please provide a CSS unit value for ${t}:${n}`);
            }
          return { error: r, value: i + s };
        }
      }
      const Lc =
        /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.*))|\[\(([^\)]+)\)\]|\[([^\]]+)\]|\(([^\)]+)\))$/;
      function Vc(e, t) {
        const n = new Bc(t);
        return {
          nodes: ba(n, e),
          errors: t.errors.concat(n.errors),
          styleUrls: n.styleUrls,
          styles: n.styles,
          ngContentSelectors: n.ngContentSelectors,
        };
      }
      class Bc {
        constructor(e) {
          (this.bindingParser = e),
            (this.errors = []),
            (this.styles = []),
            (this.styleUrls = []),
            (this.ngContentSelectors = []),
            (this.inI18nBlock = !1);
        }
        visitElement(e) {
          const t = Xs(e.i18n);
          t &&
            (this.inI18nBlock &&
              this.reportError(
                "Cannot mark an element as translatable inside of a translatable section. Please remove the nested i18n marker.",
                e.sourceSpan
              ),
            (this.inI18nBlock = !0));
          const n = Vl(e);
          if (n.type === Bl.SCRIPT) return null;
          if (n.type === Bl.STYLE) {
            const t =
              1 === (s = e).children.length && s.children[0] instanceof pa
                ? s.children[0].value
                : null;
            return null !== t && this.styles.push(t), null;
          }
          if (n.type === Bl.STYLESHEET && Tl(n.hrefAttr))
            return this.styleUrls.push(n.hrefAttr), null;
          var s;
          const i = l(e.name),
            r = [],
            o = [],
            a = [],
            c = [],
            u = [],
            d = {},
            h = [],
            p = [];
          let m = !1;
          for (const l of e.attrs) {
            let e = !1;
            const t = Hc(l.name);
            let n = !1;
            if ((l.i18n && (d[l.name] = l.i18n), t.startsWith("*"))) {
              m &&
                this.reportError(
                  "Can't have multiple template bindings on one element. Use only one attribute prefixed with *",
                  l.sourceSpan
                ),
                (n = !0),
                (m = !0);
              const e = l.value,
                s = t.substring("*".length),
                i = [],
                r = l.valueSpan
                  ? l.valueSpan.start.offset
                  : l.sourceSpan.start.offset + l.name.length;
              this.bindingParser.parseInlineTemplateBinding(
                s,
                e,
                l.sourceSpan,
                r,
                [],
                h,
                i,
                !0
              ),
                p.push(
                  ...i.map(
                    (e) =>
                      new Xn(
                        e.name,
                        e.value,
                        e.sourceSpan,
                        e.keySpan,
                        e.valueSpan
                      )
                  )
                );
            } else e = this.parseAttribute(i, l, [], r, o, a, c);
            e || n || u.push(this.visitAttribute(l));
          }
          const f = ba(n.nonBindable ? zc : this, e.children);
          let g;
          if (n.type === Bl.NG_CONTENT) {
            e.children &&
              !e.children.every(
                (e) =>
                  (function (e) {
                    return e instanceof pa && 0 == e.value.trim().length;
                  })(e) ||
                  (function (e) {
                    return e instanceof va;
                  })(e)
              ) &&
              this.reportError(
                "<ng-content> element cannot have content.",
                e.sourceSpan
              );
            const t = n.selectAttr,
              s = e.attrs.map((e) => this.visitAttribute(e));
            (g = new Jn(t, s, e.sourceSpan, e.i18n)),
              this.ngContentSelectors.push(t);
          } else if (i) {
            const t = this.extractAttributes(e.name, r, d);
            g = new Kn(
              e.name,
              u,
              t.bound,
              o,
              [],
              f,
              c,
              a,
              e.sourceSpan,
              e.startSourceSpan,
              e.endSourceSpan,
              e.i18n
            );
          } else {
            const t = this.extractAttributes(e.name, r, d);
            g = new Qn(
              e.name,
              u,
              t.bound,
              o,
              f,
              c,
              e.sourceSpan,
              e.startSourceSpan,
              e.endSourceSpan,
              e.i18n
            );
          }
          if (m) {
            const n = this.extractAttributes("ng-template", h, d),
              s = [];
            n.literal.forEach((e) => s.push(e)),
              n.bound.forEach((e) => s.push(e));
            const r =
                g instanceof Qn
                  ? {
                      attributes: g.attributes,
                      inputs: g.inputs,
                      outputs: g.outputs,
                    }
                  : { attributes: [], inputs: [], outputs: [] },
              o = i && t ? void 0 : e.i18n;
            g = new Kn(
              g.name,
              r.attributes,
              r.inputs,
              r.outputs,
              s,
              [g],
              [],
              p,
              e.sourceSpan,
              e.startSourceSpan,
              e.endSourceSpan,
              o
            );
          }
          return t && (this.inI18nBlock = !1), g;
        }
        visitAttribute(e) {
          return new qn(e.name, e.value, e.sourceSpan, e.valueSpan, e.i18n);
        }
        visitText(e) {
          return this._visitTextWithInterpolation(
            e.value,
            e.sourceSpan,
            e.i18n
          );
        }
        visitExpansion(e) {
          if (!e.i18n) return null;
          if (!Xs(e.i18n))
            throw new Error(
              `Invalid type "${
                e.i18n.constructor
              }" for "i18n" property of ${e.sourceSpan.toString()}. Expected a "Message"`
            );
          const t = e.i18n,
            n = {},
            s = {};
          return (
            Object.keys(t.placeholders).forEach((e) => {
              const i = t.placeholders[e];
              if (e.startsWith("VAR_")) {
                const t = e.trim(),
                  s = this.bindingParser.parseInterpolationExpression(
                    i.text,
                    i.sourceSpan
                  );
                n[t] = new $n(s, i.sourceSpan);
              } else
                s[e] = this._visitTextWithInterpolation(i.text, i.sourceSpan);
            }),
            new es(n, s, e.sourceSpan, t)
          );
        }
        visitExpansionCase(e) {
          return null;
        }
        visitComment(e) {
          return null;
        }
        extractAttributes(e, t, n) {
          const s = [],
            i = [];
          return (
            t.forEach((t) => {
              const r = n[t.name];
              if (t.isLiteral)
                i.push(
                  new qn(
                    t.name,
                    t.expression.source || "",
                    t.sourceSpan,
                    void 0,
                    r
                  )
                );
              else {
                const n = this.bindingParser.createBoundElementProperty(
                  e,
                  t,
                  !0,
                  !1
                );
                s.push(Wn.fromBoundElementProperty(n, r));
              }
            }),
            { bound: s, literal: i }
          );
        }
        parseAttribute(e, t, n, s, i, r, o) {
          const a = Hc(t.name),
            l = t.value,
            c = t.sourceSpan,
            u = t.valueSpan ? t.valueSpan.start.offset : c.start.offset;
          function d(e, n, s) {
            const i = t.name.length - a.length,
              r = e.start.moveBy(n.length + i),
              o = r.moveBy(s.length);
            return new xr(r, o, r, s);
          }
          const h = a.match(Lc);
          let p = !1;
          if (h) {
            if (((p = !0), null != h[1])) {
              const e = h[7],
                i = d(c, h[1], e);
              this.bindingParser.parsePropertyBinding(
                e,
                l,
                !1,
                c,
                u,
                t.valueSpan,
                n,
                s,
                i
              );
            } else if (h[2])
              if (e) {
                const e = h[7],
                  n = d(c, h[2], e);
                this.parseVariable(e, l, c, n, t.valueSpan, r);
              } else
                this.reportError(
                  '"let-" is only supported on ng-template elements.',
                  c
                );
            else if (h[3]) {
              const e = h[7];
              this.parseReference(e, l, c, t.valueSpan, o);
            } else if (h[4]) {
              const e = [],
                s = h[7];
              this.bindingParser.parseEvent(s, l, c, t.valueSpan || c, n, e),
                Gc(e, i);
            } else if (h[5]) {
              const e = h[7],
                r = d(c, h[5], e);
              this.bindingParser.parsePropertyBinding(
                e,
                l,
                !1,
                c,
                u,
                t.valueSpan,
                n,
                s,
                r
              ),
                this.parseAssignmentEvent(e, l, c, t.valueSpan, n, i);
            } else if (h[6]) {
              const e = d(c, "", a);
              this.bindingParser.parseLiteralAttr(
                a,
                l,
                c,
                u,
                t.valueSpan,
                n,
                s,
                e
              );
            } else if (h[8]) {
              const e = d(c, "[(", h[8]);
              this.bindingParser.parsePropertyBinding(
                h[8],
                l,
                !1,
                c,
                u,
                t.valueSpan,
                n,
                s,
                e
              ),
                this.parseAssignmentEvent(h[8], l, c, t.valueSpan, n, i);
            } else if (h[9]) {
              const e = d(c, "[", h[9]);
              this.bindingParser.parsePropertyBinding(
                h[9],
                l,
                !1,
                c,
                u,
                t.valueSpan,
                n,
                s,
                e
              );
            } else if (h[10]) {
              const e = [];
              this.bindingParser.parseEvent(
                h[10],
                l,
                c,
                t.valueSpan || c,
                n,
                e
              ),
                Gc(e, i);
            }
          } else {
            const e = d(c, "", a);
            p = this.bindingParser.parsePropertyInterpolation(
              a,
              l,
              c,
              t.valueSpan,
              n,
              s,
              e
            );
          }
          return p;
        }
        _visitTextWithInterpolation(e, t, n) {
          const s = Ka(e),
            i = this.bindingParser.parseInterpolation(s, t);
          return i ? new $n(i, t, n) : new Un(s, t);
        }
        parseVariable(e, t, n, s, i, r) {
          e.indexOf("-") > -1
            ? this.reportError('"-" is not allowed in variable names', n)
            : 0 === e.length &&
              this.reportError("Variable does not have a name", n),
            r.push(new Xn(e, t, n, s, i));
        }
        parseReference(e, t, n, s, i) {
          e.indexOf("-") > -1
            ? this.reportError('"-" is not allowed in reference names', n)
            : 0 === e.length &&
              this.reportError("Reference does not have a name", n),
            i.push(new Zn(e, t, n, s));
        }
        parseAssignmentEvent(e, t, n, s, i, r) {
          const o = [];
          this.bindingParser.parseEvent(
            e + "Change",
            t + "=$event",
            n,
            s || n,
            i,
            o
          ),
            Gc(o, r);
        }
        reportError(e, t, n = _r.ERROR) {
          this.errors.push(new Er(t, e, n));
        }
      }
      const zc = new (class {
        visitElement(e) {
          const t = Vl(e);
          if (
            t.type === Bl.SCRIPT ||
            t.type === Bl.STYLE ||
            t.type === Bl.STYLESHEET
          )
            return null;
          const n = ba(this, e.children, null);
          return new Qn(
            e.name,
            ba(this, e.attrs),
            [],
            [],
            n,
            [],
            e.sourceSpan,
            e.startSourceSpan,
            e.endSourceSpan
          );
        }
        visitComment(e) {
          return null;
        }
        visitAttribute(e) {
          return new qn(e.name, e.value, e.sourceSpan, void 0, e.i18n);
        }
        visitText(e) {
          return new Un(e.value, e.sourceSpan);
        }
        visitExpansion(e) {
          return null;
        }
        visitExpansionCase(e) {
          return null;
        }
      })();
      function Hc(e) {
        return /^data-/i.test(e) ? e.substring(5) : e;
      }
      function Gc(e, t) {
        t.push(...e.map((e) => Yn.fromParsedEvent(e)));
      }
      var Uc;
      !(function (e) {
        (e[(e.ELEMENT = 0)] = "ELEMENT"), (e[(e.TEMPLATE = 1)] = "TEMPLATE");
      })(Uc || (Uc = {}));
      class $c {
        constructor(e, t, n = 0, s = null, i, r) {
          (this.index = e),
            (this.ref = t),
            (this.level = n),
            (this.templateIndex = s),
            (this.meta = i),
            (this.registry = r),
            (this.bindings = new Set()),
            (this.placeholders = new Map()),
            (this.isEmitted = !1),
            (this._unresolvedCtxCount = 0),
            (this._registry = r || { getUniqueId: si(), icus: new Map() }),
            (this.id = this._registry.getUniqueId());
        }
        appendTag(e, t, n, s) {
          if (t.isVoid && s) return;
          const i = t.isVoid || !s ? t.startName : t.closeName,
            r = {
              type: e,
              index: n,
              ctx: this.id,
              isVoid: t.isVoid,
              closed: s,
            };
          ri(this.placeholders, i, r);
        }
        get icus() {
          return this._registry.icus;
        }
        get isRoot() {
          return 0 === this.level;
        }
        get isResolved() {
          return 0 === this._unresolvedCtxCount;
        }
        getSerializedPlaceholders() {
          const e = new Map();
          return this.placeholders.forEach((t, n) => e.set(n, t.map(Qc))), e;
        }
        appendBinding(e) {
          this.bindings.add(e);
        }
        appendIcu(e, t) {
          ri(this._registry.icus, e, t);
        }
        appendBoundText(e) {
          oi(e, this.bindings.size, this.id).forEach((e, t) =>
            ri(this.placeholders, t, ...e)
          );
        }
        appendTemplate(e, t) {
          this.appendTag(Uc.TEMPLATE, e, t, !1),
            this.appendTag(Uc.TEMPLATE, e, t, !0),
            this._unresolvedCtxCount++;
        }
        appendElement(e, t, n) {
          this.appendTag(Uc.ELEMENT, e, t, n);
        }
        appendProjection(e, t) {
          this.appendTag(Uc.ELEMENT, e, t, !1),
            this.appendTag(Uc.ELEMENT, e, t, !0);
        }
        forkChildContext(e, t, n) {
          return new $c(e, this.ref, this.level + 1, t, n, this._registry);
        }
        reconcileChildContext(e) {
          ["start", "close"].forEach((t) => {
            const n = e.meta[t + "Name"],
              s = (this.placeholders.get(n) || []).find(
                Yc(this.id, e.templateIndex)
              );
            s && (s.ctx = e.id);
          });
          e.placeholders.forEach((t, n) => {
            const s = this.placeholders.get(n);
            if (!s) return void this.placeholders.set(n, t);
            const i = s.findIndex(Yc(e.id, e.templateIndex));
            if (i >= 0) {
              const e = n.startsWith("CLOSE");
              if (n.endsWith("NG-TEMPLATE")) s.splice(i + (e ? 0 : 1), 0, ...t);
              else {
                (t[e ? t.length - 1 : 0].tmpl = s[i]), s.splice(i, 1, ...t);
              }
            } else s.push(...t);
            this.placeholders.set(n, s);
          }),
            this._unresolvedCtxCount--;
        }
      }
      function qc(e, t, n, s) {
        return ni(`${s ? "/" : ""}${e}${t}`, n);
      }
      function Wc(e, { index: t, ctx: n, isVoid: s }, i) {
        return s ? qc(e, t, n) + qc(e, t, n, !0) : qc(e, t, n, i);
      }
      function Yc(e, t) {
        return (n) =>
          "object" == typeof n &&
          n.type === Uc.TEMPLATE &&
          n.index === t &&
          n.ctx === e;
      }
      function Qc(e) {
        const t = (e, t) => Wc("#", e, t),
          n = (e, t) => Wc("*", e, t);
        switch (e.type) {
          case Uc.ELEMENT:
            return e.closed
              ? t(e, !0) + (e.tmpl ? n(e.tmpl, !0) : "")
              : e.tmpl
              ? n(e.tmpl) + t(e) + (e.isVoid ? n(e.tmpl, !0) : "")
              : t(e);
          case Uc.TEMPLATE:
            return n(e, e.closed);
          default:
            return e;
        }
      }
      const Kc = new (class {
        visitText(e) {
          return e.value;
        }
        visitContainer(e) {
          return e.children.map((e) => e.visit(this)).join("");
        }
        visitIcu(e) {
          const t = Object.keys(e.cases).map(
            (t) => `${t} {${e.cases[t].visit(this)}}`
          );
          return `{${e.expressionPlaceholder}, ${e.type}, ${t.join(" ")}}`;
        }
        visitTagPlaceholder(e) {
          return e.isVoid
            ? this.formatPh(e.startName)
            : `${this.formatPh(e.startName)}${e.children
                .map((e) => e.visit(this))
                .join("")}${this.formatPh(e.closeName)}`;
        }
        visitPlaceholder(e) {
          return this.formatPh(e.name);
        }
        visitIcuPlaceholder(e, t) {
          return this.formatPh(e.name);
        }
        formatPh(e) {
          return `{${li(e, !1)}}`;
        }
      })();
      function Jc(e) {
        return e.visit(Kc);
      }
      const Xc = {
        A: "LINK",
        B: "BOLD_TEXT",
        BR: "LINE_BREAK",
        EM: "EMPHASISED_TEXT",
        H1: "HEADING_LEVEL1",
        H2: "HEADING_LEVEL2",
        H3: "HEADING_LEVEL3",
        H4: "HEADING_LEVEL4",
        H5: "HEADING_LEVEL5",
        H6: "HEADING_LEVEL6",
        HR: "HORIZONTAL_RULE",
        I: "ITALIC_TEXT",
        LI: "LIST_ITEM",
        LINK: "MEDIA_LINK",
        OL: "ORDERED_LIST",
        P: "PARAGRAPH",
        Q: "QUOTATION",
        S: "STRIKETHROUGH_TEXT",
        SMALL: "SMALL_TEXT",
        SUB: "SUBSTRIPT",
        SUP: "SUPERSCRIPT",
        TBODY: "TABLE_BODY",
        TD: "TABLE_CELL",
        TFOOT: "TABLE_FOOTER",
        TH: "TABLE_HEADER_CELL",
        THEAD: "TABLE_HEADER",
        TR: "TABLE_ROW",
        TT: "MONOSPACED_TEXT",
        U: "UNDERLINED_TEXT",
        UL: "UNORDERED_LIST",
      };
      class Zc {
        constructor() {
          (this._placeHolderNameCounts = {}), (this._signatureToName = {});
        }
        getStartTagPlaceholderName(e, t, n) {
          const s = this._hashTag(e, t, n);
          if (this._signatureToName[s]) return this._signatureToName[s];
          const i = e.toUpperCase(),
            r = Xc[i] || "TAG_" + i,
            o = this._generateUniqueName(n ? r : "START_" + r);
          return (this._signatureToName[s] = o), o;
        }
        getCloseTagPlaceholderName(e) {
          const t = this._hashClosingTag(e);
          if (this._signatureToName[t]) return this._signatureToName[t];
          const n = e.toUpperCase(),
            s = Xc[n] || "TAG_" + n,
            i = this._generateUniqueName("CLOSE_" + s);
          return (this._signatureToName[t] = i), i;
        }
        getPlaceholderName(e, t) {
          const n = e.toUpperCase(),
            s = `PH: ${n}=${t}`;
          if (this._signatureToName[s]) return this._signatureToName[s];
          const i = this._generateUniqueName(n);
          return (this._signatureToName[s] = i), i;
        }
        getUniquePlaceholder(e) {
          return this._generateUniqueName(e.toUpperCase());
        }
        _hashTag(e, t, n) {
          return (
            "<" +
            e +
            Object.keys(t)
              .sort()
              .map((e) => ` ${e}=${t[e]}`)
              .join("") +
            (n ? "/>" : `></${e}>`)
          );
        }
        _hashClosingTag(e) {
          return this._hashTag("/" + e, {}, !1);
        }
        _generateUniqueName(e) {
          if (!this._placeHolderNameCounts.hasOwnProperty(e))
            return (this._placeHolderNameCounts[e] = 1), e;
          const t = this._placeHolderNameCounts[e];
          return (this._placeHolderNameCounts[e] = t + 1), `${e}_${t}`;
        }
      }
      const eu = new Ec(new dc());
      function tu(e) {
        const t = new su(eu, e);
        return (e, n, s, i, r) => t.toI18nMessage(e, n, s, i, r);
      }
      function nu(e, t) {
        return t;
      }
      class su {
        constructor(e, t) {
          (this._expressionParser = e), (this._interpolationConfig = t);
        }
        toI18nMessage(e, t = "", n = "", s = "", i) {
          const r = {
              isIcu: 1 == e.length && e[0] instanceof ma,
              icuDepth: 0,
              placeholderRegistry: new Zc(),
              placeholderToContent: {},
              placeholderToMessage: {},
              visitNodeFn: i || nu,
            },
            o = ba(this, e, r);
          return new ns(
            o,
            r.placeholderToContent,
            r.placeholderToMessage,
            t,
            n,
            s
          );
        }
        visitElement(e, t) {
          var n;
          const s = ba(this, e.children, t),
            i = {};
          e.attrs.forEach((e) => {
            i[e.name] = e.value;
          });
          const r = f(e.name).isVoid,
            o = t.placeholderRegistry.getStartTagPlaceholderName(e.name, i, r);
          t.placeholderToContent[o] = {
            text: e.startSourceSpan.toString(),
            sourceSpan: e.startSourceSpan,
          };
          let a = "";
          r ||
            ((a = t.placeholderRegistry.getCloseTagPlaceholderName(e.name)),
            (t.placeholderToContent[a] = {
              text: `</${e.name}>`,
              sourceSpan:
                null !== (n = e.endSourceSpan) && void 0 !== n
                  ? n
                  : e.sourceSpan,
            }));
          const l = new os(
            e.name,
            i,
            o,
            a,
            s,
            r,
            e.sourceSpan,
            e.startSourceSpan,
            e.endSourceSpan
          );
          return t.visitNodeFn(e, l);
        }
        visitAttribute(e, t) {
          const n = this._visitTextWithInterpolation(e.value, e.sourceSpan, t);
          return t.visitNodeFn(e, n);
        }
        visitText(e, t) {
          const n = this._visitTextWithInterpolation(e.value, e.sourceSpan, t);
          return t.visitNodeFn(e, n);
        }
        visitComment(e, t) {
          return null;
        }
        visitExpansion(e, t) {
          t.icuDepth++;
          const n = {},
            s = new rs(e.switchValue, e.type, n, e.sourceSpan);
          if (
            (e.cases.forEach((e) => {
              n[e.value] = new is(
                e.expression.map((e) => e.visit(this, t)),
                e.expSourceSpan
              );
            }),
            t.icuDepth--,
            t.isIcu || t.icuDepth > 0)
          ) {
            const n = t.placeholderRegistry.getUniquePlaceholder(
              "VAR_" + e.type
            );
            return (
              (s.expressionPlaceholder = n),
              (t.placeholderToContent[n] = {
                text: e.switchValue,
                sourceSpan: e.switchValueSourceSpan,
              }),
              t.visitNodeFn(e, s)
            );
          }
          const i = t.placeholderRegistry.getPlaceholderName(
            "ICU",
            e.sourceSpan.toString()
          );
          t.placeholderToMessage[i] = this.toI18nMessage(
            [e],
            "",
            "",
            "",
            void 0
          );
          const r = new ls(s, i, e.sourceSpan);
          return t.visitNodeFn(e, r);
        }
        visitExpansionCase(e, t) {
          throw new Error("Unreachable code");
        }
        _visitTextWithInterpolation(e, t, n) {
          const s = this._expressionParser.splitInterpolation(
            e,
            t.start.toString(),
            this._interpolationConfig
          );
          if (!s) return new ss(e, t);
          const i = [],
            r = new is(i, t),
            { start: o, end: a } = this._interpolationConfig;
          for (let c = 0; c < s.strings.length - 1; c++) {
            const e = s.expressions[c],
              r = e.split(ru)[2] || "INTERPOLATION",
              l = n.placeholderRegistry.getPlaceholderName(r, e);
            if (s.strings[c].length) {
              const e = iu(t, s.stringSpans[c]);
              i.push(new ss(s.strings[c], e));
            }
            const u = iu(t, s.expressionsSpans[c]);
            i.push(new as(e, l, u)),
              (n.placeholderToContent[l] = { text: o + e + a, sourceSpan: u });
          }
          const l = s.strings.length - 1;
          if (s.strings[l].length) {
            const e = iu(t, s.stringSpans[l]);
            i.push(new ss(s.strings[l], e));
          }
          return r;
        }
      }
      function iu(e, { start: t, end: n }) {
        return new xr(e.fullStart.moveBy(t), e.fullStart.moveBy(n));
      }
      const ru =
        /\/\/[\s\S]*i18n[\s\S]*\([\s\S]*ph[\s\S]*=[\s\S]*("|')([\s\S]*?)\1[\s\S]*\)/g;
      const ou = (e, t) => (
        e instanceof ha &&
          (t instanceof ls &&
            e.i18n instanceof ns &&
            (t.previousMessage = e.i18n),
          (e.i18n = t)),
        t
      );
      class au {
        constructor(e = Fi, t = !1, n = !1) {
          (this.interpolationConfig = e),
            (this.keepI18nAttrs = t),
            (this.enableI18nLegacyMessageIdFormat = n),
            (this.hasI18nMeta = !1),
            (this._createI18nMessage = tu(this.interpolationConfig));
        }
        _generateI18nMessage(e, t = "", n) {
          const {
              meaning: s,
              description: i,
              customId: r,
            } = this._parseMetadata(t),
            o = this._createI18nMessage(e, s, i, r, n);
          return this._setMessageId(o, t), this._setLegacyIds(o, t), o;
        }
        visitElement(e) {
          if (
            (function (e) {
              return e.attrs.some((e) => Js(e.name));
            })(e)
          ) {
            this.hasI18nMeta = !0;
            const t = [],
              n = {};
            for (const s of e.attrs)
              if (s.name === Qs) {
                const t = e.i18n || s.value,
                  n = this._generateI18nMessage(e.children, t, ou);
                n.nodes.length && (e.i18n = n);
              } else if (s.name.startsWith(Ks)) {
                n[s.name.slice(Ks.length)] = s.value;
              } else t.push(s);
            if (Object.keys(n).length)
              for (const e of t) {
                const t = n[e.name];
                void 0 !== t &&
                  e.value &&
                  (e.i18n = this._generateI18nMessage([e], e.i18n || t));
              }
            this.keepI18nAttrs || (e.attrs = t);
          }
          return ba(this, e.children, e.i18n), e;
        }
        visitExpansion(e, t) {
          let n;
          const s = e.i18n;
          if (((this.hasI18nMeta = !0), s instanceof ls)) {
            const t = s.name;
            n = this._generateI18nMessage([e], s);
            ti(n).name = t;
          } else n = this._generateI18nMessage([e], t || s);
          return (e.i18n = n), e;
        }
        visitText(e) {
          return e;
        }
        visitAttribute(e) {
          return e;
        }
        visitComment(e) {
          return e;
        }
        visitExpansionCase(e) {
          return e;
        }
        _parseMetadata(e) {
          return "string" == typeof e
            ? (function (e = "") {
                let t, n, s;
                if ((e = e.trim())) {
                  const i = e.indexOf("@@"),
                    r = e.indexOf("|");
                  let o;
                  ([o, t] = i > -1 ? [e.slice(0, i), e.slice(i + 2)] : [e, ""]),
                    ([n, s] =
                      r > -1 ? [o.slice(0, r), o.slice(r + 1)] : ["", o]);
                }
                return { customId: t, meaning: n, description: s };
              })(e)
            : e instanceof ns
            ? e
            : {};
        }
        _setMessageId(e, t) {
          e.id || (e.id = (t instanceof ns && t.id) || ps(e));
        }
        _setLegacyIds(e, t) {
          if (this.enableI18nLegacyMessageIdFormat)
            e.legacyIds = [hs(e), ms(e)];
          else if ("string" != typeof t) {
            const n =
              t instanceof ns
                ? t
                : t instanceof ls
                ? t.previousMessage
                : void 0;
            e.legacyIds = n ? n.legacyIds : [];
          }
        }
      }
      function lu(e) {
        const t = [];
        return (
          e.description && t.push({ tagName: "desc", text: e.description }),
          e.meaning && t.push({ tagName: "meaning", text: e.meaning }),
          0 == t.length
            ? null
            : (function (e = []) {
                return new et(e);
              })(t)
        );
      }
      function cu(e, t, n, s) {
        const i = [
          It(
            (function (e) {
              return e.nodes.map((e) => e.visit(uu, null)).join("");
            })(t)
          ),
        ];
        Object.keys(s).length && i.push(Or(s, !0));
        const r = n.set(bt("goog.getMsg").callFn(i)).toConstDecl(),
          o = lu(t);
        null !== o && r.addLeadingComment(o);
        return [r, new it(e.set(n))];
      }
      const uu = new (class {
        formatPh(e) {
          return `{$${li(e)}}`;
        }
        visitText(e) {
          return e.value;
        }
        visitContainer(e) {
          return e.children.map((e) => e.visit(this)).join("");
        }
        visitIcu(e) {
          return Jc(e);
        }
        visitTagPlaceholder(e) {
          return e.isVoid
            ? this.formatPh(e.startName)
            : `${this.formatPh(e.startName)}${e.children
                .map((e) => e.visit(this))
                .join("")}${this.formatPh(e.closeName)}`;
        }
        visitPlaceholder(e) {
          return this.formatPh(e.name);
        }
        visitIcuPlaceholder(e, t) {
          return this.formatPh(e.name);
        }
      })();
      function du(e, t, n) {
        const { messageParts: s, placeHolders: i } = (function (e) {
            const t = [];
            return (
              e.nodes.forEach((e) => e.visit(hu, t)),
              (function (e) {
                const t = [],
                  n = [];
                e[0] instanceof Te && t.push(pu(e[0].sourceSpan.start));
                for (let s = 0; s < e.length; s++) {
                  const i = e[s];
                  i instanceof Ie
                    ? t.push(i)
                    : (n.push(i),
                      e[s - 1] instanceof Te &&
                        t.push(pu(e[s - 1].sourceSpan.end)));
                }
                e[e.length - 1] instanceof Te &&
                  t.push(pu(e[e.length - 1].sourceSpan.end));
                return { messageParts: t, placeHolders: n };
              })(t)
            );
          })(t),
          r = (function (e) {
            const t = e.nodes[0],
              n = e.nodes[e.nodes.length - 1];
            return new xr(
              t.sourceSpan.start,
              n.sourceSpan.end,
              t.sourceSpan.fullStart,
              t.sourceSpan.details
            );
          })(t),
          o = i.map((e) => n[e.text]),
          a = (function (e, t, n, s, i) {
            return new Ae(e, t, n, s, i);
          })(t, s, i, o, r),
          l = e.set(a);
        return [new it(l)];
      }
      const hu = new (class {
        visitText(e, t) {
          t[t.length - 1] instanceof Ie
            ? (t[t.length - 1].text += e.value)
            : t.push(new Ie(e.value, e.sourceSpan));
        }
        visitContainer(e, t) {
          e.children.forEach((e) => e.visit(this, t));
        }
        visitIcu(e, t) {
          t.push(new Ie(Jc(e), e.sourceSpan));
        }
        visitTagPlaceholder(e, t) {
          var n, s;
          t.push(
            this.createPlaceholderPiece(
              e.startName,
              null !== (n = e.startSourceSpan) && void 0 !== n
                ? n
                : e.sourceSpan
            )
          ),
            e.isVoid ||
              (e.children.forEach((e) => e.visit(this, t)),
              t.push(
                this.createPlaceholderPiece(
                  e.closeName,
                  null !== (s = e.endSourceSpan) && void 0 !== s
                    ? s
                    : e.sourceSpan
                )
              ));
        }
        visitPlaceholder(e, t) {
          t.push(this.createPlaceholderPiece(e.name, e.sourceSpan));
        }
        visitIcuPlaceholder(e, t) {
          t.push(this.createPlaceholderPiece(e.name, e.sourceSpan));
        }
        createPlaceholderPiece(e, t) {
          return new Te(li(e, !1), t);
        }
      })();
      function pu(e) {
        return new Ie("", new xr(e, e));
      }
      const mu = new Set(["$event"]),
        fu = new Map([
          ["window", Vn.resolveWindow],
          ["document", Vn.resolveDocument],
          ["body", Vn.resolveBody],
        ]),
        gu = [" ", "\n", "\r", "\t"];
      function yu(e, t) {
        return Ot(bt(mi).bitwiseAnd(It(e), null, !1), t);
      }
      function vu(e, t = null, n = null) {
        const { type: s, name: i, target: r, phase: o, handler: a } = e;
        if (r && !fu.has(r))
          throw new Error(
            `Unexpected global target '${r}' defined for '${i}' event.\n        Supported list of global targets: ${Array.from(
              fu.keys()
            )}.`
          );
        const l = "$event",
          c = new Set(),
          u =
            null === n || 0 === n.bindingLevel
              ? bt(pi)
              : n.getOrCreateSharedContextVar(0),
          d = yo(
            n,
            u,
            a,
            "b",
            () => zt("Unexpected interpolation"),
            e.handlerSpan,
            c,
            mu
          ),
          h = [];
        n &&
          (h.push(...n.restoreViewStatement()),
          h.push(...n.variableDeclarations())),
          h.push(...d.render3Stmts);
        const p =
            1 === s
              ? (function (e, t) {
                  return `@${e}.${t}`;
                })(i, o)
              : i,
          m = t && yn(t),
          f = [];
        c.has(l) && f.push(new Be(l, ie));
        const g = kt(f, h, re, null, m),
          y = [It(p), g];
        return r && y.push(It(!1), xt(fu.get(r))), y;
      }
      class bu {
        constructor(
          e,
          t,
          n = 0,
          s,
          i,
          r,
          o,
          a,
          l,
          c,
          u,
          d,
          h,
          p,
          m = { prepareStatements: [], constExpressions: [] }
        ) {
          (this.constantPool = e),
            (this.level = n),
            (this.contextName = s),
            (this.i18nContext = i),
            (this.templateIndex = r),
            (this.templateName = o),
            (this.directiveMatcher = a),
            (this.directives = l),
            (this.pipeTypeByName = c),
            (this.pipes = u),
            (this._namespace = d),
            (this.i18nUseExternalIds = p),
            (this._constants = m),
            (this._dataIndex = 0),
            (this._bindingContext = 0),
            (this._prefixCode = []),
            (this._creationCodeFns = []),
            (this._updateCodeFns = []),
            (this._currentIndex = 0),
            (this._tempVariables = []),
            (this._nestedTemplateFns = []),
            (this._unsupported = gi),
            (this.i18n = null),
            (this._pureFunctionSlots = 0),
            (this._bindingSlots = 0),
            (this._ngContentReservedSlots = []),
            (this._ngContentSelectorsOffset = 0),
            (this._implicitReceiverExpr = null),
            (this.visitReference = yi),
            (this.visitVariable = yi),
            (this.visitTextAttribute = yi),
            (this.visitBoundAttribute = yi),
            (this.visitBoundEvent = yi),
            (this._bindingScope = t.nestedScope(n)),
            (this.fileBasedI18nSuffix = h.replace(/[^A-Za-z0-9]/g, "_") + "_"),
            (this._valueConverter = new xu(
              e,
              () => this.allocateDataSlot(),
              (e) => this.allocatePureFunctionSlots(e),
              (e, t, n, s) => {
                const i = c.get(e);
                i && this.pipes.add(i),
                  this._bindingScope.set(this.level, t, s),
                  this.creationInstruction(null, Vn.pipe, [It(n), It(e)]);
              }
            ));
        }
        buildTemplateFunction(e, t, n = 0, s) {
          (this._ngContentSelectorsOffset = n),
            this._namespace !== Vn.namespaceHTML &&
              this.creationInstruction(null, this._namespace),
            t.forEach((e) => this.registerContextVariables(e));
          const i =
            this.i18nContext ||
            (Xs(s) &&
              !Zs(s) &&
              !(1 === (r = e).length && r[0] instanceof Qn && e[0].i18n === s));
          var r;
          const o = Nu(e);
          if (
            (i && this.i18nStart(null, s, o),
            ts(this, e),
            (this._pureFunctionSlots += this._bindingSlots),
            this._valueConverter.updatePipeSlotOffsets(this._bindingSlots),
            this._nestedTemplateFns.forEach((e) => e()),
            0 === this.level && this._ngContentReservedSlots.length)
          ) {
            const e = [];
            if (
              this._ngContentReservedSlots.length > 1 ||
              "*" !== this._ngContentReservedSlots[0]
            ) {
              const t = this._ngContentReservedSlots.map((e) =>
                "*" !== e ? K(e) : e
              );
              e.push(this.constantPool.getConstLiteral(vi(t), !0));
            }
            this.creationInstruction(null, Vn.projectionDef, e, !0);
          }
          i && this.i18nEnd(null, o);
          const a = this._creationCodeFns.map((e) => e()),
            l = this._updateCodeFns.map((e) => e()),
            c = this._bindingScope.viewSnapshotStatements(),
            u = this._bindingScope
              .variableDeclarations()
              .concat(this._tempVariables),
            d = a.length > 0 ? [yu(1, c.concat(a))] : [],
            h = l.length > 0 ? [yu(2, u.concat(l))] : [];
          return kt(
            [new Be(mi, ae), new Be(pi, null)],
            [...this._prefixCode, ...d, ...h],
            re,
            null,
            this.templateName
          );
        }
        getLocal(e) {
          return this._bindingScope.get(e);
        }
        notifyImplicitReceiverUse() {
          this._bindingScope.notifyImplicitReceiverUse();
        }
        i18nTranslate(e, t = {}, n, s) {
          const i = n || this.i18nGenerateMainBlockVar(),
            r = (function (e, t, n, s = {}, i) {
              const r = [
                ui(t),
                Ot(Lu(), cu(t, e, n, ai(s, !0)), du(t, e, ai(s, !1))),
              ];
              i && r.push(new it(t.set(i(t))));
              return r;
            })(e, i, this.i18nGenerateClosureVar(e.id), t, s);
          return this._constants.prepareStatements.push(...r), i;
        }
        registerContextVariables(e) {
          const t = this._bindingScope.freshReferenceName(),
            n = this.level,
            s = bt(e.name + t);
          this._bindingScope.set(n, e.name, s, 1, (t, i) => {
            let r;
            if (t.bindingLevel === n) r = bt(pi);
            else {
              const e = t.getSharedContextName(n);
              r = e || Su(i);
            }
            return [s.set(r.prop(e.value || "$implicit")).toConstDecl()];
          });
        }
        i18nAppendBindings(e) {
          e.length > 0 && e.forEach((e) => this.i18n.appendBinding(e));
        }
        i18nBindProps(e) {
          const t = {};
          return (
            Object.keys(e).forEach((n) => {
              const s = e[n];
              if (s instanceof Un) t[n] = It(s.value);
              else {
                const e = s.value.visit(this._valueConverter);
                if ((this.allocateBindingSlots(e), e instanceof Jr)) {
                  const { strings: s, expressions: i } = e,
                    { id: r, bindings: o } = this.i18n,
                    a = (function (e, t = 0, n = 0) {
                      if (!e.length) return "";
                      let s = "";
                      const i = e.length - 1;
                      for (let r = 0; r < i; r++) s += `${e[r]}${ni(t + r, n)}`;
                      return (s += e[i]), s;
                    })(s, o.size, r);
                  this.i18nAppendBindings(i), (t[n] = It(a));
                }
              }
            }),
            t
          );
        }
        i18nGenerateMainBlockVar() {
          return bt(this.constantPool.uniqueName("i18n_"));
        }
        i18nGenerateClosureVar(e) {
          let t;
          const n = this.fileBasedI18nSuffix.toUpperCase();
          if (this.i18nUseExternalIds) {
            const s = ci("EXTERNAL_"),
              i = this.constantPool.uniqueName(n);
            t = `${s}${yn(e)}$$${i}`;
          } else {
            const e = ci(n);
            t = this.constantPool.uniqueName(e);
          }
          return bt(t);
        }
        i18nUpdateRef(e) {
          const {
            icus: t,
            meta: n,
            isRoot: s,
            isResolved: i,
            isEmitted: r,
          } = e;
          if (s && i && !r && !Zs(n)) {
            e.isEmitted = !0;
            const s = e.getSerializedPlaceholders();
            let i = {},
              r = s.size ? ii(s) : {};
            t.size &&
              t.forEach((e, t) => {
                if (1 === e.length) r[t] = e[0];
                else {
                  const n = ni("I18N_EXP_" + t);
                  (r[t] = It(n)), (i[t] = St(e));
                }
              });
            let o;
            (Array.from(s.values()).some((e) => e.length > 1) ||
              Object.keys(i).length) &&
              (o = (e) => {
                const t = [e];
                return (
                  Object.keys(i).length && t.push(Or(i, !0)),
                  Cu(null, Vn.i18nPostprocess, t)
                );
              }),
              this.i18nTranslate(n, r, e.ref, o);
          }
        }
        i18nStart(e = null, t, n) {
          const s = this.allocateDataSlot();
          this.i18n = this.i18nContext
            ? this.i18nContext.forkChildContext(s, this.templateIndex, t)
            : new $c(
                s,
                this.i18nGenerateMainBlockVar(),
                0,
                this.templateIndex,
                t
              );
          const { id: i, ref: r } = this.i18n,
            o = [It(s), this.addToConsts(r)];
          i > 0 && o.push(It(i)),
            this.creationInstruction(e, n ? Vn.i18n : Vn.i18nStart, o);
        }
        i18nEnd(e = null, t) {
          if (!this.i18n)
            throw new Error("i18nEnd is executed with no i18n context present");
          this.i18nContext
            ? (this.i18nContext.reconcileChildContext(this.i18n),
              this.i18nUpdateRef(this.i18nContext))
            : this.i18nUpdateRef(this.i18n);
          const { index: n, bindings: s } = this.i18n;
          if (s.size) {
            const t = [];
            s.forEach((n) => {
              t.push({
                sourceSpan: e,
                value: () => this.convertPropertyBinding(n),
              });
            }),
              this.updateInstructionChainWithAdvance(
                this.getConstCount() - 1,
                Vn.i18nExp,
                t
              ),
              this.updateInstruction(e, Vn.i18nApply, [It(n)]);
          }
          t || this.creationInstruction(e, Vn.i18nEnd), (this.i18n = null);
        }
        i18nAttributesInstruction(e, t, n) {
          let s = !1;
          const i = [],
            r = [];
          if (
            (t.forEach((e) => {
              const t = e.i18n,
                o = e.value.visit(this._valueConverter);
              if ((this.allocateBindingSlots(o), o instanceof Jr)) {
                const a = ii(oi(t));
                i.push(It(e.name), this.i18nTranslate(t, a)),
                  o.expressions.forEach((e) => {
                    (s = !0),
                      r.push({
                        sourceSpan: n,
                        value: () => this.convertPropertyBinding(e),
                      });
                  });
              }
            }),
            r.length > 0 &&
              this.updateInstructionChainWithAdvance(e, Vn.i18nExp, r),
            i.length > 0)
          ) {
            const e = It(this.allocateDataSlot()),
              t = this.addToConsts(St(i));
            this.creationInstruction(n, Vn.i18nAttributes, [e, t]),
              s && this.updateInstruction(n, Vn.i18nApply, [e]);
          }
        }
        getNamespaceInstruction(e) {
          switch (e) {
            case "math":
              return Vn.namespaceMathML;
            case "svg":
              return Vn.namespaceSVG;
            default:
              return Vn.namespaceHTML;
          }
        }
        addNamespaceInstruction(e, t) {
          (this._namespace = e), this.creationInstruction(t.startSourceSpan, e);
        }
        interpolatedUpdateInstruction(e, t, n, s, i, r) {
          this.updateInstructionWithAdvance(t, s.sourceSpan, e, () => [
            It(n),
            ...this.getUpdateInstructionArguments(i),
            ...r,
          ]);
        }
        visitContent(e) {
          const t = this.allocateDataSlot(),
            n =
              this._ngContentSelectorsOffset +
              this._ngContentReservedSlots.length,
            s = [It(t)];
          this._ngContentReservedSlots.push(e.selector);
          const i = e.attributes.filter(
              (e) => "select" !== e.name.toLowerCase()
            ),
            r = this.getAttributeExpressions(e.name, i, [], []);
          r.length > 0 ? s.push(It(n), St(r)) : 0 !== n && s.push(It(n)),
            this.creationInstruction(e.sourceSpan, Vn.projection, s),
            this.i18n && this.i18n.appendProjection(e.i18n, t);
        }
        visitElement(e) {
          var t, n;
          const s = this.allocateDataSlot(),
            i = new rc(null);
          let a = !1;
          const l = Xs(e.i18n) && !Zs(e.i18n),
            c = [],
            [u, d] = r(e.name),
            h = o(e.name);
          for (const r of e.attributes) {
            const { name: e, value: t } = r;
            "ngNonBindable" === e
              ? (a = !0)
              : "style" === e
              ? i.registerStyleAttr(t)
              : "class" === e
              ? i.registerClassAttr(t)
              : c.push(r);
          }
          this.matchDirectives(e.name, e);
          const p = [It(s)];
          h || p.push(It(d));
          const m = [],
            f = [];
          e.inputs.forEach((e) => {
            i.registerBoundInput(e) ||
              (0 === e.type && e.i18n ? f.push(e) : m.push(e));
          });
          const g = this.getAttributeExpressions(
            e.name,
            c,
            m,
            e.outputs,
            i,
            [],
            f
          );
          p.push(this.addAttrsToConsts(g));
          const y = this.prepareRefsArray(e.references);
          p.push(this.addToConsts(y));
          const v = this._namespace,
            b = this.getNamespaceInstruction(u);
          b !== v && this.addNamespaceInstruction(b, e),
            this.i18n && this.i18n.appendElement(e.i18n, s);
          const x = !l && this.i18n ? !Nu(e.children) : e.children.length > 0,
            _ =
              !i.hasBindingsWithPipes &&
              0 === e.outputs.length &&
              0 === f.length &&
              !x,
            w = !_ && Nu(e.children);
          if (_)
            this.creationInstruction(
              e.sourceSpan,
              h ? Vn.elementContainer : Vn.element,
              xi(p)
            );
          else {
            if (
              (this.creationInstruction(
                e.startSourceSpan,
                h ? Vn.elementContainerStart : Vn.elementStart,
                xi(p)
              ),
              a &&
                this.creationInstruction(e.startSourceSpan, Vn.disableBindings),
              f.length > 0 &&
                this.i18nAttributesInstruction(
                  s,
                  f,
                  null !== (t = e.startSourceSpan) && void 0 !== t
                    ? t
                    : e.sourceSpan
                ),
              e.outputs.length > 0)
            ) {
              const t = e.outputs.map((t) => ({
                sourceSpan: t.sourceSpan,
                params: this.prepareListenerParameter(e.name, t, s),
              }));
              this.creationInstructionChain(Vn.listener, t);
            }
            l && this.i18nStart(e.startSourceSpan, e.i18n, w);
          }
          const C = i.buildUpdateLevelInstructions(this._valueConverter),
            S = C.length - 1;
          for (let r = 0; r <= S; r++) {
            const e = C[r];
            this._bindingSlots += this.processStylingUpdateInstruction(s, e);
          }
          const E = It(void 0),
            k = [],
            O = [];
          if (
            (m.forEach((e) => {
              const t = e.type;
              if (4 === t) {
                const t = e.value.visit(this._valueConverter),
                  n = !(t instanceof Yr) || !!t.value;
                this.allocateBindingSlots(t),
                  k.push({
                    name: Hn(e.name),
                    sourceSpan: e.sourceSpan,
                    value: () => (n ? this.convertPropertyBinding(t) : E),
                  });
              } else {
                if (e.i18n) return;
                const n = e.value.visit(this._valueConverter);
                if (void 0 !== n) {
                  const i = [],
                    [o, a] = r(e.name),
                    l = 1 === t,
                    c = Pu(e.securityContext, l);
                  if ((c && i.push(c), o)) {
                    const e = It(o);
                    c ? i.push(e) : i.push(It(null), e);
                  }
                  if ((this.allocateBindingSlots(n), 0 === t))
                    n instanceof Jr
                      ? this.interpolatedUpdateInstruction(Au(n), s, a, e, n, i)
                      : k.push({
                          name: a,
                          sourceSpan: e.sourceSpan,
                          value: () => this.convertPropertyBinding(n),
                          params: i,
                        });
                  else if (1 === t)
                    if (n instanceof Jr && Ei(n) > 1)
                      this.interpolatedUpdateInstruction(
                        (function (e) {
                          switch (Ei(e)) {
                            case 3:
                              return Vn.attributeInterpolate1;
                            case 5:
                              return Vn.attributeInterpolate2;
                            case 7:
                              return Vn.attributeInterpolate3;
                            case 9:
                              return Vn.attributeInterpolate4;
                            case 11:
                              return Vn.attributeInterpolate5;
                            case 13:
                              return Vn.attributeInterpolate6;
                            case 15:
                              return Vn.attributeInterpolate7;
                            case 17:
                              return Vn.attributeInterpolate8;
                            default:
                              return Vn.attributeInterpolateV;
                          }
                        })(n),
                        s,
                        a,
                        e,
                        n,
                        i
                      );
                    else {
                      const t = n instanceof Jr ? n.expressions[0] : n;
                      O.push({
                        name: a,
                        sourceSpan: e.sourceSpan,
                        value: () => this.convertPropertyBinding(t),
                        params: i,
                      });
                    }
                  else
                    this.updateInstructionWithAdvance(
                      s,
                      e.sourceSpan,
                      Vn.classProp,
                      () => [It(s), It(a), this.convertPropertyBinding(n), ...i]
                    );
                }
              }
            }),
            k.length > 0 &&
              this.updateInstructionChainWithAdvance(s, Vn.property, k),
            O.length > 0 &&
              this.updateInstructionChainWithAdvance(s, Vn.attribute, O),
            ts(this, e.children),
            !l && this.i18n && this.i18n.appendElement(e.i18n, s, !0),
            !_)
          ) {
            const t =
              null !== (n = e.endSourceSpan) && void 0 !== n ? n : e.sourceSpan;
            l && this.i18nEnd(t, w),
              a && this.creationInstruction(t, Vn.enableBindings),
              this.creationInstruction(
                t,
                h ? Vn.elementContainerEnd : Vn.elementEnd
              );
          }
        }
        visitTemplate(e) {
          var t;
          const n = "ng-template",
            s = this.allocateDataSlot();
          this.i18n && this.i18n.appendTemplate(e.i18n, s);
          const i = yn(e.tagName || ""),
            o = `${this.contextName}${i ? "_" + i : ""}_${s}`,
            a = o + "_Template",
            l = [It(s), bt(a), It(e.tagName ? r(e.tagName)[1] : e.tagName)];
          this.matchDirectives(n, e);
          const c = this.getAttributeExpressions(
            n,
            e.attributes,
            e.inputs,
            e.outputs,
            void 0,
            e.templateAttrs
          );
          if (
            (l.push(this.addAttrsToConsts(c)),
            e.references && e.references.length)
          ) {
            const t = this.prepareRefsArray(e.references);
            l.push(this.addToConsts(t)), l.push(xt(Vn.templateRefExtractor));
          }
          const u = new bu(
            this.constantPool,
            this._bindingScope,
            this.level + 1,
            o,
            this.i18n,
            s,
            a,
            this.directiveMatcher,
            this.directives,
            this.pipeTypeByName,
            this.pipes,
            this._namespace,
            this.fileBasedI18nSuffix,
            this.i18nUseExternalIds,
            this._constants
          );
          if (
            (this._nestedTemplateFns.push(() => {
              const t = u.buildTemplateFunction(
                e.children,
                e.variables,
                this._ngContentReservedSlots.length +
                  this._ngContentSelectorsOffset,
                e.i18n
              );
              this.constantPool.statements.push(t.toDeclStmt(a)),
                u._ngContentReservedSlots.length &&
                  this._ngContentReservedSlots.push(
                    ...u._ngContentReservedSlots
                  );
            }),
            this.creationInstruction(
              e.sourceSpan,
              Vn.templateCreate,
              () => (
                l.splice(2, 0, It(u.getConstCount()), It(u.getVarCount())),
                xi(l)
              )
            ),
            this.templatePropertyBindings(s, e.templateAttrs),
            e.tagName === n)
          ) {
            const [n, i] = (function (e, t) {
              const n = [],
                s = [];
              for (const i of e) (t(i) ? n : s).push(i);
              return [n, s];
            })(e.inputs, ei);
            if (
              (n.length > 0 &&
                this.i18nAttributesInstruction(
                  s,
                  n,
                  null !== (t = e.startSourceSpan) && void 0 !== t
                    ? t
                    : e.sourceSpan
                ),
              i.length > 0 && this.templatePropertyBindings(s, i),
              e.outputs.length > 0)
            ) {
              const t = e.outputs.map((e) => ({
                sourceSpan: e.sourceSpan,
                params: this.prepareListenerParameter("ng_template", e, s),
              }));
              this.creationInstructionChain(Vn.listener, t);
            }
          }
        }
        visitBoundText(e) {
          if (this.i18n) {
            const t = e.value.visit(this._valueConverter);
            return (
              this.allocateBindingSlots(t),
              void (
                t instanceof Jr &&
                (this.i18n.appendBoundText(e.i18n),
                this.i18nAppendBindings(t.expressions))
              )
            );
          }
          const t = this.allocateDataSlot();
          this.creationInstruction(e.sourceSpan, Vn.text, [It(t)]);
          const n = e.value.visit(this._valueConverter);
          this.allocateBindingSlots(n),
            n instanceof Jr
              ? this.updateInstructionWithAdvance(
                  t,
                  e.sourceSpan,
                  (function (e) {
                    switch (Ei(e)) {
                      case 1:
                        return Vn.textInterpolate;
                      case 3:
                        return Vn.textInterpolate1;
                      case 5:
                        return Vn.textInterpolate2;
                      case 7:
                        return Vn.textInterpolate3;
                      case 9:
                        return Vn.textInterpolate4;
                      case 11:
                        return Vn.textInterpolate5;
                      case 13:
                        return Vn.textInterpolate6;
                      case 15:
                        return Vn.textInterpolate7;
                      case 17:
                        return Vn.textInterpolate8;
                      default:
                        return Vn.textInterpolateV;
                    }
                  })(n),
                  () => this.getUpdateInstructionArguments(n)
                )
              : zt(
                  "Text nodes should be interpolated and never bound directly."
                );
        }
        visitText(e) {
          this.i18n ||
            this.creationInstruction(e.sourceSpan, Vn.text, [
              It(this.allocateDataSlot()),
              It(e.value),
            ]);
        }
        visitIcu(e) {
          let t = !1;
          this.i18n || ((t = !0), this.i18nStart(null, e.i18n, !0));
          const n = this.i18n,
            s = this.i18nBindProps(e.vars),
            i = this.i18nBindProps(e.placeholders),
            r = e.i18n,
            o = (e) => {
              const t = ai(Object.assign(Object.assign({}, s), i), !1);
              return Cu(null, Vn.i18nPostprocess, [e, Or(t, !0)]);
            };
          if (Zs(n.meta)) this.i18nTranslate(r, {}, n.ref, o);
          else {
            const e = this.i18nTranslate(r, {}, void 0, o);
            n.appendIcu(ti(r).name, e);
          }
          return t && this.i18nEnd(null, !0), null;
        }
        allocateDataSlot() {
          return this._dataIndex++;
        }
        getConstCount() {
          return this._dataIndex;
        }
        getVarCount() {
          return this._pureFunctionSlots;
        }
        getConsts() {
          return this._constants;
        }
        getNgContentSelectors() {
          return this._ngContentReservedSlots.length
            ? this.constantPool.getConstLiteral(
                vi(this._ngContentReservedSlots),
                !0
              )
            : null;
        }
        bindingContext() {
          return "" + this._bindingContext++;
        }
        templatePropertyBindings(e, t) {
          const n = [];
          t.forEach((t) => {
            if (t instanceof Wn) {
              const s = t.value.visit(this._valueConverter);
              if (void 0 !== s)
                if ((this.allocateBindingSlots(s), s instanceof Jr)) {
                  const n = [];
                  this.interpolatedUpdateInstruction(Au(s), e, t.name, t, s, n);
                } else
                  n.push({
                    name: t.name,
                    sourceSpan: t.sourceSpan,
                    value: () => this.convertPropertyBinding(s),
                  });
            }
          }),
            n.length > 0 &&
              this.updateInstructionChainWithAdvance(e, Vn.property, n);
        }
        instructionFn(e, t, n, s, i = !1) {
          e[i ? "unshift" : "push"](() => {
            const e = Array.isArray(s) ? s : s();
            return Cu(t, n, e).toStmt();
          });
        }
        processStylingUpdateInstruction(e, t) {
          let n = 0;
          if (t) {
            const s = [];
            t.calls.forEach((e) => {
              (n += e.allocateBindingSlots),
                s.push({
                  sourceSpan: e.sourceSpan,
                  value: () =>
                    e.params((t) =>
                      e.supportsInterpolation && t instanceof Jr
                        ? this.getUpdateInstructionArguments(t)
                        : this.convertPropertyBinding(t)
                    ),
                });
            }),
              this.updateInstructionChainWithAdvance(e, t.reference, s);
          }
          return n;
        }
        creationInstruction(e, t, n, s) {
          this.instructionFn(this._creationCodeFns, e, t, n || [], s);
        }
        creationInstructionChain(e, t) {
          const n = t.length ? t[0].sourceSpan : null;
          this._creationCodeFns.push(() =>
            Si(
              e,
              t.map((e) => e.params()),
              n
            ).toStmt()
          );
        }
        updateInstructionWithAdvance(e, t, n, s) {
          this.addAdvanceInstructionIfNecessary(e, t),
            this.updateInstruction(t, n, s);
        }
        updateInstruction(e, t, n) {
          this.instructionFn(this._updateCodeFns, e, t, n || []);
        }
        updateInstructionChain(e, t) {
          const n = t.length ? t[0].sourceSpan : null;
          this._updateCodeFns.push(() => {
            const s = t.map((e) => {
              const t = e.value(),
                n = Array.isArray(t) ? t : [t];
              return (
                e.params && n.push(...e.params),
                e.name && n.unshift(It(e.name)),
                n
              );
            });
            return Si(e, s, n).toStmt();
          });
        }
        updateInstructionChainWithAdvance(e, t, n) {
          this.addAdvanceInstructionIfNecessary(
            e,
            n.length ? n[0].sourceSpan : null
          ),
            this.updateInstructionChain(t, n);
        }
        addAdvanceInstructionIfNecessary(e, t) {
          if (e !== this._currentIndex) {
            const n = e - this._currentIndex;
            if (n < 1)
              throw new Error("advance instruction can only go forwards");
            this.instructionFn(this._updateCodeFns, t, Vn.advance, [It(n)]),
              (this._currentIndex = e);
          }
        }
        allocatePureFunctionSlots(e) {
          const t = this._pureFunctionSlots;
          return (this._pureFunctionSlots += e), t;
        }
        allocateBindingSlots(e) {
          this._bindingSlots += e instanceof Jr ? e.expressions.length : 1;
        }
        getImplicitReceiverExpr() {
          return this._implicitReceiverExpr
            ? this._implicitReceiverExpr
            : (this._implicitReceiverExpr =
                0 === this.level
                  ? bt(pi)
                  : this._bindingScope.getOrCreateSharedContextVar(0));
        }
        convertPropertyBinding(e) {
          const t = xo(
              this,
              this.getImplicitReceiverExpr(),
              e,
              this.bindingContext(),
              Cr.Expression,
              () => zt("Unexpected interpolation")
            ),
            n = t.currValExpr;
          return this._tempVariables.push(...t.stmts), n;
        }
        getUpdateInstructionArguments(e) {
          const { args: t, stmts: n } = (function (e, t, n, s) {
            const i = new Oo(e, t, s, void 0),
              r = n.visit(i, Sr.Expression);
            i.usesImplicitReceiver && e.notifyImplicitReceiverUse();
            const o = _o(i, s);
            let a = r.args.slice(1);
            if (n instanceof Jr) {
              const e = n.strings;
              3 === a.length && "" === e[0] && "" === e[1]
                ? (a = [a[1]])
                : a.length >= 19 && (a = [St(a)]);
            }
            return { stmts: o, args: a };
          })(this, this.getImplicitReceiverExpr(), e, this.bindingContext());
          return this._tempVariables.push(...n), t;
        }
        matchDirectives(e, t) {
          if (this.directiveMatcher) {
            const n = Tu(e, Ci(t));
            this.directiveMatcher.match(n, (e, t) => {
              this.directives.add(t);
            });
          }
        }
        getAttributeExpressions(e, t, n, s, i, r = [], o = []) {
          const a = new Set(),
            l = [];
          let c;
          for (const d of t)
            "ngProjectAs" === d.name && (c = d),
              d.i18n
                ? l.push(It(d.name), this.i18nTranslate(d.i18n))
                : l.push(...ku(d.name), Ru(e, d));
          function u(e, t) {
            "string" == typeof e
              ? a.has(e) ||
                (l.push(...ku(e)), void 0 !== t && l.push(t), a.add(e))
              : l.push(It(e));
          }
          if (
            (c &&
              l.push(
                ...(function (e) {
                  const t = K(e.value)[0];
                  return [It(5), vi(t)];
                })(c)
              ),
            i && i.populateInitialStylingAttrs(l),
            n.length || s.length)
          ) {
            const e = l.length;
            for (let t = 0; t < n.length; t++) {
              const e = n[t];
              4 !== e.type && 1 !== e.type && u(e.name);
            }
            for (let t = 0; t < s.length; t++) {
              const e = s[t];
              1 !== e.type && u(e.name);
            }
            l.length !== e && l.splice(e, 0, It(3));
          }
          return (
            r.length && (l.push(It(4)), r.forEach((e) => u(e.name))),
            o.length && (l.push(It(6)), o.forEach((e) => u(e.name))),
            l
          );
        }
        addToConsts(e) {
          if (Tt(e)) return Je;
          const t = this._constants.constExpressions;
          for (let n = 0; n < t.length; n++)
            if (t[n].isEquivalent(e)) return It(n);
          return It(t.push(e) - 1);
        }
        addAttrsToConsts(e) {
          return e.length > 0 ? this.addToConsts(St(e)) : Je;
        }
        prepareRefsArray(e) {
          if (!e || 0 === e.length) return Je;
          return vi(
            jn(
              e.map((e) => {
                const t = this.allocateDataSlot(),
                  n = this._bindingScope.freshReferenceName(),
                  s = this.level,
                  i = bt(n);
                return (
                  this._bindingScope.set(
                    s,
                    e.name,
                    i,
                    0,
                    (e, n) => {
                      const s = n > 0 ? [Su(n).toStmt()] : [],
                        r = i.set(xt(Vn.reference).callFn([It(t)]));
                      return s.concat(r.toConstDecl());
                    },
                    !0
                  ),
                  [e.name, e.value]
                );
              })
            )
          );
        }
        prepareListenerParameter(e, t, n) {
          return () => {
            const s = t.name,
              i = 1 === t.type ? Gn(s, t.phase) : yn(s),
              r = `${this.templateName}_${e}_${i}_${n}_listener`,
              o = this._bindingScope.nestedScope(
                this._bindingScope.bindingLevel,
                mu
              );
            return vu(t, r, o);
          };
        }
      }
      class xu extends class {
        visitImplicitReceiver(e, t) {
          return e;
        }
        visitThisReceiver(e, t) {
          return e;
        }
        visitInterpolation(e, t) {
          const n = this.visitAll(e.expressions);
          return n !== e.expressions
            ? new Jr(e.span, e.sourceSpan, e.strings, n)
            : e;
        }
        visitLiteralPrimitive(e, t) {
          return e;
        }
        visitPropertyRead(e, t) {
          const n = e.receiver.visit(this);
          return n !== e.receiver
            ? new Hr(e.span, e.sourceSpan, e.nameSpan, n, e.name)
            : e;
        }
        visitPropertyWrite(e, t) {
          const n = e.receiver.visit(this),
            s = e.value.visit(this);
          return n !== e.receiver || s !== e.value
            ? new Gr(e.span, e.sourceSpan, e.nameSpan, n, e.name, s)
            : e;
        }
        visitSafePropertyRead(e, t) {
          const n = e.receiver.visit(this);
          return n !== e.receiver
            ? new Ur(e.span, e.sourceSpan, e.nameSpan, n, e.name)
            : e;
        }
        visitMethodCall(e, t) {
          const n = e.receiver.visit(this),
            s = this.visitAll(e.args);
          return n !== e.receiver || s !== e.args
            ? new no(e.span, e.sourceSpan, e.nameSpan, n, e.name, s)
            : e;
        }
        visitSafeMethodCall(e, t) {
          const n = e.receiver.visit(this),
            s = this.visitAll(e.args);
          return n !== e.receiver || s !== e.args
            ? new so(e.span, e.sourceSpan, e.nameSpan, n, e.name, s)
            : e;
        }
        visitFunctionCall(e, t) {
          const n = e.target && e.target.visit(this),
            s = this.visitAll(e.args);
          return n !== e.target || s !== e.args
            ? new io(e.span, e.sourceSpan, n, s)
            : e;
        }
        visitLiteralArray(e, t) {
          const n = this.visitAll(e.expressions);
          return n !== e.expressions ? new Qr(e.span, e.sourceSpan, n) : e;
        }
        visitLiteralMap(e, t) {
          const n = this.visitAll(e.values);
          return n !== e.values ? new Kr(e.span, e.sourceSpan, e.keys, n) : e;
        }
        visitUnary(e, t) {
          const n = e.expr.visit(this);
          if (n !== e.expr)
            switch (e.operator) {
              case "+":
                return Zr.createPlus(e.span, e.sourceSpan, n);
              case "-":
                return Zr.createMinus(e.span, e.sourceSpan, n);
              default:
                throw new Error("Unknown unary operator " + e.operator);
            }
          return e;
        }
        visitBinary(e, t) {
          const n = e.left.visit(this),
            s = e.right.visit(this);
          return n !== e.left || s !== e.right
            ? new Xr(e.span, e.sourceSpan, e.operation, n, s)
            : e;
        }
        visitPrefixNot(e, t) {
          const n = e.expression.visit(this);
          return n !== e.expression ? new eo(e.span, e.sourceSpan, n) : e;
        }
        visitNonNullAssert(e, t) {
          const n = e.expression.visit(this);
          return n !== e.expression ? new to(e.span, e.sourceSpan, n) : e;
        }
        visitConditional(e, t) {
          const n = e.condition.visit(this),
            s = e.trueExp.visit(this),
            i = e.falseExp.visit(this);
          return n !== e.condition || s !== e.trueExp || i !== e.falseExp
            ? new zr(e.span, e.sourceSpan, n, s, i)
            : e;
        }
        visitPipe(e, t) {
          const n = e.exp.visit(this),
            s = this.visitAll(e.args);
          return n !== e.exp || s !== e.args
            ? new Wr(e.span, e.sourceSpan, n, e.name, s, e.nameSpan)
            : e;
        }
        visitKeyedRead(e, t) {
          const n = e.obj.visit(this),
            s = e.key.visit(this);
          return n !== e.obj || s !== e.key
            ? new $r(e.span, e.sourceSpan, n, s)
            : e;
        }
        visitKeyedWrite(e, t) {
          const n = e.obj.visit(this),
            s = e.key.visit(this),
            i = e.value.visit(this);
          return n !== e.obj || s !== e.key || i !== e.value
            ? new qr(e.span, e.sourceSpan, n, s, i)
            : e;
        }
        visitAll(e) {
          const t = [];
          let n = !1;
          for (let s = 0; s < e.length; ++s) {
            const i = e[s],
              r = i.visit(this);
            (t[s] = r), (n = n || r !== i);
          }
          return n ? t : e;
        }
        visitChain(e, t) {
          const n = this.visitAll(e.expressions);
          return n !== e.expressions ? new Br(e.span, e.sourceSpan, n) : e;
        }
        visitQuote(e, t) {
          return e;
        }
      } {
        constructor(e, t, n, s) {
          super(),
            (this.constantPool = e),
            (this.allocateSlot = t),
            (this.allocatePureFunctionSlots = n),
            (this.definePipe = s),
            (this._pipeBindExprs = []);
        }
        visitPipe(e, t) {
          const n = this.allocateSlot(),
            s = "PIPE:" + n,
            i = this.allocatePureFunctionSlots(2 + e.args.length),
            r = new Hr(
              e.span,
              e.sourceSpan,
              e.nameSpan,
              new Lr(e.span, e.sourceSpan),
              s
            ),
            { identifier: o, isVarLength: a } = (function (e) {
              const t = _u[e.length];
              return { identifier: t || Vn.pipeBindV, isVarLength: !t };
            })(e.args);
          this.definePipe(e.name, s, n, xt(o));
          const l = [e.exp, ...e.args],
            c = a
              ? this.visitAll([new Qr(e.span, e.sourceSpan, l)])
              : this.visitAll(l),
            u = new io(e.span, e.sourceSpan, r, [
              new Yr(e.span, e.sourceSpan, n),
              new Yr(e.span, e.sourceSpan, i),
              ...c,
            ]);
          return this._pipeBindExprs.push(u), u;
        }
        updatePipeSlotOffsets(e) {
          this._pipeBindExprs.forEach((t) => {
            t.args[1].value += e;
          });
        }
        visitLiteralArray(e, t) {
          return new Ao(
            e.span,
            e.sourceSpan,
            this.visitAll(e.expressions),
            (e) => {
              const t = St(e);
              return Eu(this.constantPool, t, this.allocatePureFunctionSlots);
            }
          );
        }
        visitLiteralMap(e, t) {
          return new Ao(e.span, e.sourceSpan, this.visitAll(e.values), (t) => {
            const n = Et(
              t.map((t, n) => ({
                key: e.keys[n].key,
                value: t,
                quoted: e.keys[n].quoted,
              }))
            );
            return Eu(this.constantPool, n, this.allocatePureFunctionSlots);
          });
        }
      }
      const _u = [Vn.pipeBind1, Vn.pipeBind2, Vn.pipeBind3, Vn.pipeBind4];
      const wu = [
        Vn.pureFunction0,
        Vn.pureFunction1,
        Vn.pureFunction2,
        Vn.pureFunction3,
        Vn.pureFunction4,
        Vn.pureFunction5,
        Vn.pureFunction6,
        Vn.pureFunction7,
        Vn.pureFunction8,
      ];
      function Cu(e, t, n) {
        return xt(t, null, e).callFn(n, e);
      }
      function Su(e) {
        return xt(Vn.nextContext).callFn(e > 1 ? [It(e)] : []);
      }
      function Eu(e, t, n) {
        const { literalFactory: s, literalFactoryArguments: i } =
            e.getLiteralFactory(t),
          r = n(1 + i.length),
          { identifier: o, isVarLength: a } = (function (e) {
            const t = wu[e.length];
            return { identifier: t || Vn.pureFunctionV, isVarLength: !t };
          })(i),
          l = [It(r), s];
        return a ? l.push(St(i)) : l.push(...i), xt(o).callFn(l);
      }
      function ku(e) {
        const [t, n] = r(e),
          s = It(n);
        return t ? [It(0), It(t), s] : [s];
      }
      const Ou = "$$shared_ctx$$";
      class Iu {
        constructor(e = 0, t = null, n) {
          if (
            ((this.bindingLevel = e),
            (this.parent = t),
            (this.globals = n),
            (this.map = new Map()),
            (this.referenceNameIndex = 0),
            (this.restoreViewVariable = null),
            void 0 !== n)
          )
            for (const s of n) this.set(0, s, bt(s));
        }
        static createRootScope() {
          return new Iu();
        }
        get(e) {
          let t = this;
          for (; t; ) {
            let n = t.map.get(e);
            if (null != n)
              return (
                t !== this &&
                  ((n = {
                    retrievalLevel: n.retrievalLevel,
                    lhs: n.lhs,
                    declareLocalCallback: n.declareLocalCallback,
                    declare: !1,
                    priority: n.priority,
                    localRef: n.localRef,
                  }),
                  this.map.set(e, n),
                  this.maybeGenerateSharedContextVar(n),
                  this.maybeRestoreView(n.retrievalLevel, n.localRef)),
                n.declareLocalCallback && !n.declare && (n.declare = !0),
                n.lhs
              );
            t = t.parent;
          }
          return 0 === this.bindingLevel ? null : this.getComponentProperty(e);
        }
        set(e, t, n, s = 0, i, r) {
          if (this.map.has(t)) {
            if (r) return this;
            zt(
              `The name ${t} is already defined in scope to be ${this.map.get(
                t
              )}`
            );
          }
          return (
            this.map.set(t, {
              retrievalLevel: e,
              lhs: n,
              declare: !1,
              declareLocalCallback: i,
              priority: s,
              localRef: r || !1,
            }),
            this
          );
        }
        getLocal(e) {
          return this.get(e);
        }
        notifyImplicitReceiverUse() {
          0 !== this.bindingLevel &&
            (this.map.get("$$shared_ctx$$0").declare = !0);
        }
        nestedScope(e, t) {
          const n = new Iu(e, this, t);
          return e > 0 && n.generateSharedContextVar(0), n;
        }
        getOrCreateSharedContextVar(e) {
          const t = Ou + e;
          return (
            this.map.has(t) || this.generateSharedContextVar(e),
            this.map.get(t).lhs
          );
        }
        getSharedContextName(e) {
          const t = this.map.get(Ou + e);
          return t && t.declare ? t.lhs : null;
        }
        maybeGenerateSharedContextVar(e) {
          if (1 === e.priority && e.retrievalLevel < this.bindingLevel) {
            const t = this.map.get(Ou + e.retrievalLevel);
            t
              ? (t.declare = !0)
              : this.generateSharedContextVar(e.retrievalLevel);
          }
        }
        generateSharedContextVar(e) {
          const t = bt(pi + this.freshReferenceName());
          this.map.set(Ou + e, {
            retrievalLevel: e,
            lhs: t,
            declareLocalCallback: (e, n) => [t.set(Su(n)).toConstDecl()],
            declare: !1,
            priority: 2,
            localRef: !1,
          });
        }
        getComponentProperty(e) {
          const t = this.map.get("$$shared_ctx$$0");
          return (t.declare = !0), this.maybeRestoreView(0, !1), t.lhs.prop(e);
        }
        maybeRestoreView(e, t) {
          this.isListenerScope() &&
            (e < this.bindingLevel || t) &&
            (this.parent.restoreViewVariable ||
              (this.parent.restoreViewVariable = bt(
                this.parent.freshReferenceName()
              )),
            (this.restoreViewVariable = this.parent.restoreViewVariable));
        }
        restoreViewStatement() {
          return this.restoreViewVariable
            ? [Cu(null, Vn.restoreView, [this.restoreViewVariable]).toStmt()]
            : [];
        }
        viewSnapshotStatements() {
          const e = Cu(null, Vn.getCurrentView, []);
          return this.restoreViewVariable
            ? [this.restoreViewVariable.set(e).toConstDecl()]
            : [];
        }
        isListenerScope() {
          return this.parent && this.parent.bindingLevel === this.bindingLevel;
        }
        variableDeclarations() {
          let e = 0;
          return Array.from(this.map.values())
            .filter((e) => e.declare)
            .sort(
              (e, t) =>
                t.retrievalLevel - e.retrievalLevel || t.priority - e.priority
            )
            .reduce((t, n) => {
              const s = this.bindingLevel - n.retrievalLevel,
                i = n.declareLocalCallback(this, s - e);
              return (e = s), t.concat(i);
            }, []);
        }
        freshReferenceName() {
          let e = this;
          for (; e.parent; ) e = e.parent;
          return "_r" + e.referenceNameIndex++;
        }
      }
      function Tu(e, t) {
        const n = new y(),
          s = r(e)[1];
        return (
          n.setElement(s),
          Object.getOwnPropertyNames(t).forEach((e) => {
            const s = r(e)[1],
              i = t[e];
            if ((n.addAttribute(s, i), "class" === e.toLowerCase())) {
              i.trim()
                .split(/\s+/)
                .forEach((e) => n.addClassName(e));
            }
          }),
          n
        );
      }
      function Au(e) {
        switch (Ei(e)) {
          case 1:
            return Vn.propertyInterpolate;
          case 3:
            return Vn.propertyInterpolate1;
          case 5:
            return Vn.propertyInterpolate2;
          case 7:
            return Vn.propertyInterpolate3;
          case 9:
            return Vn.propertyInterpolate4;
          case 11:
            return Vn.propertyInterpolate5;
          case 13:
            return Vn.propertyInterpolate6;
          case 15:
            return Vn.propertyInterpolate7;
          case 17:
            return Vn.propertyInterpolate8;
          default:
            return Vn.propertyInterpolateV;
        }
      }
      const Du = new Fc();
      function Mu(e = Fi) {
        return new Rl(new kc(new dc()), e, Du, null, []);
      }
      function Pu(e, t) {
        switch (e) {
          case q.HTML:
            return xt(Vn.sanitizeHtml);
          case q.SCRIPT:
            return xt(Vn.sanitizeScript);
          case q.STYLE:
            return t ? xt(Vn.sanitizeStyle) : null;
          case q.URL:
            return xt(Vn.sanitizeUrl);
          case q.RESOURCE_URL:
            return xt(Vn.sanitizeResourceUrl);
          default:
            return null;
        }
      }
      function Ru(e, t) {
        const n = vi(t.value);
        switch (Du.securityContext(e, t.name, !0)) {
          case q.HTML:
            return xt(Vn.trustConstantHtml).callFn([n], t.valueSpan);
          case q.SCRIPT:
            return xt(Vn.trustConstantScript).callFn([n], t.valueSpan);
          case q.RESOURCE_URL:
            return xt(Vn.trustConstantResourceUrl).callFn([n], t.valueSpan);
          default:
            return n;
        }
      }
      function ju(e) {
        return e instanceof Un || e instanceof $n || e instanceof es;
      }
      function Nu(e) {
        return e.every(ju);
      }
      const Fu = "ngI18nClosureMode";
      function Lu() {
        return Ct(bt(Fu)).notIdentical(It("undefined", le)).and(bt(Fu));
      }
      const Vu = /attr\.([^\]]+)/;
      function Bu(e, t, n) {
        const s = new wi(),
          i = K(e.selector);
        return (
          s.set("type", e.internalType),
          i.length > 0 && s.set("selectors", vi(i)),
          e.queries.length > 0 &&
            s.set(
              "contentQueries",
              (function (e, t, n) {
                const s = [],
                  i = [],
                  r = fi(i, hi);
                for (const a of e) {
                  const e = a.static ? Vn.staticContentQuery : Vn.contentQuery;
                  s.push(
                    xt(e)
                      .callFn([bt("dirIndex"), ...Uu(a, t)])
                      .toStmt()
                  );
                  const n = r(),
                    o = xt(Vn.loadQuery).callFn([]),
                    l = xt(Vn.queryRefresh).callFn([n.set(o)]),
                    c = bt(pi)
                      .prop(a.propertyName)
                      .set(a.first ? n.prop("first") : n);
                  i.push(l.and(c).toStmt());
                }
                const o = n ? n + "_ContentQueries" : null;
                return kt(
                  [new Be(mi, ae), new Be(pi, null), new Be("dirIndex", null)],
                  [yu(1, s), yu(2, i)],
                  re,
                  null,
                  o
                );
              })(e.queries, t, e.name)
            ),
          e.viewQueries.length &&
            s.set(
              "viewQuery",
              (function (e, t, n) {
                const s = [],
                  i = [],
                  r = fi(i, hi);
                e.forEach((e) => {
                  const n = xt(
                    e.static ? Vn.staticViewQuery : Vn.viewQuery
                  ).callFn(Uu(e, t));
                  s.push(n.toStmt());
                  const o = r(),
                    a = xt(Vn.loadQuery).callFn([]),
                    l = xt(Vn.queryRefresh).callFn([o.set(a)]),
                    c = bt(pi)
                      .prop(e.propertyName)
                      .set(e.first ? o.prop("first") : o);
                  i.push(l.and(c).toStmt());
                });
                const o = n ? n + "_Query" : null;
                return kt(
                  [new Be(mi, ae), new Be(pi, null)],
                  [yu(1, s), yu(2, i)],
                  re,
                  null,
                  o
                );
              })(e.viewQueries, t, e.name)
            ),
          s.set(
            "hostBindings",
            (function (e, t, n, s, i, r, o) {
              const a = bt(pi),
                l = new rc(a),
                { styleAttr: c, classAttr: u } = e.specialAttributes;
              void 0 !== c && l.registerStyleAttr(c);
              void 0 !== u && l.registerClassAttr(u);
              const d = [],
                h = [],
                p = t,
                m = Qu(e),
                f = n.createDirectiveHostEventAsts(m, p);
              if (f && f.length) {
                const e = (function (e, t) {
                  const n = [],
                    s = [],
                    i = [];
                  e.forEach((e) => {
                    let i = e.name && yn(e.name);
                    const r = 1 === e.type ? Gn(i, e.targetOrPhase) : i,
                      o = t && i ? `${t}_${r}_HostBindingHandler` : null,
                      a = vu(Yn.fromParsedEvent(e), o);
                    1 == e.type ? s.push(a) : n.push(a);
                  }),
                    s.length > 0 &&
                      i.push(Si(Vn.syntheticHostListener, s).toStmt());
                  n.length > 0 && i.push(Si(Vn.listener, n).toStmt());
                  return i;
                })(f, r);
                d.push(...e);
              }
              const g = n.createBoundHostProperties(m, p),
                y = [];
              let v,
                b = 0;
              g &&
                g.forEach((e) => {
                  l.registerInputBasedOnName(e.name, e.expression, p)
                    ? (b += 2)
                    : (y.push(e), b++);
                });
              const x = () => {
                  if (!v) {
                    v = new xu(
                      s,
                      () => zt("Unexpected node"),
                      (e) => {
                        const t = b;
                        return (b += e), t;
                      },
                      () => zt("Unexpected pipe")
                    );
                  }
                  return v;
                },
                _ = [],
                w = [],
                C = [];
              y.forEach((e) => {
                const t = e.expression.visit(x()),
                  s = Yu(a, t),
                  {
                    bindingName: r,
                    instruction: o,
                    isAttribute: l,
                  } = (function (e) {
                    let t,
                      n = e.name;
                    const s = n.match(Vu);
                    s
                      ? ((n = s[1]), (t = Vn.attribute))
                      : e.isAnimation
                      ? ((n = Hn(n)), (t = Vn.syntheticHostProperty))
                      : (t = Vn.hostProperty);
                    return { bindingName: n, instruction: t, isAttribute: !!s };
                  })(e),
                  c = n
                    .calcPossibleSecurityContexts(i, r, l)
                    .filter((e) => e !== q.NONE);
                let u = null;
                c.length &&
                  (u =
                    2 === c.length &&
                    c.indexOf(q.URL) > -1 &&
                    c.indexOf(q.RESOURCE_URL) > -1
                      ? xt(Vn.sanitizeUrlOrResourceUrl)
                      : Pu(c[0], l));
                const d = [It(r), s.currValExpr];
                u && d.push(u),
                  h.push(...s.stmts),
                  o === Vn.hostProperty
                    ? _.push(d)
                    : o === Vn.attribute
                    ? w.push(d)
                    : o === Vn.syntheticHostProperty
                    ? C.push(d)
                    : h.push(xt(o).callFn(d).toStmt());
              }),
                _.length > 0 && h.push(Si(Vn.hostProperty, _).toStmt());
              w.length > 0 && h.push(Si(Vn.attribute, w).toStmt());
              C.length > 0 && h.push(Si(Vn.syntheticHostProperty, C).toStmt());
              const S = (function (e) {
                const t = [];
                for (let n of Object.getOwnPropertyNames(e)) {
                  const s = e[n];
                  t.push(It(n), s);
                }
                return t;
              })(e.attributes);
              l.assignHostAttrs(S, o),
                l.hasBindings &&
                  l.buildUpdateLevelInstructions(x()).forEach((e) => {
                    if (e.calls.length > 0) {
                      const t = [];
                      e.calls.forEach((e) => {
                        (b += Math.max(e.allocateBindingSlots - 2, 0)),
                          t.push(
                            (function (e, t, n) {
                              return e.params((e) => n(t, e).currValExpr);
                            })(e, a, Yu)
                          );
                      }),
                        h.push(Si(e.reference, t).toStmt());
                    }
                  });
              b && o.set("hostVars", It(b));
              if (d.length > 0 || h.length > 0) {
                const e = r ? r + "_HostBindings" : null,
                  t = [];
                return (
                  d.length > 0 && t.push(yu(1, d)),
                  h.length > 0 && t.push(yu(2, h)),
                  kt([new Be(mi, ae), new Be(pi, null)], t, re, null, e)
                );
              }
              return null;
            })(e.host, e.typeSourceSpan, n, t, e.selector || "", e.name, s)
          ),
          s.set("inputs", bi(e.inputs, !0)),
          s.set("outputs", bi(e.outputs)),
          null !== e.exportAs &&
            s.set("exportAs", St(e.exportAs.map((e) => It(e)))),
          s
        );
      }
      function zu(e, t) {
        const n = [],
          s = t.providers,
          i = t.viewProviders;
        if (s || i) {
          const e = [s || new qe([])];
          i && e.push(i), n.push(xt(Vn.ProvidersFeature).callFn(e));
        }
        t.usesInheritance && n.push(xt(Vn.InheritDefinitionFeature)),
          t.fullInheritance && n.push(xt(Vn.CopyDefinitionFeature)),
          t.lifecycle.usesOnChanges && n.push(xt(Vn.NgOnChangesFeature)),
          n.length && e.set("features", St(n));
      }
      function Hu(e, t, n) {
        const s = Bu(e, t, n);
        zu(s, e);
        const i = xt(Vn.defineDirective).callFn([s.toLiteralMap()]),
          r = Wu(e);
        return { expression: i, type: wt(xt(Vn.DirectiveDefWithMeta, r)) };
      }
      function Gu(e, t, n) {
        const s = Bu(e, t, n);
        zu(s, e);
        const i = e.selector && y.parse(e.selector),
          r = i && i[0];
        if (r) {
          const e = r.getAttrs();
          e.length &&
            s.set(
              "attrs",
              t.getConstLiteral(
                St(e.map((e) => It(null != e ? e : void 0))),
                !0
              )
            );
        }
        let o = null;
        if (e.directives.length > 0) {
          const t = new v();
          for (const { selector: n, expression: s } of e.directives)
            t.addSelectables(y.parse(n), s);
          o = t;
        }
        const a = e.name,
          l = a ? a + "_Template" : null,
          c = new Set(),
          u = new Set(),
          d = e.changeDetection,
          h = e.template,
          p = new bu(
            t,
            Iu.createRootScope(),
            0,
            a,
            null,
            null,
            l,
            o,
            c,
            e.pipes,
            u,
            Vn.namespaceHTML,
            e.relativeContextFilePath,
            e.i18nUseExternalIds
          ),
          m = p.buildTemplateFunction(h.nodes, []),
          f = p.getNgContentSelectors();
        f && s.set("ngContentSelectors", f),
          s.set("decls", It(p.getConstCount())),
          s.set("vars", It(p.getVarCount()));
        const { constExpressions: g, prepareStatements: b } = p.getConsts();
        if (g.length > 0) {
          let e = St(g);
          b.length > 0 && (e = kt([], [...b, new rt(e)])), s.set("consts", e);
        }
        if ((s.set("template", m), c.size)) {
          let t = St(Array.from(c));
          e.wrapDirectivesAndPipesInClosure && (t = kt([], [new rt(t)])),
            s.set("directives", t);
        }
        if (u.size) {
          let t = St(Array.from(u));
          e.wrapDirectivesAndPipesInClosure && (t = kt([], [new rt(t)])),
            s.set("pipes", t);
        }
        if (
          (null === e.encapsulation && (e.encapsulation = T.Emulated),
          e.styles && e.styles.length)
        ) {
          const n = (
            e.encapsulation == T.Emulated
              ? (function (e, t, n) {
                  const s = new Do();
                  return e.map((e) => s.shimCssText(e, t, n));
                })(e.styles, aa, oa)
              : e.styles
          ).map((e) => t.getConstLiteral(It(e)));
          s.set("styles", St(n));
        } else e.encapsulation === T.Emulated && (e.encapsulation = T.None);
        e.encapsulation !== T.Emulated &&
          s.set("encapsulation", It(e.encapsulation)),
          null !== e.animations &&
            s.set(
              "data",
              Et([{ key: "animation", value: e.animations, quoted: !1 }])
            ),
          null != d && d !== A.Default && s.set("changeDetection", It(d));
        const x = xt(Vn.defineComponent).callFn([s.toLiteralMap()]),
          _ = Wu(e);
        _.push(qu(e.template.ngContentSelectors));
        return { expression: x, type: wt(xt(Vn.ComponentDefWithMeta, _)) };
      }
      function Uu(e, t) {
        const n = [_i(e, t), It(e.descendants)];
        return e.read && n.push(e.read), n;
      }
      function $u(e) {
        return wt(
          Et(
            Object.keys(e).map((t) => ({
              key: t,
              value: It(Array.isArray(e[t]) ? e[t][0] : e[t]),
              quoted: !0,
            }))
          )
        );
      }
      function qu(e) {
        return e.length > 0 ? wt(St(e.map((e) => It(e)))) : ce;
      }
      function Wu(e) {
        const t = null !== e.selector ? e.selector.replace(/\n/g, "") : null;
        return [
          zn(e.type.type, e.typeArgumentCount),
          null !== t ? ((n = t), wt(It(n))) : ce,
          null !== e.exportAs ? qu(e.exportAs) : ce,
          $u(e.inputs),
          $u(e.outputs),
          qu(e.queries.map((e) => e.propertyName)),
        ];
        var n;
      }
      function Yu(e, t) {
        return xo(null, e, t, "b", Cr.Expression, () =>
          zt("Unexpected interpolation")
        );
      }
      function Qu(e) {
        return {
          hostAttributes: {},
          hostListeners: e.listeners,
          hostProperties: e.properties,
        };
      }
      const Ku = /^(?:\[([^\]]+)\])|(?:\(([^\)]+)\))$/;
      class Ju {
        get(e) {
          return "";
        }
      }
      class Xu {
        constructor(e = new Xi()) {
          (this.jitEvaluator = e),
            (this.R3ResolvedDependencyType = Ii),
            (this.R3FactoryTarget = Oi),
            (this.ResourceLoader = Ju),
            (this.elementSchemaRegistry = new Fc());
        }
        compilePipe(e, t, n) {
          const s = Dr({
            name: n.name,
            type: sd(n.type),
            internalType: new be(n.type),
            typeArgumentCount: n.typeArgumentCount,
            deps: cd(n.deps),
            pipeName: n.pipeName,
            pure: n.pure,
          });
          return this.jitExpression(s.expression, e, t, []);
        }
        compileInjectable(e, t, n) {
          const { expression: s, statements: i } = (function (e) {
            let t = null;
            const n = {
              name: e.name,
              type: e.type,
              internalType: e.internalType,
              typeArgumentCount: e.typeArgumentCount,
              deps: [],
              injectFn: dn.inject,
              target: Oi.Injectable,
            };
            if (void 0 !== e.useClass) {
              const s = e.useClass.isEquivalent(e.internalType);
              let i = void 0;
              void 0 !== e.userDeps && (i = e.userDeps),
                (t =
                  void 0 !== i
                    ? Ti(
                        Object.assign(Object.assign({}, n), {
                          delegate: e.useClass,
                          delegateDeps: i,
                          delegateType: ki.Class,
                        })
                      )
                    : s
                    ? Ti(n)
                    : Mi(e.type.value, e.useClass));
            } else
              t =
                void 0 !== e.useFactory
                  ? void 0 !== e.userDeps
                    ? Ti(
                        Object.assign(Object.assign({}, n), {
                          delegate: e.useFactory,
                          delegateDeps: e.userDeps || [],
                          delegateType: ki.Function,
                        })
                      )
                    : {
                        statements: [],
                        factory: kt([], [new rt(e.useFactory.callFn([]))]),
                      }
                  : void 0 !== e.useValue
                  ? Ti(
                      Object.assign(Object.assign({}, n), {
                        expression: e.useValue,
                      })
                    )
                  : void 0 !== e.useExisting
                  ? Ti(
                      Object.assign(Object.assign({}, n), {
                        expression: xt(dn.inject).callFn([e.useExisting]),
                      })
                    )
                  : Mi(e.type.value, e.internalType);
            const s = { token: e.internalType, factory: t.factory };
            return (
              null !== e.providedIn.value && (s.providedIn = e.providedIn),
              {
                expression: xt(dn.ɵɵdefineInjectable).callFn([Bn(s)]),
                type: new te(
                  xt(dn.InjectableDef, [zn(e.type.type, e.typeArgumentCount)])
                ),
                statements: t.statements,
              }
            );
          })({
            name: n.name,
            type: sd(n.type),
            internalType: new be(n.type),
            typeArgumentCount: n.typeArgumentCount,
            providedIn: ad(n.providedIn),
            useClass: od(n, Zu),
            useFactory: od(n, ed),
            useValue: od(n, td),
            useExisting: od(n, nd),
            userDeps: cd(n.userDeps) || void 0,
          });
          return this.jitExpression(s, e, t, i);
        }
        compileInjector(e, t, n) {
          const s = (function (e) {
            const t = Ti({
                name: e.name,
                type: e.type,
                internalType: e.internalType,
                typeArgumentCount: 0,
                deps: e.deps,
                injectFn: Vn.inject,
                target: Oi.NgModule,
              }),
              n = { factory: t.factory };
            return (
              null !== e.providers && (n.providers = e.providers),
              e.imports.length > 0 && (n.imports = St(e.imports)),
              {
                expression: xt(Vn.defineInjector).callFn([Bn(n)]),
                type: new te(xt(Vn.InjectorDef, [new te(e.type.type)])),
                statements: t.statements,
              }
            );
          })({
            name: n.name,
            type: sd(n.type),
            internalType: new be(n.type),
            deps: cd(n.deps),
            providers: new be(n.providers),
            imports: n.imports.map((e) => new be(e)),
          });
          return this.jitExpression(s.expression, e, t, s.statements);
        }
        compileNgModule(e, t, n) {
          const s = Ir({
            type: sd(n.type),
            internalType: new be(n.type),
            adjacentType: new be(n.type),
            bootstrap: n.bootstrap.map(sd),
            declarations: n.declarations.map(sd),
            imports: n.imports.map(sd),
            exports: n.exports.map(sd),
            emitInline: !0,
            containsForwardDecls: !1,
            schemas: n.schemas ? n.schemas.map(sd) : null,
            id: n.id ? new be(n.id) : null,
          });
          return this.jitExpression(s.expression, e, t, []);
        }
        compileDirective(e, t, n) {
          const s = new rn(),
            i = Mu(),
            r = Hu(rd(n), s, i);
          return this.jitExpression(r.expression, e, t, s.statements);
        }
        compileComponent(e, t, n) {
          const s = new rn(),
            i = n.interpolation ? Ni.fromArray(n.interpolation) : Fi,
            r = (function (e, t, n = {}) {
              const {
                  interpolationConfig: s,
                  preserveWhitespaces: i,
                  enableI18nLegacyMessageIdFormat: r,
                } = n,
                o = Mu(s),
                a = new Ua().parse(
                  e,
                  t,
                  Object.assign(Object.assign({ leadingTriviaChars: gu }, n), {
                    tokenizeExpansionForms: !0,
                  })
                );
              if (a.errors && a.errors.length > 0)
                return {
                  interpolationConfig: s,
                  preserveWhitespaces: i,
                  template: e,
                  errors: a.errors,
                  nodes: [],
                  styleUrls: [],
                  styles: [],
                  ngContentSelectors: [],
                };
              let l = a.rootNodes;
              const c = new au(s, !i, r);
              (l = ba(c, l)),
                i ||
                  ((l = ba(new Ja(), l)),
                  c.hasI18nMeta && (l = ba(new au(s, !1), l)));
              const {
                nodes: u,
                errors: d,
                styleUrls: h,
                styles: p,
                ngContentSelectors: m,
              } = Vc(l, o);
              return {
                interpolationConfig: s,
                preserveWhitespaces: i,
                errors: d.length > 0 ? d : null,
                template: e,
                nodes: u,
                styleUrls: h,
                styles: p,
                ngContentSelectors: m,
              };
            })(n.template, t, {
              preserveWhitespaces: n.preserveWhitespaces,
              interpolationConfig: i,
            });
          if (null !== r.errors) {
            const e = r.errors.map((e) => e.toString()).join(", ");
            throw new Error(
              `Errors during JIT compilation of template for ${n.name}: ${e}`
            );
          }
          const o = Gu(
              Object.assign(Object.assign(Object.assign({}, n), rd(n)), {
                selector:
                  n.selector ||
                  this.elementSchemaRegistry.getDefaultComponentElementName(),
                template: r,
                wrapDirectivesAndPipesInClosure: !1,
                styles: [...n.styles, ...r.styles],
                encapsulation: n.encapsulation,
                interpolation: i,
                changeDetection: n.changeDetection,
                animations: null != n.animations ? new be(n.animations) : null,
                viewProviders:
                  null != n.viewProviders ? new be(n.viewProviders) : null,
                relativeContextFilePath: "",
                i18nUseExternalIds: !0,
              }),
              s,
              Mu(i)
            ),
            a = `ng:///${n.name}.js`;
          return this.jitExpression(o.expression, e, a, s.statements);
        }
        compileFactory(e, t, n) {
          const s = Ti({
            name: n.name,
            type: sd(n.type),
            internalType: new be(n.type),
            typeArgumentCount: n.typeArgumentCount,
            deps: cd(n.deps),
            injectFn:
              "directiveInject" === n.injectFn ? dn.directiveInject : dn.inject,
            target: n.target,
          });
          return this.jitExpression(s.factory, e, t, s.statements);
        }
        createParseSourceSpan(e, t, n) {
          return (function (e, t, n) {
            const s = new br("", `in ${e} ${t} in ${n}`);
            return new xr(new vr(s, -1, -1, -1), new vr(s, -1, -1, -1));
          })(e, t, n);
        }
        jitExpression(e, t, n, s) {
          const i = [...s, new nt("$def", e, void 0, [Xe.Exported])];
          return this.jitEvaluator.evaluateStatements(n, i, new kr(t), !0).$def;
        }
      }
      const Zu = Object.keys({ useClass: null })[0],
        ed = Object.keys({ useFactory: null })[0],
        td = Object.keys({ useValue: null })[0],
        nd = Object.keys({ useExisting: null })[0],
        sd = function (e) {
          const t = new be(e);
          return { value: t, type: t };
        };
      function id(e) {
        return Object.assign(Object.assign({}, e), {
          predicate: Array.isArray(e.predicate)
            ? e.predicate
            : new be(e.predicate),
          read: e.read ? new be(e.read) : null,
          static: e.static,
        });
      }
      function rd(e) {
        const t = pd(e.inputs || []),
          n = pd(e.outputs || []),
          s = e.propMetadata,
          i = {},
          r = {};
        for (const o in s)
          s.hasOwnProperty(o) &&
            s[o].forEach((e) => {
              "Input" === e.ngMetadataName
                ? (i[o] = e.bindingPropertyName
                    ? [e.bindingPropertyName, o]
                    : o)
                : hd(e) && (r[o] = e.bindingPropertyName || o);
            });
        return Object.assign(Object.assign({}, e), {
          typeSourceSpan: e.typeSourceSpan,
          type: sd(e.type),
          internalType: new be(e.type),
          deps: cd(e.deps),
          host: ud(e.propMetadata, e.typeSourceSpan, e.host),
          inputs: Object.assign(Object.assign({}, t), i),
          outputs: Object.assign(Object.assign({}, n), r),
          queries: e.queries.map(id),
          providers: null != e.providers ? new be(e.providers) : null,
          viewQueries: e.viewQueries.map(id),
          fullInheritance: !1,
        });
      }
      function od(e, t) {
        return e.hasOwnProperty(t) ? new be(e[t]) : void 0;
      }
      function ad(e) {
        return null == e || "string" == typeof e ? new ke(e) : new be(e);
      }
      function ld(e) {
        let t;
        return (
          (t =
            null === e.token
              ? new ke(null)
              : e.resolved === Ii.Attribute
              ? new ke(e.token)
              : new be(e.token)),
          {
            token: t,
            attribute: null,
            resolved: e.resolved,
            host: e.host,
            optional: e.optional,
            self: e.self,
            skipSelf: e.skipSelf,
          }
        );
      }
      function cd(e) {
        return null == e ? null : e.map(ld);
      }
      function ud(e, t, n) {
        const s = (function (e) {
            const t = {},
              n = {},
              s = {},
              i = {};
            for (const r of Object.keys(e)) {
              const o = e[r],
                a = r.match(Ku);
              if (null === a)
                switch (r) {
                  case "class":
                    if ("string" != typeof o)
                      throw new Error("Class binding must be string");
                    i.classAttr = o;
                    break;
                  case "style":
                    if ("string" != typeof o)
                      throw new Error("Style binding must be string");
                    i.styleAttr = o;
                    break;
                  default:
                    t[r] = "string" == typeof o ? It(o) : o;
                }
              else if (null != a[1]) {
                if ("string" != typeof o)
                  throw new Error("Property binding must be string");
                s[a[1]] = o;
              } else if (null != a[2]) {
                if ("string" != typeof o)
                  throw new Error("Event binding must be string");
                n[a[2]] = o;
              }
            }
            return {
              attributes: t,
              listeners: n,
              properties: s,
              specialAttributes: i,
            };
          })(n || {}),
          i = (function (e, t) {
            const n = Qu(e),
              s = Mu();
            return (
              s.createDirectiveHostEventAsts(n, t),
              s.createBoundHostProperties(n, t),
              s.errors
            );
          })(s, t);
        if (i.length) throw new Error(i.map((e) => e.msg).join("\n"));
        for (const r in e)
          e.hasOwnProperty(r) &&
            e[r].forEach((e) => {
              "HostBinding" === e.ngMetadataName
                ? (s.properties[e.hostPropertyName || r] = r)
                : dd(e) &&
                  (s.listeners[e.eventName || r] = `${r}(${(e.args || []).join(
                    ","
                  )})`);
            });
        return s;
      }
      function dd(e) {
        return "HostListener" === e.ngMetadataName;
      }
      function hd(e) {
        return "Output" === e.ngMetadataName;
      }
      function pd(e) {
        return e.reduce((e, t) => {
          const [n, s] = t.split(",").map((e) => e.trim());
          return (e[n] = s || n), e;
        }, {});
      }
      new (class {
        constructor(e) {
          this.full = e;
          const t = e.split(".");
          (this.major = t[0]),
            (this.minor = t[1]),
            (this.patch = t.slice(2).join("."));
        }
      })("11.0.2");
      class md {
        constructor({
          defaultEncapsulation: e = T.Emulated,
          useJit: t = !0,
          jitDevMode: n = !1,
          missingTranslation: s = null,
          preserveWhitespaces: i,
          strictInjectionParameters: r,
        } = {}) {
          (this.defaultEncapsulation = e),
            (this.useJit = !!t),
            (this.jitDevMode = !!n),
            (this.missingTranslation = s),
            (this.preserveWhitespaces = fd(Nt(i))),
            (this.strictInjectionParameters = !0 === r);
        }
      }
      function fd(e, t = !1) {
        return null === e ? t : e;
      }
      class gd {
        constructor(e, t, n, s) {
          (this._resourceLoader = e),
            (this._urlResolver = t),
            (this._htmlParser = n),
            (this._config = s),
            (this._resourceLoaderCache = new Map());
        }
        clearCache() {
          this._resourceLoaderCache.clear();
        }
        clearCacheFor(e) {
          if (!e.isComponent) return;
          const t = e.template;
          this._resourceLoaderCache.delete(t.templateUrl),
            t.externalStylesheets.forEach((e) => {
              this._resourceLoaderCache.delete(e.moduleUrl);
            });
        }
        _fetch(e) {
          let t = this._resourceLoaderCache.get(e);
          return (
            t ||
              ((t = this._resourceLoader.get(e)),
              this._resourceLoaderCache.set(e, t)),
            t
          );
        }
        normalizeTemplate(e) {
          if (jt(e.template)) {
            if (jt(e.templateUrl))
              throw Ht(
                `'${Yt(
                  e.componentType
                )}' component cannot define both template and templateUrl`
              );
            if ("string" != typeof e.template)
              throw Ht(
                `The template specified for component ${Yt(
                  e.componentType
                )} is not a string`
              );
          } else {
            if (!jt(e.templateUrl))
              throw Ht(
                "No template specified for component " + Yt(e.componentType)
              );
            if ("string" != typeof e.templateUrl)
              throw Ht(
                `The templateUrl specified for component ${Yt(
                  e.componentType
                )} is not a string`
              );
          }
          if (
            jt(e.preserveWhitespaces) &&
            "boolean" != typeof e.preserveWhitespaces
          )
            throw Ht(
              `The preserveWhitespaces option for component ${Yt(
                e.componentType
              )} must be a boolean`
            );
          return Vt(this._preParseTemplate(e), (t) =>
            this._normalizeTemplateMetadata(e, t)
          );
        }
        _preParseTemplate(e) {
          let t, n;
          return (
            null != e.template
              ? ((t = e.template), (n = e.moduleUrl))
              : ((n = this._urlResolver.resolve(e.moduleUrl, e.templateUrl)),
                (t = this._fetch(n))),
            Vt(t, (t) => this._preparseLoadedTemplate(e, t, n))
          );
        }
        _preparseLoadedTemplate(e, t, n) {
          const s = !!e.template,
            i = Ni.fromArray(e.interpolation),
            r = Fn(
              { reference: e.ngModuleType },
              { type: { reference: e.componentType } },
              { isInline: s, templateUrl: n }
            ),
            o = this._htmlParser.parse(t, r, {
              tokenizeExpansionForms: !0,
              interpolationConfig: i,
            });
          if (o.errors.length > 0) {
            throw Ht("Template parse errors:\n" + o.errors.join("\n"));
          }
          const a = this._normalizeStylesheet(
              new On({ styles: e.styles, moduleUrl: e.moduleUrl })
            ),
            l = new yd();
          ba(l, o.rootNodes);
          const c = this._normalizeStylesheet(
            new On({ styles: l.styles, styleUrls: l.styleUrls, moduleUrl: n })
          );
          return {
            template: t,
            templateUrl: n,
            isInline: s,
            htmlAst: o,
            styles: a.styles.concat(c.styles),
            inlineStyleUrls: a.styleUrls.concat(c.styleUrls),
            styleUrls: this._normalizeStylesheet(
              new On({ styleUrls: e.styleUrls, moduleUrl: e.moduleUrl })
            ).styleUrls,
            ngContentSelectors: l.ngContentSelectors,
          };
        }
        _normalizeTemplateMetadata(e, t) {
          return Vt(
            this._loadMissingExternalStylesheets(
              t.styleUrls.concat(t.inlineStyleUrls)
            ),
            (n) => this._normalizeLoadedTemplateMetadata(e, t, n)
          );
        }
        _normalizeLoadedTemplateMetadata(e, t, n) {
          const s = [...t.styles];
          this._inlineStyles(t.inlineStyleUrls, n, s);
          const i = t.styleUrls,
            r = i.map((e) => {
              const t = n.get(e),
                s = [...t.styles];
              return (
                this._inlineStyles(t.styleUrls, n, s),
                new On({ moduleUrl: e, styles: s })
              );
            });
          let o = e.encapsulation;
          return (
            null == o && (o = this._config.defaultEncapsulation),
            o === T.Emulated &&
              0 === s.length &&
              0 === i.length &&
              (o = T.None),
            new In({
              encapsulation: o,
              template: t.template,
              templateUrl: t.templateUrl,
              htmlAst: t.htmlAst,
              styles: s,
              styleUrls: i,
              ngContentSelectors: t.ngContentSelectors,
              animations: e.animations,
              interpolation: e.interpolation,
              isInline: t.isInline,
              externalStylesheets: r,
              preserveWhitespaces: fd(
                e.preserveWhitespaces,
                this._config.preserveWhitespaces
              ),
            })
          );
        }
        _inlineStyles(e, t, n) {
          e.forEach((e) => {
            const s = t.get(e);
            s.styles.forEach((e) => n.push(e)),
              this._inlineStyles(s.styleUrls, t, n);
          });
        }
        _loadMissingExternalStylesheets(e, t = new Map()) {
          return Vt(
            Bt(
              e
                .filter((e) => !t.has(e))
                .map((e) =>
                  Vt(this._fetch(e), (n) => {
                    const s = this._normalizeStylesheet(
                      new On({ styles: [n], moduleUrl: e })
                    );
                    return (
                      t.set(e, s),
                      this._loadMissingExternalStylesheets(s.styleUrls, t)
                    );
                  })
                )
            ),
            (e) => t
          );
        }
        _normalizeStylesheet(e) {
          const t = e.moduleUrl,
            n = e.styleUrls
              .filter(Tl)
              .map((e) => this._urlResolver.resolve(t, e)),
            s = e.styles.map((e) => {
              const s = (function (e, t, n) {
                const s = [],
                  i = n.replace(Dl, "").replace(Al, (...n) => {
                    const i = n[1] || n[2];
                    return Tl(i) ? (s.push(e.resolve(t, i)), "") : n[0];
                  });
                return new Il(i, s);
              })(this._urlResolver, t, e);
              return n.push(...s.styleUrls), s.style;
            });
          return new On({ styles: s, styleUrls: n, moduleUrl: t });
        }
      }
      class yd {
        constructor() {
          (this.ngContentSelectors = []),
            (this.styles = []),
            (this.styleUrls = []),
            (this.ngNonBindableStackCount = 0);
        }
        visitElement(e, t) {
          const n = Vl(e);
          switch (n.type) {
            case Bl.NG_CONTENT:
              0 === this.ngNonBindableStackCount &&
                this.ngContentSelectors.push(n.selectAttr);
              break;
            case Bl.STYLE:
              let t = "";
              e.children.forEach((e) => {
                e instanceof pa && (t += e.value);
              }),
                this.styles.push(t);
              break;
            case Bl.STYLESHEET:
              this.styleUrls.push(n.hrefAttr);
          }
          return (
            n.nonBindable && this.ngNonBindableStackCount++,
            ba(this, e.children),
            n.nonBindable && this.ngNonBindableStackCount--,
            null
          );
        }
        visitExpansion(e, t) {
          ba(this, e.cases);
        }
        visitExpansionCase(e, t) {
          ba(this, e.expression);
        }
        visitComment(e, t) {
          return null;
        }
        visitAttribute(e, t) {
          return null;
        }
        visitText(e, t) {
          return null;
        }
      }
      const vd = [O, k, E, S];
      class bd {
        constructor(e) {
          this._reflector = e;
        }
        isDirective(e) {
          const t = this._reflector.annotations(Qt(e));
          return t && t.some(xd);
        }
        resolve(e, t = !0) {
          const n = this._reflector.annotations(Qt(e));
          if (n) {
            const t = _d(n, xd);
            if (t) {
              const n = this._reflector.propMetadata(e),
                s = this._reflector.guards(e);
              return this._mergeWithPropertyMetadata(t, n, s, e);
            }
          }
          if (t) throw new Error("No Directive annotation found on " + Yt(e));
          return null;
        }
        _mergeWithPropertyMetadata(e, t, n, s) {
          const i = [],
            r = [],
            o = {},
            a = {};
          return (
            Object.keys(t).forEach((e) => {
              const n = _d(t[e], (e) => P.isTypeOf(e));
              n &&
                (n.bindingPropertyName
                  ? i.push(`${e}: ${n.bindingPropertyName}`)
                  : i.push(e));
              const s = _d(t[e], (e) => R.isTypeOf(e));
              s &&
                (s.bindingPropertyName
                  ? r.push(`${e}: ${s.bindingPropertyName}`)
                  : r.push(e));
              t[e]
                .filter((e) => j.isTypeOf(e))
                .forEach((t) => {
                  if (t.hostPropertyName) {
                    const n = t.hostPropertyName[0];
                    if ("(" === n)
                      throw new Error(
                        "@HostBinding can not bind to events. Use @HostListener instead."
                      );
                    if ("[" === n)
                      throw new Error(
                        "@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'."
                      );
                    o[`[${t.hostPropertyName}]`] = e;
                  } else o[`[${e}]`] = e;
                });
              t[e]
                .filter((e) => N.isTypeOf(e))
                .forEach((t) => {
                  const n = t.args || [];
                  o[`(${t.eventName})`] = `${e}(${n.join(",")})`;
                });
              const l = _d(t[e], (e) => vd.some((t) => t.isTypeOf(e)));
              l && (a[e] = l);
            }),
            this._merge(e, i, r, o, a, n, s)
          );
        }
        _extractPublicName(e) {
          return Mt(e, [null, e])[1].trim();
        }
        _dedupeBindings(e) {
          const t = new Set(),
            n = new Set(),
            s = [];
          for (let i = e.length - 1; i >= 0; i--) {
            const r = e[i],
              o = this._extractPublicName(r);
            n.add(o), t.has(o) || (t.add(o), s.push(r));
          }
          return s.reverse();
        }
        _merge(e, t, n, s, i, r, o) {
          const a = this._dedupeBindings(e.inputs ? e.inputs.concat(t) : t),
            l = this._dedupeBindings(e.outputs ? e.outputs.concat(n) : n),
            c = e.host ? Object.assign(Object.assign({}, e.host), s) : s,
            u = e.queries ? Object.assign(Object.assign({}, e.queries), i) : i;
          if (D.isTypeOf(e)) {
            const t = e;
            return D({
              selector: t.selector,
              inputs: a,
              outputs: l,
              host: c,
              exportAs: t.exportAs,
              moduleId: t.moduleId,
              queries: u,
              changeDetection: t.changeDetection,
              providers: t.providers,
              viewProviders: t.viewProviders,
              entryComponents: t.entryComponents,
              template: t.template,
              templateUrl: t.templateUrl,
              styles: t.styles,
              styleUrls: t.styleUrls,
              encapsulation: t.encapsulation,
              animations: t.animations,
              interpolation: t.interpolation,
              preserveWhitespaces: e.preserveWhitespaces,
            });
          }
          return I({
            selector: e.selector,
            inputs: a,
            outputs: l,
            host: c,
            exportAs: e.exportAs,
            queries: u,
            providers: e.providers,
            guards: r,
          });
        }
      }
      function xd(e) {
        return I.isTypeOf(e) || D.isTypeOf(e);
      }
      function _d(e, t) {
        for (let n = e.length - 1; n >= 0; n--) if (t(e[n])) return e[n];
        return null;
      }
      class wd extends Er {
        constructor(e, t) {
          super(e, t);
        }
      }
      const Cd = "i18n",
        Sd = "i18n-",
        Ed = /^i18n:?/;
      let kd = !1;
      class Od {
        constructor(e, t) {
          (this.messages = e), (this.errors = t);
        }
      }
      var Id;
      !(function (e) {
        (e[(e.Extract = 0)] = "Extract"), (e[(e.Merge = 1)] = "Merge");
      })(Id || (Id = {}));
      class Td {
        constructor(e, t) {
          (this._implicitTags = e), (this._implicitAttrs = t);
        }
        extract(e, t) {
          return (
            this._init(Id.Extract, t),
            e.forEach((e) => e.visit(this, null)),
            this._inI18nBlock &&
              this._reportError(e[e.length - 1], "Unclosed block"),
            new Od(this._messages, this._errors)
          );
        }
        merge(e, t, n) {
          this._init(Id.Merge, n), (this._translations = t);
          const s = new ya("wrapper", [], e, void 0, void 0, void 0).visit(
            this,
            null
          );
          return (
            this._inI18nBlock &&
              this._reportError(e[e.length - 1], "Unclosed block"),
            new Ba(s.children, this._errors)
          );
        }
        visitExpansionCase(e, t) {
          const n = ba(this, e.expression, t);
          if (this._mode === Id.Merge)
            return new fa(
              e.value,
              n,
              e.sourceSpan,
              e.valueSourceSpan,
              e.expSourceSpan
            );
        }
        visitExpansion(e, t) {
          this._mayBeAddBlockChildren(e);
          const n = this._inIcu;
          this._inIcu ||
            (this._isInTranslatableSection && this._addMessage([e]),
            (this._inIcu = !0));
          const s = ba(this, e.cases, t);
          return (
            this._mode === Id.Merge &&
              (e = new ma(
                e.switchValue,
                e.type,
                s,
                e.sourceSpan,
                e.switchValueSourceSpan
              )),
            (this._inIcu = n),
            e
          );
        }
        visitComment(e, t) {
          const n = !!(
            (s = e) instanceof va &&
            s.value &&
            s.value.startsWith("i18n")
          );
          var s;
          if (n && this._isInTranslatableSection)
            return void this._reportError(
              e,
              "Could not start a block inside a translatable section"
            );
          const i = (function (e) {
            return !!(e instanceof va && e.value && "/i18n" === e.value);
          })(e);
          if (!i || this._inI18nBlock) {
            if (!this._inI18nNode && !this._inIcu)
              if (this._inI18nBlock) {
                if (i) {
                  if (this._depth == this._blockStartDepth) {
                    this._closeTranslatableSection(e, this._blockChildren),
                      (this._inI18nBlock = !1);
                    const t = this._addMessage(
                      this._blockChildren,
                      this._blockMeaningAndDesc
                    );
                    return ba(this, this._translateMessage(e, t));
                  }
                  return void this._reportError(
                    e,
                    "I18N blocks should not cross element boundaries"
                  );
                }
              } else if (n) {
                if (!kd && console && console.warn) {
                  kd = !0;
                  const t = e.sourceSpan.details
                    ? ", " + e.sourceSpan.details
                    : "";
                  console.warn(
                    `I18n comments are deprecated, use an <ng-container> element instead (${e.sourceSpan.start}${t})`
                  );
                }
                (this._inI18nBlock = !0),
                  (this._blockStartDepth = this._depth),
                  (this._blockChildren = []),
                  (this._blockMeaningAndDesc = e.value.replace(Ed, "").trim()),
                  this._openTranslatableSection(e);
              }
          } else this._reportError(e, "Trying to close an unopened block");
        }
        visitText(e, t) {
          return (
            this._isInTranslatableSection && this._mayBeAddBlockChildren(e), e
          );
        }
        visitElement(e, t) {
          this._mayBeAddBlockChildren(e), this._depth++;
          const n = this._inI18nNode,
            s = this._inImplicitNode;
          let i = [],
            r = void 0;
          const o = e.attrs.find((e) => e.name === Cd) || null;
          const a = o ? o.value : "",
            l =
              this._implicitTags.some((t) => e.name === t) &&
              !this._inIcu &&
              !this._isInTranslatableSection,
            c = !s && l;
          if (
            ((this._inImplicitNode = s || l),
            this._isInTranslatableSection || this._inIcu)
          )
            (o || c) &&
              this._reportError(
                e,
                "Could not mark an element as translatable inside a translatable section"
              ),
              this._mode == Id.Extract && ba(this, e.children);
          else {
            if (o || c) {
              this._inI18nNode = !0;
              const t = this._addMessage(e.children, a);
              r = this._translateMessage(e, t);
            }
            if (this._mode == Id.Extract) {
              const t = o || c;
              t && this._openTranslatableSection(e),
                ba(this, e.children),
                t && this._closeTranslatableSection(e, e.children);
            }
          }
          if (this._mode === Id.Merge) {
            (r || e.children).forEach((e) => {
              const n = e.visit(this, t);
              n && !this._isInTranslatableSection && (i = i.concat(n));
            });
          }
          if (
            (this._visitAttributesOf(e),
            this._depth--,
            (this._inI18nNode = n),
            (this._inImplicitNode = s),
            this._mode === Id.Merge)
          ) {
            const t = this._translateAttributes(e);
            return new ya(
              e.name,
              t,
              i,
              e.sourceSpan,
              e.startSourceSpan,
              e.endSourceSpan
            );
          }
          return null;
        }
        visitAttribute(e, t) {
          throw new Error("unreachable code");
        }
        _init(e, t) {
          (this._mode = e),
            (this._inI18nBlock = !1),
            (this._inI18nNode = !1),
            (this._depth = 0),
            (this._inIcu = !1),
            (this._msgCountAtSectionStart = void 0),
            (this._errors = []),
            (this._messages = []),
            (this._inImplicitNode = !1),
            (this._createI18nMessage = tu(t));
        }
        _visitAttributesOf(e) {
          const t = {},
            n = this._implicitAttrs[e.name] || [];
          e.attrs
            .filter((e) => e.name.startsWith(Sd))
            .forEach((e) => (t[e.name.slice(Sd.length)] = e.value)),
            e.attrs.forEach((e) => {
              e.name in t
                ? this._addMessage([e], t[e.name])
                : n.some((t) => e.name === t) && this._addMessage([e]);
            });
        }
        _addMessage(e, t) {
          if (
            0 == e.length ||
            (1 == e.length && e[0] instanceof ga && !e[0].value)
          )
            return null;
          const { meaning: n, description: s, id: i } = Ad(t),
            r = this._createI18nMessage(e, n, s, i);
          return this._messages.push(r), r;
        }
        _translateMessage(e, t) {
          if (t && this._mode === Id.Merge) {
            const n = this._translations.get(t);
            if (n) return n;
            this._reportError(
              e,
              `Translation unavailable for message id="${this._translations.digest(
                t
              )}"`
            );
          }
          return [];
        }
        _translateAttributes(e) {
          const t = e.attrs,
            n = {};
          t.forEach((e) => {
            e.name.startsWith(Sd) && (n[e.name.slice(Sd.length)] = Ad(e.value));
          });
          const s = [];
          return (
            t.forEach((t) => {
              if (t.name !== Cd && !t.name.startsWith(Sd))
                if (t.value && "" != t.value && n.hasOwnProperty(t.name)) {
                  const { meaning: i, description: r, id: o } = n[t.name],
                    a = this._createI18nMessage([t], i, r, o),
                    l = this._translations.get(a);
                  if (l)
                    if (0 == l.length) s.push(new ga(t.name, "", t.sourceSpan));
                    else if (l[0] instanceof pa) {
                      const e = l[0].value;
                      s.push(new ga(t.name, e, t.sourceSpan));
                    } else
                      this._reportError(
                        e,
                        `Unexpected translation for attribute "${
                          t.name
                        }" (id="${o || this._translations.digest(a)}")`
                      );
                  else
                    this._reportError(
                      e,
                      `Translation unavailable for attribute "${t.name}" (id="${
                        o || this._translations.digest(a)
                      }")`
                    );
                } else s.push(t);
            }),
            s
          );
        }
        _mayBeAddBlockChildren(e) {
          this._inI18nBlock &&
            !this._inIcu &&
            this._depth == this._blockStartDepth &&
            this._blockChildren.push(e);
        }
        _openTranslatableSection(e) {
          this._isInTranslatableSection
            ? this._reportError(e, "Unexpected section start")
            : (this._msgCountAtSectionStart = this._messages.length);
        }
        get _isInTranslatableSection() {
          return void 0 !== this._msgCountAtSectionStart;
        }
        _closeTranslatableSection(e, t) {
          if (!this._isInTranslatableSection)
            return void this._reportError(e, "Unexpected section end");
          const n = this._msgCountAtSectionStart;
          if (1 == t.reduce((e, t) => e + (t instanceof va ? 0 : 1), 0))
            for (let s = this._messages.length - 1; s >= n; s--) {
              const e = this._messages[s].nodes;
              if (!(1 == e.length && e[0] instanceof ss)) {
                this._messages.splice(s, 1);
                break;
              }
            }
          this._msgCountAtSectionStart = void 0;
        }
        _reportError(e, t) {
          this._errors.push(new wd(e.sourceSpan, t));
        }
      }
      function Ad(e) {
        if (!e) return { meaning: "", description: "", id: "" };
        const t = e.indexOf("@@"),
          n = e.indexOf("|"),
          [s, i] = t > -1 ? [e.slice(0, t), e.slice(t + 2)] : [e, ""],
          [r, o] = n > -1 ? [s.slice(0, n), s.slice(n + 1)] : ["", s];
        return { meaning: r, description: o, id: i.trim() };
      }
      const Dd = new (class {
        constructor() {
          (this.closedByParent = !1),
            (this.contentType = s.PARSABLE_DATA),
            (this.isVoid = !1),
            (this.ignoreFirstLf = !1),
            (this.canSelfClose = !0),
            (this.preventNamespaceInheritance = !1);
        }
        requireExtraParent(e) {
          return !1;
        }
        isClosedByChild(e) {
          return !1;
        }
      })();
      function Md(e) {
        return Dd;
      }
      class Pd extends za {
        constructor() {
          super(Md);
        }
        parse(e, t, n) {
          return super.parse(e, t, n);
        }
      }
      const Rd = "x",
        jd = "source",
        Nd = "trans-unit",
        Fd = "context";
      class Ld extends As {
        write(e, t) {
          const n = new Vd(),
            s = [];
          e.forEach((e) => {
            let t = [];
            e.sources.forEach((e) => {
              let n = new Ns("context-group", { purpose: "location" });
              n.children.push(
                new Ls(10),
                new Ns(Fd, { "context-type": "sourcefile" }, [
                  new Fs(e.filePath),
                ]),
                new Ls(10),
                new Ns(Fd, { "context-type": "linenumber" }, [
                  new Fs("" + e.startLine),
                ]),
                new Ls(8)
              ),
                t.push(new Ls(8), n);
            });
            const i = new Ns(Nd, { id: e.id, datatype: "html" });
            i.children.push(
              new Ls(8),
              new Ns(jd, {}, n.serialize(e.nodes)),
              ...t
            ),
              e.description &&
                i.children.push(
                  new Ls(8),
                  new Ns("note", { priority: "1", from: "description" }, [
                    new Fs(e.description),
                  ])
                ),
              e.meaning &&
                i.children.push(
                  new Ls(8),
                  new Ns("note", { priority: "1", from: "meaning" }, [
                    new Fs(e.meaning),
                  ])
                ),
              i.children.push(new Ls(6)),
              s.push(new Ls(6), i);
          });
          const i = new Ns("body", {}, [...s, new Ls(4)]),
            r = new Ns(
              "file",
              {
                "source-language": t || "en",
                datatype: "plaintext",
                original: "ng2.template",
              },
              [new Ls(4), i, new Ls(2)]
            ),
            o = new Ns(
              "xliff",
              {
                version: "1.2",
                xmlns: "urn:oasis:names:tc:xliff:document:1.2",
              },
              [new Ls(2), r, new Ls()]
            );
          return Ps([
            new Rs({ version: "1.0", encoding: "UTF-8" }),
            new Ls(),
            o,
            new Ls(),
          ]);
        }
        load(e, t) {
          const n = new Bd(),
            { locale: s, msgIdToHtml: i, errors: r } = n.parse(e, t),
            o = {},
            a = new zd();
          if (
            (Object.keys(i).forEach((e) => {
              const { i18nNodes: n, errors: s } = a.convert(i[e], t);
              r.push(...s), (o[e] = n);
            }),
            r.length)
          )
            throw new Error("xliff parse errors:\n" + r.join("\n"));
          return { locale: s, i18nNodesByMsgId: o };
        }
        digest(e) {
          return ds(e);
        }
      }
      class Vd {
        visitText(e, t) {
          return [new Fs(e.value)];
        }
        visitContainer(e, t) {
          const n = [];
          return e.children.forEach((e) => n.push(...e.visit(this))), n;
        }
        visitIcu(e, t) {
          const n = [new Fs(`{${e.expressionPlaceholder}, ${e.type}, `)];
          return (
            Object.keys(e.cases).forEach((t) => {
              n.push(new Fs(t + " {"), ...e.cases[t].visit(this), new Fs("} "));
            }),
            n.push(new Fs("}")),
            n
          );
        }
        visitTagPlaceholder(e, t) {
          const n = (function (e) {
            switch (e.toLowerCase()) {
              case "br":
                return "lb";
              case "img":
                return "image";
              default:
                return "x-" + e;
            }
          })(e.tag);
          if (e.isVoid)
            return [
              new Ns(Rd, {
                id: e.startName,
                ctype: n,
                "equiv-text": `<${e.tag}/>`,
              }),
            ];
          const s = new Ns(Rd, {
              id: e.startName,
              ctype: n,
              "equiv-text": `<${e.tag}>`,
            }),
            i = new Ns(Rd, {
              id: e.closeName,
              ctype: n,
              "equiv-text": `</${e.tag}>`,
            });
          return [s, ...this.serialize(e.children), i];
        }
        visitPlaceholder(e, t) {
          return [new Ns(Rd, { id: e.name, "equiv-text": `{{${e.value}}}` })];
        }
        visitIcuPlaceholder(e, t) {
          const n = `{${e.value.expression}, ${e.value.type}, ${Object.keys(
            e.value.cases
          )
            .map((e) => e + " {...}")
            .join(" ")}}`;
          return [new Ns(Rd, { id: e.name, "equiv-text": n })];
        }
        serialize(e) {
          return [].concat(...e.map((e) => e.visit(this)));
        }
      }
      class Bd {
        constructor() {
          this._locale = null;
        }
        parse(e, t) {
          (this._unitMlString = null), (this._msgIdToHtml = {});
          const n = new Pd().parse(e, t);
          return (
            (this._errors = n.errors),
            ba(this, n.rootNodes, null),
            {
              msgIdToHtml: this._msgIdToHtml,
              errors: this._errors,
              locale: this._locale,
            }
          );
        }
        visitElement(e, t) {
          switch (e.name) {
            case Nd:
              this._unitMlString = null;
              const t = e.attrs.find((e) => "id" === e.name);
              if (t) {
                const n = t.value;
                this._msgIdToHtml.hasOwnProperty(n)
                  ? this._addError(e, "Duplicated translations for msg " + n)
                  : (ba(this, e.children, null),
                    "string" == typeof this._unitMlString
                      ? (this._msgIdToHtml[n] = this._unitMlString)
                      : this._addError(e, `Message ${n} misses a translation`));
              } else
                this._addError(e, '<trans-unit> misses the "id" attribute');
              break;
            case jd:
            case "seg-source":
            case "alt-trans":
              break;
            case "target":
              const n = e.startSourceSpan.end.offset,
                s = e.endSourceSpan.start.offset,
                i = e.startSourceSpan.start.file.content.slice(n, s);
              this._unitMlString = i;
              break;
            case "file":
              const r = e.attrs.find((e) => "target-language" === e.name);
              r && (this._locale = r.value), ba(this, e.children, null);
              break;
            default:
              ba(this, e.children, null);
          }
        }
        visitAttribute(e, t) {}
        visitText(e, t) {}
        visitComment(e, t) {}
        visitExpansion(e, t) {}
        visitExpansionCase(e, t) {}
        _addError(e, t) {
          this._errors.push(new wd(e.sourceSpan, t));
        }
      }
      class zd {
        convert(e, t) {
          const n = new Pd().parse(e, t, { tokenizeExpansionForms: !0 });
          this._errors = n.errors;
          return {
            i18nNodes:
              this._errors.length > 0 || 0 == n.rootNodes.length
                ? []
                : [].concat(...ba(this, n.rootNodes)),
            errors: this._errors,
          };
        }
        visitText(e, t) {
          return new ss(e.value, e.sourceSpan);
        }
        visitElement(e, t) {
          if (e.name === Rd) {
            const t = e.attrs.find((e) => "id" === e.name);
            return t
              ? new as("", t.value, e.sourceSpan)
              : (this._addError(e, '<x> misses the "id" attribute'), null);
          }
          return "mrk" === e.name
            ? [].concat(...ba(this, e.children))
            : (this._addError(e, "Unexpected tag"), null);
        }
        visitExpansion(e, t) {
          const n = {};
          return (
            ba(this, e.cases).forEach((t) => {
              n[t.value] = new is(t.nodes, e.sourceSpan);
            }),
            new rs(e.switchValue, e.type, n, e.sourceSpan)
          );
        }
        visitExpansionCase(e, t) {
          return { value: e.value, nodes: ba(this, e.expression) };
        }
        visitComment(e, t) {}
        visitAttribute(e, t) {}
        _addError(e, t) {
          this._errors.push(new wd(e.sourceSpan, t));
        }
      }
      const Hd = "ph",
        Gd = "xliff",
        Ud = "source",
        $d = "unit";
      class qd extends As {
        write(e, t) {
          const n = new Wd(),
            s = [];
          e.forEach((e) => {
            const t = new Ns($d, { id: e.id }),
              i = new Ns("notes");
            (e.description || e.meaning) &&
              (e.description &&
                i.children.push(
                  new Ls(8),
                  new Ns("note", { category: "description" }, [
                    new Fs(e.description),
                  ])
                ),
              e.meaning &&
                i.children.push(
                  new Ls(8),
                  new Ns("note", { category: "meaning" }, [new Fs(e.meaning)])
                )),
              e.sources.forEach((e) => {
                i.children.push(
                  new Ls(8),
                  new Ns("note", { category: "location" }, [
                    new Fs(
                      `${e.filePath}:${e.startLine}${
                        e.endLine !== e.startLine ? "," + e.endLine : ""
                      }`
                    ),
                  ])
                );
              }),
              i.children.push(new Ls(6)),
              t.children.push(new Ls(6), i);
            const r = new Ns("segment");
            r.children.push(
              new Ls(8),
              new Ns(Ud, {}, n.serialize(e.nodes)),
              new Ls(6)
            ),
              t.children.push(new Ls(6), r, new Ls(4)),
              s.push(new Ls(4), t);
          });
          const i = new Ns("file", { original: "ng.template", id: "ngi18n" }, [
              ...s,
              new Ls(2),
            ]),
            r = new Ns(
              Gd,
              {
                version: "2.0",
                xmlns: "urn:oasis:names:tc:xliff:document:2.0",
                srcLang: t || "en",
              },
              [new Ls(2), i, new Ls()]
            );
          return Ps([
            new Rs({ version: "1.0", encoding: "UTF-8" }),
            new Ls(),
            r,
            new Ls(),
          ]);
        }
        load(e, t) {
          const n = new Yd(),
            { locale: s, msgIdToHtml: i, errors: r } = n.parse(e, t),
            o = {},
            a = new Qd();
          if (
            (Object.keys(i).forEach((e) => {
              const { i18nNodes: n, errors: s } = a.convert(i[e], t);
              r.push(...s), (o[e] = n);
            }),
            r.length)
          )
            throw new Error("xliff2 parse errors:\n" + r.join("\n"));
          return { locale: s, i18nNodesByMsgId: o };
        }
        digest(e) {
          return ps(e);
        }
      }
      class Wd {
        visitText(e, t) {
          return [new Fs(e.value)];
        }
        visitContainer(e, t) {
          const n = [];
          return e.children.forEach((e) => n.push(...e.visit(this))), n;
        }
        visitIcu(e, t) {
          const n = [new Fs(`{${e.expressionPlaceholder}, ${e.type}, `)];
          return (
            Object.keys(e.cases).forEach((t) => {
              n.push(new Fs(t + " {"), ...e.cases[t].visit(this), new Fs("} "));
            }),
            n.push(new Fs("}")),
            n
          );
        }
        visitTagPlaceholder(e, t) {
          const n = (function (e) {
            switch (e.toLowerCase()) {
              case "br":
              case "b":
              case "i":
              case "u":
                return "fmt";
              case "img":
                return "image";
              case "a":
                return "link";
              default:
                return "other";
            }
          })(e.tag);
          if (e.isVoid) {
            return [
              new Ns(Hd, {
                id: (this._nextPlaceholderId++).toString(),
                equiv: e.startName,
                type: n,
                disp: `<${e.tag}/>`,
              }),
            ];
          }
          const s = new Ns("pc", {
              id: (this._nextPlaceholderId++).toString(),
              equivStart: e.startName,
              equivEnd: e.closeName,
              type: n,
              dispStart: `<${e.tag}>`,
              dispEnd: `</${e.tag}>`,
            }),
            i = [].concat(...e.children.map((e) => e.visit(this)));
          return (
            i.length
              ? i.forEach((e) => s.children.push(e))
              : s.children.push(new Fs("")),
            [s]
          );
        }
        visitPlaceholder(e, t) {
          const n = (this._nextPlaceholderId++).toString();
          return [new Ns(Hd, { id: n, equiv: e.name, disp: `{{${e.value}}}` })];
        }
        visitIcuPlaceholder(e, t) {
          const n = Object.keys(e.value.cases)
              .map((e) => e + " {...}")
              .join(" "),
            s = (this._nextPlaceholderId++).toString();
          return [
            new Ns(Hd, {
              id: s,
              equiv: e.name,
              disp: `{${e.value.expression}, ${e.value.type}, ${n}}`,
            }),
          ];
        }
        serialize(e) {
          return (
            (this._nextPlaceholderId = 0),
            [].concat(...e.map((e) => e.visit(this)))
          );
        }
      }
      class Yd {
        constructor() {
          this._locale = null;
        }
        parse(e, t) {
          (this._unitMlString = null), (this._msgIdToHtml = {});
          const n = new Pd().parse(e, t);
          return (
            (this._errors = n.errors),
            ba(this, n.rootNodes, null),
            {
              msgIdToHtml: this._msgIdToHtml,
              errors: this._errors,
              locale: this._locale,
            }
          );
        }
        visitElement(e, t) {
          switch (e.name) {
            case $d:
              this._unitMlString = null;
              const t = e.attrs.find((e) => "id" === e.name);
              if (t) {
                const n = t.value;
                this._msgIdToHtml.hasOwnProperty(n)
                  ? this._addError(e, "Duplicated translations for msg " + n)
                  : (ba(this, e.children, null),
                    "string" == typeof this._unitMlString
                      ? (this._msgIdToHtml[n] = this._unitMlString)
                      : this._addError(e, `Message ${n} misses a translation`));
              } else this._addError(e, '<unit> misses the "id" attribute');
              break;
            case Ud:
              break;
            case "target":
              const n = e.startSourceSpan.end.offset,
                s = e.endSourceSpan.start.offset,
                i = e.startSourceSpan.start.file.content.slice(n, s);
              this._unitMlString = i;
              break;
            case Gd:
              const r = e.attrs.find((e) => "trgLang" === e.name);
              r && (this._locale = r.value);
              const o = e.attrs.find((e) => "version" === e.name);
              if (o) {
                const t = o.value;
                "2.0" !== t
                  ? this._addError(
                      e,
                      `The XLIFF file version ${t} is not compatible with XLIFF 2.0 serializer`
                    )
                  : ba(this, e.children, null);
              }
              break;
            default:
              ba(this, e.children, null);
          }
        }
        visitAttribute(e, t) {}
        visitText(e, t) {}
        visitComment(e, t) {}
        visitExpansion(e, t) {}
        visitExpansionCase(e, t) {}
        _addError(e, t) {
          this._errors.push(new wd(e.sourceSpan, t));
        }
      }
      class Qd {
        convert(e, t) {
          const n = new Pd().parse(e, t, { tokenizeExpansionForms: !0 });
          this._errors = n.errors;
          return {
            i18nNodes:
              this._errors.length > 0 || 0 == n.rootNodes.length
                ? []
                : [].concat(...ba(this, n.rootNodes)),
            errors: this._errors,
          };
        }
        visitText(e, t) {
          return new ss(e.value, e.sourceSpan);
        }
        visitElement(e, t) {
          switch (e.name) {
            case Hd:
              const t = e.attrs.find((e) => "equiv" === e.name);
              if (t) return [new as("", t.value, e.sourceSpan)];
              this._addError(e, '<ph> misses the "equiv" attribute');
              break;
            case "pc":
              const n = e.attrs.find((e) => "equivStart" === e.name),
                s = e.attrs.find((e) => "equivEnd" === e.name);
              if (n) {
                if (s) {
                  const t = n.value,
                    i = s.value;
                  return [].concat(
                    new as("", t, e.sourceSpan),
                    ...e.children.map((e) => e.visit(this, null)),
                    new as("", i, e.sourceSpan)
                  );
                }
                this._addError(e, '<ph> misses the "equivEnd" attribute');
              } else
                this._addError(e, '<ph> misses the "equivStart" attribute');
              break;
            case "mrk":
              return [].concat(...ba(this, e.children));
            default:
              this._addError(e, "Unexpected tag");
          }
          return null;
        }
        visitExpansion(e, t) {
          const n = {};
          return (
            ba(this, e.cases).forEach((t) => {
              n[t.value] = new is(t.nodes, e.sourceSpan);
            }),
            new rs(e.switchValue, e.type, n, e.sourceSpan)
          );
        }
        visitExpansionCase(e, t) {
          return {
            value: e.value,
            nodes: [].concat(...ba(this, e.expression)),
          };
        }
        visitComment(e, t) {}
        visitAttribute(e, t) {}
        _addError(e, t) {
          this._errors.push(new wd(e.sourceSpan, t));
        }
      }
      const Kd = "translationbundle",
        Jd = "translation";
      class Xd extends As {
        write(e, t) {
          throw new Error("Unsupported");
        }
        load(e, t) {
          const n = new Zd(),
            { locale: s, msgIdToHtml: i, errors: r } = n.parse(e, t),
            o = {},
            a = new eh();
          if (
            (Object.keys(i).forEach((e) => {
              !(function (e, t, n) {
                Object.defineProperty(e, t, {
                  configurable: !0,
                  enumerable: !0,
                  get: function () {
                    const s = n();
                    return (
                      Object.defineProperty(e, t, { enumerable: !0, value: s }),
                      s
                    );
                  },
                  set: (e) => {
                    throw new Error("Could not overwrite an XTB translation");
                  },
                });
              })(o, e, function () {
                const { i18nNodes: n, errors: s } = a.convert(i[e], t);
                if (s.length)
                  throw new Error("xtb parse errors:\n" + s.join("\n"));
                return n;
              });
            }),
            r.length)
          )
            throw new Error("xtb parse errors:\n" + r.join("\n"));
          return { locale: s, i18nNodesByMsgId: o };
        }
        digest(e) {
          return qs(e);
        }
        createNameMapper(e) {
          return new Ds(e, Ys);
        }
      }
      class Zd {
        constructor() {
          this._locale = null;
        }
        parse(e, t) {
          (this._bundleDepth = 0), (this._msgIdToHtml = {});
          const n = new Pd().parse(e, t);
          return (
            (this._errors = n.errors),
            ba(this, n.rootNodes),
            {
              msgIdToHtml: this._msgIdToHtml,
              errors: this._errors,
              locale: this._locale,
            }
          );
        }
        visitElement(e, t) {
          switch (e.name) {
            case Kd:
              this._bundleDepth++,
                this._bundleDepth > 1 &&
                  this._addError(
                    e,
                    "<translationbundle> elements can not be nested"
                  );
              const t = e.attrs.find((e) => "lang" === e.name);
              t && (this._locale = t.value),
                ba(this, e.children, null),
                this._bundleDepth--;
              break;
            case Jd:
              const n = e.attrs.find((e) => "id" === e.name);
              if (n) {
                const t = n.value;
                if (this._msgIdToHtml.hasOwnProperty(t))
                  this._addError(e, "Duplicated translations for msg " + t);
                else {
                  const n = e.startSourceSpan.end.offset,
                    s = e.endSourceSpan.start.offset,
                    i = e.startSourceSpan.start.file.content.slice(n, s);
                  this._msgIdToHtml[t] = i;
                }
              } else
                this._addError(e, '<translation> misses the "id" attribute');
              break;
            default:
              this._addError(e, "Unexpected tag");
          }
        }
        visitAttribute(e, t) {}
        visitText(e, t) {}
        visitComment(e, t) {}
        visitExpansion(e, t) {}
        visitExpansionCase(e, t) {}
        _addError(e, t) {
          this._errors.push(new wd(e.sourceSpan, t));
        }
      }
      class eh {
        convert(e, t) {
          const n = new Pd().parse(e, t, { tokenizeExpansionForms: !0 });
          this._errors = n.errors;
          return {
            i18nNodes:
              this._errors.length > 0 || 0 == n.rootNodes.length
                ? []
                : ba(this, n.rootNodes),
            errors: this._errors,
          };
        }
        visitText(e, t) {
          return new ss(e.value, e.sourceSpan);
        }
        visitExpansion(e, t) {
          const n = {};
          return (
            ba(this, e.cases).forEach((t) => {
              n[t.value] = new is(t.nodes, e.sourceSpan);
            }),
            new rs(e.switchValue, e.type, n, e.sourceSpan)
          );
        }
        visitExpansionCase(e, t) {
          return { value: e.value, nodes: ba(this, e.expression) };
        }
        visitElement(e, t) {
          if ("ph" === e.name) {
            const t = e.attrs.find((e) => "name" === e.name);
            if (t) return new as("", t.value, e.sourceSpan);
            this._addError(e, '<ph> misses the "name" attribute');
          } else this._addError(e, "Unexpected tag");
          return null;
        }
        visitComment(e, t) {}
        visitAttribute(e, t) {}
        _addError(e, t) {
          this._errors.push(new wd(e.sourceSpan, t));
        }
      }
      class th {
        constructor(e = {}, t, n, s, i = W.Warning, r) {
          (this._i18nNodesByMsgId = e),
            (this.digest = n),
            (this.mapperFactory = s),
            (this._i18nToHtml = new nh(e, t, n, s, i, r));
        }
        static load(e, t, n, s, i) {
          const { locale: r, i18nNodesByMsgId: o } = n.load(e, t);
          return new th(
            o,
            r,
            (e) => n.digest(e),
            (e) => n.createNameMapper(e),
            s,
            i
          );
        }
        get(e) {
          const t = this._i18nToHtml.convert(e);
          if (t.errors.length) throw new Error(t.errors.join("\n"));
          return t.nodes;
        }
        has(e) {
          return this.digest(e) in this._i18nNodesByMsgId;
        }
      }
      class nh {
        constructor(e = {}, t, n, s, i, r) {
          (this._i18nNodesByMsgId = e),
            (this._locale = t),
            (this._digest = n),
            (this._mapperFactory = s),
            (this._missingTranslationStrategy = i),
            (this._console = r),
            (this._contextStack = []),
            (this._errors = []);
        }
        convert(e) {
          (this._contextStack.length = 0), (this._errors.length = 0);
          const t = this._convertToText(e),
            n = e.nodes[0].sourceSpan.start.file.url,
            s = new Ua().parse(t, n, { tokenizeExpansionForms: !0 });
          return { nodes: s.rootNodes, errors: [...this._errors, ...s.errors] };
        }
        visitText(e, t) {
          return Bs(e.value);
        }
        visitContainer(e, t) {
          return e.children.map((e) => e.visit(this)).join("");
        }
        visitIcu(e, t) {
          const n = Object.keys(e.cases).map(
            (t) => `${t} {${e.cases[t].visit(this)}}`
          );
          return `{${
            this._srcMsg.placeholders.hasOwnProperty(e.expression)
              ? this._srcMsg.placeholders[e.expression].text
              : e.expression
          }, ${e.type}, ${n.join(" ")}}`;
        }
        visitPlaceholder(e, t) {
          const n = this._mapper(e.name);
          return this._srcMsg.placeholders.hasOwnProperty(n)
            ? this._srcMsg.placeholders[n].text
            : this._srcMsg.placeholderToMessage.hasOwnProperty(n)
            ? this._convertToText(this._srcMsg.placeholderToMessage[n])
            : (this._addError(e, `Unknown placeholder "${e.name}"`), "");
        }
        visitTagPlaceholder(e, t) {
          const n = "" + e.tag,
            s = Object.keys(e.attrs)
              .map((t) => `${t}="${e.attrs[t]}"`)
              .join(" ");
          if (e.isVoid) return `<${n} ${s}/>`;
          return `<${n} ${s}>${e.children
            .map((e) => e.visit(this))
            .join("")}</${n}>`;
        }
        visitIcuPlaceholder(e, t) {
          return this._convertToText(this._srcMsg.placeholderToMessage[e.name]);
        }
        _convertToText(e) {
          const t = this._digest(e),
            n = this._mapperFactory ? this._mapperFactory(e) : null;
          let s;
          if (
            (this._contextStack.push({
              msg: this._srcMsg,
              mapper: this._mapper,
            }),
            (this._srcMsg = e),
            this._i18nNodesByMsgId.hasOwnProperty(t))
          )
            (s = this._i18nNodesByMsgId[t]),
              (this._mapper = (e) => (n ? n.toInternalName(e) : e));
          else {
            if (this._missingTranslationStrategy === W.Error) {
              const n = this._locale ? ` for locale "${this._locale}"` : "";
              this._addError(
                e.nodes[0],
                `Missing translation for message "${t}"${n}`
              );
            } else if (
              this._console &&
              this._missingTranslationStrategy === W.Warning
            ) {
              const e = this._locale ? ` for locale "${this._locale}"` : "";
              this._console.warn(`Missing translation for message "${t}"${e}`);
            }
            (s = e.nodes), (this._mapper = (e) => e);
          }
          const i = s.map((e) => e.visit(this)).join(""),
            r = this._contextStack.pop();
          return (this._srcMsg = r.msg), (this._mapper = r.mapper), i;
        }
        _addError(e, t) {
          this._errors.push(new wd(e.sourceSpan, t));
        }
      }
      class sh {
        constructor(e, t, n, s = W.Warning, i) {
          if (((this._htmlParser = e), t)) {
            const e = (function (e) {
              switch ((e = (e || "xlf").toLowerCase())) {
                case "xmb":
                  return new Us();
                case "xtb":
                  return new Xd();
                case "xliff2":
                case "xlf2":
                  return new qd();
                case "xliff":
                case "xlf":
                default:
                  return new Ld();
              }
            })(n);
            this._translationBundle = th.load(t, "i18n", e, s, i);
          } else this._translationBundle = new th({}, null, ds, void 0, s, i);
        }
        parse(e, t, n = {}) {
          const s = n.interpolationConfig || Fi,
            i = this._htmlParser.parse(
              e,
              t,
              Object.assign({ interpolationConfig: s }, n)
            );
          return i.errors.length
            ? new Ba(i.rootNodes, i.errors)
            : (function (e, t, n, s, i) {
                return new Td(s, i).merge(e, t, n);
              })(i.rootNodes, this._translationBundle, s, [], {});
        }
      }
      function ih(e, t, n = null) {
        return Rt(t, new rh(e), n);
      }
      class rh {
        constructor(e) {
          this.ctx = e;
        }
        visitArray(e, t) {
          const n = [];
          for (let s = 0; s < e.length; ++s) n.push(Rt(e[s], this, null));
          return St(n, t);
        }
        visitStringMap(e, t) {
          const n = [],
            s = new Set(e && e.$quoted$);
          return (
            Object.keys(e).forEach((t) => {
              n.push(new We(t, Rt(e[t], this, null), s.has(t)));
            }),
            new Ye(n, t)
          );
        }
        visitPrimitive(e, t) {
          return It(e, t);
        }
        visitOther(e, t) {
          return e instanceof ge ? e : this.ctx.importExpr(e);
        }
      }
      function oh(e, t = !1) {
        const n = ah(e, t);
        return `${n[0]}.ngfactory${lh(n[1])}`;
      }
      function ah(e, t = !1) {
        if (e.endsWith(".d.ts")) return [e.slice(0, -5), t ? ".ts" : ".d.ts"];
        const n = e.lastIndexOf(".");
        return -1 !== n ? [e.substring(0, n), e.substring(n)] : [e, ""];
      }
      function lh(e) {
        return ".tsx" === e ? ".ts" : e;
      }
      var ch;
      !(function (e) {
        (e[(e.OnInit = 0)] = "OnInit"),
          (e[(e.OnDestroy = 1)] = "OnDestroy"),
          (e[(e.DoCheck = 2)] = "DoCheck"),
          (e[(e.OnChanges = 3)] = "OnChanges"),
          (e[(e.AfterContentInit = 4)] = "AfterContentInit"),
          (e[(e.AfterContentChecked = 5)] = "AfterContentChecked"),
          (e[(e.AfterViewInit = 6)] = "AfterViewInit"),
          (e[(e.AfterViewChecked = 7)] = "AfterViewChecked");
      })(ch || (ch = {}));
      const uh = [
        ch.OnInit,
        ch.OnDestroy,
        ch.DoCheck,
        ch.OnChanges,
        ch.AfterContentInit,
        ch.AfterContentChecked,
        ch.AfterViewInit,
        ch.AfterViewChecked,
      ];
      function dh(e, t, n) {
        return e.hasLifecycleHook(
          n,
          (function (e) {
            switch (e) {
              case ch.OnInit:
                return "ngOnInit";
              case ch.OnDestroy:
                return "ngOnDestroy";
              case ch.DoCheck:
                return "ngDoCheck";
              case ch.OnChanges:
                return "ngOnChanges";
              case ch.AfterContentInit:
                return "ngAfterContentInit";
              case ch.AfterContentChecked:
                return "ngAfterContentChecked";
              case ch.AfterViewInit:
                return "ngAfterViewInit";
              case ch.AfterViewChecked:
                return "ngAfterViewChecked";
              default:
                throw new Error("unexpected " + e);
            }
          })(t)
        );
      }
      class hh {
        constructor(e, t, n, s, i, r, o, a, l, c, u, d) {
          (this._config = e),
            (this._htmlParser = t),
            (this._ngModuleResolver = n),
            (this._directiveResolver = s),
            (this._pipeResolver = i),
            (this._summaryResolver = r),
            (this._schemaRegistry = o),
            (this._directiveNormalizer = a),
            (this._console = l),
            (this._staticSymbolCache = c),
            (this._reflector = u),
            (this._errorCollector = d),
            (this._nonNormalizedDirectiveCache = new Map()),
            (this._directiveCache = new Map()),
            (this._summaryCache = new Map()),
            (this._pipeCache = new Map()),
            (this._ngModuleCache = new Map()),
            (this._ngModuleOfTypes = new Map()),
            (this._shallowModuleCache = new Map());
        }
        getReflector() {
          return this._reflector;
        }
        clearCacheFor(e) {
          const t = this._directiveCache.get(e);
          this._directiveCache.delete(e),
            this._nonNormalizedDirectiveCache.delete(e),
            this._summaryCache.delete(e),
            this._pipeCache.delete(e),
            this._ngModuleOfTypes.delete(e),
            this._ngModuleCache.clear(),
            t && this._directiveNormalizer.clearCacheFor(t);
        }
        clearCache() {
          this._directiveCache.clear(),
            this._nonNormalizedDirectiveCache.clear(),
            this._summaryCache.clear(),
            this._pipeCache.clear(),
            this._ngModuleCache.clear(),
            this._ngModuleOfTypes.clear(),
            this._directiveNormalizer.clearCache();
        }
        _createProxyClass(e, t) {
          let n = null;
          const s = function () {
            if (!n)
              throw new Error(
                `Illegal state: Class ${t} for type ${Yt(
                  e
                )} is not compiled yet!`
              );
            return n.apply(this, arguments);
          };
          return (
            (s.setDelegate = (e) => {
              (n = e), (s.prototype = e.prototype);
            }),
            (s.overriddenName = t),
            s
          );
        }
        getGeneratedClass(e, t) {
          return e instanceof mn
            ? this._staticSymbolCache.get(oh(e.filePath), t)
            : this._createProxyClass(e, t);
        }
        getComponentViewClass(e) {
          return this.getGeneratedClass(e, _n(e, 0));
        }
        getHostComponentViewClass(e) {
          return this.getGeneratedClass(e, "HostView_" + bn({ reference: e }));
        }
        getHostComponentType(e) {
          const t = bn({ reference: e }) + "_Host";
          return e instanceof mn
            ? this._staticSymbolCache.get(e.filePath, t)
            : this._createProxyClass(e, t);
        }
        getRendererType(e) {
          return e instanceof mn
            ? this._staticSymbolCache.get(oh(e.filePath), wn(e))
            : {};
        }
        getComponentFactory(e, t, n, s) {
          if (t instanceof mn)
            return this._staticSymbolCache.get(oh(t.filePath), Cn(t));
          {
            const i = this.getHostComponentViewClass(t);
            return this._reflector.resolveExternalReference(
              dn.createComponentFactory
            )(e, t, i, n, s, []);
          }
        }
        initComponentFactory(e, t) {
          e instanceof mn || e.ngContentSelectors.push(...t);
        }
        _loadSummary(e, t) {
          let n = this._summaryCache.get(e);
          if (!n) {
            const t = this._summaryResolver.resolveSummary(e);
            (n = t ? t.type : null), this._summaryCache.set(e, n || null);
          }
          return n && n.summaryKind === t ? n : null;
        }
        getHostComponentMetadata(e, t) {
          const n = this.getHostComponentType(e.type.reference);
          t || (t = this.getHostComponentViewClass(n));
          const s = y.parse(e.selector)[0].getMatchingElementTemplate(),
            i = this._htmlParser.parse(s, "");
          return Tn.create({
            isHost: !0,
            type: { reference: n, diDeps: [], lifecycleHooks: [] },
            template: new In({
              encapsulation: T.None,
              template: s,
              templateUrl: "",
              htmlAst: i,
              styles: [],
              styleUrls: [],
              ngContentSelectors: [],
              animations: [],
              isInline: !0,
              externalStylesheets: [],
              interpolation: null,
              preserveWhitespaces: !1,
            }),
            exportAs: null,
            changeDetection: A.Default,
            inputs: [],
            outputs: [],
            host: {},
            isComponent: !0,
            selector: "*",
            providers: [],
            viewProviders: [],
            queries: [],
            guards: {},
            viewQueries: [],
            componentViewType: t,
            rendererType: {
              id: "__Host__",
              encapsulation: T.None,
              styles: [],
              data: {},
            },
            entryComponents: [],
            componentFactory: null,
          });
        }
        loadDirectiveMetadata(e, t, n) {
          if (this._directiveCache.has(t)) return null;
          t = Qt(t);
          const { annotation: s, metadata: i } =
              this.getNonNormalizedDirectiveMetadata(t),
            r = (e) => {
              const n = new Tn({
                isHost: !1,
                type: i.type,
                isComponent: i.isComponent,
                selector: i.selector,
                exportAs: i.exportAs,
                changeDetection: i.changeDetection,
                inputs: i.inputs,
                outputs: i.outputs,
                hostListeners: i.hostListeners,
                hostProperties: i.hostProperties,
                hostAttributes: i.hostAttributes,
                providers: i.providers,
                viewProviders: i.viewProviders,
                queries: i.queries,
                guards: i.guards,
                viewQueries: i.viewQueries,
                entryComponents: i.entryComponents,
                componentViewType: i.componentViewType,
                rendererType: i.rendererType,
                componentFactory: i.componentFactory,
                template: e,
              });
              return (
                e &&
                  this.initComponentFactory(
                    i.componentFactory,
                    e.ngContentSelectors
                  ),
                this._directiveCache.set(t, n),
                this._summaryCache.set(t, n.toSummary()),
                null
              );
            };
          if (i.isComponent) {
            const o = i.template,
              a = this._directiveNormalizer.normalizeTemplate({
                ngModuleType: e,
                componentType: t,
                moduleUrl: this._reflector.componentModuleUrl(t, s),
                encapsulation: o.encapsulation,
                template: o.template,
                templateUrl: o.templateUrl,
                styles: o.styles,
                styleUrls: o.styleUrls,
                animations: o.animations,
                interpolation: o.interpolation,
                preserveWhitespaces: o.preserveWhitespaces,
              });
            return Kt(a) && n
              ? (this._reportError(
                  (function (e) {
                    const t = Error(
                      `Can't compile synchronously as ${Yt(
                        e
                      )} is still being loaded!`
                    );
                    return (t.ngComponentType = e), t;
                  })(t),
                  t
                ),
                null)
              : Vt(a, r);
          }
          return r(null), null;
        }
        getNonNormalizedDirectiveMetadata(e) {
          if (!(e = Qt(e))) return null;
          let t = this._nonNormalizedDirectiveCache.get(e);
          if (t) return t;
          const n = this._directiveResolver.resolve(e, !1);
          if (!n) return null;
          let s = void 0;
          if (D.isTypeOf(n)) {
            const e = n;
            Pi("styles", e.styles),
              Pi("styleUrls", e.styleUrls),
              ji("interpolation", e.interpolation);
            const t = e.animations;
            s = new In({
              encapsulation: Nt(e.encapsulation),
              template: Nt(e.template),
              templateUrl: Nt(e.templateUrl),
              htmlAst: null,
              styles: e.styles || [],
              styleUrls: e.styleUrls || [],
              animations: t || [],
              interpolation: Nt(e.interpolation),
              isInline: !!e.template,
              externalStylesheets: [],
              ngContentSelectors: [],
              preserveWhitespaces: Nt(n.preserveWhitespaces),
            });
          }
          let i = null,
            r = [],
            o = [],
            a = n.selector;
          if (D.isTypeOf(n)) {
            const t = n;
            (i = t.changeDetection),
              t.viewProviders &&
                (r = this._getProvidersMetadata(
                  t.viewProviders,
                  o,
                  `viewProviders for "${yh(e)}"`,
                  [],
                  e
                )),
              t.entryComponents &&
                (o = mh(t.entryComponents)
                  .map((e) => this._getEntryComponentMetadata(e))
                  .concat(o)),
              a || (a = this._schemaRegistry.getDefaultComponentElementName());
          } else a || (a = null);
          let l = [];
          null != n.providers &&
            (l = this._getProvidersMetadata(
              n.providers,
              o,
              `providers for "${yh(e)}"`,
              [],
              e
            ));
          let c = [],
            u = [];
          null != n.queries &&
            ((c = this._getQueriesMetadata(n.queries, !1, e)),
            (u = this._getQueriesMetadata(n.queries, !0, e)));
          const d = Tn.create({
            isHost: !1,
            selector: a,
            exportAs: Nt(n.exportAs),
            isComponent: !!s,
            type: this._getTypeMetadata(e),
            template: s,
            changeDetection: i,
            inputs: n.inputs || [],
            outputs: n.outputs || [],
            host: n.host || {},
            providers: l || [],
            viewProviders: r || [],
            queries: c || [],
            guards: n.guards || {},
            viewQueries: u || [],
            entryComponents: o,
            componentViewType: s ? this.getComponentViewClass(e) : null,
            rendererType: s ? this.getRendererType(e) : null,
            componentFactory: null,
          });
          return (
            s &&
              (d.componentFactory = this.getComponentFactory(
                a,
                e,
                d.inputs,
                d.outputs
              )),
            (t = { metadata: d, annotation: n }),
            this._nonNormalizedDirectiveCache.set(e, t),
            t
          );
        }
        getDirectiveMetadata(e) {
          const t = this._directiveCache.get(e);
          return (
            t ||
              this._reportError(
                Ht(
                  `Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive ${yh(
                    e
                  )}.`
                ),
                e
              ),
            t
          );
        }
        getDirectiveSummary(e) {
          const t = this._loadSummary(e, Sn.Directive);
          return (
            t ||
              this._reportError(
                Ht(
                  `Illegal state: Could not load the summary for directive ${yh(
                    e
                  )}.`
                ),
                e
              ),
            t
          );
        }
        isDirective(e) {
          return (
            !!this._loadSummary(e, Sn.Directive) ||
            this._directiveResolver.isDirective(e)
          );
        }
        isAbstractDirective(e) {
          const t = this._loadSummary(e, Sn.Directive);
          if (t && !t.isComponent) return !t.selector;
          const n = this._directiveResolver.resolve(e, !1);
          return !(!n || D.isTypeOf(n)) && !n.selector;
        }
        isPipe(e) {
          return (
            !!this._loadSummary(e, Sn.Pipe) || this._pipeResolver.isPipe(e)
          );
        }
        isNgModule(e) {
          return (
            !!this._loadSummary(e, Sn.NgModule) ||
            this._ngModuleResolver.isNgModule(e)
          );
        }
        getNgModuleSummary(e, t = null) {
          let n = this._loadSummary(e, Sn.NgModule);
          if (!n) {
            const s = this.getNgModuleMetadata(e, !1, t);
            (n = s ? s.toSummary() : null), n && this._summaryCache.set(e, n);
          }
          return n;
        }
        loadNgModuleDirectiveAndPipeMetadata(e, t, n = !0) {
          const s = this.getNgModuleMetadata(e, n),
            i = [];
          return (
            s &&
              (s.declaredDirectives.forEach((n) => {
                const s = this.loadDirectiveMetadata(e, n.reference, t);
                s && i.push(s);
              }),
              s.declaredPipes.forEach((e) =>
                this._loadPipeMetadata(e.reference)
              )),
            Promise.all(i)
          );
        }
        getShallowModuleMetadata(e) {
          let t = this._shallowModuleCache.get(e);
          if (t) return t;
          const n = _d(this._reflector.shallowAnnotations(e), F.isTypeOf);
          return (
            (t = {
              type: this._getTypeMetadata(e),
              rawExports: n.exports,
              rawImports: n.imports,
              rawProviders: n.providers,
            }),
            this._shallowModuleCache.set(e, t),
            t
          );
        }
        getNgModuleMetadata(e, t = !0, n = null) {
          e = Qt(e);
          let s = this._ngModuleCache.get(e);
          if (s) return s;
          const i = this._ngModuleResolver.resolve(e, t);
          if (!i) return null;
          const r = [],
            o = [],
            a = [],
            l = [],
            c = [],
            u = [],
            d = [],
            h = [],
            p = [];
          i.imports &&
            mh(i.imports).forEach((t) => {
              let s = void 0;
              if (fh(t)) s = t;
              else if (t && t.ngModule) {
                const e = t;
                (s = e.ngModule),
                  e.providers &&
                    u.push(
                      ...this._getProvidersMetadata(
                        e.providers,
                        d,
                        `provider for the NgModule '${yh(s)}'`,
                        [],
                        t
                      )
                    );
              }
              if (s) {
                if (this._checkSelfImport(e, s)) return;
                if ((n || (n = new Set()), n.has(s)))
                  return void this._reportError(
                    Ht(
                      `${this._getTypeDescriptor(s)} '${yh(
                        t
                      )}' is imported recursively by the module '${yh(e)}'.`
                    ),
                    e
                  );
                n.add(s);
                const i = this.getNgModuleSummary(s, n);
                if ((n.delete(s), !i))
                  return void this._reportError(
                    Ht(
                      `Unexpected ${this._getTypeDescriptor(t)} '${yh(
                        t
                      )}' imported by the module '${yh(
                        e
                      )}'. Please add a @NgModule annotation.`
                    ),
                    e
                  );
                l.push(i);
              } else
                this._reportError(
                  Ht(
                    `Unexpected value '${yh(t)}' imported by the module '${yh(
                      e
                    )}'`
                  ),
                  e
                );
            }),
            i.exports &&
              mh(i.exports).forEach((t) => {
                if (!fh(t))
                  return void this._reportError(
                    Ht(
                      `Unexpected value '${yh(t)}' exported by the module '${yh(
                        e
                      )}'`
                    ),
                    e
                  );
                if ((n || (n = new Set()), n.has(t)))
                  return void this._reportError(
                    Ht(
                      `${this._getTypeDescriptor(t)} '${Yt(
                        t
                      )}' is exported recursively by the module '${yh(e)}'`
                    ),
                    e
                  );
                n.add(t);
                const s = this.getNgModuleSummary(t, n);
                n.delete(t),
                  s ? c.push(s) : o.push(this._getIdentifierMetadata(t));
              });
          const m = this._getTransitiveNgModuleMetadata(l, c);
          i.declarations &&
            mh(i.declarations).forEach((t) => {
              if (!fh(t))
                return void this._reportError(
                  Ht(
                    `Unexpected value '${yh(t)}' declared by the module '${yh(
                      e
                    )}'`
                  ),
                  e
                );
              const n = this._getIdentifierMetadata(t);
              if (this.isDirective(t))
                this.isAbstractDirective(t) &&
                  this._reportError(
                    Ht(`Directive ${yh(t)} has no selector, please add it!`),
                    t
                  ),
                  m.addDirective(n),
                  r.push(n),
                  this._addTypeToModule(t, e);
              else {
                if (!this.isPipe(t))
                  return void this._reportError(
                    Ht(
                      `Unexpected ${this._getTypeDescriptor(t)} '${yh(
                        t
                      )}' declared by the module '${yh(
                        e
                      )}'. Please add a @Pipe/@Directive/@Component annotation.`
                    ),
                    e
                  );
                m.addPipe(n),
                  m.pipes.push(n),
                  a.push(n),
                  this._addTypeToModule(t, e);
              }
            });
          const f = [],
            g = [];
          return (
            o.forEach((t) => {
              if (m.directivesSet.has(t.reference))
                f.push(t), m.addExportedDirective(t);
              else {
                if (!m.pipesSet.has(t.reference))
                  return void this._reportError(
                    Ht(
                      `Can't export ${this._getTypeDescriptor(
                        t.reference
                      )} ${yh(t.reference)} from ${yh(
                        e
                      )} as it was neither declared nor imported!`
                    ),
                    e
                  );
                g.push(t), m.addExportedPipe(t);
              }
            }),
            i.providers &&
              u.push(
                ...this._getProvidersMetadata(
                  i.providers,
                  d,
                  `provider for the NgModule '${yh(e)}'`,
                  [],
                  e
                )
              ),
            i.entryComponents &&
              d.push(
                ...mh(i.entryComponents).map((e) =>
                  this._getEntryComponentMetadata(e)
                )
              ),
            i.bootstrap &&
              mh(i.bootstrap).forEach((t) => {
                fh(t)
                  ? h.push(this._getIdentifierMetadata(t))
                  : this._reportError(
                      Ht(
                        `Unexpected value '${yh(
                          t
                        )}' used in the bootstrap property of module '${yh(e)}'`
                      ),
                      e
                    );
              }),
            d.push(
              ...h.map((e) => this._getEntryComponentMetadata(e.reference))
            ),
            i.schemas && p.push(...mh(i.schemas)),
            (s = new Dn({
              type: this._getTypeMetadata(e),
              providers: u,
              entryComponents: d,
              bootstrapComponents: h,
              schemas: p,
              declaredDirectives: r,
              exportedDirectives: f,
              declaredPipes: a,
              exportedPipes: g,
              importedModules: l,
              exportedModules: c,
              transitiveModule: m,
              id: i.id || null,
            })),
            d.forEach((e) => m.addEntryComponent(e)),
            u.forEach((e) => m.addProvider(e, s.type)),
            m.addModule(s.type),
            this._ngModuleCache.set(e, s),
            s
          );
        }
        _checkSelfImport(e, t) {
          return (
            e === t &&
            (this._reportError(Ht(`'${yh(e)}' module can't import itself`), e),
            !0)
          );
        }
        _getTypeDescriptor(e) {
          if (fh(e)) {
            if (this.isDirective(e)) return "directive";
            if (this.isPipe(e)) return "pipe";
            if (this.isNgModule(e)) return "module";
          }
          return e.provide ? "provider" : "value";
        }
        _addTypeToModule(e, t) {
          const n = this._ngModuleOfTypes.get(e);
          n && n !== t
            ? this._reportError(
                Ht(
                  `Type ${yh(e)} is part of the declarations of 2 modules: ${yh(
                    n
                  )} and ${yh(t)}! Please consider moving ${yh(
                    e
                  )} to a higher module that imports ${yh(n)} and ${yh(
                    t
                  )}. You can also create a new NgModule that exports and includes ${yh(
                    e
                  )} then import that NgModule in ${yh(n)} and ${yh(t)}.`
                ),
                t
              )
            : this._ngModuleOfTypes.set(e, t);
        }
        _getTransitiveNgModuleMetadata(e, t) {
          const n = new Mn(),
            s = new Map();
          return (
            e.concat(t).forEach((e) => {
              e.modules.forEach((e) => n.addModule(e)),
                e.entryComponents.forEach((e) => n.addEntryComponent(e));
              const t = new Set();
              e.providers.forEach((e) => {
                const i = kn(e.provider.token);
                let r = s.get(i);
                r || ((r = new Set()), s.set(i, r));
                const o = e.module.reference;
                (!t.has(i) && r.has(o)) ||
                  (r.add(o), t.add(i), n.addProvider(e.provider, e.module));
              });
            }),
            t.forEach((e) => {
              e.exportedDirectives.forEach((e) => n.addExportedDirective(e)),
                e.exportedPipes.forEach((e) => n.addExportedPipe(e));
            }),
            e.forEach((e) => {
              e.exportedDirectives.forEach((e) => n.addDirective(e)),
                e.exportedPipes.forEach((e) => n.addPipe(e));
            }),
            n
          );
        }
        _getIdentifierMetadata(e) {
          return { reference: (e = Qt(e)) };
        }
        isInjectable(e) {
          return this._reflector.tryAnnotations(e).some((e) => L.isTypeOf(e));
        }
        getInjectableSummary(e) {
          return {
            summaryKind: Sn.Injectable,
            type: this._getTypeMetadata(e, null, !1),
          };
        }
        getInjectableMetadata(e, t = null, n = !0) {
          const s = this._loadSummary(e, Sn.Injectable),
            i = s ? s.type : this._getTypeMetadata(e, t, n),
            r = this._reflector.annotations(e).filter((e) => L.isTypeOf(e));
          if (0 === r.length) return null;
          const o = r[r.length - 1];
          return {
            symbol: e,
            type: i,
            providedIn: o.providedIn,
            useValue: o.useValue,
            useClass: o.useClass,
            useExisting: o.useExisting,
            useFactory: o.useFactory,
            deps: o.deps,
          };
        }
        _getTypeMetadata(e, t = null, n = !0) {
          const s = this._getIdentifierMetadata(e);
          return {
            reference: s.reference,
            diDeps: this._getDependenciesMetadata(s.reference, t, n),
            lifecycleHooks:
              ((i = this._reflector),
              (r = s.reference),
              uh.filter((e) => dh(i, e, r))),
          };
          var i, r;
        }
        _getFactoryMetadata(e, t = null) {
          return {
            reference: (e = Qt(e)),
            diDeps: this._getDependenciesMetadata(e, t),
          };
        }
        getPipeMetadata(e) {
          const t = this._pipeCache.get(e);
          return (
            t ||
              this._reportError(
                Ht(
                  `Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe ${yh(
                    e
                  )}.`
                ),
                e
              ),
            t || null
          );
        }
        getPipeSummary(e) {
          const t = this._loadSummary(e, Sn.Pipe);
          return (
            t ||
              this._reportError(
                Ht(
                  `Illegal state: Could not load the summary for pipe ${yh(e)}.`
                ),
                e
              ),
            t
          );
        }
        getOrLoadPipeMetadata(e) {
          let t = this._pipeCache.get(e);
          return t || (t = this._loadPipeMetadata(e)), t;
        }
        _loadPipeMetadata(e) {
          e = Qt(e);
          const t = this._pipeResolver.resolve(e),
            n = new An({
              type: this._getTypeMetadata(e),
              name: t.name,
              pure: !!t.pure,
            });
          return (
            this._pipeCache.set(e, n),
            this._summaryCache.set(e, n.toSummary()),
            n
          );
        }
        _getDependenciesMetadata(e, t, n = !0) {
          let s = !1;
          const i = (t || this._reflector.parameters(e) || []).map((e) => {
            let t = !1,
              n = !1,
              i = !1,
              r = !1,
              o = !1,
              a = null;
            return (
              Array.isArray(e)
                ? e.forEach((e) => {
                    U.isTypeOf(e)
                      ? (n = !0)
                      : H.isTypeOf(e)
                      ? (i = !0)
                      : G.isTypeOf(e)
                      ? (r = !0)
                      : z.isTypeOf(e)
                      ? (o = !0)
                      : C.isTypeOf(e)
                      ? ((t = !0), (a = e.attributeName))
                      : _.isTypeOf(e)
                      ? (a = e.token)
                      : (w.isTypeOf(e) ||
                          e instanceof mn ||
                          (fh(e) && null == a)) &&
                        (a = e);
                  })
                : (a = e),
              null == a
                ? ((s = !0), {})
                : {
                    isAttribute: t,
                    isHost: n,
                    isSelf: i,
                    isSkipSelf: r,
                    isOptional: o,
                    token: this._getTokenMetadata(a),
                  }
            );
          });
          if (s) {
            const t = i.map((e) => (e.token ? yh(e.token) : "?")).join(", "),
              s = `Can't resolve all parameters for ${yh(e)}: (${t}).`;
            (n || this._config.strictInjectionParameters) &&
              this._reportError(Ht(s), e);
          }
          return i;
        }
        _getTokenMetadata(e) {
          let t;
          return (
            (t =
              "string" == typeof (e = Qt(e))
                ? { value: e }
                : { identifier: { reference: e } }),
            t
          );
        }
        _getProvidersMetadata(e, t, n, s = [], i) {
          return (
            e.forEach((r, o) => {
              if (Array.isArray(r)) this._getProvidersMetadata(r, t, n, s);
              else {
                let a = void 0;
                if (
                  (r = Qt(r)) &&
                  "object" == typeof r &&
                  r.hasOwnProperty("provide")
                )
                  this._validateProvider(r), (a = new Rn(r.provide, r));
                else {
                  if (!fh(r)) {
                    if (void 0 === r)
                      return void this._reportError(
                        Ht(
                          "Encountered undefined provider! Usually this means you have a circular dependencies. This might be caused by using 'barrel' index.ts files."
                        )
                      );
                    {
                      const t = e
                        .reduce(
                          (e, t, n) => (
                            n < o
                              ? e.push("" + yh(t))
                              : n == o
                              ? e.push(`?${yh(t)}?`)
                              : n == o + 1 && e.push("..."),
                            e
                          ),
                          []
                        )
                        .join(", ");
                      return void this._reportError(
                        Ht(
                          `Invalid ${
                            n || "provider"
                          } - only instances of Provider and Type are allowed, got: [${t}]`
                        ),
                        i
                      );
                    }
                  }
                  a = new Rn(r, { useClass: r });
                }
                a.token ===
                this._reflector.resolveExternalReference(
                  dn.ANALYZE_FOR_ENTRY_COMPONENTS
                )
                  ? t.push(...this._getEntryComponentsFromProvider(a, i))
                  : s.push(this.getProviderMetadata(a));
              }
            }),
            s
          );
        }
        _validateProvider(e) {
          e.hasOwnProperty("useClass") &&
            null == e.useClass &&
            this._reportError(
              Ht(
                `Invalid provider for ${yh(e.provide)}. useClass cannot be ${
                  e.useClass
                }.\n           Usually it happens when:\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\n           2. Class was used before it was declared. Use forwardRef in this case.`
              )
            );
        }
        _getEntryComponentsFromProvider(e, t) {
          const n = [],
            s = [];
          return e.useFactory || e.useExisting || e.useClass
            ? (this._reportError(
                Ht(
                  "The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!"
                ),
                t
              ),
              [])
            : e.multi
            ? ((i = e.useValue),
              (r = s),
              Rt(i, new gh(), r),
              s.forEach((e) => {
                const t = this._getEntryComponentMetadata(e.reference, !1);
                t && n.push(t);
              }),
              n)
            : (this._reportError(
                Ht(
                  "The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!"
                ),
                t
              ),
              []);
          var i, r;
        }
        _getEntryComponentMetadata(e, t = !0) {
          const n = this.getNonNormalizedDirectiveMetadata(e);
          if (n && n.metadata.isComponent)
            return {
              componentType: e,
              componentFactory: n.metadata.componentFactory,
            };
          const s = this._loadSummary(e, Sn.Directive);
          if (s && s.isComponent)
            return { componentType: e, componentFactory: s.componentFactory };
          if (t) throw Ht(e.name + " cannot be used as an entry component.");
          return null;
        }
        _getInjectableTypeMetadata(e, t = null) {
          const n = this._loadSummary(e, Sn.Injectable);
          return n ? n.type : this._getTypeMetadata(e, t);
        }
        getProviderMetadata(e) {
          let t = void 0,
            n = null,
            s = null,
            i = this._getTokenMetadata(e.token);
          return (
            e.useClass
              ? ((n = this._getInjectableTypeMetadata(
                  e.useClass,
                  e.dependencies
                )),
                (t = n.diDeps),
                e.token === e.useClass && (i = { identifier: n }))
              : e.useFactory &&
                ((s = this._getFactoryMetadata(e.useFactory, e.dependencies)),
                (t = s.diDeps)),
            {
              token: i,
              useClass: n,
              useValue: e.useValue,
              useFactory: s,
              useExisting: e.useExisting
                ? this._getTokenMetadata(e.useExisting)
                : void 0,
              deps: t,
              multi: e.multi,
            }
          );
        }
        _getQueriesMetadata(e, t, n) {
          const s = [];
          return (
            Object.keys(e).forEach((i) => {
              const r = e[i];
              r.isViewQuery === t && s.push(this._getQueryMetadata(r, i, n));
            }),
            s
          );
        }
        _queryVarBindings(e) {
          return e.split(/\s*,\s*/);
        }
        _getQueryMetadata(e, t, n) {
          let s;
          return (
            "string" == typeof e.selector
              ? (s = this._queryVarBindings(e.selector).map((e) =>
                  this._getTokenMetadata(e)
                ))
              : e.selector
              ? (s = [this._getTokenMetadata(e.selector)])
              : (this._reportError(
                  Ht(
                    `Can't construct a query for the property "${t}" of "${yh(
                      n
                    )}" since the query selector wasn't defined.`
                  ),
                  n
                ),
                (s = [])),
            {
              selectors: s,
              first: e.first,
              descendants: e.descendants,
              propertyName: t,
              read: e.read ? this._getTokenMetadata(e.read) : null,
              static: e.static,
            }
          );
        }
        _reportError(e, t, n) {
          if (!this._errorCollector) throw e;
          this._errorCollector(e, t), n && this._errorCollector(e, n);
        }
      }
      function ph(e, t = []) {
        if (e)
          for (let n = 0; n < e.length; n++) {
            const s = Qt(e[n]);
            Array.isArray(s) ? ph(s, t) : t.push(s);
          }
        return t;
      }
      function mh(e) {
        return (t = ph(e)) ? Array.from(new Set(t)) : [];
        var t;
      }
      function fh(e) {
        return e instanceof mn || e instanceof $;
      }
      class gh extends Ft {
        visitOther(e, t) {
          t.push({ reference: e });
        }
      }
      function yh(e) {
        return e instanceof mn ? `${e.name} in ${e.filePath}` : Yt(e);
      }
      function vh(e, t) {
        let n = 0;
        t.eager || (n |= 4096),
          t.providerType === yl.PrivateService && (n |= 8192),
          t.isModule && (n |= 1073741824),
          t.lifecycleHooks.forEach((e) => {
            (e !== ch.OnDestroy &&
              t.providerType !== yl.Directive &&
              t.providerType !== yl.Component) ||
              (n |= wh(e));
          });
        const {
          providerExpr: s,
          flags: i,
          depsExpr: r,
        } = t.multiProvider
          ? (function (e, t, n) {
              const s = [],
                i = [],
                r = n.map((t, n) => {
                  let s;
                  if (t.useClass) {
                    const i = o(n, t.deps || t.useClass.diDeps);
                    s = e.importExpr(t.useClass.reference).instantiate(i);
                  } else if (t.useFactory) {
                    const i = o(n, t.deps || t.useFactory.diDeps);
                    s = e.importExpr(t.useFactory.reference).callFn(i);
                  } else if (t.useExisting) {
                    s = o(n, [{ token: t.useExisting }])[0];
                  } else s = ih(e, t.useValue);
                  return s;
                });
              return {
                providerExpr: kt(i, [new rt(St(r))], re),
                flags: 1024 | t,
                depsExpr: St(s),
              };
              function o(t, n) {
                return n.map((n, r) => {
                  const o = `p${t}_${r}`;
                  return i.push(new Be(o, ie)), s.push(_h(e, n)), bt(o);
                });
              }
            })(e, n, t.providers)
          : bh(e, n, t.providerType, t.providers[0]);
        return {
          providerExpr: s,
          flags: i,
          depsExpr: r,
          tokenExpr: xh(e, t.token),
        };
      }
      function bh(e, t, n, s) {
        let i, r;
        n === yl.Directive || n === yl.Component
          ? ((i = e.importExpr(s.useClass.reference)),
            (t |= 16384),
            (r = s.deps || s.useClass.diDeps))
          : s.useClass
          ? ((i = e.importExpr(s.useClass.reference)),
            (t |= 512),
            (r = s.deps || s.useClass.diDeps))
          : s.useFactory
          ? ((i = e.importExpr(s.useFactory.reference)),
            (t |= 1024),
            (r = s.deps || s.useFactory.diDeps))
          : s.useExisting
          ? ((i = Ke), (t |= 2048), (r = [{ token: s.useExisting }]))
          : ((i = ih(e, s.useValue)), (t |= 256), (r = []));
        return {
          providerExpr: i,
          flags: t,
          depsExpr: St(r.map((t) => _h(e, t))),
        };
      }
      function xh(e, t) {
        return t.identifier
          ? e.importExpr(t.identifier.reference)
          : It(t.value);
      }
      function _h(e, t) {
        const n = t.isValue ? ih(e, t.value) : xh(e, t.token);
        let s = 0;
        return (
          t.isSkipSelf && (s |= 1),
          t.isOptional && (s |= 2),
          t.isSelf && (s |= 4),
          t.isValue && (s |= 8),
          0 === s ? n : St([It(s), n])
        );
      }
      function wh(e) {
        let t = 0;
        switch (e) {
          case ch.AfterContentChecked:
            t = 2097152;
            break;
          case ch.AfterContentInit:
            t = 1048576;
            break;
          case ch.AfterViewChecked:
            t = 8388608;
            break;
          case ch.AfterViewInit:
            t = 4194304;
            break;
          case ch.DoCheck:
            t = 262144;
            break;
          case ch.OnChanges:
            t = 524288;
            break;
          case ch.OnDestroy:
            t = 131072;
            break;
          case ch.OnInit:
            t = 65536;
        }
        return t;
      }
      function Ch(e, t, n, s) {
        const i = s.map((e) => t.importExpr(e.componentFactory)),
          r = pn(e, dn.ComponentFactoryResolver),
          o = {
            diDeps: [
              { isValue: !0, value: St(i) },
              { token: r, isSkipSelf: !0, isOptional: !0 },
              { token: pn(e, dn.NgModuleRef) },
            ],
            lifecycleHooks: [],
            reference: e.resolveExternalReference(
              dn.CodegenComponentFactoryResolver
            ),
          },
          {
            providerExpr: a,
            flags: l,
            depsExpr: c,
          } = bh(t, n, yl.PrivateService, { token: r, multi: !1, useClass: o });
        return { providerExpr: a, flags: l, depsExpr: c, tokenExpr: xh(t, r) };
      }
      class Sh {
        constructor(e) {
          this.ngModuleFactoryVar = e;
        }
      }
      const Eh = bt("_l");
      class kh {
        constructor(e) {
          this.reflector = e;
        }
        compile(e, t, n) {
          const s = (function (e, t) {
              const n = xn(t),
                s = null != n ? `in ${e} ${bn(t)} in ${n}` : `in ${e} ${bn(t)}`,
                i = new br("", s);
              return new xr(new vr(i, -1, -1, -1), new vr(i, -1, -1, -1));
            })("NgModule", t.type),
            i = t.transitiveModule.entryComponents,
            r = t.bootstrapComponents,
            o = new Cl(this.reflector, t, n, s),
            a = [Ch(this.reflector, e, 0, i)]
              .concat(o.parse().map((t) => vh(e, t)))
              .map(({ providerExpr: e, depsExpr: t, flags: n, tokenExpr: s }) =>
                xt(dn.moduleProviderDef).callFn([It(n), s, e, t])
              ),
            l = xt(dn.moduleDef).callFn([St(a)]),
            c = kt([new Be(Eh.name)], [new rt(l)], re),
            u = bn(t.type) + "NgFactory";
          if (
            (this._createNgModuleFactory(
              e,
              t.type.reference,
              xt(dn.createModuleFactory).callFn([
                e.importExpr(t.type.reference),
                St(r.map((t) => e.importExpr(t.reference))),
                c,
              ])
            ),
            t.id)
          ) {
            const n = "string" == typeof t.id ? It(t.id) : e.importExpr(t.id),
              s = xt(dn.RegisterModuleFactoryFn)
                .callFn([n, bt(u)])
                .toStmt();
            e.statements.push(s);
          }
          return new Sh(u);
        }
        createStub(e, t) {
          this._createNgModuleFactory(e, t, Ke);
        }
        _createNgModuleFactory(e, t, n) {
          const s = bt(bn({ reference: t }) + "NgFactory")
            .set(n)
            .toDeclStmt(
              _t(dn.NgModuleFactory, [wt(e.importExpr(t))], [J.Const]),
              [Xe.Final, Xe.Exported]
            );
          e.statements.push(s);
        }
      }
      class Oh {
        constructor(e) {
          this._reflector = e;
        }
        isNgModule(e) {
          return this._reflector.annotations(e).some(F.isTypeOf);
        }
        resolve(e, t = !0) {
          const n = _d(this._reflector.annotations(e), F.isTypeOf);
          if (n) return n;
          if (t) throw new Error(`No NgModule metadata found for '${Yt(e)}'.`);
          return null;
        }
      }
      class Ih extends Yi {
        constructor(e, t) {
          super(!1),
            (this.referenceFilter = e),
            (this.importFilter = t),
            (this.typeExpression = 0),
            (this.importsWithPrefixes = new Map()),
            (this.reexports = new Map());
        }
        visitType(e, t, n = "any") {
          e
            ? (this.typeExpression++,
              e.visitType(this, t),
              this.typeExpression--)
            : t.print(null, n);
        }
        visitLiteralExpr(e, t) {
          const n = e.value;
          return null == n && e.type != re
            ? (t.print(e, `(${n} as any)`), null)
            : super.visitLiteralExpr(e, t);
        }
        visitLiteralArrayExpr(e, t) {
          0 === e.entries.length && t.print(e, "(");
          const n = super.visitLiteralArrayExpr(e, t);
          return 0 === e.entries.length && t.print(e, " as any[])"), n;
        }
        visitExternalExpr(e, t) {
          return this._visitIdentifier(e.value, e.typeParams, t), null;
        }
        visitAssertNotNullExpr(e, t) {
          const n = super.visitAssertNotNullExpr(e, t);
          return t.print(e, "!"), n;
        }
        visitDeclareVarStmt(e, t) {
          if (e.hasModifier(Xe.Exported) && e.value instanceof je && !e.type) {
            const { name: t, moduleName: n } = e.value.value;
            if (n) {
              let s = this.reexports.get(n);
              return (
                s || ((s = []), this.reexports.set(n, s)),
                s.push({ name: t, as: e.name }),
                null
              );
            }
          }
          return (
            e.hasModifier(Xe.Exported) && t.print(e, "export "),
            e.hasModifier(Xe.Final) ? t.print(e, "const") : t.print(e, "var"),
            t.print(e, " " + e.name),
            this._printColonType(e.type, t),
            e.value && (t.print(e, " = "), e.value.visitExpression(this, t)),
            t.println(e, ";"),
            null
          );
        }
        visitWrappedNodeExpr(e, t) {
          throw new Error(
            "Cannot visit a WrappedNodeExpr when outputting Typescript."
          );
        }
        visitCastExpr(e, t) {
          return (
            t.print(e, "(<"),
            e.type.visitType(this, t),
            t.print(e, ">"),
            e.value.visitExpression(this, t),
            t.print(e, ")"),
            null
          );
        }
        visitInstantiateExpr(e, t) {
          return (
            t.print(e, "new "),
            this.typeExpression++,
            e.classExpr.visitExpression(this, t),
            this.typeExpression--,
            t.print(e, "("),
            this.visitAllExpressions(e.args, t, ","),
            t.print(e, ")"),
            null
          );
        }
        visitDeclareClassStmt(e, t) {
          return (
            t.pushClass(e),
            e.hasModifier(Xe.Exported) && t.print(e, "export "),
            t.print(e, "class " + e.name),
            null != e.parent &&
              (t.print(e, " extends "),
              this.typeExpression++,
              e.parent.visitExpression(this, t),
              this.typeExpression--),
            t.println(e, " {"),
            t.incIndent(),
            e.fields.forEach((e) => this._visitClassField(e, t)),
            null != e.constructorMethod && this._visitClassConstructor(e, t),
            e.getters.forEach((e) => this._visitClassGetter(e, t)),
            e.methods.forEach((e) => this._visitClassMethod(e, t)),
            t.decIndent(),
            t.println(e, "}"),
            t.popClass(),
            null
          );
        }
        _visitClassField(e, t) {
          e.hasModifier(Xe.Private) && t.print(null, "/*private*/ "),
            e.hasModifier(Xe.Static) && t.print(null, "static "),
            t.print(null, e.name),
            this._printColonType(e.type, t),
            e.initializer &&
              (t.print(null, " = "), e.initializer.visitExpression(this, t)),
            t.println(null, ";");
        }
        _visitClassGetter(e, t) {
          e.hasModifier(Xe.Private) && t.print(null, "private "),
            t.print(null, `get ${e.name}()`),
            this._printColonType(e.type, t),
            t.println(null, " {"),
            t.incIndent(),
            this.visitAllStatements(e.body, t),
            t.decIndent(),
            t.println(null, "}");
        }
        _visitClassConstructor(e, t) {
          t.print(e, "constructor("),
            this._visitParams(e.constructorMethod.params, t),
            t.println(e, ") {"),
            t.incIndent(),
            this.visitAllStatements(e.constructorMethod.body, t),
            t.decIndent(),
            t.println(e, "}");
        }
        _visitClassMethod(e, t) {
          e.hasModifier(Xe.Private) && t.print(null, "private "),
            t.print(null, e.name + "("),
            this._visitParams(e.params, t),
            t.print(null, ")"),
            this._printColonType(e.type, t, "void"),
            t.println(null, " {"),
            t.incIndent(),
            this.visitAllStatements(e.body, t),
            t.decIndent(),
            t.println(null, "}");
        }
        visitFunctionExpr(e, t) {
          return (
            e.name && (t.print(e, "function "), t.print(e, e.name)),
            t.print(e, "("),
            this._visitParams(e.params, t),
            t.print(e, ")"),
            this._printColonType(e.type, t, "void"),
            e.name || t.print(e, " => "),
            t.println(e, "{"),
            t.incIndent(),
            this.visitAllStatements(e.statements, t),
            t.decIndent(),
            t.print(e, "}"),
            null
          );
        }
        visitDeclareFunctionStmt(e, t) {
          return (
            e.hasModifier(Xe.Exported) && t.print(e, "export "),
            t.print(e, `function ${e.name}(`),
            this._visitParams(e.params, t),
            t.print(e, ")"),
            this._printColonType(e.type, t, "void"),
            t.println(e, " {"),
            t.incIndent(),
            this.visitAllStatements(e.statements, t),
            t.decIndent(),
            t.println(e, "}"),
            null
          );
        }
        visitTryCatchStmt(e, t) {
          t.println(e, "try {"),
            t.incIndent(),
            this.visitAllStatements(e.bodyStmts, t),
            t.decIndent(),
            t.println(e, `} catch (${Ui.name}) {`),
            t.incIndent();
          const n = [
            $i.set(Ui.prop("stack", null)).toDeclStmt(null, [Xe.Final]),
          ].concat(e.catchStmts);
          return (
            this.visitAllStatements(n, t),
            t.decIndent(),
            t.println(e, "}"),
            null
          );
        }
        visitBuiltinType(e, t) {
          let n;
          switch (e.name) {
            case X.Bool:
              n = "boolean";
              break;
            case X.Dynamic:
              n = "any";
              break;
            case X.Function:
              n = "Function";
              break;
            case X.Number:
            case X.Int:
              n = "number";
              break;
            case X.String:
              n = "string";
              break;
            case X.None:
              n = "never";
              break;
            default:
              throw new Error("Unsupported builtin type " + e.name);
          }
          return t.print(null, n), null;
        }
        visitExpressionType(e, t) {
          return (
            e.value.visitExpression(this, t),
            null !== e.typeParams &&
              (t.print(null, "<"),
              this.visitAllObjects(
                (e) => this.visitType(e, t),
                e.typeParams,
                t,
                ","
              ),
              t.print(null, ">")),
            null
          );
        }
        visitArrayType(e, t) {
          return this.visitType(e.of, t), t.print(null, "[]"), null;
        }
        visitMapType(e, t) {
          return (
            t.print(null, "{[key: string]:"),
            this.visitType(e.valueType, t),
            t.print(null, "}"),
            null
          );
        }
        getBuiltinMethodName(e) {
          let t;
          switch (e) {
            case pe.ConcatArray:
              t = "concat";
              break;
            case pe.SubscribeObservable:
              t = "subscribe";
              break;
            case pe.Bind:
              t = "bind";
              break;
            default:
              throw new Error("Unknown builtin method: " + e);
          }
          return t;
        }
        _visitParams(e, t) {
          this.visitAllObjects(
            (e) => {
              t.print(null, e.name), this._printColonType(e.type, t);
            },
            e,
            t,
            ","
          );
        }
        _visitIdentifier(e, t, n) {
          const { name: s, moduleName: i } = e;
          if (this.referenceFilter && this.referenceFilter(e))
            n.print(null, "(null as any)");
          else {
            if (i && (!this.importFilter || !this.importFilter(e))) {
              let e = this.importsWithPrefixes.get(i);
              null == e &&
                ((e = "i" + this.importsWithPrefixes.size),
                this.importsWithPrefixes.set(i, e)),
                n.print(null, e + ".");
            }
            if ((n.print(null, s), this.typeExpression > 0)) {
              (t || []).length > 0 &&
                (n.print(null, "<"),
                this.visitAllObjects((e) => e.visitType(this, n), t, n, ","),
                n.print(null, ">"));
            }
          }
        }
        _printColonType(e, t, n) {
          e !== re && (t.print(null, ":"), this.visitType(e, t, n));
        }
      }
      class Th {
        constructor(e) {
          this._reflector = e;
        }
        isPipe(e) {
          const t = this._reflector.annotations(Qt(e));
          return t && t.some(M.isTypeOf);
        }
        resolve(e, t = !0) {
          const n = this._reflector.annotations(Qt(e));
          if (n) {
            const e = _d(n, M.isTypeOf);
            if (e) return e;
          }
          if (t) throw new Error("No Pipe decorator found on " + Yt(e));
          return null;
        }
      }
      const Ah = "_any";
      new (class {
        notifyImplicitReceiverUse() {}
        getLocal(e) {
          return e === fo.event.name ? bt(Ah) : null;
        }
      })();
      const Dh = "class",
        Mh = "style";
      class Ph {
        constructor(e, t) {
          (this.viewClassVar = e), (this.rendererTypeVar = t);
        }
      }
      class Rh {
        constructor(e) {
          this._reflector = e;
        }
        compileComponent(e, t, n, s, i) {
          let r = 0,
            o = void 0;
          if (!t.isHost) {
            const n = t.template,
              i = [];
            n.animations &&
              n.animations.length &&
              i.push(new We("animation", ih(e, n.animations), !0));
            const r = bt(wn(t.type.reference));
            (o = r.name),
              e.statements.push(
                r
                  .set(
                    xt(dn.createRendererType2).callFn([
                      new Ye([
                        new We("encapsulation", It(n.encapsulation), !1),
                        new We("styles", s, !1),
                        new We("data", new Ye(i), !1),
                      ]),
                    ])
                  )
                  .toDeclStmt(_t(dn.RendererType2), [Xe.Final, Xe.Exported])
              );
          }
          const a = (n) => {
              const s = r++;
              return new zh(this._reflector, e, n, t, s, i, a);
            },
            l = a(null);
          return (
            l.visitAll([], n),
            e.statements.push(...l.build()),
            new Ph(l.viewName, o)
          );
        }
      }
      const jh = bt("_l"),
        Nh = bt("_v"),
        Fh = bt("_ck"),
        Lh = bt("_co"),
        Vh = bt("en"),
        Bh = bt("ad");
      class zh {
        constructor(e, t, n, s, i, r, o) {
          (this.reflector = e),
            (this.outputCtx = t),
            (this.parent = n),
            (this.component = s),
            (this.embeddedViewIndex = i),
            (this.usedPipes = r),
            (this.viewBuilderFactory = o),
            (this.nodes = []),
            (this.purePipeNodeIndices = Object.create(null)),
            (this.refNodeIndices = Object.create(null)),
            (this.variables = []),
            (this.children = []),
            (this.compType =
              this.embeddedViewIndex > 0
                ? ie
                : wt(t.importExpr(this.component.type.reference))),
            (this.viewName = _n(
              this.component.type.reference,
              this.embeddedViewIndex
            ));
        }
        visitAll(e, t) {
          (this.variables = e),
            this.parent ||
              this.usedPipes.forEach((e) => {
                e.pure &&
                  (this.purePipeNodeIndices[e.name] = this._createPipe(
                    null,
                    e
                  ));
              }),
            this.parent ||
              this.component.viewQueries.forEach((e, t) => {
                const n = t + 1,
                  s = e.first ? 0 : 1,
                  i = 134217728 | Wh(e);
                this.nodes.push(() => ({
                  sourceSpan: null,
                  nodeFlags: i,
                  nodeDef: xt(dn.queryDef).callFn([
                    It(i),
                    It(n),
                    new Ye([new We(e.propertyName, It(s), !1)]),
                  ]),
                }));
              }),
            bl(this, t),
            this.parent &&
              (0 === t.length || Hh(t)) &&
              this.nodes.push(() => ({
                sourceSpan: null,
                nodeFlags: 1,
                nodeDef: xt(dn.anchorDef).callFn([It(0), Ke, Ke, It(0)]),
              }));
        }
        build(e = []) {
          this.children.forEach((t) => t.build(e));
          const {
              updateRendererStmts: t,
              updateDirectivesStmts: n,
              nodeDefExprs: s,
            } = this._createNodeExpressions(),
            i = this._createUpdateFn(t),
            r = this._createUpdateFn(n);
          let o = 0;
          this.parent ||
            this.component.changeDetection !== A.OnPush ||
            (o |= 2);
          const a = new st(
            this.viewName,
            [new Be(jh.name)],
            [new rt(xt(dn.viewDef).callFn([It(o), St(s), r, i]))],
            _t(dn.ViewDefinition),
            0 === this.embeddedViewIndex ? [Xe.Exported] : []
          );
          return e.push(a), e;
        }
        _createUpdateFn(e) {
          let t;
          if (e.length > 0) {
            const n = [];
            !this.component.isHost &&
              mt(e).has(Lh.name) &&
              n.push(Lh.set(Nh.prop("component")).toDeclStmt(this.compType)),
              (t = kt(
                [new Be(Fh.name, re), new Be(Nh.name, re)],
                [...n, ...e],
                re
              ));
          } else t = Ke;
          return t;
        }
        visitNgContent(e, t) {
          this.nodes.push(() => ({
            sourceSpan: e.sourceSpan,
            nodeFlags: 8,
            nodeDef: xt(dn.ngContentDef).callFn([
              It(e.ngContentIndex),
              It(e.index),
            ]),
          }));
        }
        visitText(e, t) {
          this.nodes.push(() => ({
            sourceSpan: e.sourceSpan,
            nodeFlags: 2,
            nodeDef: xt(dn.textDef).callFn([
              It(-1),
              It(e.ngContentIndex),
              St([It(e.value)]),
            ]),
          }));
        }
        visitBoundText(e, t) {
          const n = this.nodes.length;
          this.nodes.push(null);
          const s = e.value.ast,
            i = s.expressions.map((t, s) =>
              this._preprocessUpdateExpression({
                nodeIndex: n,
                bindingIndex: s,
                sourceSpan: e.sourceSpan,
                context: Lh,
                value: t,
              })
            ),
            r = n;
          this.nodes[n] = () => ({
            sourceSpan: e.sourceSpan,
            nodeFlags: 2,
            nodeDef: xt(dn.textDef).callFn([
              It(r),
              It(e.ngContentIndex),
              St(s.strings.map((e) => It(e))),
            ]),
            updateRenderer: i,
          });
        }
        visitEmbeddedTemplate(e, t) {
          const n = this.nodes.length;
          this.nodes.push(null);
          const {
              flags: s,
              queryMatchesExpr: i,
              hostEvents: r,
            } = this._visitElementOrTemplate(n, e),
            o = this.viewBuilderFactory(this);
          this.children.push(o), o.visitAll(e.variables, e.children);
          const a = this.nodes.length - n - 1;
          this.nodes[n] = () => ({
            sourceSpan: e.sourceSpan,
            nodeFlags: 1 | s,
            nodeDef: xt(dn.anchorDef).callFn([
              It(s),
              i,
              It(e.ngContentIndex),
              It(a),
              this._createElementHandleEventFn(n, r),
              bt(o.viewName),
            ]),
          });
        }
        visitElement(e, t) {
          const n = this.nodes.length;
          this.nodes.push(null);
          const s = o(e.name) ? null : e.name,
            {
              flags: i,
              usedEvents: r,
              queryMatchesExpr: a,
              hostBindings: l,
              hostEvents: c,
            } = this._visitElementOrTemplate(n, e);
          let u = [],
            d = [],
            h = [];
          if (s) {
            const t = e.inputs
              .map((e) => ({ context: Lh, inputAst: e, dirAst: null }))
              .concat(l);
            t.length &&
              ((d = t.map((e, t) =>
                this._preprocessUpdateExpression({
                  context: e.context,
                  nodeIndex: n,
                  bindingIndex: t,
                  sourceSpan: e.inputAst.sourceSpan,
                  value: e.inputAst.value,
                })
              )),
              (u = t.map((e) =>
                (function (e, t) {
                  const n = e.type;
                  switch (n) {
                    case 1:
                      return St([It(1), It(e.name), It(e.securityContext)]);
                    case 0:
                      return St([It(8), It(e.name), It(e.securityContext)]);
                    case 4:
                      return St([
                        It(8 | (t && t.directive.isComponent ? 32 : 16)),
                        It("@" + e.name),
                        It(e.securityContext),
                      ]);
                    case 2:
                      return St([It(2), It(e.name), Ke]);
                    case 3:
                      return St([It(4), It(e.name), It(e.unit)]);
                    default:
                      throw new Error("unexpected " + n);
                  }
                })(e.inputAst, e.dirAst)
              ))),
              (h = r.map(([e, t]) => St([It(e), It(t)])));
          }
          bl(this, e.children);
          const p = this.nodes.length - n - 1,
            m = e.directives.find((e) => e.directive.isComponent);
          let f = Ke,
            g = Ke;
          m &&
            ((g = this.outputCtx.importExpr(m.directive.componentViewType)),
            (f = this.outputCtx.importExpr(m.directive.rendererType)));
          const y = n;
          this.nodes[n] = () => ({
            sourceSpan: e.sourceSpan,
            nodeFlags: 1 | i,
            nodeDef: xt(dn.elementDef).callFn([
              It(y),
              It(i),
              a,
              It(e.ngContentIndex),
              It(p),
              It(s),
              s ? Gh(e) : Ke,
              u.length ? St(u) : Ke,
              h.length ? St(h) : Ke,
              this._createElementHandleEventFn(n, c),
              g,
              f,
            ]),
            updateRenderer: d,
          });
        }
        _visitElementOrTemplate(e, t) {
          let n = 0;
          t.hasViewContainer && (n |= 16777216);
          const s = new Map();
          t.outputs.forEach((e) => {
            const { name: t, target: n } = qh(e, null);
            s.set(Yh(n, t), [n, t]);
          }),
            t.directives.forEach((e) => {
              e.hostEvents.forEach((t) => {
                const { name: n, target: i } = qh(t, e);
                s.set(Yh(i, n), [i, n]);
              });
            });
          const i = [],
            r = [];
          this._visitComponentFactoryResolverProvider(t.directives),
            t.providers.forEach((e) => {
              let n = void 0;
              if (
                (t.directives.forEach((t) => {
                  t.directive.type.reference === kn(e.token) && (n = t);
                }),
                n)
              ) {
                const { hostBindings: o, hostEvents: a } = this._visitDirective(
                  e,
                  n,
                  t.references,
                  t.queryMatches,
                  s
                );
                i.push(...o), r.push(...a);
              } else this._visitProvider(e, t.queryMatches);
            });
          let o = [];
          return (
            t.queryMatches.forEach((e) => {
              let t = void 0;
              kn(e.value) ===
              this.reflector.resolveExternalReference(dn.ElementRef)
                ? (t = 0)
                : kn(e.value) ===
                  this.reflector.resolveExternalReference(dn.ViewContainerRef)
                ? (t = 3)
                : kn(e.value) ===
                    this.reflector.resolveExternalReference(dn.TemplateRef) &&
                  (t = 2),
                null != t && o.push(St([It(e.queryId), It(t)]));
            }),
            t.references.forEach((t) => {
              let n = void 0;
              t.value
                ? kn(t.value) ===
                    this.reflector.resolveExternalReference(dn.TemplateRef) &&
                  (n = 2)
                : (n = 1),
                null != n &&
                  ((this.refNodeIndices[t.name] = e),
                  o.push(St([It(t.name), It(n)])));
            }),
            t.outputs.forEach((e) => {
              r.push({ context: Lh, eventAst: e, dirAst: null });
            }),
            {
              flags: n,
              usedEvents: Array.from(s.values()),
              queryMatchesExpr: o.length ? St(o) : Ke,
              hostBindings: i,
              hostEvents: r,
            }
          );
        }
        _visitDirective(e, t, n, s, i) {
          const r = this.nodes.length;
          this.nodes.push(null),
            t.directive.queries.forEach((e, n) => {
              const s = t.contentQueryStartId + n,
                i = 67108864 | Wh(e),
                r = e.first ? 0 : 1;
              this.nodes.push(() => ({
                sourceSpan: t.sourceSpan,
                nodeFlags: i,
                nodeDef: xt(dn.queryDef).callFn([
                  It(i),
                  It(s),
                  new Ye([new We(e.propertyName, It(r), !1)]),
                ]),
              }));
            });
          const o = this.nodes.length - r - 1;
          let {
            flags: a,
            queryMatchExprs: l,
            providerExpr: c,
            depsExpr: u,
          } = this._visitProviderOrDirective(e, s);
          n.forEach((t) => {
            t.value &&
              kn(t.value) === kn(e.token) &&
              ((this.refNodeIndices[t.name] = r),
              l.push(St([It(t.name), It(4)])));
          }),
            t.directive.isComponent && (a |= 32768);
          const d = t.inputs.map((e, t) => {
              const n = St([It(t), It(e.directiveName)]);
              return new We(e.directiveName, n, !1);
            }),
            h = [],
            p = t.directive;
          Object.keys(p.outputs).forEach((e) => {
            const t = p.outputs[e];
            i.has(t) && h.push(new We(e, It(t), !1));
          });
          let m = [];
          (t.inputs.length || (327680 & a) > 0) &&
            (m = t.inputs.map((e, t) =>
              this._preprocessUpdateExpression({
                nodeIndex: r,
                bindingIndex: t,
                sourceSpan: e.sourceSpan,
                context: Lh,
                value: e.value,
              })
            ));
          const f = xt(dn.nodeValue).callFn([Nh, It(r)]),
            g = t.hostProperties.map((e) => ({
              context: f,
              dirAst: t,
              inputAst: e,
            })),
            y = t.hostEvents.map((e) => ({
              context: f,
              eventAst: e,
              dirAst: t,
            })),
            v = r;
          return (
            (this.nodes[r] = () => ({
              sourceSpan: t.sourceSpan,
              nodeFlags: 16384 | a,
              nodeDef: xt(dn.directiveDef).callFn([
                It(v),
                It(a),
                l.length ? St(l) : Ke,
                It(o),
                c,
                u,
                d.length ? new Ye(d) : Ke,
                h.length ? new Ye(h) : Ke,
              ]),
              updateDirectives: m,
              directive: t.directive.type,
            })),
            { hostBindings: g, hostEvents: y }
          );
        }
        _visitProvider(e, t) {
          this._addProviderNode(this._visitProviderOrDirective(e, t));
        }
        _visitComponentFactoryResolverProvider(e) {
          const t = e.find((e) => e.directive.isComponent);
          if (t && t.directive.entryComponents.length) {
            const {
              providerExpr: e,
              depsExpr: n,
              flags: s,
              tokenExpr: i,
            } = Ch(
              this.reflector,
              this.outputCtx,
              8192,
              t.directive.entryComponents
            );
            this._addProviderNode({
              providerExpr: e,
              depsExpr: n,
              flags: s,
              tokenExpr: i,
              queryMatchExprs: [],
              sourceSpan: t.sourceSpan,
            });
          }
        }
        _addProviderNode(e) {
          this.nodes.push(() => ({
            sourceSpan: e.sourceSpan,
            nodeFlags: e.flags,
            nodeDef: xt(dn.providerDef).callFn([
              It(e.flags),
              e.queryMatchExprs.length ? St(e.queryMatchExprs) : Ke,
              e.tokenExpr,
              e.providerExpr,
              e.depsExpr,
            ]),
          }));
        }
        _visitProviderOrDirective(e, t) {
          let n = [];
          t.forEach((t) => {
            kn(t.value) === kn(e.token) && n.push(St([It(t.queryId), It(4)]));
          });
          const {
            providerExpr: s,
            depsExpr: i,
            flags: r,
            tokenExpr: o,
          } = vh(this.outputCtx, e);
          return {
            flags: 0 | r,
            queryMatchExprs: n,
            providerExpr: s,
            depsExpr: i,
            tokenExpr: o,
            sourceSpan: e.sourceSpan,
          };
        }
        getLocal(e) {
          if (e == fo.event.name) return fo.event;
          let t = Nh;
          for (let n = this; n; n = n.parent, t = t.prop("parent").cast(ie)) {
            const s = n.refNodeIndices[e];
            if (null != s) return xt(dn.nodeValue).callFn([t, It(s)]);
            const i = n.variables.find((t) => t.name === e);
            if (i) {
              const e = i.value || "$implicit";
              return t.prop("context").prop(e);
            }
          }
          return null;
        }
        notifyImplicitReceiverUse() {}
        _createLiteralArrayConverter(e, t) {
          if (0 === t) {
            const e = xt(dn.EMPTY_ARRAY);
            return () => e;
          }
          const n = this.nodes.length;
          return (
            this.nodes.push(() => ({
              sourceSpan: e,
              nodeFlags: 32,
              nodeDef: xt(dn.pureArrayDef).callFn([It(n), It(t)]),
            })),
            (e) => Uh(n, e)
          );
        }
        _createLiteralMapConverter(e, t) {
          if (0 === t.length) {
            const e = xt(dn.EMPTY_MAP);
            return () => e;
          }
          const n = Et(
              t.map((e, t) =>
                Object.assign(Object.assign({}, e), { value: It(t) })
              )
            ),
            s = this.nodes.length;
          return (
            this.nodes.push(() => ({
              sourceSpan: e,
              nodeFlags: 64,
              nodeDef: xt(dn.pureObjectDef).callFn([It(s), n]),
            })),
            (e) => Uh(s, e)
          );
        }
        _createPipeConverter(e, t, n) {
          const s = this.usedPipes.find((e) => e.name === t);
          if (s.pure) {
            const s = this.nodes.length;
            this.nodes.push(() => ({
              sourceSpan: e.sourceSpan,
              nodeFlags: 128,
              nodeDef: xt(dn.purePipeDef).callFn([It(s), It(n)]),
            }));
            let i = Nh,
              r = this;
            for (; r.parent; ) (r = r.parent), (i = i.prop("parent").cast(ie));
            const o = r.purePipeNodeIndices[t],
              a = xt(dn.nodeValue).callFn([i, It(o)]);
            return (t) => $h(e.nodeIndex, e.bindingIndex, Uh(s, [a].concat(t)));
          }
          {
            const t = this._createPipe(e.sourceSpan, s),
              n = xt(dn.nodeValue).callFn([Nh, It(t)]);
            return (t) =>
              $h(e.nodeIndex, e.bindingIndex, n.callMethod("transform", t));
          }
        }
        _createPipe(e, t) {
          const n = this.nodes.length;
          let s = 0;
          t.type.lifecycleHooks.forEach((e) => {
            e === ch.OnDestroy && (s |= wh(e));
          });
          const i = t.type.diDeps.map((e) => _h(this.outputCtx, e));
          return (
            this.nodes.push(() => ({
              sourceSpan: e,
              nodeFlags: 16,
              nodeDef: xt(dn.pipeDef).callFn([
                It(s),
                this.outputCtx.importExpr(t.type.reference),
                St(i),
              ]),
            })),
            n
          );
        }
        _preprocessUpdateExpression(e) {
          return {
            nodeIndex: e.nodeIndex,
            bindingIndex: e.bindingIndex,
            sourceSpan: e.sourceSpan,
            context: e.context,
            value: vo(
              {
                createLiteralArrayConverter: (t) =>
                  this._createLiteralArrayConverter(e.sourceSpan, t),
                createLiteralMapConverter: (t) =>
                  this._createLiteralMapConverter(e.sourceSpan, t),
                createPipeConverter: (t, n) =>
                  this._createPipeConverter(e, t, n),
              },
              e.value
            ),
          };
        }
        _createNodeExpressions() {
          const e = this;
          let t = 0;
          const n = [],
            s = [],
            i = this.nodes.map((e, t) => {
              const {
                nodeDef: i,
                nodeFlags: o,
                updateDirectives: a,
                updateRenderer: l,
                sourceSpan: c,
              } = e();
              l && n.push(...r(t, c, l, !1)),
                a && s.push(...r(t, c, a, (327680 & o) > 0));
              return yt(3 & o ? new Qe([jh.callFn([]).callFn([]), i]) : i, c);
            });
          return {
            updateRendererStmts: n,
            updateDirectivesStmts: s,
            nodeDefExprs: i,
          };
          function r(n, s, i, r) {
            const o = [],
              a = i.map(({ sourceSpan: n, context: s, value: i }) => {
                const r = "" + t++,
                  a = s === Lh ? e : null,
                  { stmts: l, currValExpr: c } = xo(a, s, i, r, Cr.General);
                return o.push(...l.map((e) => gt(e, n))), yt(c, n);
              });
            return (i.length || r) && o.push(gt(Uh(n, a).toStmt(), s)), o;
          }
        }
        _createElementHandleEventFn(e, t) {
          const n = [];
          let s,
            i = 0;
          if (
            (t.forEach(({ context: e, eventAst: t, dirAst: s }) => {
              const r = "" + i++,
                o = e === Lh ? this : null,
                { stmts: a, allowDefault: l } = yo(o, e, t.handler, r),
                c = a;
              l && c.push(Bh.set(l.and(Bh)).toStmt());
              const { target: u, name: d } = qh(t, s),
                h = Yh(u, d);
              n.push(gt(new ut(It(h).identical(Vh), c), t.sourceSpan));
            }),
            n.length > 0)
          ) {
            const e = [Bh.set(It(!0)).toDeclStmt(oe)];
            !this.component.isHost &&
              mt(n).has(Lh.name) &&
              e.push(Lh.set(Nh.prop("component")).toDeclStmt(this.compType)),
              (s = kt(
                [
                  new Be(Nh.name, re),
                  new Be(Vh.name, re),
                  new Be(fo.event.name, re),
                ],
                [...e, ...n, new rt(Bh)],
                re
              ));
          } else s = Ke;
          return s;
        }
        visitDirective(e, t) {}
        visitDirectiveProperty(e, t) {}
        visitReference(e, t) {}
        visitVariable(e, t) {}
        visitEvent(e, t) {}
        visitElementProperty(e, t) {}
        visitAttr(e, t) {}
      }
      function Hh(e) {
        const t = e[e.length - 1];
        return t instanceof pl
          ? t.hasViewContainer
          : t instanceof hl
          ? o(t.name) && t.children.length
            ? Hh(t.children)
            : t.hasViewContainer
          : t instanceof vl;
      }
      function Gh(e) {
        const t = Object.create(null);
        return (
          e.attrs.forEach((e) => {
            t[e.name] = e.value;
          }),
          e.directives.forEach((e) => {
            Object.keys(e.directive.hostAttributes).forEach((n) => {
              const s = e.directive.hostAttributes[n],
                i = t[n];
              var r, o, a;
              t[n] =
                null != i
                  ? ((o = i),
                    (a = s),
                    (r = n) == Dh || r == Mh ? `${o} ${a}` : a)
                  : s;
            });
          }),
          St(
            Object.keys(t)
              .sort()
              .map((e) => St([It(e), It(t[e])]))
          )
        );
      }
      function Uh(e, t) {
        return t.length > 10
          ? Fh.callFn([Nh, It(e), It(1), St(t)])
          : Fh.callFn([Nh, It(e), It(0), ...t]);
      }
      function $h(e, t, n) {
        return xt(dn.unwrapValue).callFn([Nh, It(e), It(t), n]);
      }
      function qh(e, t) {
        return e.isAnimation
          ? {
              name: `@${e.name}.${e.phase}`,
              target: t && t.directive.isComponent ? "component" : null,
            }
          : e;
      }
      function Wh(e) {
        let t = 0;
        return e.first && e.static ? (t |= 268435456) : (t |= 536870912), t;
      }
      function Yh(e, t) {
        return e ? `${e}:${t}` : t;
      }
      const Qh = "useValue";
      new Set([Qh, "useFactory", "data", "id", "loadChildren"]);
      class Kh {
        static build() {
          const e = new Map();
          return {
            define: function (t, n) {
              return e.set(t, n), this;
            },
            done: function () {
              return e.size > 0 ? new Jh(e) : Kh.empty;
            },
          };
        }
      }
      (Kh.missing = {}), (Kh.empty = { resolve: (e) => Kh.missing });
      class Jh extends Kh {
        constructor(e) {
          super(), (this.bindings = e);
        }
        resolve(e) {
          return this.bindings.has(e) ? this.bindings.get(e) : Kh.missing;
        }
      }
      class Xh {}
      class Zh {
        constructor() {
          this._summaries = new Map();
        }
        isLibraryFile() {
          return !1;
        }
        toSummaryFileName(e) {
          return e;
        }
        fromSummaryFileName(e) {
          return e;
        }
        resolveSummary(e) {
          return this._summaries.get(e) || null;
        }
        getSymbolsOf() {
          return [];
        }
        getImportAs(e) {
          return e;
        }
        getKnownModuleName(e) {
          return null;
        }
        addSummary(e) {
          this._summaries.set(e.symbol, e);
        }
      }
      function ep(e, t, n, s, i) {
        const r = s.createChildWihtLocalVars();
        for (let a = 0; a < e.length; a++) r.vars.set(e[a], t[a]);
        const o = i.visitAllStatements(n, r);
        return o ? o.value : null;
      }
      class tp {
        constructor(e, t, n, s) {
          (this.parent = e),
            (this.instance = t),
            (this.className = n),
            (this.vars = s),
            (this.exports = []);
        }
        createChildWihtLocalVars() {
          return new tp(this, this.instance, this.className, new Map());
        }
      }
      class np {
        constructor(e) {
          this.value = e;
        }
      }
      class sp {
        constructor(e) {
          this.reflector = e;
        }
        debugAst(e) {
          return (function (e) {
            const t = new Ih(),
              n = Wi.createRoot();
            return (
              (Array.isArray(e) ? e : [e]).forEach((e) => {
                if (e instanceof tt) e.visitStatement(t, n);
                else if (e instanceof ge) e.visitExpression(t, n);
                else {
                  if (!(e instanceof Z))
                    throw new Error(
                      "Don't know how to print debug info for " + e
                    );
                  e.visitType(t, n);
                }
              }),
              n.toSource()
            );
          })(e);
        }
        visitDeclareVarStmt(e, t) {
          const n = e.value ? e.value.visitExpression(this, t) : void 0;
          return (
            t.vars.set(e.name, n),
            e.hasModifier(Xe.Exported) && t.exports.push(e.name),
            null
          );
        }
        visitWriteVarExpr(e, t) {
          const n = e.value.visitExpression(this, t);
          let s = t;
          for (; null != s; ) {
            if (s.vars.has(e.name)) return s.vars.set(e.name, n), n;
            s = s.parent;
          }
          throw new Error("Not declared variable " + e.name);
        }
        visitWrappedNodeExpr(e, t) {
          throw new Error("Cannot interpret a WrappedNodeExpr.");
        }
        visitTypeofExpr(e, t) {
          throw new Error("Cannot interpret a TypeofExpr");
        }
        visitReadVarExpr(e, t) {
          let n = e.name;
          if (null != e.builtin)
            switch (e.builtin) {
              case he.Super:
                return Object.getPrototypeOf(t.instance);
              case he.This:
                return t.instance;
              case he.CatchError:
                n = rp;
                break;
              case he.CatchStack:
                n = op;
                break;
              default:
                throw new Error("Unknown builtin variable " + e.builtin);
            }
          let s = t;
          for (; null != s; ) {
            if (s.vars.has(n)) return s.vars.get(n);
            s = s.parent;
          }
          throw new Error("Not declared variable " + n);
        }
        visitWriteKeyExpr(e, t) {
          const n = e.receiver.visitExpression(this, t),
            s = e.index.visitExpression(this, t),
            i = e.value.visitExpression(this, t);
          return (n[s] = i), i;
        }
        visitWritePropExpr(e, t) {
          const n = e.receiver.visitExpression(this, t),
            s = e.value.visitExpression(this, t);
          return (n[e.name] = s), s;
        }
        visitInvokeMethodExpr(e, t) {
          const n = e.receiver.visitExpression(this, t),
            s = this.visitAllExpressions(e.args, t);
          let i;
          if (null != e.builtin)
            switch (e.builtin) {
              case pe.ConcatArray:
                i = n.concat(...s);
                break;
              case pe.SubscribeObservable:
                i = n.subscribe({ next: s[0] });
                break;
              case pe.Bind:
                i = n.bind(...s);
                break;
              default:
                throw new Error("Unknown builtin method " + e.builtin);
            }
          else i = n[e.name].apply(n, s);
          return i;
        }
        visitInvokeFunctionExpr(e, t) {
          const n = this.visitAllExpressions(e.args, t),
            s = e.fn;
          if (s instanceof ye && s.builtin === he.Super)
            return (
              t.instance.constructor.prototype.constructor.apply(t.instance, n),
              null
            );
          return e.fn.visitExpression(this, t).apply(null, n);
        }
        visitReturnStmt(e, t) {
          return new np(e.value.visitExpression(this, t));
        }
        visitDeclareClassStmt(e, t) {
          const n = (function (e, t, n) {
            const s = {};
            e.getters.forEach((i) => {
              s[i.name] = {
                configurable: !1,
                get: function () {
                  const s = new tp(t, this, e.name, t.vars);
                  return ep([], [], i.body, s, n);
                },
              };
            }),
              e.methods.forEach(function (i) {
                const r = i.params.map((e) => e.name);
                s[i.name] = {
                  writable: !1,
                  configurable: !1,
                  value: function (...s) {
                    const o = new tp(t, this, e.name, t.vars);
                    return ep(r, s, i.body, o, n);
                  },
                };
              });
            const i = e.constructorMethod.params.map((e) => e.name),
              r = function (...s) {
                const r = new tp(t, this, e.name, t.vars);
                e.fields.forEach((e) => {
                  this[e.name] = void 0;
                }),
                  ep(i, s, e.constructorMethod.body, r, n);
              },
              o = e.parent ? e.parent.visitExpression(n, t) : Object;
            return (r.prototype = Object.create(o.prototype, s)), r;
          })(e, t, this);
          return (
            t.vars.set(e.name, n),
            e.hasModifier(Xe.Exported) && t.exports.push(e.name),
            null
          );
        }
        visitExpressionStmt(e, t) {
          return e.expr.visitExpression(this, t);
        }
        visitIfStmt(e, t) {
          return e.condition.visitExpression(this, t)
            ? this.visitAllStatements(e.trueCase, t)
            : null != e.falseCase
            ? this.visitAllStatements(e.falseCase, t)
            : null;
        }
        visitTryCatchStmt(e, t) {
          try {
            return this.visitAllStatements(e.bodyStmts, t);
          } catch (n) {
            const s = t.createChildWihtLocalVars();
            return (
              s.vars.set(rp, n),
              s.vars.set(op, n.stack),
              this.visitAllStatements(e.catchStmts, s)
            );
          }
        }
        visitThrowStmt(e, t) {
          throw e.error.visitExpression(this, t);
        }
        visitInstantiateExpr(e, t) {
          const n = this.visitAllExpressions(e.args, t);
          return new (e.classExpr.visitExpression(this, t))(...n);
        }
        visitLiteralExpr(e, t) {
          return e.value;
        }
        visitLocalizedString(e, t) {
          return null;
        }
        visitExternalExpr(e, t) {
          return this.reflector.resolveExternalReference(e.value);
        }
        visitConditionalExpr(e, t) {
          return e.condition.visitExpression(this, t)
            ? e.trueCase.visitExpression(this, t)
            : null != e.falseCase
            ? e.falseCase.visitExpression(this, t)
            : null;
        }
        visitNotExpr(e, t) {
          return !e.condition.visitExpression(this, t);
        }
        visitAssertNotNullExpr(e, t) {
          return e.condition.visitExpression(this, t);
        }
        visitCastExpr(e, t) {
          return e.value.visitExpression(this, t);
        }
        visitFunctionExpr(e, t) {
          return ip(
            e.params.map((e) => e.name),
            e.statements,
            t,
            this
          );
        }
        visitDeclareFunctionStmt(e, t) {
          const n = e.params.map((e) => e.name);
          return (
            t.vars.set(e.name, ip(n, e.statements, t, this)),
            e.hasModifier(Xe.Exported) && t.exports.push(e.name),
            null
          );
        }
        visitUnaryOperatorExpr(e, t) {
          const n = () => e.expr.visitExpression(this, t);
          switch (e.operator) {
            case ue.Plus:
              return +n();
            case ue.Minus:
              return -n();
            default:
              throw new Error("Unknown operator " + e.operator);
          }
        }
        visitBinaryOperatorExpr(e, t) {
          const n = () => e.lhs.visitExpression(this, t),
            s = () => e.rhs.visitExpression(this, t);
          switch (e.operator) {
            case de.Equals:
              return n() == s();
            case de.Identical:
              return n() === s();
            case de.NotEquals:
              return n() != s();
            case de.NotIdentical:
              return n() !== s();
            case de.And:
              return n() && s();
            case de.Or:
              return n() || s();
            case de.Plus:
              return n() + s();
            case de.Minus:
              return n() - s();
            case de.Divide:
              return n() / s();
            case de.Multiply:
              return n() * s();
            case de.Modulo:
              return n() % s();
            case de.Lower:
              return n() < s();
            case de.LowerEquals:
              return n() <= s();
            case de.Bigger:
              return n() > s();
            case de.BiggerEquals:
              return n() >= s();
            default:
              throw new Error("Unknown operator " + e.operator);
          }
        }
        visitReadPropExpr(e, t) {
          let n;
          return (n = e.receiver.visitExpression(this, t)[e.name]), n;
        }
        visitReadKeyExpr(e, t) {
          return e.receiver.visitExpression(this, t)[
            e.index.visitExpression(this, t)
          ];
        }
        visitLiteralArrayExpr(e, t) {
          return this.visitAllExpressions(e.entries, t);
        }
        visitLiteralMapExpr(e, t) {
          const n = {};
          return (
            e.entries.forEach(
              (e) => (n[e.key] = e.value.visitExpression(this, t))
            ),
            n
          );
        }
        visitCommaExpr(e, t) {
          const n = this.visitAllExpressions(e.parts, t);
          return n[n.length - 1];
        }
        visitAllExpressions(e, t) {
          return e.map((e) => e.visitExpression(this, t));
        }
        visitAllStatements(e, t) {
          for (let n = 0; n < e.length; n++) {
            const s = e[n].visitStatement(this, t);
            if (s instanceof np) return s;
          }
          return null;
        }
      }
      function ip(e, t, n, s) {
        return (...i) => ep(e, i, t, n, s);
      }
      const rp = "error",
        op = "stack";
      class ap {
        constructor(e, t, n, s, i, r, o, a, l, c, u) {
          (this._metadataResolver = e),
            (this._templateParser = t),
            (this._styleCompiler = n),
            (this._viewCompiler = s),
            (this._ngModuleCompiler = i),
            (this._summaryResolver = r),
            (this._reflector = o),
            (this._jitEvaluator = a),
            (this._compilerConfig = l),
            (this._console = c),
            (this.getExtraNgModuleProviders = u),
            (this._compiledTemplateCache = new Map()),
            (this._compiledHostTemplateCache = new Map()),
            (this._compiledDirectiveWrapperCache = new Map()),
            (this._compiledNgModuleCache = new Map()),
            (this._sharedStylesheetCount = 0),
            (this._addedAotSummaries = new Set());
        }
        compileModuleSync(e) {
          return Lt(this._compileModuleAndComponents(e, !0));
        }
        compileModuleAsync(e) {
          return Promise.resolve(this._compileModuleAndComponents(e, !1));
        }
        compileModuleAndAllComponentsSync(e) {
          return Lt(this._compileModuleAndAllComponents(e, !0));
        }
        compileModuleAndAllComponentsAsync(e) {
          return Promise.resolve(this._compileModuleAndAllComponents(e, !1));
        }
        getComponentFactory(e) {
          return this._metadataResolver.getDirectiveSummary(e).componentFactory;
        }
        loadAotSummaries(e) {
          this.clearCache(), this._addAotSummaries(e);
        }
        _addAotSummaries(e) {
          if (this._addedAotSummaries.has(e)) return;
          this._addedAotSummaries.add(e);
          const t = e();
          for (let n = 0; n < t.length; n++) {
            const e = t[n];
            if ("function" == typeof e) this._addAotSummaries(e);
            else {
              const t = e;
              this._summaryResolver.addSummary({
                symbol: t.type.reference,
                metadata: null,
                type: t,
              });
            }
          }
        }
        hasAotSummary(e) {
          return !!this._summaryResolver.resolveSummary(e);
        }
        _filterJitIdentifiers(e) {
          return e
            .map((e) => e.reference)
            .filter((e) => !this.hasAotSummary(e));
        }
        _compileModuleAndComponents(e, t) {
          return Vt(
            this._loadModules(e, t),
            () => (this._compileComponents(e, null), this._compileModule(e))
          );
        }
        _compileModuleAndAllComponents(e, t) {
          return Vt(this._loadModules(e, t), () => {
            const t = [];
            return (
              this._compileComponents(e, t),
              { ngModuleFactory: this._compileModule(e), componentFactories: t }
            );
          });
        }
        _loadModules(e, t) {
          const n = [],
            s = this._metadataResolver.getNgModuleMetadata(e);
          return (
            this._filterJitIdentifiers(s.transitiveModule.modules).forEach(
              (e) => {
                const s = this._metadataResolver.getNgModuleMetadata(e);
                this._filterJitIdentifiers(s.declaredDirectives).forEach(
                  (e) => {
                    const i = this._metadataResolver.loadDirectiveMetadata(
                      s.type.reference,
                      e,
                      t
                    );
                    i && n.push(i);
                  }
                ),
                  this._filterJitIdentifiers(s.declaredPipes).forEach((e) =>
                    this._metadataResolver.getOrLoadPipeMetadata(e)
                  );
              }
            ),
            Bt(n)
          );
        }
        _compileModule(e) {
          let t = this._compiledNgModuleCache.get(e);
          if (!t) {
            const n = this._metadataResolver.getNgModuleMetadata(e),
              s = this.getExtraNgModuleProviders(n.type.reference),
              i = up(),
              r = this._ngModuleCompiler.compile(i, n, s);
            (t = this._interpretOrJit(
              (function (e) {
                return Nn(bn(e.type) + "/module.ngfactory.js");
              })(n),
              i.statements
            )[r.ngModuleFactoryVar]),
              this._compiledNgModuleCache.set(n.type.reference, t);
          }
          return t;
        }
        _compileComponents(e, t) {
          const n = this._metadataResolver.getNgModuleMetadata(e),
            s = new Map(),
            i = new Set(),
            r = this._filterJitIdentifiers(n.transitiveModule.modules);
          r.forEach((e) => {
            const n = this._metadataResolver.getNgModuleMetadata(e);
            this._filterJitIdentifiers(n.declaredDirectives).forEach((e) => {
              s.set(e, n);
              const r = this._metadataResolver.getDirectiveMetadata(e);
              if (
                r.isComponent &&
                (i.add(this._createCompiledTemplate(r, n)), t)
              ) {
                const e = this._createCompiledHostTemplate(r.type.reference, n);
                i.add(e), t.push(r.componentFactory);
              }
            });
          }),
            r.forEach((e) => {
              const t = this._metadataResolver.getNgModuleMetadata(e);
              this._filterJitIdentifiers(t.declaredDirectives).forEach((e) => {
                const t = this._metadataResolver.getDirectiveMetadata(e);
                t.isComponent &&
                  t.entryComponents.forEach((e) => {
                    const t = s.get(e.componentType);
                    i.add(this._createCompiledHostTemplate(e.componentType, t));
                  });
              }),
                t.entryComponents.forEach((e) => {
                  if (!this.hasAotSummary(e.componentType)) {
                    const t = s.get(e.componentType);
                    i.add(this._createCompiledHostTemplate(e.componentType, t));
                  }
                });
            }),
            i.forEach((e) => this._compileTemplate(e));
        }
        clearCacheFor(e) {
          this._compiledNgModuleCache.delete(e),
            this._metadataResolver.clearCacheFor(e),
            this._compiledHostTemplateCache.delete(e);
          this._compiledTemplateCache.get(e) &&
            this._compiledTemplateCache.delete(e);
        }
        clearCache() {
          this._metadataResolver.clearCache(),
            this._compiledTemplateCache.clear(),
            this._compiledHostTemplateCache.clear(),
            this._compiledNgModuleCache.clear();
        }
        _createCompiledHostTemplate(e, t) {
          if (!t)
            throw new Error(
              `Component ${Yt(
                e
              )} is not part of any NgModule or the module has not been imported into your module.`
            );
          let n = this._compiledHostTemplateCache.get(e);
          if (!n) {
            const s = this._metadataResolver.getDirectiveMetadata(e);
            cp(s);
            const i = this._metadataResolver.getHostComponentMetadata(
              s,
              s.componentFactory.viewDefFactory
            );
            (n = new lp(!0, s.type, i, t, [s.type])),
              this._compiledHostTemplateCache.set(e, n);
          }
          return n;
        }
        _createCompiledTemplate(e, t) {
          let n = this._compiledTemplateCache.get(e.type.reference);
          return (
            n ||
              (cp(e),
              (n = new lp(!1, e.type, e, t, t.transitiveModule.directives)),
              this._compiledTemplateCache.set(e.type.reference, n)),
            n
          );
        }
        _compileTemplate(e) {
          if (e.isCompiled) return;
          const t = e.compMeta,
            n = new Map(),
            s = up(),
            i = this._styleCompiler.compileComponent(s, t);
          t.template.externalStylesheets.forEach((e) => {
            const s = this._styleCompiler.compileStyles(up(), t, e);
            n.set(e.moduleUrl, s);
          }),
            this._resolveStylesCompileResult(i, n);
          e.ngModule.transitiveModule.pipes.map((e) =>
            this._metadataResolver.getPipeSummary(e.reference)
          );
          const { template: r, pipes: o } = this._parseTemplate(
              t,
              e.ngModule,
              e.directives
            ),
            a = this._viewCompiler.compileComponent(
              s,
              t,
              r,
              bt(i.stylesVar),
              o
            ),
            l = this._interpretOrJit(
              (function (e, t) {
                return Nn(`${bn(e)}/${bn(t.type)}.ngfactory.js`);
              })(e.ngModule.type, e.compMeta),
              s.statements
            ),
            c = l[a.viewClassVar],
            u = l[a.rendererTypeVar];
          e.compiled(c, u);
        }
        _parseTemplate(e, t, n) {
          const s = e.template.preserveWhitespaces,
            i = n.map((e) =>
              this._metadataResolver.getDirectiveSummary(e.reference)
            ),
            r = t.transitiveModule.pipes.map((e) =>
              this._metadataResolver.getPipeSummary(e.reference)
            );
          return this._templateParser.parse(
            e,
            e.template.htmlAst,
            i,
            r,
            t.schemas,
            Fn(t.type, e, e.template),
            s
          );
        }
        _resolveStylesCompileResult(e, t) {
          e.dependencies.forEach((e, n) => {
            const s = t.get(e.moduleUrl),
              i = this._resolveAndEvalStylesCompileResult(s, t);
            e.setValue(i);
          });
        }
        _resolveAndEvalStylesCompileResult(e, t) {
          return (
            this._resolveStylesCompileResult(e, t),
            this._interpretOrJit(
              (function (e, t) {
                const n = e.moduleUrl.split(/\/\\/g);
                return Nn(`css/${t}${n[n.length - 1]}.ngstyle.js`);
              })(e.meta, this._sharedStylesheetCount++),
              e.outputCtx.statements
            )[e.stylesVar]
          );
        }
        _interpretOrJit(e, t) {
          return this._compilerConfig.useJit
            ? this._jitEvaluator.evaluateStatements(
                e,
                t,
                this._reflector,
                this._compilerConfig.jitDevMode
              )
            : (function (e, t) {
                const n = new tp(null, null, null, new Map());
                new sp(t).visitAllStatements(e, n);
                const s = {};
                return (
                  n.exports.forEach((e) => {
                    s[e] = n.vars.get(e);
                  }),
                  s
                );
              })(t, this._reflector);
        }
      }
      class lp {
        constructor(e, t, n, s, i) {
          (this.isHost = e),
            (this.compType = t),
            (this.compMeta = n),
            (this.ngModule = s),
            (this.directives = i),
            (this._viewClass = null),
            (this.isCompiled = !1);
        }
        compiled(e, t) {
          (this._viewClass = e), this.compMeta.componentViewType.setDelegate(e);
          for (let n in t) this.compMeta.rendererType[n] = t[n];
          this.isCompiled = !0;
        }
      }
      function cp(e) {
        if (!e.isComponent)
          throw new Error(
            `Could not compile '${bn(e.type)}' because it is not a component.`
          );
      }
      function up() {
        return {
          statements: [],
          genFilePath: "",
          importExpr: (e) => xt({ name: bn(e), moduleName: null, runtime: e }),
          constantPool: new rn(),
        };
      }
      class dp {}
      const hp = class {
        constructor(e = null) {
          this._packagePrefix = e;
        }
        resolve(e, t) {
          let n = t;
          null != e &&
            e.length > 0 &&
            (n = (function (e, t) {
              const n = fp(encodeURI(t)),
                s = fp(e);
              if (null != n[mp.Scheme]) return gp(n);
              n[mp.Scheme] = s[mp.Scheme];
              for (let o = mp.Scheme; o <= mp.Port; o++)
                null == n[o] && (n[o] = s[o]);
              if ("/" == n[mp.Path][0]) return gp(n);
              let i = s[mp.Path];
              null == i && (i = "/");
              const r = i.lastIndexOf("/");
              return (
                (i = i.substring(0, r + 1) + n[mp.Path]),
                (n[mp.Path] = i),
                gp(n)
              );
            })(e, n));
          const s = fp(n);
          let i = this._packagePrefix;
          if (null != i && null != s && "package" == s[mp.Scheme]) {
            let e = s[mp.Path];
            return (
              (i = i.replace(/\/+$/, "")),
              (e = e.replace(/^\/+/, "")),
              `${i}/${e}`
            );
          }
          return n;
        }
      };
      const pp = new RegExp(
        "^(?:([^:/?#.]+):)?(?://(?:([^/?#]*)@)?([\\w\\d\\-\\u0100-\\uffff.%]*)(?::([0-9]+))?)?([^?#]+)?(?:\\?([^#]*))?(?:#(.*))?$"
      );
      var mp;
      function fp(e) {
        return e.match(pp);
      }
      function gp(e) {
        let t = e[mp.Path];
        return (
          (t =
            null == t
              ? ""
              : (function (e) {
                  if ("/" == e) return "/";
                  const t = "/" == e[0] ? "/" : "",
                    n = "/" === e[e.length - 1] ? "/" : "",
                    s = e.split("/"),
                    i = [];
                  let r = 0;
                  for (let o = 0; o < s.length; o++) {
                    const e = s[o];
                    switch (e) {
                      case "":
                      case ".":
                        break;
                      case "..":
                        i.length > 0 ? i.pop() : r++;
                        break;
                      default:
                        i.push(e);
                    }
                  }
                  if ("" == t) {
                    for (; r-- > 0; ) i.unshift("..");
                    0 === i.length && i.push(".");
                  }
                  return t + i.join("/") + n;
                })(t)),
          (e[mp.Path] = t),
          (function (e, t, n, s, i, r, o) {
            const a = [];
            return (
              null != e && a.push(e + ":"),
              null != n &&
                (a.push("//"),
                null != t && a.push(t + "@"),
                a.push(n),
                null != s && a.push(":" + s)),
              null != i && a.push(i),
              null != r && a.push("?" + r),
              null != o && a.push("#" + o),
              a.join("")
            );
          })(
            e[mp.Scheme],
            e[mp.UserInfo],
            e[mp.Domain],
            e[mp.Port],
            t,
            e[mp.QueryData],
            e[mp.Fragment]
          )
        );
      }
      !(function (e) {
        (e[(e.Scheme = 1)] = "Scheme"),
          (e[(e.UserInfo = 2)] = "UserInfo"),
          (e[(e.Domain = 3)] = "Domain"),
          (e[(e.Port = 4)] = "Port"),
          (e[(e.Path = 5)] = "Path"),
          (e[(e.QueryData = 6)] = "QueryData"),
          (e[(e.Fragment = 7)] = "Fragment");
      })(mp || (mp = {}));
      !(function (e) {
        (e.ng || (e.ng = {})).ɵcompilerFacade = new Xu();
      })(Zt);
      var yp = n("ofXK"),
        vp = n("jhN1");
      const bp = (function () {
        const e = new Map();
        return (
          e.set(dn.ANALYZE_FOR_ENTRY_COMPONENTS, i.a),
          e.set(dn.ElementRef, i.v),
          e.set(dn.NgModuleRef, i.O),
          e.set(dn.ViewContainerRef, i.ob),
          e.set(dn.ChangeDetectorRef, i.k),
          e.set(dn.Renderer2, i.Y),
          e.set(dn.QueryList, i.X),
          e.set(dn.TemplateRef, i.ib),
          e.set(dn.CodegenComponentFactoryResolver, i.xb),
          e.set(dn.ComponentFactoryResolver, i.p),
          e.set(dn.ComponentFactory, i.o),
          e.set(dn.ComponentRef, i.q),
          e.set(dn.NgModuleFactory, i.M),
          e.set(dn.createModuleFactory, i.Ob),
          e.set(dn.moduleDef, i.dc),
          e.set(dn.moduleProviderDef, i.ec),
          e.set(dn.RegisterModuleFactoryFn, i.oc),
          e.set(dn.Injector, i.F),
          e.set(dn.ViewEncapsulation, i.pb),
          e.set(dn.ChangeDetectionStrategy, i.j),
          e.set(dn.SecurityContext, i.cb),
          e.set(dn.LOCALE_ID, i.J),
          e.set(dn.TRANSLATIONS_FORMAT, i.hb),
          e.set(dn.inlineInterpolate, i.Yb),
          e.set(dn.interpolate, i.Zb),
          e.set(dn.EMPTY_ARRAY, i.zb),
          e.set(dn.EMPTY_MAP, i.Ab),
          e.set(dn.viewDef, i.vc),
          e.set(dn.elementDef, i.Rb),
          e.set(dn.anchorDef, i.Hb),
          e.set(dn.textDef, i.sc),
          e.set(dn.directiveDef, i.Qb),
          e.set(dn.providerDef, i.lc),
          e.set(dn.queryDef, i.mc),
          e.set(dn.pureArrayDef, i.hc),
          e.set(dn.pureObjectDef, i.jc),
          e.set(dn.purePipeDef, i.kc),
          e.set(dn.pipeDef, i.ic),
          e.set(dn.nodeValue, i.gc),
          e.set(dn.ngContentDef, i.fc),
          e.set(dn.unwrapValue, i.tc),
          e.set(dn.createRendererType2, i.Pb),
          e.set(dn.createComponentFactory, i.Nb),
          e
        );
      })();
      const xp = new i.E("ErrorCollector"),
        _p = { provide: i.T, useValue: "/" },
        wp = {
          get(e) {
            throw new Error(
              `No ResourceLoader implementation has been provided. Can't read the url "${e}"`
            );
          },
        },
        Cp = new i.E("HtmlParser");
      const Sp = new (class {
          constructor() {
            this.reflectionCapabilities = new i.Db();
          }
          componentModuleUrl(e, t) {
            const n = t.moduleId;
            if ("string" == typeof n) {
              return (function (e) {
                const t = fp(e);
                return (t && t[mp.Scheme]) || "";
              })(n)
                ? n
                : "package:" + n;
            }
            if (null != n)
              throw Ht(
                `moduleId should be a string in "${Object(i.rc)(
                  e
                )}". See https://goo.gl/wIDDiL for more information.\nIf you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.`
              );
            return "./" + Object(i.rc)(e);
          }
          parameters(e) {
            return this.reflectionCapabilities.parameters(e);
          }
          tryAnnotations(e) {
            return this.annotations(e);
          }
          annotations(e) {
            return this.reflectionCapabilities.annotations(e);
          }
          shallowAnnotations(e) {
            throw new Error("Not supported in JIT mode");
          }
          propMetadata(e) {
            return this.reflectionCapabilities.propMetadata(e);
          }
          hasLifecycleHook(e, t) {
            return this.reflectionCapabilities.hasLifecycleHook(e, t);
          }
          guards(e) {
            return this.reflectionCapabilities.guards(e);
          }
          resolveExternalReference(e) {
            return bp.get(e) || e.runtime;
          }
        })(),
        Ep = wp,
        kp = new md(),
        Op =
          (i.yb,
          new i.R(),
          new i.C(i.gb),
          new i.R(),
          new i.C(i.hb),
          i.yb,
          i.yb,
          i.yb,
          i.R,
          i.R,
          i.l,
          i.F,
          i.yb,
          i.T,
          [{ provide: i.l, useFactory: () => new i.l() }]);
      function Ip(e) {
        for (let t = e.length - 1; t >= 0; t--)
          if (void 0 !== e[t]) return e[t];
      }
      function Tp(e) {
        const t = [];
        return e.forEach((e) => e && t.push(...e)), t;
      }
      const Ap = Object(i.qb)(i.vb, "coreDynamic", [
        { provide: i.i, useValue: {}, multi: !0 },
        {
          provide: i.m,
          useClass: class {
            constructor(e) {
              const t = {
                useJit: !0,
                defaultEncapsulation: i.pb.Emulated,
                missingTranslation: i.K.Warning,
              };
              this._defaultOptions = [t, ...e];
            }
            createCompiler(e = []) {
              const t = {
                useJit: Ip(
                  (n = this._defaultOptions.concat(e)).map((e) => e.useJit)
                ),
                defaultEncapsulation: Ip(n.map((e) => e.defaultEncapsulation)),
                providers: Tp(n.map((e) => e.providers)),
                missingTranslation: Ip(n.map((e) => e.missingTranslation)),
                preserveWhitespaces: Ip(n.map((e) => e.preserveWhitespaces)),
              };
              var n;
              return i.F.create([
                Op,
                {
                  provide: md,
                  useFactory: () =>
                    new md({
                      useJit: t.useJit,
                      jitDevMode: Object(i.ub)(),
                      defaultEncapsulation: t.defaultEncapsulation,
                      missingTranslation: t.missingTranslation,
                      preserveWhitespaces: t.preserveWhitespaces,
                    }),
                  deps: [],
                },
                t.providers,
              ]).get(i.l);
            }
          },
          deps: [i.i],
        },
      ]);
      class Dp extends Ju {
        get(e) {
          let t, n;
          const s = new Promise((e, s) => {
              (t = e), (n = s);
            }),
            i = new XMLHttpRequest();
          return (
            i.open("GET", e, !0),
            (i.responseType = "text"),
            (i.onload = function () {
              const s = i.response || i.responseText;
              let r = 1223 === i.status ? 204 : i.status;
              0 === r && (r = s ? 200 : 0),
                200 <= r && r <= 300 ? t(s) : n("Failed to load " + e);
            }),
            (i.onerror = function () {
              n("Failed to load " + e);
            }),
            i.send(),
            s
          );
        }
      }
      (Dp.ɵfac = function (e) {
        return Mp(e || Dp);
      }),
        (Dp.ɵprov = i.Ic({ token: Dp, factory: Dp.ɵfac }));
      const Mp = i.Tc(Dp),
        Pp = { providers: [{ provide: Ju, useClass: Dp, deps: [] }] },
        Rp = yp.C,
        jp = [
          vp.d,
          { provide: i.i, useValue: Pp, multi: !0 },
          { provide: i.U, useValue: Rp },
        ];
      new i.lb("11.0.2");
      const Np = Object(i.qb)(Ap, "browserDynamic", jp);
      var Fp = n("mrSG"),
        Lp = n("b6Qw"),
        Vp = n("c0J5"),
        Bp = n("LLTW"),
        zp = n("tk/3"),
        Hp = n("HDdC");
      let Gp = class {
        constructor(e) {
          (this.loaderService = e), (this.requests = []);
        }
        removeRequest(e) {
          const t = this.requests.indexOf(e);
          t >= 0 && this.requests.splice(t, 1),
            this.loaderService.isLoading.next(this.requests.length > 0);
        }
        intercept(e, t) {
          return (
            this.requests.push(e),
            this.loaderService.isLoading.next(!0),
            Hp.a.create((n) => {
              const s = t.handle(e).subscribe(
                (t) => {
                  t instanceof zp.d && (this.removeRequest(e), n.next(t));
                },
                (t) => {
                  console.log("error" + t), this.removeRequest(e), n.error(t);
                },
                () => {
                  this.removeRequest(e), n.complete();
                }
              );
              return () => {
                this.removeRequest(e), s.unsubscribe();
              };
            })
          );
        }
      };
      (Gp.ctorParameters = () => [{ type: Bp.a }]),
        (Gp = Object(Fp.a)([Object(i.D)()], Gp));
      let Up = class {
        intercept(e, t) {
          const n = e.clone({});
          return t.handle(n);
        }
      };
      Up = Object(Fp.a)([Object(i.D)()], Up);
      var $p = n("beVS"),
        qp = n("ZSlC"),
        Wp = n("iydT"),
        Yp = n("20q5"),
        Qp = n("NFeN"),
        Kp = n("bTqV"),
        Jp = n("XhcP"),
        Xp = n("/t3+"),
        Zp = n("R1ws"),
        em = n("YUcS"),
        tm = n("tyNb");
      let nm = class {
        constructor(e) {
          (this.router = e), (this.title = "MindsparkLandingPage");
        }
      };
      (nm.ctorParameters = () => [{ type: tm.b }]),
        (nm = Object(Fp.a)(
          [
            Object(i.n)({
              selector: "app-root",
              template: "<router-outlet>\n</router-outlet>",
              styles: [""],
            }),
          ],
          nm
        ));
      var sm = n("FpXt"),
        im = n("3Pt+"),
        rm = n("1kSV"),
        om = n("xKP8"),
        am = n("w/SU"),
        lm = n("jCJ1"),
        cm = n("AytR");
      let um = class {};
      (um = Object(Fp.a)(
        [
          Object(i.L)({
            declarations: [nm],
            imports: [
              $p.a,
              tm.c,
              qp.a,
              Wp.HomeModule,
              Yp.MathsModule,
              am.CampaignPageModule,
              zp.c,
              sm.a,
              im.f,
              em.a,
              Zp.b,
              Qp.a,
              Kp.a,
              Jp.a,
              Xp.a,
              rm.a,
              Vp.SubscriptionModule,
              lm.b,
            ],
            providers: [
              om.a,
              Lp.a,
              yp.g,
              { provide: yp.h, useClass: yp.q },
              { provide: zp.a, useClass: Up, multi: !0 },
              { provide: zp.a, useClass: Gp, multi: !0 },
              { provide: lm.a, useValue: { siteKey: cm.a.RECAPTCHA_SITE_KEY } },
            ],
            bootstrap: [nm],
          }),
        ],
        um
      )),
        cm.a.production && Object(i.rb)(),
        Np()
          .bootstrapModule(um)
          .catch((e) => console.error(e));
    },
    zn8P: function (e, t) {
      function n(e) {
        return Promise.resolve().then(function () {
          var t = new Error("Cannot find module '" + e + "'");
          throw ((t.code = "MODULE_NOT_FOUND"), t);
        });
      }
      (n.keys = function () {
        return [];
      }),
        (n.resolve = n),
        (e.exports = n),
        (n.id = "zn8P");
    },
    zx2A: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      }),
        n.d(t, "b", function () {
          return a;
        }),
        n.d(t, "c", function () {
          return l;
        });
      var s = n("7o/Q"),
        i = n("HDdC"),
        r = n("SeVD");
      class o extends s.a {
        constructor(e) {
          super(), (this.parent = e);
        }
        _next(e) {
          this.parent.notifyNext(e);
        }
        _error(e) {
          this.parent.notifyError(e), this.unsubscribe();
        }
        _complete() {
          this.parent.notifyComplete(), this.unsubscribe();
        }
      }
      s.a;
      class a extends s.a {
        notifyNext(e) {
          this.destination.next(e);
        }
        notifyError(e) {
          this.destination.error(e);
        }
        notifyComplete() {
          this.destination.complete();
        }
      }
      s.a;
      function l(e, t) {
        if (!t.closed)
          return e instanceof i.a ? e.subscribe(t) : Object(r.a)(e)(t);
      }
    },
  },
  [[0, 0]],
]);
